!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := TARGETS$/;"	m
ALIGN	kern/mm/kmalloc.c	/^#define ALIGN(/;"	d	file:
ALLDEPS	Makefile	/^ALLDEPS	:=$/;"	m
ALLOBJS	Makefile	/^ALLOBJS	:=$/;"	m
ALT	kern/driver/console.c	/^#define ALT /;"	d	file:
ARRAYSIZE	obj/user/testbss.asm	/^#define ARRAYSIZE (1024*1024)$/;"	d
ARRAYSIZE	user/testbss.c	/^#define ARRAYSIZE /;"	d	file:
AWK	Makefile	/^AWK		:= awk$/;"	m
BEING_CHECK_VALID_VADDR	kern/mm/swap.c	/^#define BEING_CHECK_VALID_VADDR /;"	d	file:
BIG_STRIDE	kern/schedule/default_sched.c	/^#define BIG_STRIDE /;"	d	file:
BINDIR	Makefile	/^BINDIR	:= bin$/;"	m
BS_OCMD	kern/driver/kbdreg.h	/^#define BS_OCMD /;"	d
BUFSIZE	kern/libs/readline.c	/^#define BUFSIZE /;"	d	file:
BUFSIZE	obj/user/ls.asm	/^#define BUFSIZE                         4096$/;"	d
BUFSIZE	user/ls.c	/^#define BUFSIZE /;"	d	file:
BUFSIZE	user/sh.c	/^#define BUFSIZE /;"	d	file:
C	kern/driver/console.c	/^#define C(/;"	d	file:
CAPSLOCK	kern/driver/console.c	/^#define CAPSLOCK /;"	d	file:
CC	Makefile	/^CC		?= $(GCCPREFIX)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc $(DEFS)$/;"	m
CGA_BASE	kern/driver/console.c	/^#define CGA_BASE /;"	d	file:
CGA_BUF	kern/driver/console.c	/^#define CGA_BUF /;"	d	file:
CHAR_BIT	libs/defs.h	/^#define CHAR_BIT /;"	d
CHECK_VALID_PHY_PAGE_NUM	kern/mm/swap.c	/^#define CHECK_VALID_PHY_PAGE_NUM /;"	d	file:
CHECK_VALID_VADDR	kern/mm/swap.c	/^#define CHECK_VALID_VADDR /;"	d	file:
CHECK_VALID_VIR_PAGE_NUM	kern/mm/swap.c	/^#define CHECK_VALID_VIR_PAGE_NUM /;"	d	file:
CLONE_FS	libs/unistd.h	/^#define CLONE_FS /;"	d
CLONE_THREAD	libs/unistd.h	/^#define CLONE_THREAD /;"	d
CLONE_VM	libs/unistd.h	/^#define CLONE_VM /;"	d
CMDBYTE	kern/driver/kbdreg.h	/^#define CMDBYTE /;"	d
COM1	kern/driver/console.c	/^#define COM1 /;"	d	file:
COM_DLL	kern/driver/console.c	/^#define COM_DLL /;"	d	file:
COM_DLM	kern/driver/console.c	/^#define COM_DLM /;"	d	file:
COM_FCR	kern/driver/console.c	/^#define COM_FCR /;"	d	file:
COM_IER	kern/driver/console.c	/^#define COM_IER /;"	d	file:
COM_IER_RDI	kern/driver/console.c	/^#define COM_IER_RDI /;"	d	file:
COM_IIR	kern/driver/console.c	/^#define COM_IIR /;"	d	file:
COM_LCR	kern/driver/console.c	/^#define COM_LCR /;"	d	file:
COM_LCR_DLAB	kern/driver/console.c	/^#define COM_LCR_DLAB /;"	d	file:
COM_LCR_WLEN8	kern/driver/console.c	/^#define COM_LCR_WLEN8 /;"	d	file:
COM_LSR	kern/driver/console.c	/^#define COM_LSR /;"	d	file:
COM_LSR_DATA	kern/driver/console.c	/^#define COM_LSR_DATA /;"	d	file:
COM_LSR_TSRE	kern/driver/console.c	/^#define COM_LSR_TSRE /;"	d	file:
COM_LSR_TXRDY	kern/driver/console.c	/^#define COM_LSR_TXRDY /;"	d	file:
COM_MCR	kern/driver/console.c	/^#define COM_MCR /;"	d	file:
COM_MCR_DTR	kern/driver/console.c	/^#define COM_MCR_DTR /;"	d	file:
COM_MCR_OUT2	kern/driver/console.c	/^#define COM_MCR_OUT2 /;"	d	file:
COM_MCR_RTS	kern/driver/console.c	/^#define COM_MCR_RTS /;"	d	file:
COM_RX	kern/driver/console.c	/^#define COM_RX /;"	d	file:
COM_TX	kern/driver/console.c	/^#define COM_TX /;"	d	file:
CONSBUFSIZE	kern/driver/console.c	/^#define CONSBUFSIZE /;"	d	file:
COPY	Makefile	/^COPY	:= cp$/;"	m
CR0_AM	kern/mm/mmu.h	/^#define CR0_AM /;"	d
CR0_CD	kern/mm/mmu.h	/^#define CR0_CD /;"	d
CR0_EM	kern/mm/mmu.h	/^#define CR0_EM /;"	d
CR0_ET	kern/mm/mmu.h	/^#define CR0_ET /;"	d
CR0_MP	kern/mm/mmu.h	/^#define CR0_MP /;"	d
CR0_NE	kern/mm/mmu.h	/^#define CR0_NE /;"	d
CR0_NW	kern/mm/mmu.h	/^#define CR0_NW /;"	d
CR0_PE	kern/mm/mmu.h	/^#define CR0_PE /;"	d
CR0_PG	kern/mm/mmu.h	/^#define CR0_PG /;"	d
CR0_TS	kern/mm/mmu.h	/^#define CR0_TS /;"	d
CR0_WP	kern/mm/mmu.h	/^#define CR0_WP /;"	d
CR4_DE	kern/mm/mmu.h	/^#define CR4_DE /;"	d
CR4_MCE	kern/mm/mmu.h	/^#define CR4_MCE /;"	d
CR4_PCE	kern/mm/mmu.h	/^#define CR4_PCE /;"	d
CR4_PSE	kern/mm/mmu.h	/^#define CR4_PSE /;"	d
CR4_PVI	kern/mm/mmu.h	/^#define CR4_PVI /;"	d
CR4_TSD	kern/mm/mmu.h	/^#define CR4_TSD /;"	d
CR4_VME	kern/mm/mmu.h	/^#define CR4_VME /;"	d
CRT_COLS	kern/driver/console.c	/^#define CRT_COLS /;"	d	file:
CRT_ROWS	kern/driver/console.c	/^#define CRT_ROWS /;"	d	file:
CRT_SIZE	kern/driver/console.c	/^#define CRT_SIZE /;"	d	file:
CTL	kern/driver/console.c	/^#define CTL /;"	d	file:
CTYPE	Makefile	/^CTYPE	:= c S$/;"	m
ClearPageProperty	kern/mm/memlayout.h	/^#define ClearPageProperty(/;"	d
ClearPageReserved	kern/mm/memlayout.h	/^#define ClearPageReserved(/;"	d
DEPTH	obj/user/forktree.asm	/^#define DEPTH 4$/;"	d
DEPTH	user/forktree.c	/^#define DEPTH /;"	d	file:
DIR	obj/user/badarg.asm	/^DIR *$/;"	l
DIR	obj/user/badarg.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/badsegment.asm	/^DIR *$/;"	l
DIR	obj/user/badsegment.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/divzero.asm	/^DIR *$/;"	l
DIR	obj/user/divzero.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/exit.asm	/^DIR *$/;"	l
DIR	obj/user/exit.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/faultread.asm	/^DIR *$/;"	l
DIR	obj/user/faultread.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/faultreadkernel.asm	/^DIR *$/;"	l
DIR	obj/user/faultreadkernel.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/forktest.asm	/^DIR *$/;"	l
DIR	obj/user/forktest.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/forktree.asm	/^DIR *$/;"	l
DIR	obj/user/forktree.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/hello.asm	/^DIR *$/;"	l
DIR	obj/user/hello.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/ls.asm	/^DIR *$/;"	l
DIR	obj/user/ls.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/matrix.asm	/^DIR *$/;"	l
DIR	obj/user/matrix.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/pgdir.asm	/^DIR *$/;"	l
DIR	obj/user/pgdir.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/priority.asm	/^DIR *$/;"	l
DIR	obj/user/priority.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/sh.asm	/^DIR *$/;"	l
DIR	obj/user/sh.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/sleep.asm	/^DIR *$/;"	l
DIR	obj/user/sleep.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/sleepkill.asm	/^DIR *$/;"	l
DIR	obj/user/sleepkill.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/softint.asm	/^DIR *$/;"	l
DIR	obj/user/softint.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/spin.asm	/^DIR *$/;"	l
DIR	obj/user/spin.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/testbss.asm	/^DIR *$/;"	l
DIR	obj/user/testbss.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/waitkill.asm	/^DIR *$/;"	l
DIR	obj/user/waitkill.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/yield.asm	/^DIR *$/;"	l
DIR	obj/user/yield.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	user/libs/dir.h	/^} DIR;$/;"	t	typeref:struct:__anon16
DISK0_BLKSIZE	kern/fs/devs/dev_disk0.c	/^#define DISK0_BLKSIZE /;"	d	file:
DISK0_BLK_NSECT	kern/fs/devs/dev_disk0.c	/^#define DISK0_BLK_NSECT /;"	d	file:
DISK0_BUFSIZE	kern/fs/devs/dev_disk0.c	/^#define DISK0_BUFSIZE /;"	d	file:
DISK0_DEV_NO	kern/fs/fs.h	/^#define DISK0_DEV_NO /;"	d
DISK1_DEV_NO	kern/fs/fs.h	/^#define DISK1_DEV_NO /;"	d
DPL_KERNEL	kern/mm/memlayout.h	/^#define DPL_KERNEL /;"	d
DPL_USER	kern/mm/memlayout.h	/^#define DPL_USER /;"	d
Disassembly	obj/bootblock.asm	/^Disassembly of section .startup:$/;"	l
Disassembly	obj/bootblock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badarg.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/exit.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/matrix.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pgdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/priority.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sleep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sleepkill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/waitkill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/driver/console.c	/^#define E0ESC /;"	d	file:
E820MAX	kern/mm/memlayout.h	/^#define E820MAX /;"	d
E820_ARM	kern/mm/memlayout.h	/^#define E820_ARM /;"	d
E820_ARR	kern/mm/memlayout.h	/^#define E820_ARR /;"	d
EATING	kern/sync/check_sync.c	/^#define EATING /;"	d	file:
ELFHDR	boot/bootmain.c	/^#define ELFHDR /;"	d	file:
ELFHDR	obj/bootblock.asm	/^#define ELFHDR          ((struct elfhdr *)0x10000)      \/\/ scratch space$/;"	d
ELF_MAGIC	libs/elf.h	/^#define ELF_MAGIC /;"	d
ELF_PF_R	libs/elf.h	/^#define ELF_PF_R /;"	d
ELF_PF_W	libs/elf.h	/^#define ELF_PF_W /;"	d
ELF_PF_X	libs/elf.h	/^#define ELF_PF_X /;"	d
ELF_PT_LOAD	libs/elf.h	/^#define ELF_PT_LOAD /;"	d
EMPTY	Makefile	/^EMPTY	:=$/;"	m
EXEC_MAX_ARG_LEN	libs/unistd.h	/^#define EXEC_MAX_ARG_LEN /;"	d
EXEC_MAX_ARG_NUM	libs/unistd.h	/^#define EXEC_MAX_ARG_NUM /;"	d
E_BAD_PROC	libs/error.h	/^#define E_BAD_PROC /;"	d
E_BUSY	libs/error.h	/^#define E_BUSY /;"	d
E_EXISTS	libs/error.h	/^#define E_EXISTS /;"	d
E_FAULT	libs/error.h	/^#define E_FAULT /;"	d
E_INVAL	libs/error.h	/^#define E_INVAL /;"	d
E_INVAL_ELF	libs/error.h	/^#define E_INVAL_ELF /;"	d
E_ISDIR	libs/error.h	/^#define E_ISDIR /;"	d
E_KILLED	libs/error.h	/^#define E_KILLED /;"	d
E_MAX_OPEN	libs/error.h	/^#define E_MAX_OPEN /;"	d
E_NA_DEV	libs/error.h	/^#define E_NA_DEV /;"	d
E_NOENT	libs/error.h	/^#define E_NOENT /;"	d
E_NOTDIR	libs/error.h	/^#define E_NOTDIR /;"	d
E_NOTEMPTY	libs/error.h	/^#define E_NOTEMPTY /;"	d
E_NO_DEV	libs/error.h	/^#define E_NO_DEV /;"	d
E_NO_FREE_PROC	libs/error.h	/^#define E_NO_FREE_PROC /;"	d
E_NO_MEM	libs/error.h	/^#define E_NO_MEM /;"	d
E_PANIC	libs/error.h	/^#define E_PANIC /;"	d
E_SEEK	libs/error.h	/^#define E_SEEK /;"	d
E_SWAP_FAULT	libs/error.h	/^#define E_SWAP_FAULT /;"	d
E_TIMEOUT	libs/error.h	/^#define E_TIMEOUT /;"	d
E_TOO_BIG	libs/error.h	/^#define E_TOO_BIG /;"	d
E_UNIMP	libs/error.h	/^#define E_UNIMP /;"	d
E_UNSPECIFIED	libs/error.h	/^#define E_UNSPECIFIED /;"	d
E_XDEV	libs/error.h	/^#define E_XDEV /;"	d
FD_CLOSED	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon3
FD_INIT	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon3
FD_NONE	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon3
FD_OPENED	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon3
FILES_STRUCT_BUFSIZE	kern/fs/fs.h	/^#define FILES_STRUCT_BUFSIZE /;"	d
FILES_STRUCT_NENTRY	kern/fs/fs.h	/^#define FILES_STRUCT_NENTRY /;"	d
FL_AC	kern/mm/mmu.h	/^#define FL_AC /;"	d
FL_AF	kern/mm/mmu.h	/^#define FL_AF /;"	d
FL_CF	kern/mm/mmu.h	/^#define FL_CF /;"	d
FL_DF	kern/mm/mmu.h	/^#define FL_DF /;"	d
FL_ID	kern/mm/mmu.h	/^#define FL_ID /;"	d
FL_IF	kern/mm/mmu.h	/^#define FL_IF /;"	d
FL_IOPL_0	kern/mm/mmu.h	/^#define FL_IOPL_0 /;"	d
FL_IOPL_1	kern/mm/mmu.h	/^#define FL_IOPL_1 /;"	d
FL_IOPL_2	kern/mm/mmu.h	/^#define FL_IOPL_2 /;"	d
FL_IOPL_3	kern/mm/mmu.h	/^#define FL_IOPL_3 /;"	d
FL_IOPL_MASK	kern/mm/mmu.h	/^#define FL_IOPL_MASK /;"	d
FL_NT	kern/mm/mmu.h	/^#define FL_NT /;"	d
FL_OF	kern/mm/mmu.h	/^#define FL_OF /;"	d
FL_PF	kern/mm/mmu.h	/^#define FL_PF /;"	d
FL_RF	kern/mm/mmu.h	/^#define FL_RF /;"	d
FL_SF	kern/mm/mmu.h	/^#define FL_SF /;"	d
FL_TF	kern/mm/mmu.h	/^#define FL_TF /;"	d
FL_VIF	kern/mm/mmu.h	/^#define FL_VIF /;"	d
FL_VIP	kern/mm/mmu.h	/^#define FL_VIP /;"	d
FL_VM	kern/mm/mmu.h	/^#define FL_VM /;"	d
FL_ZF	kern/mm/mmu.h	/^#define FL_ZF /;"	d
FS_MAX_DNAME_LEN	libs/unistd.h	/^#define FS_MAX_DNAME_LEN /;"	d
FS_MAX_FNAME_LEN	libs/unistd.h	/^#define FS_MAX_FNAME_LEN /;"	d
FS_MAX_FPATH_LEN	libs/unistd.h	/^#define FS_MAX_FPATH_LEN /;"	d
GCCPREFIX	Makefile	/^GCCPREFIX := $(shell if i386-ucore-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GDB	Makefile	/^GDB		:= $(GCCPREFIX)gdb$/;"	m
GD_KDATA	kern/mm/memlayout.h	/^#define GD_KDATA /;"	d
GD_KTEXT	kern/mm/memlayout.h	/^#define GD_KTEXT /;"	d
GD_TSS	kern/mm/memlayout.h	/^#define GD_TSS /;"	d
GD_UDATA	kern/mm/memlayout.h	/^#define GD_UDATA /;"	d
GD_UTEXT	kern/mm/memlayout.h	/^#define GD_UTEXT /;"	d
GOLDEN_RATIO_PRIME_32	libs/hash.c	/^#define GOLDEN_RATIO_PRIME_32 /;"	d	file:
GOLDEN_RATIO_PRIME_32	tools/mksfs.c	/^#define GOLDEN_RATIO_PRIME_32 /;"	d	file:
GRADE_GDB_IN	Makefile	/^GRADE_GDB_IN	:= .gdb.in$/;"	m
GRADE_QEMU_OUT	Makefile	/^GRADE_QEMU_OUT	:= .qemu.out$/;"	m
HANDIN	Makefile	/^HANDIN			:= proj$(PROJ)-handin.tar.gz$/;"	m
HASH_LIST_SIZE	kern/process/proc.c	/^#define HASH_LIST_SIZE /;"	d	file:
HASH_LIST_SIZE	tools/mksfs.c	/^#define HASH_LIST_SIZE /;"	d	file:
HASH_SHIFT	kern/process/proc.c	/^#define HASH_SHIFT /;"	d	file:
HASH_SHIFT	tools/mksfs.c	/^#define HASH_SHIFT /;"	d	file:
HOSTCC	Makefile	/^HOSTCC		:= gcc$/;"	m
HOSTCFLAGS	Makefile	/^HOSTCFLAGS	:= -g -Wall -O2 -D_FILE_OFFSET_BITS=64$/;"	m
HUNGRY	kern/sync/check_sync.c	/^#define HUNGRY /;"	d	file:
IA32flags	kern/trap/trap.c	/^static const char *IA32flags[] = {$/;"	v	file:
IDE_BSY	kern/driver/ide.c	/^#define IDE_BSY /;"	d	file:
IDE_CMD_IDENTIFY	kern/driver/ide.c	/^#define IDE_CMD_IDENTIFY /;"	d	file:
IDE_CMD_READ	kern/driver/ide.c	/^#define IDE_CMD_READ /;"	d	file:
IDE_CMD_WRITE	kern/driver/ide.c	/^#define IDE_CMD_WRITE /;"	d	file:
IDE_DF	kern/driver/ide.c	/^#define IDE_DF /;"	d	file:
IDE_DRDY	kern/driver/ide.c	/^#define IDE_DRDY /;"	d	file:
IDE_DRQ	kern/driver/ide.c	/^#define IDE_DRQ /;"	d	file:
IDE_ERR	kern/driver/ide.c	/^#define IDE_ERR /;"	d	file:
IDE_IDENT_CAPABILITIES	kern/driver/ide.c	/^#define IDE_IDENT_CAPABILITIES /;"	d	file:
IDE_IDENT_CMDSETS	kern/driver/ide.c	/^#define IDE_IDENT_CMDSETS /;"	d	file:
IDE_IDENT_MAX_LBA	kern/driver/ide.c	/^#define IDE_IDENT_MAX_LBA /;"	d	file:
IDE_IDENT_MAX_LBA_EXT	kern/driver/ide.c	/^#define IDE_IDENT_MAX_LBA_EXT /;"	d	file:
IDE_IDENT_MODEL	kern/driver/ide.c	/^#define IDE_IDENT_MODEL /;"	d	file:
IDE_IDENT_SECTORS	kern/driver/ide.c	/^#define IDE_IDENT_SECTORS /;"	d	file:
IGNORE_ALLDEPS	Makefile	/^IGNORE_ALLDEPS	= clean \\$/;"	m
INIT_LOCK	user/libs/lock.h	/^#define INIT_LOCK /;"	d
IOBUF_SIZE	kern/fs/sysfile.c	/^#define IOBUF_SIZE /;"	d	file:
IOBUF_SIZE	obj/kernel.asm	/^#define IOBUF_SIZE                          4096$/;"	d
IO_BASE	kern/driver/ide.c	/^#define IO_BASE(/;"	d	file:
IO_BASE0	kern/driver/ide.c	/^#define IO_BASE0 /;"	d	file:
IO_BASE1	kern/driver/ide.c	/^#define IO_BASE1 /;"	d	file:
IO_CTRL	kern/driver/ide.c	/^#define IO_CTRL(/;"	d	file:
IO_CTRL0	kern/driver/ide.c	/^#define IO_CTRL0 /;"	d	file:
IO_CTRL1	kern/driver/ide.c	/^#define IO_CTRL1 /;"	d	file:
IO_PIC1	kern/driver/picirq.c	/^#define IO_PIC1 /;"	d	file:
IO_PIC2	kern/driver/picirq.c	/^#define IO_PIC2 /;"	d	file:
IO_TIMER1	kern/driver/clock.c	/^#define IO_TIMER1 /;"	d	file:
IRQ_COM1	kern/trap/trap.h	/^#define IRQ_COM1 /;"	d
IRQ_ERROR	kern/trap/trap.h	/^#define IRQ_ERROR /;"	d
IRQ_IDE1	kern/trap/trap.h	/^#define IRQ_IDE1 /;"	d
IRQ_IDE2	kern/trap/trap.h	/^#define IRQ_IDE2 /;"	d
IRQ_KBD	kern/trap/trap.h	/^#define IRQ_KBD /;"	d
IRQ_OFFSET	kern/driver/picirq.h	/^#define IRQ_OFFSET /;"	d
IRQ_OFFSET	kern/trap/trap.h	/^#define IRQ_OFFSET /;"	d
IRQ_SLAVE	kern/driver/picirq.c	/^#define IRQ_SLAVE /;"	d	file:
IRQ_SPURIOUS	kern/trap/trap.h	/^#define IRQ_SPURIOUS /;"	d
IRQ_TIMER	kern/trap/trap.h	/^#define IRQ_TIMER /;"	d
ISA_COMMAND	kern/driver/ide.c	/^#define ISA_COMMAND /;"	d	file:
ISA_CTRL	kern/driver/ide.c	/^#define ISA_CTRL /;"	d	file:
ISA_CYL_HI	kern/driver/ide.c	/^#define ISA_CYL_HI /;"	d	file:
ISA_CYL_LO	kern/driver/ide.c	/^#define ISA_CYL_LO /;"	d	file:
ISA_DATA	kern/driver/ide.c	/^#define ISA_DATA /;"	d	file:
ISA_ERROR	kern/driver/ide.c	/^#define ISA_ERROR /;"	d	file:
ISA_PRECOMP	kern/driver/ide.c	/^#define ISA_PRECOMP /;"	d	file:
ISA_SDH	kern/driver/ide.c	/^#define ISA_SDH /;"	d	file:
ISA_SECCNT	kern/driver/ide.c	/^#define ISA_SECCNT /;"	d	file:
ISA_SECTOR	kern/driver/ide.c	/^#define ISA_SECTOR /;"	d	file:
ISA_STATUS	kern/driver/ide.c	/^#define ISA_STATUS /;"	d	file:
KADDR	kern/mm/pmm.h	/^#define KADDR(/;"	d
KBCMDP	kern/driver/kbdreg.h	/^#define KBCMDP /;"	d
KBC_AUXDISABLE	kern/driver/kbdreg.h	/^#define KBC_AUXDISABLE /;"	d
KBC_AUXECHO	kern/driver/kbdreg.h	/^#define KBC_AUXECHO /;"	d
KBC_AUXENABLE	kern/driver/kbdreg.h	/^#define KBC_AUXENABLE /;"	d
KBC_AUXTEST	kern/driver/kbdreg.h	/^#define KBC_AUXTEST /;"	d
KBC_AUXWRITE	kern/driver/kbdreg.h	/^#define KBC_AUXWRITE /;"	d
KBC_DISABLE	kern/driver/kbdreg.h	/^#define KBC_DISABLE /;"	d
KBC_ECHO	kern/driver/kbdreg.h	/^#define KBC_ECHO /;"	d
KBC_ENABLE	kern/driver/kbdreg.h	/^#define KBC_ENABLE /;"	d
KBC_KBDDISABLE	kern/driver/kbdreg.h	/^#define KBC_KBDDISABLE /;"	d
KBC_KBDECHO	kern/driver/kbdreg.h	/^#define KBC_KBDECHO /;"	d
KBC_KBDENABLE	kern/driver/kbdreg.h	/^#define KBC_KBDENABLE /;"	d
KBC_KBDTEST	kern/driver/kbdreg.h	/^#define KBC_KBDTEST /;"	d
KBC_MODEIND	kern/driver/kbdreg.h	/^#define KBC_MODEIND /;"	d
KBC_PULSE0	kern/driver/kbdreg.h	/^#define KBC_PULSE0 /;"	d
KBC_PULSE1	kern/driver/kbdreg.h	/^#define KBC_PULSE1 /;"	d
KBC_PULSE2	kern/driver/kbdreg.h	/^#define KBC_PULSE2 /;"	d
KBC_PULSE3	kern/driver/kbdreg.h	/^#define KBC_PULSE3 /;"	d
KBC_RAMREAD	kern/driver/kbdreg.h	/^#define KBC_RAMREAD /;"	d
KBC_RAMWRITE	kern/driver/kbdreg.h	/^#define KBC_RAMWRITE /;"	d
KBC_RESEND	kern/driver/kbdreg.h	/^#define KBC_RESEND /;"	d
KBC_RESET	kern/driver/kbdreg.h	/^#define KBC_RESET /;"	d
KBC_SELFTEST	kern/driver/kbdreg.h	/^#define KBC_SELFTEST /;"	d
KBC_SETDEFAULT	kern/driver/kbdreg.h	/^#define KBC_SETDEFAULT /;"	d
KBC_SETTABLE	kern/driver/kbdreg.h	/^#define KBC_SETTABLE /;"	d
KBC_TYPEMATIC	kern/driver/kbdreg.h	/^#define KBC_TYPEMATIC /;"	d
KBDATAP	kern/driver/kbdreg.h	/^#define KBDATAP /;"	d
KBOUTP	kern/driver/kbdreg.h	/^#define KBOUTP /;"	d
KBR_ACK	kern/driver/kbdreg.h	/^#define KBR_ACK /;"	d
KBR_BREAK	kern/driver/kbdreg.h	/^#define KBR_BREAK /;"	d
KBR_ECHO	kern/driver/kbdreg.h	/^#define KBR_ECHO /;"	d
KBR_EXTENDED	kern/driver/kbdreg.h	/^#define KBR_EXTENDED /;"	d
KBR_FAILURE	kern/driver/kbdreg.h	/^#define KBR_FAILURE /;"	d
KBR_OVERRUN	kern/driver/kbdreg.h	/^#define KBR_OVERRUN /;"	d
KBR_RESEND	kern/driver/kbdreg.h	/^#define KBR_RESEND /;"	d
KBR_RSTDONE	kern/driver/kbdreg.h	/^#define KBR_RSTDONE /;"	d
KBSTATP	kern/driver/kbdreg.h	/^#define KBSTATP /;"	d
KBS_DIB	kern/driver/kbdreg.h	/^#define KBS_DIB /;"	d
KBS_IBF	kern/driver/kbdreg.h	/^#define KBS_IBF /;"	d
KBS_NOSEC	kern/driver/kbdreg.h	/^#define KBS_NOSEC /;"	d
KBS_PERR	kern/driver/kbdreg.h	/^#define KBS_PERR /;"	d
KBS_RERR	kern/driver/kbdreg.h	/^#define KBS_RERR /;"	d
KBS_TERR	kern/driver/kbdreg.h	/^#define KBS_TERR /;"	d
KBS_WARM	kern/driver/kbdreg.h	/^#define KBS_WARM /;"	d
KC8_CPU	kern/driver/kbdreg.h	/^#define KC8_CPU /;"	d
KC8_IGNSEC	kern/driver/kbdreg.h	/^#define KC8_IGNSEC /;"	d
KC8_KDISABLE	kern/driver/kbdreg.h	/^#define KC8_KDISABLE /;"	d
KC8_KENABLE	kern/driver/kbdreg.h	/^#define KC8_KENABLE /;"	d
KC8_MDISABLE	kern/driver/kbdreg.h	/^#define KC8_MDISABLE /;"	d
KC8_MENABLE	kern/driver/kbdreg.h	/^#define KC8_MENABLE /;"	d
KC8_TRANS	kern/driver/kbdreg.h	/^#define KC8_TRANS /;"	d
KERNBASE	kern/mm/memlayout.h	/^#define KERNBASE /;"	d
KERNEL_CS	kern/mm/memlayout.h	/^#define KERNEL_CS /;"	d
KERNEL_DS	kern/mm/memlayout.h	/^#define KERNEL_DS /;"	d
KERNEL_EXECVE	kern/process/proc.c	/^#define KERNEL_EXECVE(/;"	d	file:
KERNEL_EXECVE2	kern/process/proc.c	/^#define KERNEL_EXECVE2(/;"	d	file:
KERNEL_EXECVE3	kern/process/proc.c	/^#define KERNEL_EXECVE3(/;"	d	file:
KERNEL_EXECVE3	obj/kernel.asm	/^#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)$/;"	d
KERNTOP	kern/mm/memlayout.h	/^#define KERNTOP /;"	d
KERN_ACCESS	kern/mm/memlayout.h	/^#define KERN_ACCESS(/;"	d
KEY_DEL	kern/driver/kbdreg.h	/^#define KEY_DEL /;"	d
KEY_DN	kern/driver/kbdreg.h	/^#define KEY_DN /;"	d
KEY_END	kern/driver/kbdreg.h	/^#define KEY_END /;"	d
KEY_HOME	kern/driver/kbdreg.h	/^#define KEY_HOME /;"	d
KEY_INS	kern/driver/kbdreg.h	/^#define KEY_INS /;"	d
KEY_LF	kern/driver/kbdreg.h	/^#define KEY_LF /;"	d
KEY_PGDN	kern/driver/kbdreg.h	/^#define KEY_PGDN /;"	d
KEY_PGUP	kern/driver/kbdreg.h	/^#define KEY_PGUP /;"	d
KEY_RT	kern/driver/kbdreg.h	/^#define KEY_RT /;"	d
KEY_UP	kern/driver/kbdreg.h	/^#define KEY_UP /;"	d
KMALLOC_MAX_ORDER	kern/mm/kmalloc.h	/^#define KMALLOC_MAX_ORDER /;"	d
KMEMSIZE	kern/mm/memlayout.h	/^#define KMEMSIZE /;"	d
KOBJS	Makefile	/^KOBJS	= $(call read_packet,kernel libs)$/;"	m
KSTACKPAGE	kern/mm/memlayout.h	/^#define KSTACKPAGE /;"	d
KSTACKSIZE	kern/mm/memlayout.h	/^#define KSTACKSIZE /;"	d
K_LDCMDBYTE	kern/driver/kbdreg.h	/^#define K_LDCMDBYTE /;"	d
K_RDCMDBYTE	kern/driver/kbdreg.h	/^#define K_RDCMDBYTE /;"	d
L1_CACHE_BYTES	kern/mm/kmalloc.c	/^#define L1_CACHE_BYTES /;"	d	file:
LD	Makefile	/^LD      := $(GCCPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS	:= -m $(shell $(LD) -V | grep elf_i386 2>\/dev\/null)$/;"	m
LEFT	kern/sync/check_sync.c	/^#define LEFT /;"	d	file:
LPTPORT	kern/driver/console.c	/^#define LPTPORT /;"	d	file:
LSEEK_CUR	libs/unistd.h	/^#define LSEEK_CUR /;"	d
LSEEK_END	libs/unistd.h	/^#define LSEEK_END /;"	d
LSEEK_SET	libs/unistd.h	/^#define LSEEK_SET /;"	d
MAKEOPTS	Makefile	/^MAKEOPTS		:= --quiet --no-print-directory$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS	:= --quiet --no-print-directory$/;"	m
MATSIZE	user/matrix.c	/^#define MATSIZE /;"	d	file:
MAXARGS	kern/debug/kmonitor.c	/^#define MAXARGS /;"	d	file:
MAXARGS	obj/kernel.asm	/^#define MAXARGS         16$/;"	d
MAXERROR	libs/error.h	/^#define MAXERROR /;"	d
MAX_ARGS	obj/user/badarg.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/badsegment.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/divzero.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/exit.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/faultread.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/faultreadkernel.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/forktest.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/forktree.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/hello.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/ls.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/matrix.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/pgdir.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/priority.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/sh.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/sleep.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/sleepkill.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/softint.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/spin.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/testbss.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/waitkill.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/yield.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	user/libs/syscall.c	/^#define MAX_ARGS /;"	d	file:
MAX_DISK_NSECS	kern/driver/ide.c	/^#define MAX_DISK_NSECS /;"	d	file:
MAX_IDE	kern/driver/ide.c	/^#define MAX_IDE /;"	d	file:
MAX_INODE_COUNT	kern/fs/vfs/inode.h	/^#define MAX_INODE_COUNT /;"	d
MAX_NSECS	kern/driver/ide.c	/^#define MAX_NSECS /;"	d	file:
MAX_PID	kern/process/proc.h	/^#define MAX_PID /;"	d
MAX_PROCESS	kern/process/proc.h	/^#define MAX_PROCESS /;"	d
MAX_SEQ_NO	kern/mm/swap.c	/^#define MAX_SEQ_NO /;"	d	file:
MAX_SWAP_OFFSET_LIMIT	kern/mm/swap.h	/^#define MAX_SWAP_OFFSET_LIMIT /;"	d
MAX_TIME	user/priority.c	/^#define MAX_TIME /;"	d	file:
MKDIR	Makefile	/^MKDIR   := mkdir -p$/;"	m
MONO_BASE	kern/driver/console.c	/^#define MONO_BASE /;"	d	file:
MONO_BUF	kern/driver/console.c	/^#define MONO_BUF /;"	d	file:
MV	Makefile	/^MV		:= mv$/;"	m
N	kern/sync/check_sync.c	/^#define N /;"	d	file:
NCOMMANDS	kern/debug/kmonitor.c	/^#define NCOMMANDS /;"	d	file:
NO	kern/driver/console.c	/^#define NO /;"	d	file:
NO_FD	libs/unistd.h	/^#define NO_FD /;"	d
NPDEENTRY	kern/mm/mmu.h	/^#define NPDEENTRY /;"	d
NPTEENTRY	kern/mm/mmu.h	/^#define NPTEENTRY /;"	d
NULL	libs/defs.h	/^#define NULL /;"	d
NUMLOCK	kern/driver/console.c	/^#define NUMLOCK /;"	d	file:
NUM_SYSCALLS	kern/syscall/syscall.c	/^#define NUM_SYSCALLS /;"	d	file:
NUM_SYSCALLS	obj/kernel.asm	/^#define NUM_SYSCALLS        ((sizeof(syscalls)) \/ (sizeof(syscalls[0])))$/;"	d
N_BCOMM	kern/debug/stab.h	/^#define N_BCOMM /;"	d
N_BINCL	kern/debug/stab.h	/^#define N_BINCL /;"	d
N_BSLINE	kern/debug/stab.h	/^#define N_BSLINE /;"	d
N_DSLINE	kern/debug/stab.h	/^#define N_DSLINE /;"	d
N_ECOML	kern/debug/stab.h	/^#define N_ECOML /;"	d
N_ECOMM	kern/debug/stab.h	/^#define N_ECOMM /;"	d
N_EINCL	kern/debug/stab.h	/^#define N_EINCL /;"	d
N_ENTRY	kern/debug/stab.h	/^#define N_ENTRY /;"	d
N_EXCL	kern/debug/stab.h	/^#define N_EXCL /;"	d
N_FNAME	kern/debug/stab.h	/^#define N_FNAME /;"	d
N_FUN	kern/debug/stab.h	/^#define N_FUN /;"	d
N_GSYM	kern/debug/stab.h	/^#define N_GSYM /;"	d
N_LBRAC	kern/debug/stab.h	/^#define N_LBRAC /;"	d
N_LCSYM	kern/debug/stab.h	/^#define N_LCSYM /;"	d
N_LENG	kern/debug/stab.h	/^#define N_LENG /;"	d
N_LSYM	kern/debug/stab.h	/^#define N_LSYM /;"	d
N_MAIN	kern/debug/stab.h	/^#define N_MAIN /;"	d
N_PC	kern/debug/stab.h	/^#define N_PC /;"	d
N_PSYM	kern/debug/stab.h	/^#define N_PSYM /;"	d
N_RBRAC	kern/debug/stab.h	/^#define N_RBRAC /;"	d
N_RSYM	kern/debug/stab.h	/^#define N_RSYM /;"	d
N_SLINE	kern/debug/stab.h	/^#define N_SLINE /;"	d
N_SO	kern/debug/stab.h	/^#define N_SO /;"	d
N_SOL	kern/debug/stab.h	/^#define N_SOL /;"	d
N_SSYM	kern/debug/stab.h	/^#define N_SSYM /;"	d
N_STSYM	kern/debug/stab.h	/^#define N_STSYM /;"	d
OBJCOPY	Makefile	/^OBJCOPY := $(GCCPREFIX)objcopy$/;"	m
OBJDIR	Makefile	/^OBJDIR	:= obj$/;"	m
OBJDUMP	Makefile	/^OBJDUMP := $(GCCPREFIX)objdump$/;"	m
OBJPREFIX	tools/function.mk	/^OBJPREFIX	:= __objs_$/;"	m
O_ACCMODE	libs/unistd.h	/^#define O_ACCMODE /;"	d
O_APPEND	libs/unistd.h	/^#define O_APPEND /;"	d
O_CREAT	libs/unistd.h	/^#define O_CREAT /;"	d
O_EXCL	libs/unistd.h	/^#define O_EXCL /;"	d
O_RDONLY	libs/unistd.h	/^#define O_RDONLY /;"	d
O_RDWR	libs/unistd.h	/^#define O_RDWR /;"	d
O_TRUNC	libs/unistd.h	/^#define O_TRUNC /;"	d
O_WRONLY	libs/unistd.h	/^#define O_WRONLY /;"	d
PADDR	kern/mm/pmm.h	/^#define PADDR(/;"	d
PAGE_NSECT	kern/fs/fs.h	/^#define PAGE_NSECT /;"	d
PAGE_SIZE	kern/mm/kmalloc.c	/^#define PAGE_SIZE /;"	d	file:
PDE_ADDR	kern/mm/mmu.h	/^#define PDE_ADDR(/;"	d
PDX	kern/mm/mmu.h	/^#define PDX(/;"	d
PDXSHIFT	kern/mm/mmu.h	/^#define PDXSHIFT /;"	d
PF_EXITING	kern/process/proc.h	/^#define PF_EXITING /;"	d
PGADDR	kern/mm/mmu.h	/^#define PGADDR(/;"	d
PGOFF	kern/mm/mmu.h	/^#define PGOFF(/;"	d
PGSHIFT	kern/mm/mmu.h	/^#define PGSHIFT /;"	d
PGSIZE	kern/mm/mmu.h	/^#define PGSIZE /;"	d
PG_property	kern/mm/memlayout.h	/^#define PG_property /;"	d
PG_reserved	kern/mm/memlayout.h	/^#define PG_reserved /;"	d
PPN	kern/mm/mmu.h	/^#define PPN(/;"	d
PROC_NAME_LEN	kern/process/proc.h	/^#define PROC_NAME_LEN /;"	d
PROC_RUNNABLE	kern/process/proc.h	/^    PROC_RUNNABLE,    \/\/ runnable(maybe running)$/;"	e	enum:proc_state
PROC_SLEEPING	kern/process/proc.h	/^    PROC_SLEEPING,    \/\/ sleeping$/;"	e	enum:proc_state
PROC_UNINIT	kern/process/proc.h	/^    PROC_UNINIT = 0,  \/\/ uninitialized$/;"	e	enum:proc_state
PROC_ZOMBIE	kern/process/proc.h	/^    PROC_ZOMBIE,      \/\/ almost dead, and wait parent proc to reclaim his resource$/;"	e	enum:proc_state
PROJ	Makefile	/^PROJ	:= 5$/;"	m
PTE_A	kern/mm/mmu.h	/^#define PTE_A /;"	d
PTE_ADDR	kern/mm/mmu.h	/^#define PTE_ADDR(/;"	d
PTE_AVAIL	kern/mm/mmu.h	/^#define PTE_AVAIL /;"	d
PTE_D	kern/mm/mmu.h	/^#define PTE_D /;"	d
PTE_MBZ	kern/mm/mmu.h	/^#define PTE_MBZ /;"	d
PTE_P	kern/mm/mmu.h	/^#define PTE_P /;"	d
PTE_PCD	kern/mm/mmu.h	/^#define PTE_PCD /;"	d
PTE_PS	kern/mm/mmu.h	/^#define PTE_PS /;"	d
PTE_PWT	kern/mm/mmu.h	/^#define PTE_PWT /;"	d
PTE_U	kern/mm/mmu.h	/^#define PTE_U /;"	d
PTE_USER	kern/mm/mmu.h	/^#define PTE_USER /;"	d
PTE_W	kern/mm/mmu.h	/^#define PTE_W /;"	d
PTSHIFT	kern/mm/mmu.h	/^#define PTSHIFT /;"	d
PTSIZE	kern/mm/mmu.h	/^#define PTSIZE /;"	d
PTX	kern/mm/mmu.h	/^#define PTX(/;"	d
PTXSHIFT	kern/mm/mmu.h	/^#define PTXSHIFT /;"	d
Page	kern/mm/memlayout.h	/^struct Page {$/;"	s
PageProperty	kern/mm/memlayout.h	/^#define PageProperty(/;"	d
PageReserved	kern/mm/memlayout.h	/^#define PageReserved(/;"	d
QEMU	Makefile	/^QEMU := $(shell if which qemu-system-i386 > \/dev\/null; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -hda $(UCOREIMG) -drive file=$(SWAPIMG),media=disk,cache=writeback -drive file=$(SFSIMG),media=disk,cache=writeback $/;"	m
RAND_MAX	libs/stdlib.h	/^#define RAND_MAX /;"	d
REALLOC	kern/init/entry.S	/^#define REALLOC(x) (x - KERNBASE)$/;"	d
RIGHT	kern/sync/check_sync.c	/^#define RIGHT /;"	d	file:
RM	Makefile	/^RM		:= rm -f$/;"	m
ROUNDDOWN	libs/defs.h	/^#define ROUNDDOWN(/;"	d
ROUNDUP	libs/defs.h	/^#define ROUNDUP(/;"	d
ROUNDUP_DIV	libs/defs.h	/^#define ROUNDUP_DIV(/;"	d
RUN_PREFIX	Makefile	/^RUN_PREFIX	:= _binary_$(OBJDIR)_$(USER_PREFIX)$/;"	m
SCROLLLOCK	kern/driver/console.c	/^#define SCROLLLOCK /;"	d	file:
SECTSIZE	boot/bootmain.c	/^#define SECTSIZE /;"	d	file:
SECTSIZE	kern/fs/fs.h	/^#define SECTSIZE /;"	d
SED	Makefile	/^SED		:= sed$/;"	m
SEG	kern/mm/mmu.h	/^#define SEG(/;"	d
SEGTSS	kern/mm/mmu.h	/^#define SEGTSS(/;"	d
SEG_ASM	boot/asm.h	/^#define SEG_ASM(/;"	d
SEG_ASM	kern/mm/mmu.h	/^#define SEG_ASM(/;"	d
SEG_KDATA	kern/mm/memlayout.h	/^#define SEG_KDATA /;"	d
SEG_KTEXT	kern/mm/memlayout.h	/^#define SEG_KTEXT /;"	d
SEG_NULL	kern/mm/mmu.h	/^#define SEG_NULL /;"	d
SEG_NULLASM	boot/asm.h	/^#define SEG_NULLASM /;"	d
SEG_TSS	kern/mm/memlayout.h	/^#define SEG_TSS /;"	d
SEG_UDATA	kern/mm/memlayout.h	/^#define SEG_UDATA /;"	d
SEG_UTEXT	kern/mm/memlayout.h	/^#define SEG_UTEXT /;"	d
SETCALLGATE	kern/mm/mmu.h	/^#define SETCALLGATE(/;"	d
SETGATE	kern/mm/mmu.h	/^#define SETGATE(/;"	d
SFSBINS	Makefile	/^SFSBINS		:=$/;"	m
SFSIMG	Makefile	/^SFSIMG		:= $(call totarget,sfs.img)$/;"	m
SFSROOT	Makefile	/^SFSROOT		:= disk0$/;"	m
SFS_BLKBITS	kern/fs/sfs/sfs.h	/^#define SFS_BLKBITS /;"	d
SFS_BLKBITS	tools/mksfs.c	/^#define SFS_BLKBITS /;"	d	file:
SFS_BLKN_FREEMAP	kern/fs/sfs/sfs.h	/^#define SFS_BLKN_FREEMAP /;"	d
SFS_BLKN_FREEMAP	tools/mksfs.c	/^#define SFS_BLKN_FREEMAP /;"	d	file:
SFS_BLKN_ROOT	kern/fs/sfs/sfs.h	/^#define SFS_BLKN_ROOT /;"	d
SFS_BLKN_ROOT	tools/mksfs.c	/^#define SFS_BLKN_ROOT /;"	d	file:
SFS_BLKN_SUPER	kern/fs/sfs/sfs.h	/^#define SFS_BLKN_SUPER /;"	d
SFS_BLKN_SUPER	tools/mksfs.c	/^#define SFS_BLKN_SUPER /;"	d	file:
SFS_BLKSIZE	kern/fs/sfs/sfs.h	/^#define SFS_BLKSIZE /;"	d
SFS_BLKSIZE	tools/mksfs.c	/^#define SFS_BLKSIZE /;"	d	file:
SFS_BLK_NENTRY	kern/fs/sfs/sfs.h	/^#define SFS_BLK_NENTRY /;"	d
SFS_BLK_NENTRY	tools/mksfs.c	/^#define SFS_BLK_NENTRY /;"	d	file:
SFS_HLIST_SHIFT	kern/fs/sfs/sfs.h	/^#define SFS_HLIST_SHIFT /;"	d
SFS_HLIST_SIZE	kern/fs/sfs/sfs.h	/^#define SFS_HLIST_SIZE /;"	d
SFS_L0_NBLKS	tools/mksfs.c	/^#define SFS_L0_NBLKS /;"	d	file:
SFS_L1_NBLKS	tools/mksfs.c	/^#define SFS_L1_NBLKS /;"	d	file:
SFS_L2_NBLKS	tools/mksfs.c	/^#define SFS_L2_NBLKS /;"	d	file:
SFS_LN_NBLKS	tools/mksfs.c	/^#define SFS_LN_NBLKS /;"	d	file:
SFS_MAGIC	kern/fs/sfs/sfs.h	/^#define SFS_MAGIC /;"	d
SFS_MAGIC	tools/mksfs.c	/^#define SFS_MAGIC /;"	d	file:
SFS_MAX_FILE_SIZE	kern/fs/sfs/sfs.h	/^#define SFS_MAX_FILE_SIZE /;"	d
SFS_MAX_FILE_SIZE	tools/mksfs.c	/^#define SFS_MAX_FILE_SIZE /;"	d	file:
SFS_MAX_FNAME_LEN	kern/fs/sfs/sfs.h	/^#define SFS_MAX_FNAME_LEN /;"	d
SFS_MAX_FNAME_LEN	tools/mksfs.c	/^#define SFS_MAX_FNAME_LEN /;"	d	file:
SFS_MAX_INFO_LEN	kern/fs/sfs/sfs.h	/^#define SFS_MAX_INFO_LEN /;"	d
SFS_MAX_INFO_LEN	tools/mksfs.c	/^#define SFS_MAX_INFO_LEN /;"	d	file:
SFS_MAX_NBLKS	tools/mksfs.c	/^#define SFS_MAX_NBLKS /;"	d	file:
SFS_NDIRECT	kern/fs/sfs/sfs.h	/^#define SFS_NDIRECT /;"	d
SFS_NDIRECT	tools/mksfs.c	/^#define SFS_NDIRECT /;"	d	file:
SFS_TYPE_DIR	kern/fs/sfs/sfs.h	/^#define SFS_TYPE_DIR /;"	d
SFS_TYPE_DIR	tools/mksfs.c	/^#define SFS_TYPE_DIR /;"	d	file:
SFS_TYPE_FILE	kern/fs/sfs/sfs.h	/^#define SFS_TYPE_FILE /;"	d
SFS_TYPE_FILE	tools/mksfs.c	/^#define SFS_TYPE_FILE /;"	d	file:
SFS_TYPE_INVAL	kern/fs/sfs/sfs.h	/^#define SFS_TYPE_INVAL /;"	d
SFS_TYPE_LINK	kern/fs/sfs/sfs.h	/^#define SFS_TYPE_LINK /;"	d
SFS_TYPE_LINK	tools/mksfs.c	/^#define SFS_TYPE_LINK /;"	d	file:
SH	Makefile	/^SH		:= sh$/;"	m
SHIFT	kern/driver/console.c	/^#define SHIFT /;"	d	file:
SLASH	Makefile	/^SLASH	:= \/$/;"	m
SLEEP_TIME	kern/sync/check_sync.c	/^#define SLEEP_TIME /;"	d	file:
SLEEP_TIME	obj/user/forktree.asm	/^#define SLEEP_TIME 400$/;"	d
SLEEP_TIME	user/forktree.c	/^#define SLEEP_TIME /;"	d	file:
SLEEP_TIME	user/priority.c	/^#define SLEEP_TIME /;"	d	file:
SLOB_ALIGN	kern/mm/kmalloc.c	/^#define SLOB_ALIGN /;"	d	file:
SLOB_UNIT	kern/mm/kmalloc.c	/^#define SLOB_UNIT /;"	d	file:
SLOB_UNITS	kern/mm/kmalloc.c	/^#define SLOB_UNITS(/;"	d	file:
SPACE	Makefile	/^SPACE	:= $(EMPTY) $(EMPTY)$/;"	m
STACKFRAME_DEPTH	kern/debug/kdebug.c	/^#define STACKFRAME_DEPTH /;"	d	file:
STA_A	boot/asm.h	/^#define STA_A /;"	d
STA_A	kern/mm/mmu.h	/^#define STA_A /;"	d
STA_C	boot/asm.h	/^#define STA_C /;"	d
STA_C	kern/mm/mmu.h	/^#define STA_C /;"	d
STA_E	boot/asm.h	/^#define STA_E /;"	d
STA_E	kern/mm/mmu.h	/^#define STA_E /;"	d
STA_R	boot/asm.h	/^#define STA_R /;"	d
STA_R	kern/mm/mmu.h	/^#define STA_R /;"	d
STA_W	boot/asm.h	/^#define STA_W /;"	d
STA_W	kern/mm/mmu.h	/^#define STA_W /;"	d
STA_X	boot/asm.h	/^#define STA_X /;"	d
STA_X	kern/mm/mmu.h	/^#define STA_X /;"	d
STDIN_BUFSIZE	kern/fs/devs/dev_stdin.c	/^#define STDIN_BUFSIZE /;"	d	file:
STS_CG16	kern/mm/mmu.h	/^#define STS_CG16 /;"	d
STS_CG32	kern/mm/mmu.h	/^#define STS_CG32 /;"	d
STS_IG16	kern/mm/mmu.h	/^#define STS_IG16 /;"	d
STS_IG32	kern/mm/mmu.h	/^#define STS_IG32 /;"	d
STS_LDT	kern/mm/mmu.h	/^#define STS_LDT /;"	d
STS_T16A	kern/mm/mmu.h	/^#define STS_T16A /;"	d
STS_T16B	kern/mm/mmu.h	/^#define STS_T16B /;"	d
STS_T32A	kern/mm/mmu.h	/^#define STS_T32A /;"	d
STS_T32B	kern/mm/mmu.h	/^#define STS_T32B /;"	d
STS_TG	kern/mm/mmu.h	/^#define STS_TG /;"	d
STS_TG16	kern/mm/mmu.h	/^#define STS_TG16 /;"	d
STS_TG32	kern/mm/mmu.h	/^#define STS_TG32 /;"	d
SWAPIMG	Makefile	/^SWAPIMG		:= $(call totarget,swap.img)$/;"	m
SWAP_DEV_NO	kern/fs/fs.h	/^#define SWAP_DEV_NO /;"	d
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS                         "<|>&;"$/;"	d
SYMBOLS	user/sh.c	/^#define SYMBOLS /;"	d	file:
SYSTEM_READ_TIMER	kern/driver/clock.c	/^long SYSTEM_READ_TIMER( void ){$/;"	f
SYS_clone	libs/unistd.h	/^#define SYS_clone /;"	d
SYS_close	libs/unistd.h	/^#define SYS_close /;"	d
SYS_dup	libs/unistd.h	/^#define SYS_dup /;"	d
SYS_exec	libs/unistd.h	/^#define SYS_exec /;"	d
SYS_exit	libs/unistd.h	/^#define SYS_exit /;"	d
SYS_fork	libs/unistd.h	/^#define SYS_fork /;"	d
SYS_fstat	libs/unistd.h	/^#define SYS_fstat /;"	d
SYS_fsync	libs/unistd.h	/^#define SYS_fsync /;"	d
SYS_getcwd	libs/unistd.h	/^#define SYS_getcwd /;"	d
SYS_getdirentry	libs/unistd.h	/^#define SYS_getdirentry /;"	d
SYS_getpid	libs/unistd.h	/^#define SYS_getpid /;"	d
SYS_gettime	libs/unistd.h	/^#define SYS_gettime /;"	d
SYS_kill	libs/unistd.h	/^#define SYS_kill /;"	d
SYS_lab6_set_priority	libs/unistd.h	/^#define SYS_lab6_set_priority /;"	d
SYS_mmap	libs/unistd.h	/^#define SYS_mmap /;"	d
SYS_munmap	libs/unistd.h	/^#define SYS_munmap /;"	d
SYS_open	libs/unistd.h	/^#define SYS_open /;"	d
SYS_pgdir	libs/unistd.h	/^#define SYS_pgdir /;"	d
SYS_putc	libs/unistd.h	/^#define SYS_putc /;"	d
SYS_read	libs/unistd.h	/^#define SYS_read /;"	d
SYS_seek	libs/unistd.h	/^#define SYS_seek /;"	d
SYS_shmem	libs/unistd.h	/^#define SYS_shmem /;"	d
SYS_sleep	libs/unistd.h	/^#define SYS_sleep /;"	d
SYS_wait	libs/unistd.h	/^#define SYS_wait /;"	d
SYS_write	libs/unistd.h	/^#define SYS_write /;"	d
SYS_yield	libs/unistd.h	/^#define SYS_yield /;"	d
S_IFBLK	libs/stat.h	/^#define S_IFBLK /;"	d
S_IFCHR	libs/stat.h	/^#define S_IFCHR /;"	d
S_IFDIR	libs/stat.h	/^#define S_IFDIR /;"	d
S_IFLNK	libs/stat.h	/^#define S_IFLNK /;"	d
S_IFMT	libs/stat.h	/^#define S_IFMT /;"	d
S_IFREG	libs/stat.h	/^#define S_IFREG /;"	d
S_ISBLK	libs/stat.h	/^#define S_ISBLK(/;"	d
S_ISCHR	libs/stat.h	/^#define S_ISCHR(/;"	d
S_ISDIR	libs/stat.h	/^#define S_ISDIR(/;"	d
S_ISLNK	libs/stat.h	/^#define S_ISLNK(/;"	d
S_ISREG	libs/stat.h	/^#define S_ISREG(/;"	d
SetPageProperty	kern/mm/memlayout.h	/^#define SetPageProperty(/;"	d
SetPageReserved	kern/mm/memlayout.h	/^#define SetPageReserved(/;"	d
TARGETS	Makefile	/^TARGETS	:=$/;"	m
TERMINAL	Makefile	/^TERMINAL := gnome-terminal$/;"	m
THINKING	kern/sync/check_sync.c	/^#define THINKING /;"	d	file:
TICK_NUM	kern/trap/trap.c	/^#define TICK_NUM /;"	d	file:
TICK_NUM	obj/kernel.asm	/^#define TICK_NUM 100$/;"	d
TIMER_16BIT	kern/driver/clock.c	/^#define TIMER_16BIT /;"	d	file:
TIMER_16BIT	obj/kernel.asm	/^#define TIMER_16BIT     0x30                    \/\/ r\/w counter 16 bits, LSB first$/;"	d
TIMER_DIV	kern/driver/clock.c	/^#define TIMER_DIV(/;"	d	file:
TIMER_FREQ	kern/driver/clock.c	/^#define TIMER_FREQ /;"	d	file:
TIMER_MODE	kern/driver/clock.c	/^#define TIMER_MODE /;"	d	file:
TIMER_RATEGEN	kern/driver/clock.c	/^#define TIMER_RATEGEN /;"	d	file:
TIMER_RATEGEN	obj/kernel.asm	/^#define TIMER_RATEGEN   0x04                    \/\/ mode 2, rate generator$/;"	d
TIMER_SEL0	kern/driver/clock.c	/^#define TIMER_SEL0 /;"	d	file:
TIMES	kern/sync/check_sync.c	/^#define TIMES /;"	d	file:
TOTAL	user/priority.c	/^#define TOTAL /;"	d	file:
TOUCH	Makefile	/^TOUCH	:= touch -c$/;"	m
TOUCH_FILES	Makefile	/^TOUCH_FILES		:= kern\/process\/proc.c$/;"	m
TR	Makefile	/^TR		:= tr$/;"	m
T_ALIGN	kern/trap/trap.h	/^#define T_ALIGN /;"	d
T_BOUND	kern/trap/trap.h	/^#define T_BOUND /;"	d
T_BRKPT	kern/trap/trap.h	/^#define T_BRKPT /;"	d
T_DBLFLT	kern/trap/trap.h	/^#define T_DBLFLT /;"	d
T_DEBUG	kern/trap/trap.h	/^#define T_DEBUG /;"	d
T_DEVICE	kern/trap/trap.h	/^#define T_DEVICE /;"	d
T_DIVIDE	kern/trap/trap.h	/^#define T_DIVIDE /;"	d
T_FPERR	kern/trap/trap.h	/^#define T_FPERR /;"	d
T_GPFLT	kern/trap/trap.h	/^#define T_GPFLT /;"	d
T_ILLOP	kern/trap/trap.h	/^#define T_ILLOP /;"	d
T_MCHK	kern/trap/trap.h	/^#define T_MCHK /;"	d
T_NMI	kern/trap/trap.h	/^#define T_NMI /;"	d
T_OFLOW	kern/trap/trap.h	/^#define T_OFLOW /;"	d
T_PGFLT	kern/trap/trap.h	/^#define T_PGFLT /;"	d
T_SEGNP	kern/trap/trap.h	/^#define T_SEGNP /;"	d
T_SIMDERR	kern/trap/trap.h	/^#define T_SIMDERR /;"	d
T_STACK	kern/trap/trap.h	/^#define T_STACK /;"	d
T_SWITCH_TOK	kern/trap/trap.h	/^#define T_SWITCH_TOK /;"	d
T_SWITCH_TOU	kern/trap/trap.h	/^#define T_SWITCH_TOU /;"	d
T_SYSCALL	libs/unistd.h	/^#define T_SYSCALL /;"	d
T_TSS	kern/trap/trap.h	/^#define T_TSS /;"	d
UCOREIMG	Makefile	/^UCOREIMG	:= $(call totarget,ucore.img)$/;"	m
UOBJS	Makefile	/^UOBJS	:= $(call read_packet,ulibs libs)$/;"	m
USERBASE	kern/mm/memlayout.h	/^#define USERBASE /;"	d
USERTOP	kern/mm/memlayout.h	/^#define USERTOP /;"	d
USER_ACCESS	kern/mm/memlayout.h	/^#define USER_ACCESS(/;"	d
USER_BINS	Makefile	/^USER_BINS	:=$/;"	m
USER_CS	kern/mm/memlayout.h	/^#define USER_CS /;"	d
USER_DS	kern/mm/memlayout.h	/^#define USER_DS /;"	d
USER_PREFIX	Makefile	/^USER_PREFIX	:= __user_$/;"	m
USE_SKEW_HEAP	kern/schedule/default_sched.c	/^#define USE_SKEW_HEAP /;"	d	file:
USTAB	kern/mm/memlayout.h	/^#define USTAB /;"	d
USTACKPAGE	kern/mm/memlayout.h	/^#define USTACKPAGE /;"	d
USTACKSIZE	kern/mm/memlayout.h	/^#define USTACKSIZE /;"	d
USTACKTOP	kern/mm/memlayout.h	/^#define USTACKTOP /;"	d
UTEXT	kern/mm/memlayout.h	/^#define UTEXT /;"	d
V	Makefile	/^V       := @$/;"	m
VALID_IDE	kern/driver/ide.c	/^#define VALID_IDE(/;"	d	file:
VM_EXEC	kern/mm/vmm.h	/^#define VM_EXEC /;"	d
VM_READ	kern/mm/vmm.h	/^#define VM_READ /;"	d
VM_STACK	kern/mm/vmm.h	/^#define VM_STACK /;"	d
VM_WRITE	kern/mm/vmm.h	/^#define VM_WRITE /;"	d
VOP_MAGIC	kern/fs/vfs/inode.h	/^#define VOP_MAGIC /;"	d
VPT	kern/mm/memlayout.h	/^#define VPT /;"	d
WHITESPACE	kern/debug/kmonitor.c	/^#define WHITESPACE /;"	d	file:
WHITESPACE	obj/kernel.asm	/^#define WHITESPACE      " \\t\\n\\r"$/;"	d
WHITESPACE	user/sh.c	/^#define WHITESPACE /;"	d	file:
WORD_BITS	kern/fs/sfs/bitmap.c	/^#define WORD_BITS /;"	d	file:
WORD_TYPE	kern/fs/sfs/bitmap.c	/^#define WORD_TYPE /;"	d	file:
WT_CHILD	kern/process/proc.h	/^#define WT_CHILD /;"	d
WT_INTERRUPTED	kern/process/proc.h	/^#define WT_INTERRUPTED /;"	d
WT_KBD	kern/process/proc.h	/^#define WT_KBD /;"	d
WT_KSEM	kern/process/proc.h	/^#define WT_KSEM /;"	d
WT_TIMER	kern/process/proc.h	/^#define WT_TIMER /;"	d
_GNU_SOURCE	tools/mksfs.c	/^#define _GNU_SOURCE$/;"	d	file:
__BOOT_ASM_H__	boot/asm.h	/^#define __BOOT_ASM_H__$/;"	d
__HAVE_ARCH_MEMCPY	libs/x86.h	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/kernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	libs/x86.h	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/kernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	libs/x86.h	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/kernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	libs/x86.h	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/kernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/ls.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sh.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sleep.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	libs/x86.h	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/kernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/ls.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sh.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sleep.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__KERNEL_EXECVE	kern/process/proc.c	/^#define __KERNEL_EXECVE(/;"	d	file:
__KERNEL_EXECVE3	kern/process/proc.c	/^#define __KERNEL_EXECVE3(/;"	d	file:
__KERN_DEBUG_ASSERT_H__	kern/debug/assert.h	/^#define __KERN_DEBUG_ASSERT_H__$/;"	d
__KERN_DEBUG_KDEBUG_H__	kern/debug/kdebug.h	/^#define __KERN_DEBUG_KDEBUG_H__$/;"	d
__KERN_DEBUG_MONITOR_H__	kern/debug/kmonitor.h	/^#define __KERN_DEBUG_MONITOR_H__$/;"	d
__KERN_DEBUG_STAB_H__	kern/debug/stab.h	/^#define __KERN_DEBUG_STAB_H__$/;"	d
__KERN_DRIVER_CLOCK_H__	kern/driver/clock.h	/^#define __KERN_DRIVER_CLOCK_H__$/;"	d
__KERN_DRIVER_CONSOLE_H__	kern/driver/console.h	/^#define __KERN_DRIVER_CONSOLE_H__$/;"	d
__KERN_DRIVER_IDE_H__	kern/driver/ide.h	/^#define __KERN_DRIVER_IDE_H__$/;"	d
__KERN_DRIVER_INTR_H__	kern/driver/intr.h	/^#define __KERN_DRIVER_INTR_H__$/;"	d
__KERN_DRIVER_KBDREG_H__	kern/driver/kbdreg.h	/^#define __KERN_DRIVER_KBDREG_H__$/;"	d
__KERN_DRIVER_PICIRQ_H__	kern/driver/picirq.h	/^#define __KERN_DRIVER_PICIRQ_H__$/;"	d
__KERN_FS_DEVS_DEV_H__	kern/fs/devs/dev.h	/^#define __KERN_FS_DEVS_DEV_H__$/;"	d
__KERN_FS_FILE_H__	kern/fs/file.h	/^#define __KERN_FS_FILE_H__$/;"	d
__KERN_FS_FS_H__	kern/fs/fs.h	/^#define __KERN_FS_FS_H__$/;"	d
__KERN_FS_IOBUF_H__	kern/fs/iobuf.h	/^#define __KERN_FS_IOBUF_H__$/;"	d
__KERN_FS_SFS_BITMAP_H__	kern/fs/sfs/bitmap.h	/^#define __KERN_FS_SFS_BITMAP_H__$/;"	d
__KERN_FS_SFS_SFS_H__	kern/fs/sfs/sfs.h	/^#define __KERN_FS_SFS_SFS_H__$/;"	d
__KERN_FS_SWAP_SWAPFS_H__	kern/fs/swap/swapfs.h	/^#define __KERN_FS_SWAP_SWAPFS_H__$/;"	d
__KERN_FS_SYSFILE_H__	kern/fs/sysfile.h	/^#define __KERN_FS_SYSFILE_H__$/;"	d
__KERN_FS_VFS_INODE_H__	kern/fs/vfs/inode.h	/^#define __KERN_FS_VFS_INODE_H__$/;"	d
__KERN_FS_VFS_VFS_H__	kern/fs/vfs/vfs.h	/^#define __KERN_FS_VFS_VFS_H__$/;"	d
__KERN_MM_DEFAULT_PMM_H__	kern/mm/default_pmm.h	/^#define  __KERN_MM_DEFAULT_PMM_H__$/;"	d
__KERN_MM_MEMLAYOUT_H__	kern/mm/memlayout.h	/^#define __KERN_MM_MEMLAYOUT_H__$/;"	d
__KERN_MM_MMU_H__	kern/mm/mmu.h	/^#define __KERN_MM_MMU_H__$/;"	d
__KERN_MM_PMM_H__	kern/mm/pmm.h	/^#define __KERN_MM_PMM_H__$/;"	d
__KERN_MM_SLAB_H__	kern/mm/kmalloc.h	/^#define __KERN_MM_SLAB_H__$/;"	d
__KERN_MM_SWAP_FIFO_H__	kern/mm/swap_fifo.h	/^#define __KERN_MM_SWAP_FIFO_H__$/;"	d
__KERN_MM_SWAP_H__	kern/mm/swap.h	/^#define __KERN_MM_SWAP_H__$/;"	d
__KERN_MM_VMM_H__	kern/mm/vmm.h	/^#define __KERN_MM_VMM_H__$/;"	d
__KERN_PROCESS_PROC_H__	kern/process/proc.h	/^#define __KERN_PROCESS_PROC_H__$/;"	d
__KERN_SCHEDULE_SCHED_H__	kern/schedule/sched.h	/^#define __KERN_SCHEDULE_SCHED_H__$/;"	d
__KERN_SCHEDULE_SCHED_RR_H__	kern/schedule/default_sched.h	/^#define __KERN_SCHEDULE_SCHED_RR_H__$/;"	d
__KERN_SYNC_MOINTOR_CONDVAR_H__	kern/sync/monitor.h	/^#define __KERN_SYNC_MOINTOR_CONDVAR_H__$/;"	d
__KERN_SYNC_SEM_H__	kern/sync/sem.h	/^#define __KERN_SYNC_SEM_H__$/;"	d
__KERN_SYNC_SYNC_H__	kern/sync/sync.h	/^#define __KERN_SYNC_SYNC_H__$/;"	d
__KERN_SYNC_WAIT_H__	kern/sync/wait.h	/^#define __KERN_SYNC_WAIT_H__$/;"	d
__KERN_SYSCALL_SYSCALL_H__	kern/syscall/syscall.h	/^#define __KERN_SYSCALL_SYSCALL_H__$/;"	d
__KERN_TRAP_TRAP_H__	kern/trap/trap.h	/^#define __KERN_TRAP_TRAP_H__$/;"	d
__LIBS_ATOMIC_H__	libs/atomic.h	/^#define __LIBS_ATOMIC_H__$/;"	d
__LIBS_DEFS_H__	libs/defs.h	/^#define __LIBS_DEFS_H__$/;"	d
__LIBS_DIRENT_H__	libs/dirent.h	/^#define __LIBS_DIRENT_H__$/;"	d
__LIBS_ELF_H__	libs/elf.h	/^#define __LIBS_ELF_H__$/;"	d
__LIBS_ERROR_H__	libs/error.h	/^#define __LIBS_ERROR_H__$/;"	d
__LIBS_LIST_H__	libs/list.h	/^#define __LIBS_LIST_H__$/;"	d
__LIBS_SKEW_HEAP_H__	libs/skew_heap.h	/^#define __LIBS_SKEW_HEAP_H__$/;"	d
__LIBS_STAT_H__	libs/stat.h	/^#define __LIBS_STAT_H__$/;"	d
__LIBS_STDARG_H__	libs/stdarg.h	/^#define __LIBS_STDARG_H__$/;"	d
__LIBS_STDIO_H__	libs/stdio.h	/^#define __LIBS_STDIO_H__$/;"	d
__LIBS_STDLIB_H__	libs/stdlib.h	/^#define __LIBS_STDLIB_H__$/;"	d
__LIBS_STRING_H__	libs/string.h	/^#define __LIBS_STRING_H__$/;"	d
__LIBS_UNISTD_H__	libs/unistd.h	/^#define __LIBS_UNISTD_H__$/;"	d
__LIBS_X86_H__	libs/x86.h	/^#define __LIBS_X86_H__$/;"	d
__USER_LIBS_DIR_H__	user/libs/dir.h	/^#define __USER_LIBS_DIR_H__$/;"	d
__USER_LIBS_FILE_H__	user/libs/file.h	/^#define __USER_LIBS_FILE_H__$/;"	d
__USER_LIBS_LOCK_H__	user/libs/lock.h	/^#define __USER_LIBS_LOCK_H__$/;"	d
__USER_LIBS_SYSCALL_H__	user/libs/syscall.h	/^#define __USER_LIBS_SYSCALL_H__$/;"	d
__USER_LIBS_ULIB_H__	user/libs/ulib.h	/^#define __USER_LIBS_ULIB_H__$/;"	d
__alloc_fs	kern/fs/vfs/vfs.c	/^__alloc_fs(int type) {$/;"	f
__alloc_inode	kern/fs/vfs/inode.c	/^__alloc_inode(int type) {$/;"	f
__alltraps	kern/trap/trapentry.S	/^__alltraps:$/;"	l
__alltraps	obj/kernel.asm	/^__alltraps:$/;"	l
__always_inline	libs/defs.h	/^#define __always_inline /;"	d
__device_info	kern/fs/vfs/inode.h	/^        struct device __device_info;$/;"	m	union:inode::__anon4	typeref:struct:inode::__anon4::device
__down	kern/sync/sem.c	/^static __noinline uint32_t __down(semaphore_t *sem, uint32_t wait_state) {$/;"	f	file:
__error	tools/mksfs.c	/^#define __error(/;"	d	file:
__exec	user/libs/ulib.c	/^__exec(const char *name, const char **argv) {$/;"	f
__exec0	user/libs/ulib.h	/^#define __exec0(/;"	d
__fs_type	kern/fs/vfs/vfs.h	/^#define __fs_type(/;"	d
__fsop_info	kern/fs/vfs/vfs.h	/^#define __fsop_info(/;"	d
__gdt	kern/init/entry.S	/^__gdt:$/;"	l
__gdtdesc	kern/init/entry.S	/^__gdtdesc:$/;"	l
__hash32	tools/mksfs.c	/^__hash32(uint32_t val, unsigned int bits) {$/;"	f	file:
__in_type	kern/fs/vfs/inode.h	/^#define __in_type(/;"	d
__intr_restore	kern/sync/sync.h	/^__intr_restore(bool flag) {$/;"	f
__intr_save	kern/sync/sync.h	/^__intr_save(void) {$/;"	f
__kmalloc	kern/mm/kmalloc.c	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	f	file:
__list_add	libs/list.h	/^__list_add(list_entry_t *elm, list_entry_t *prev, list_entry_t *next) {$/;"	f
__list_del	libs/list.h	/^__list_del(list_entry_t *prev, list_entry_t *next) {$/;"	f
__memcpy	libs/x86.h	/^__memcpy(void *dst, const void *src, size_t n) {$/;"	f
__memmove	libs/x86.h	/^__memmove(void *dst, const void *src, size_t n) {$/;"	f
__memset	libs/x86.h	/^__memset(void *s, char c, size_t n) {$/;"	f
__noinline	libs/defs.h	/^#define __noinline /;"	d
__noreturn	libs/defs.h	/^#define __noreturn /;"	d
__panic	kern/debug/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__panic	user/libs/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__rq	kern/schedule/sched.c	/^static struct run_queue __rq;$/;"	v	typeref:struct:run_queue	file:
__sfs_info	kern/fs/vfs/vfs.h	/^        struct sfs_fs __sfs_info;                   $/;"	m	union:fs::__anon6	typeref:struct:fs::__anon6::sfs_fs
__sfs_inode_info	kern/fs/vfs/inode.h	/^        struct sfs_inode __sfs_inode_info;$/;"	m	union:inode::__anon4	typeref:struct:inode::__anon4::sfs_inode
__slob_free_pages	kern/mm/kmalloc.c	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	f	file:
__slob_get_free_page	kern/mm/kmalloc.c	/^#define __slob_get_free_page(/;"	d	file:
__slob_get_free_page	obj/kernel.asm	/^#define __slob_get_free_page(gfp) __slob_get_free_pages(gfp, 0)$/;"	d
__slob_get_free_pages	kern/mm/kmalloc.c	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	f	file:
__sp_nil	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
__strcmp	libs/x86.h	/^__strcmp(const char *s1, const char *s2) {$/;"	f
__strcpy	libs/x86.h	/^__strcpy(char *dst, const char *src) {$/;"	f
__trapret	kern/trap/trapentry.S	/^__trapret:$/;"	l
__trapret	obj/kernel.asm	/^__trapret:$/;"	l
__up	kern/sync/sem.c	/^static __noinline void __up(semaphore_t *sem, uint32_t wait_state) {$/;"	f	file:
__vectors	kern/trap/vectors.S	/^__vectors:$/;"	l
__vop_info	kern/fs/vfs/inode.h	/^#define __vop_info(/;"	d
__vop_op	kern/fs/vfs/inode.h	/^#define __vop_op(/;"	d
__wait_queue	kern/fs/devs/dev_stdin.c	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	v	file:
__warn	kern/debug/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	user/libs/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
_fifo_check_swap	kern/mm/swap_fifo.c	/^_fifo_check_swap(void) {$/;"	f	file:
_fifo_init	kern/mm/swap_fifo.c	/^_fifo_init(void)$/;"	f	file:
_fifo_init_mm	kern/mm/swap_fifo.c	/^_fifo_init_mm(struct mm_struct *mm)$/;"	f	file:
_fifo_map_swappable	kern/mm/swap_fifo.c	/^_fifo_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f	file:
_fifo_set_unswappable	kern/mm/swap_fifo.c	/^_fifo_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f	file:
_fifo_swap_out_victim	kern/mm/swap_fifo.c	/^_fifo_swap_out_victim(struct mm_struct *mm, struct Page ** ptr_page, int in_tick)$/;"	f	file:
_fifo_tick_event	kern/mm/swap_fifo.c	/^_fifo_tick_event(struct mm_struct *mm)$/;"	f	file:
_start	obj/user/badarg.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/exit.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/forktest.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/matrix.asm	/^_start:$/;"	l
_start	obj/user/pgdir.asm	/^_start:$/;"	l
_start	obj/user/priority.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/sleep.asm	/^_start:$/;"	l
_start	obj/user/sleepkill.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/waitkill.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_start	user/libs/initcode.S	/^_start:$/;"	l
acc	user/priority.c	/^unsigned int acc[TOTAL];$/;"	v
add_dependency	tools/function.mk	/^add_dependency = $(eval $(1): $(2))$/;"	m
add_dir	tools/mksfs.c	/^add_dir(struct sfs_fs *sfs, struct cache_inode *parent, const char *dirname, int curfd, int fd, ino_t real) {$/;"	f	file:
add_entry	tools/mksfs.c	/^add_entry(struct sfs_fs *sfs, struct cache_inode *current, struct cache_inode *file, const char *name) {$/;"	f	file:
add_file	tools/mksfs.c	/^add_file(struct sfs_fs *sfs, struct cache_inode *current, const char *filename, int fd, ino_t real) {$/;"	f	file:
add_files	tools/function.mk	/^add_files = $(eval $(call do_add_files_to_packet,$(1),$(2),$(3),$(4),$(5)))$/;"	m
add_files_cc	Makefile	/^add_files_cc = $(call add_files,$(1),$(CC),$(CFLAGS) $(3),$(2),$(4))$/;"	m
add_files_host	Makefile	/^add_files_host = $(call add_files,$(1),$(HOSTCC),$(HOSTCFLAGS),$(2),$(3))$/;"	m
add_link	tools/mksfs.c	/^add_link(struct sfs_fs *sfs, struct cache_inode *current, const char *filename, ino_t real) {$/;"	f	file:
add_objs	tools/function.mk	/^add_objs = $(eval $(call do_add_objs_to_packet,$(1),$(2)))$/;"	m
add_timer	kern/schedule/sched.c	/^add_timer(timer_t *timer) {$/;"	f
addr	kern/mm/memlayout.h	/^        uint64_t addr;$/;"	m	struct:e820map::__anon9
addr	obj/kernel.asm	/^    addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	kern/driver/console.c	/^static uint16_t addr_6845;$/;"	v	file:
addr_6845	obj/kernel.asm	/^        addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = MONO_BASE;$/;"	d
again	obj/user/sh.asm	/^again:$/;"	l
alen	obj/kernel.asm	/^                alen = resid;$/;"	d
alen	obj/kernel.asm	/^            alen = len;$/;"	d
alen	obj/kernel.asm	/^        alen = len;$/;"	d
alen	obj/kernel.asm	/^    alen = iob->io_resid - resid - 2;$/;"	d
aligned	obj/kernel.asm	/^			aligned = (slob_t *)ALIGN((unsigned long)cur, align);$/;"	d
alloc_cache_block	tools/mksfs.c	/^alloc_cache_block(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
alloc_cache_inode	tools/mksfs.c	/^alloc_cache_inode(struct sfs_fs *sfs, ino_t real, uint32_t ino, uint16_t type) {$/;"	f	file:
alloc_fs	kern/fs/vfs/vfs.h	/^#define alloc_fs(/;"	d
alloc_inode	kern/fs/vfs/inode.h	/^#define alloc_inode(/;"	d
alloc_page	kern/mm/pmm.h	/^#define alloc_page(/;"	d
alloc_pages	kern/mm/pmm.c	/^alloc_pages(size_t n) {$/;"	f
alloc_pages	kern/mm/pmm.h	/^    struct Page *(*alloc_pages)(size_t n);            \/\/ allocate >=n pages, depend on the allocation algorithm $/;"	m	struct:pmm_manager	typeref:struct:pmm_manager::alloc_pages
alloc_proc	kern/process/proc.c	/^alloc_proc(void) {$/;"	f	file:
altflag	obj/kernel.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/badarg.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/exit.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/forktest.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/matrix.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/pgdir.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/priority.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/sleep.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/sleepkill.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/waitkill.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^            altflag = 1;$/;"	d
any_matches	obj/kernel.asm	/^        any_matches = 1;$/;"	d
append_block	tools/mksfs.c	/^append_block(struct sfs_fs *sfs, struct cache_inode *file, size_t size, uint32_t ino, const char *filename) {$/;"	f	file:
arena	kern/mm/kmalloc.c	/^static slob_t arena = { .next = &arena, .units = 1 };$/;"	v	file:
argc	obj/user/sh.asm	/^    argc = 0;$/;"	d
argv_size	obj/kernel.asm	/^    argv_size = 0;$/;"	d
asmfile	Makefile	/^asmfile = $(call cgtype,$(call toobj,$(1)),o,asm)$/;"	m
assert	kern/debug/assert.h	/^#define assert(/;"	d
assert	user/libs/ulib.h	/^#define assert(/;"	d
bad_cleanup_mmap	obj/kernel.asm	/^bad_cleanup_mmap:$/;"	l
bad_dup_cleanup_fs	obj/kernel.asm	/^bad_dup_cleanup_fs:$/;"	l
bad_dup_cleanup_mmap	obj/kernel.asm	/^bad_dup_cleanup_mmap:$/;"	l
bad_elf_cleanup_pgdir	obj/kernel.asm	/^bad_elf_cleanup_pgdir:$/;"	l
bad_files_struct	obj/kernel.asm	/^bad_files_struct:$/;"	l
bad_fork_cleanup_fs	obj/kernel.asm	/^bad_fork_cleanup_fs:  \/\/for LAB8$/;"	l
bad_fork_cleanup_kstack	obj/kernel.asm	/^bad_fork_cleanup_kstack:$/;"	l
bad_fork_cleanup_proc	obj/kernel.asm	/^bad_fork_cleanup_proc:$/;"	l
bad_mm	obj/kernel.asm	/^bad_mm:$/;"	l
bad_pgdir_cleanup_mm	obj/kernel.asm	/^bad_pgdir_cleanup_mm:$/;"	l
barrier	libs/x86.h	/^#define barrier(/;"	d
base	kern/driver/ide.c	/^    unsigned short base;        \/\/ I\/O Base$/;"	m	struct:__anon2	file:
base	obj/kernel.asm	/^            base = 10;$/;"	d
base	obj/kernel.asm	/^            base = 16;$/;"	d
base	obj/kernel.asm	/^            base = 8;$/;"	d
base	obj/kernel.asm	/^        base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 16;$/;"	d
base	obj/user/badarg.asm	/^            base = 8;$/;"	d
base	obj/user/badarg.asm	/^        base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 16;$/;"	d
base	obj/user/badsegment.asm	/^            base = 8;$/;"	d
base	obj/user/badsegment.asm	/^        base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 16;$/;"	d
base	obj/user/divzero.asm	/^            base = 8;$/;"	d
base	obj/user/divzero.asm	/^        base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 16;$/;"	d
base	obj/user/exit.asm	/^            base = 8;$/;"	d
base	obj/user/exit.asm	/^        base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 16;$/;"	d
base	obj/user/faultread.asm	/^            base = 8;$/;"	d
base	obj/user/faultread.asm	/^        base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^        base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 16;$/;"	d
base	obj/user/forktest.asm	/^            base = 8;$/;"	d
base	obj/user/forktest.asm	/^        base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 16;$/;"	d
base	obj/user/forktree.asm	/^            base = 8;$/;"	d
base	obj/user/forktree.asm	/^        base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 16;$/;"	d
base	obj/user/hello.asm	/^            base = 8;$/;"	d
base	obj/user/hello.asm	/^        base = 10;$/;"	d
base	obj/user/ls.asm	/^            base = 10;$/;"	d
base	obj/user/ls.asm	/^            base = 16;$/;"	d
base	obj/user/ls.asm	/^            base = 8;$/;"	d
base	obj/user/ls.asm	/^        base = 10;$/;"	d
base	obj/user/matrix.asm	/^            base = 10;$/;"	d
base	obj/user/matrix.asm	/^            base = 16;$/;"	d
base	obj/user/matrix.asm	/^            base = 8;$/;"	d
base	obj/user/matrix.asm	/^        base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 16;$/;"	d
base	obj/user/pgdir.asm	/^            base = 8;$/;"	d
base	obj/user/pgdir.asm	/^        base = 10;$/;"	d
base	obj/user/priority.asm	/^            base = 10;$/;"	d
base	obj/user/priority.asm	/^            base = 16;$/;"	d
base	obj/user/priority.asm	/^            base = 8;$/;"	d
base	obj/user/priority.asm	/^        base = 10;$/;"	d
base	obj/user/sh.asm	/^            base = 10;$/;"	d
base	obj/user/sh.asm	/^            base = 16;$/;"	d
base	obj/user/sh.asm	/^            base = 8;$/;"	d
base	obj/user/sh.asm	/^        base = 10;$/;"	d
base	obj/user/sleep.asm	/^            base = 10;$/;"	d
base	obj/user/sleep.asm	/^            base = 16;$/;"	d
base	obj/user/sleep.asm	/^            base = 8;$/;"	d
base	obj/user/sleep.asm	/^        base = 10;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 10;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 16;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 8;$/;"	d
base	obj/user/sleepkill.asm	/^        base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 16;$/;"	d
base	obj/user/softint.asm	/^            base = 8;$/;"	d
base	obj/user/softint.asm	/^        base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 16;$/;"	d
base	obj/user/spin.asm	/^            base = 8;$/;"	d
base	obj/user/spin.asm	/^        base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 16;$/;"	d
base	obj/user/testbss.asm	/^            base = 8;$/;"	d
base	obj/user/testbss.asm	/^        base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 16;$/;"	d
base	obj/user/waitkill.asm	/^            base = 8;$/;"	d
base	obj/user/waitkill.asm	/^        base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 16;$/;"	d
base	obj/user/yield.asm	/^            base = 8;$/;"	d
base	obj/user/yield.asm	/^        base = 10;$/;"	d
basic_check	kern/mm/default_pmm.c	/^basic_check(void) {$/;"	f	file:
bb	obj/kernel.asm	/^	bb = slob_alloc(sizeof(bigblock_t), gfp, 0);$/;"	d
begin	obj/kernel.asm	/^                begin = ROUNDUP(begin, PGSIZE);$/;"	d
begin	obj/kernel.asm	/^                begin = freemem;$/;"	d
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
bigblock	kern/mm/kmalloc.c	/^struct bigblock {$/;"	s	file:
bigblock_t	kern/mm/kmalloc.c	/^typedef struct bigblock bigblock_t;$/;"	t	typeref:struct:bigblock	file:
bigblocks	kern/mm/kmalloc.c	/^static bigblock_t *bigblocks;$/;"	v	file:
bigblocks	obj/kernel.asm	/^		bigblocks = bb;$/;"	d
bitmap	kern/fs/sfs/bitmap.c	/^struct bitmap {$/;"	s	file:
bitmap_alloc	kern/fs/sfs/bitmap.c	/^bitmap_alloc(struct bitmap *bitmap, uint32_t *index_store) {$/;"	f
bitmap_create	kern/fs/sfs/bitmap.c	/^bitmap_create(uint32_t nbits) {$/;"	f
bitmap_destroy	kern/fs/sfs/bitmap.c	/^bitmap_destroy(struct bitmap *bitmap) {$/;"	f
bitmap_free	kern/fs/sfs/bitmap.c	/^bitmap_free(struct bitmap *bitmap, uint32_t index) {$/;"	f
bitmap_getdata	kern/fs/sfs/bitmap.c	/^bitmap_getdata(struct bitmap *bitmap, size_t *len_store) {$/;"	f
bitmap_test	kern/fs/sfs/bitmap.c	/^bitmap_test(struct bitmap *bitmap, uint32_t index) {$/;"	f
bitmap_translate	kern/fs/sfs/bitmap.c	/^bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE **word, WORD_TYPE *mask) {$/;"	f	file:
blocks	kern/fs/sfs/sfs.h	/^    uint32_t blocks;                                \/* # of blocks *\/$/;"	m	struct:sfs_disk_inode
blocks	kern/fs/sfs/sfs.h	/^    uint32_t blocks;                                \/* # of blocks in fs *\/$/;"	m	struct:sfs_super
blocks	tools/mksfs.c	/^        uint32_t blocks;$/;"	m	struct:cache_inode::inode	file:
blocks	tools/mksfs.c	/^        uint32_t blocks;$/;"	m	struct:sfs_fs::__anon15	file:
blocks	tools/mksfs.c	/^    struct cache_block *blocks[HASH_LIST_SIZE];$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_block	file:
bool	libs/defs.h	/^typedef int bool;$/;"	t
bool	obj/kernel.asm	/^bool copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable);$/;"	l
bool	obj/kernel.asm	/^bool copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn);$/;"	l
bool	obj/kernel.asm	/^bool copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len);$/;"	l
bool	obj/kernel.asm	/^bool$/;"	l
bool	tools/mksfs.c	/^typedef int bool;$/;"	t	file:
boot_alloc_page	kern/mm/pmm.c	/^boot_alloc_page(void) {$/;"	f	file:
boot_cr3	kern/mm/pmm.c	/^uintptr_t boot_cr3;$/;"	v
boot_cr3	obj/kernel.asm	/^    boot_cr3 = PADDR(boot_pgdir);$/;"	d
boot_map_segment	kern/mm/pmm.c	/^boot_map_segment(pde_t *pgdir, uintptr_t la, size_t size, uintptr_t pa, uint32_t perm) {$/;"	f	file:
boot_pgdir	kern/mm/pmm.c	/^pde_t *boot_pgdir = NULL;$/;"	v
boot_pgdir	obj/kernel.asm	/^    boot_pgdir = boot_alloc_page();$/;"	d
bootblock	Makefile	/^bootblock = $(call totarget,bootblock)$/;"	m
bootfiles	Makefile	/^bootfiles = $(call listf_cc,boot)$/;"	m
bootfs_node	kern/fs/vfs/vfs.c	/^static struct inode *bootfs_node = NULL;$/;"	v	typeref:struct:inode	file:
bootfs_sem	kern/fs/vfs/vfs.c	/^static semaphore_t bootfs_sem;$/;"	v	file:
bootmain	boot/bootmain.c	/^bootmain(void) {$/;"	f
bootstack	kern/init/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/init/entry.S	/^bootstacktop:$/;"	l
breakpoint	libs/x86.h	/^breakpoint(void) {$/;"	f
buf	kern/driver/console.c	/^    uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon1	file:
buf	kern/libs/readline.c	/^static char buf[BUFSIZE];$/;"	v	file:
buf	libs/printfmt.c	/^    char *buf;          \/\/ address pointer points to the first unused memory$/;"	m	struct:sprintbuf	file:
bug	tools/mksfs.c	/^#define bug(/;"	d	file:
build_run	tools/grade.sh	/^build_run() {$/;"	f
c	obj/kernel.asm	/^            c = cons.buf[cons.rpos ++];$/;"	d
c	obj/kernel.asm	/^        c = '\\b';$/;"	d
c	obj/kernel.asm	/^        c = cons_getc();$/;"	d
c	obj/kernel.asm	/^        c = getchar();$/;"	d
c	obj/kernel.asm	/^    c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c0100000	obj/kernel.asm	/^c0100000 <kern_entry>:$/;"	l
c0100000	obj/kernel.asm	/^c0100000:	0f 01 15 18 f0 14 00 	lgdtl  0x14f018$/;"	l
c0100007	obj/kernel.asm	/^c0100007:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c010000c	obj/kernel.asm	/^c010000c:	8e d8                	mov    %eax,%ds$/;"	l
c010000e	obj/kernel.asm	/^c010000e:	8e c0                	mov    %eax,%es$/;"	l
c0100010	obj/kernel.asm	/^c0100010:	8e d0                	mov    %eax,%ss$/;"	l
c0100012	obj/kernel.asm	/^c0100012:	ea 19 00 10 c0 08 00 	ljmp   $0x8,$0xc0100019$/;"	l
c0100019	obj/kernel.asm	/^c0100019 <relocated>:$/;"	l
c0100019	obj/kernel.asm	/^c0100019:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
c010001e	obj/kernel.asm	/^c010001e:	bc 00 f0 14 c0       	mov    $0xc014f000,%esp$/;"	l
c0100023	obj/kernel.asm	/^c0100023:	e8 02 00 00 00       	call   c010002a <kern_init>$/;"	l
c0100028	obj/kernel.asm	/^c0100028 <spin>:$/;"	l
c0100028	obj/kernel.asm	/^c0100028:	eb fe                	jmp    c0100028 <spin>$/;"	l
c010002a	obj/kernel.asm	/^c010002a <kern_init>:$/;"	l
c010002a	obj/kernel.asm	/^c010002a:	55                   	push   %ebp$/;"	l
c010002b	obj/kernel.asm	/^c010002b:	89 e5                	mov    %esp,%ebp$/;"	l
c010002d	obj/kernel.asm	/^c010002d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100030	obj/kernel.asm	/^c0100030:	ba 04 42 15 c0       	mov    $0xc0154204,%edx$/;"	l
c0100035	obj/kernel.asm	/^c0100035:	b8 d0 fe 14 c0       	mov    $0xc014fed0,%eax$/;"	l
c010003a	obj/kernel.asm	/^c010003a:	29 c2                	sub    %eax,%edx$/;"	l
c010003c	obj/kernel.asm	/^c010003c:	89 d0                	mov    %edx,%eax$/;"	l
c010003e	obj/kernel.asm	/^c010003e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100042	obj/kernel.asm	/^c0100042:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0100049	obj/kernel.asm	/^c0100049:	00 $/;"	l
c010004a	obj/kernel.asm	/^c010004a:	c7 04 24 d0 fe 14 c0 	movl   $0xc014fed0,(%esp)$/;"	l
c0100051	obj/kernel.asm	/^c0100051:	e8 1a 55 01 00       	call   c0115570 <memset>$/;"	l
c0100056	obj/kernel.asm	/^c0100056:	e8 7d 17 00 00       	call   c01017d8 <cons_init>$/;"	l
c010005b	obj/kernel.asm	/^c010005b:	c7 45 f4 00 57 11 c0 	movl   $0xc0115700,-0xc(%ebp)$/;"	l
c0100062	obj/kernel.asm	/^c0100062:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100065	obj/kernel.asm	/^c0100065:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100069	obj/kernel.asm	/^c0100069:	c7 04 24 1c 57 11 c0 	movl   $0xc011571c,(%esp)$/;"	l
c0100070	obj/kernel.asm	/^c0100070:	e8 f0 02 00 00       	call   c0100365 <cprintf>$/;"	l
c0100075	obj/kernel.asm	/^c0100075:	e8 f8 09 00 00       	call   c0100a72 <print_kerninfo>$/;"	l
c010007a	obj/kernel.asm	/^c010007a:	e8 a7 00 00 00       	call   c0100126 <grade_backtrace>$/;"	l
c010007f	obj/kernel.asm	/^c010007f:	e8 23 57 00 00       	call   c01057a7 <pmm_init>$/;"	l
c0100084	obj/kernel.asm	/^c0100084:	e8 2d 21 00 00       	call   c01021b6 <pic_init>$/;"	l
c0100089	obj/kernel.asm	/^c0100089:	e8 7f 22 00 00       	call   c010230d <idt_init>$/;"	l
c010008e	obj/kernel.asm	/^c010008e:	e8 5d 86 00 00       	call   c01086f0 <vmm_init>$/;"	l
c0100093	obj/kernel.asm	/^c0100093:	e8 04 e5 00 00       	call   c010e59c <sched_init>$/;"	l
c0100098	obj/kernel.asm	/^c0100098:	e8 a5 dd 00 00       	call   c010de42 <proc_init>$/;"	l
c010009d	obj/kernel.asm	/^c010009d:	e8 67 18 00 00       	call   c0101909 <ide_init>$/;"	l
c01000a2	obj/kernel.asm	/^c01000a2:	e8 cb 6d 00 00       	call   c0106e72 <swap_init>$/;"	l
c01000a7	obj/kernel.asm	/^c01000a7:	e8 ac af 00 00       	call   c010b058 <fs_init>$/;"	l
c01000ac	obj/kernel.asm	/^c01000ac:	e8 dd 0e 00 00       	call   c0100f8e <clock_init>$/;"	l
c01000b1	obj/kernel.asm	/^c01000b1:	e8 6e 20 00 00       	call   c0102124 <intr_enable>$/;"	l
c01000b6	obj/kernel.asm	/^c01000b6:	e8 95 df 00 00       	call   c010e050 <cpu_idle>$/;"	l
c01000bb	obj/kernel.asm	/^c01000bb <grade_backtrace2>:$/;"	l
c01000bb	obj/kernel.asm	/^c01000bb:	55                   	push   %ebp$/;"	l
c01000bc	obj/kernel.asm	/^c01000bc:	89 e5                	mov    %esp,%ebp$/;"	l
c01000be	obj/kernel.asm	/^c01000be:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01000c1	obj/kernel.asm	/^c01000c1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01000c8	obj/kernel.asm	/^c01000c8:	00 $/;"	l
c01000c9	obj/kernel.asm	/^c01000c9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01000d0	obj/kernel.asm	/^c01000d0:	00 $/;"	l
c01000d1	obj/kernel.asm	/^c01000d1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c01000d8	obj/kernel.asm	/^c01000d8:	e8 d9 0d 00 00       	call   c0100eb6 <mon_backtrace>$/;"	l
c01000dd	obj/kernel.asm	/^c01000dd:	c9                   	leave  $/;"	l
c01000de	obj/kernel.asm	/^c01000de:	c3                   	ret    $/;"	l
c01000df	obj/kernel.asm	/^c01000df <grade_backtrace1>:$/;"	l
c01000df	obj/kernel.asm	/^c01000df:	55                   	push   %ebp$/;"	l
c01000e0	obj/kernel.asm	/^c01000e0:	89 e5                	mov    %esp,%ebp$/;"	l
c01000e2	obj/kernel.asm	/^c01000e2:	53                   	push   %ebx$/;"	l
c01000e3	obj/kernel.asm	/^c01000e3:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01000e6	obj/kernel.asm	/^c01000e6:	8d 5d 0c             	lea    0xc(%ebp),%ebx$/;"	l
c01000e9	obj/kernel.asm	/^c01000e9:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c01000ec	obj/kernel.asm	/^c01000ec:	8d 55 08             	lea    0x8(%ebp),%edx$/;"	l
c01000ef	obj/kernel.asm	/^c01000ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01000f2	obj/kernel.asm	/^c01000f2:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c01000f6	obj/kernel.asm	/^c01000f6:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c01000fa	obj/kernel.asm	/^c01000fa:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01000fe	obj/kernel.asm	/^c01000fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100101	obj/kernel.asm	/^c0100101:	e8 b5 ff ff ff       	call   c01000bb <grade_backtrace2>$/;"	l
c0100106	obj/kernel.asm	/^c0100106:	83 c4 14             	add    $0x14,%esp$/;"	l
c0100109	obj/kernel.asm	/^c0100109:	5b                   	pop    %ebx$/;"	l
c010010a	obj/kernel.asm	/^c010010a:	5d                   	pop    %ebp$/;"	l
c010010b	obj/kernel.asm	/^c010010b:	c3                   	ret    $/;"	l
c010010c	obj/kernel.asm	/^c010010c <grade_backtrace0>:$/;"	l
c010010c	obj/kernel.asm	/^c010010c:	55                   	push   %ebp$/;"	l
c010010d	obj/kernel.asm	/^c010010d:	89 e5                	mov    %esp,%ebp$/;"	l
c010010f	obj/kernel.asm	/^c010010f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100112	obj/kernel.asm	/^c0100112:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100115	obj/kernel.asm	/^c0100115:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100119	obj/kernel.asm	/^c0100119:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010011c	obj/kernel.asm	/^c010011c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010011f	obj/kernel.asm	/^c010011f:	e8 bb ff ff ff       	call   c01000df <grade_backtrace1>$/;"	l
c0100124	obj/kernel.asm	/^c0100124:	c9                   	leave  $/;"	l
c0100125	obj/kernel.asm	/^c0100125:	c3                   	ret    $/;"	l
c0100126	obj/kernel.asm	/^c0100126 <grade_backtrace>:$/;"	l
c0100126	obj/kernel.asm	/^c0100126:	55                   	push   %ebp$/;"	l
c0100127	obj/kernel.asm	/^c0100127:	89 e5                	mov    %esp,%ebp$/;"	l
c0100129	obj/kernel.asm	/^c0100129:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010012c	obj/kernel.asm	/^c010012c:	b8 2a 00 10 c0       	mov    $0xc010002a,%eax$/;"	l
c0100131	obj/kernel.asm	/^c0100131:	c7 44 24 08 00 00 ff 	movl   $0xffff0000,0x8(%esp)$/;"	l
c0100138	obj/kernel.asm	/^c0100138:	ff $/;"	l
c0100139	obj/kernel.asm	/^c0100139:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010013d	obj/kernel.asm	/^c010013d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0100144	obj/kernel.asm	/^c0100144:	e8 c3 ff ff ff       	call   c010010c <grade_backtrace0>$/;"	l
c0100149	obj/kernel.asm	/^c0100149:	c9                   	leave  $/;"	l
c010014a	obj/kernel.asm	/^c010014a:	c3                   	ret    $/;"	l
c010014b	obj/kernel.asm	/^c010014b <lab1_print_cur_status>:$/;"	l
c010014b	obj/kernel.asm	/^c010014b:	55                   	push   %ebp$/;"	l
c010014c	obj/kernel.asm	/^c010014c:	89 e5                	mov    %esp,%ebp$/;"	l
c010014e	obj/kernel.asm	/^c010014e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100151	obj/kernel.asm	/^c0100151:	8c 4d f6             	mov    %cs,-0xa(%ebp)$/;"	l
c0100154	obj/kernel.asm	/^c0100154:	8c 5d f4             	mov    %ds,-0xc(%ebp)$/;"	l
c0100157	obj/kernel.asm	/^c0100157:	8c 45 f2             	mov    %es,-0xe(%ebp)$/;"	l
c010015a	obj/kernel.asm	/^c010015a:	8c 55 f0             	mov    %ss,-0x10(%ebp)$/;"	l
c010015d	obj/kernel.asm	/^c010015d:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100161	obj/kernel.asm	/^c0100161:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100164	obj/kernel.asm	/^c0100164:	83 e0 03             	and    $0x3,%eax$/;"	l
c0100167	obj/kernel.asm	/^c0100167:	89 c2                	mov    %eax,%edx$/;"	l
c0100169	obj/kernel.asm	/^c0100169:	a1 e0 fe 14 c0       	mov    0xc014fee0,%eax$/;"	l
c010016e	obj/kernel.asm	/^c010016e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100172	obj/kernel.asm	/^c0100172:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100176	obj/kernel.asm	/^c0100176:	c7 04 24 21 57 11 c0 	movl   $0xc0115721,(%esp)$/;"	l
c010017d	obj/kernel.asm	/^c010017d:	e8 e3 01 00 00       	call   c0100365 <cprintf>$/;"	l
c0100182	obj/kernel.asm	/^c0100182:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100186	obj/kernel.asm	/^c0100186:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0100189	obj/kernel.asm	/^c0100189:	a1 e0 fe 14 c0       	mov    0xc014fee0,%eax$/;"	l
c010018e	obj/kernel.asm	/^c010018e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100192	obj/kernel.asm	/^c0100192:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100196	obj/kernel.asm	/^c0100196:	c7 04 24 2f 57 11 c0 	movl   $0xc011572f,(%esp)$/;"	l
c010019d	obj/kernel.asm	/^c010019d:	e8 c3 01 00 00       	call   c0100365 <cprintf>$/;"	l
c01001a2	obj/kernel.asm	/^c01001a2:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c01001a6	obj/kernel.asm	/^c01001a6:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001a9	obj/kernel.asm	/^c01001a9:	a1 e0 fe 14 c0       	mov    0xc014fee0,%eax$/;"	l
c01001ae	obj/kernel.asm	/^c01001ae:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01001b2	obj/kernel.asm	/^c01001b2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001b6	obj/kernel.asm	/^c01001b6:	c7 04 24 3d 57 11 c0 	movl   $0xc011573d,(%esp)$/;"	l
c01001bd	obj/kernel.asm	/^c01001bd:	e8 a3 01 00 00       	call   c0100365 <cprintf>$/;"	l
c01001c2	obj/kernel.asm	/^c01001c2:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01001c6	obj/kernel.asm	/^c01001c6:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001c9	obj/kernel.asm	/^c01001c9:	a1 e0 fe 14 c0       	mov    0xc014fee0,%eax$/;"	l
c01001ce	obj/kernel.asm	/^c01001ce:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01001d2	obj/kernel.asm	/^c01001d2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001d6	obj/kernel.asm	/^c01001d6:	c7 04 24 4b 57 11 c0 	movl   $0xc011574b,(%esp)$/;"	l
c01001dd	obj/kernel.asm	/^c01001dd:	e8 83 01 00 00       	call   c0100365 <cprintf>$/;"	l
c01001e2	obj/kernel.asm	/^c01001e2:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c01001e6	obj/kernel.asm	/^c01001e6:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001e9	obj/kernel.asm	/^c01001e9:	a1 e0 fe 14 c0       	mov    0xc014fee0,%eax$/;"	l
c01001ee	obj/kernel.asm	/^c01001ee:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01001f2	obj/kernel.asm	/^c01001f2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001f6	obj/kernel.asm	/^c01001f6:	c7 04 24 59 57 11 c0 	movl   $0xc0115759,(%esp)$/;"	l
c01001fd	obj/kernel.asm	/^c01001fd:	e8 63 01 00 00       	call   c0100365 <cprintf>$/;"	l
c0100202	obj/kernel.asm	/^c0100202:	a1 e0 fe 14 c0       	mov    0xc014fee0,%eax$/;"	l
c0100207	obj/kernel.asm	/^c0100207:	83 c0 01             	add    $0x1,%eax$/;"	l
c010020a	obj/kernel.asm	/^c010020a:	a3 e0 fe 14 c0       	mov    %eax,0xc014fee0$/;"	l
c010020f	obj/kernel.asm	/^c010020f:	c9                   	leave  $/;"	l
c0100210	obj/kernel.asm	/^c0100210:	c3                   	ret    $/;"	l
c0100211	obj/kernel.asm	/^c0100211 <lab1_switch_to_user>:$/;"	l
c0100211	obj/kernel.asm	/^c0100211:	55                   	push   %ebp$/;"	l
c0100212	obj/kernel.asm	/^c0100212:	89 e5                	mov    %esp,%ebp$/;"	l
c0100214	obj/kernel.asm	/^c0100214:	5d                   	pop    %ebp$/;"	l
c0100215	obj/kernel.asm	/^c0100215:	c3                   	ret    $/;"	l
c0100216	obj/kernel.asm	/^c0100216 <lab1_switch_to_kernel>:$/;"	l
c0100216	obj/kernel.asm	/^c0100216:	55                   	push   %ebp$/;"	l
c0100217	obj/kernel.asm	/^c0100217:	89 e5                	mov    %esp,%ebp$/;"	l
c0100219	obj/kernel.asm	/^c0100219:	5d                   	pop    %ebp$/;"	l
c010021a	obj/kernel.asm	/^c010021a:	c3                   	ret    $/;"	l
c010021b	obj/kernel.asm	/^c010021b <lab1_switch_test>:$/;"	l
c010021b	obj/kernel.asm	/^c010021b:	55                   	push   %ebp$/;"	l
c010021c	obj/kernel.asm	/^c010021c:	89 e5                	mov    %esp,%ebp$/;"	l
c010021e	obj/kernel.asm	/^c010021e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100221	obj/kernel.asm	/^c0100221:	e8 25 ff ff ff       	call   c010014b <lab1_print_cur_status>$/;"	l
c0100226	obj/kernel.asm	/^c0100226:	c7 04 24 68 57 11 c0 	movl   $0xc0115768,(%esp)$/;"	l
c010022d	obj/kernel.asm	/^c010022d:	e8 33 01 00 00       	call   c0100365 <cprintf>$/;"	l
c0100232	obj/kernel.asm	/^c0100232:	e8 da ff ff ff       	call   c0100211 <lab1_switch_to_user>$/;"	l
c0100237	obj/kernel.asm	/^c0100237:	e8 0f ff ff ff       	call   c010014b <lab1_print_cur_status>$/;"	l
c010023c	obj/kernel.asm	/^c010023c:	c7 04 24 88 57 11 c0 	movl   $0xc0115788,(%esp)$/;"	l
c0100243	obj/kernel.asm	/^c0100243:	e8 1d 01 00 00       	call   c0100365 <cprintf>$/;"	l
c0100248	obj/kernel.asm	/^c0100248:	e8 c9 ff ff ff       	call   c0100216 <lab1_switch_to_kernel>$/;"	l
c010024d	obj/kernel.asm	/^c010024d:	e8 f9 fe ff ff       	call   c010014b <lab1_print_cur_status>$/;"	l
c0100252	obj/kernel.asm	/^c0100252:	c9                   	leave  $/;"	l
c0100253	obj/kernel.asm	/^c0100253:	c3                   	ret    $/;"	l
c0100254	obj/kernel.asm	/^c0100254 <readline>:$/;"	l
c0100254	obj/kernel.asm	/^c0100254:	55                   	push   %ebp$/;"	l
c0100255	obj/kernel.asm	/^c0100255:	89 e5                	mov    %esp,%ebp$/;"	l
c0100257	obj/kernel.asm	/^c0100257:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010025a	obj/kernel.asm	/^c010025a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010025e	obj/kernel.asm	/^c010025e:	74 13                	je     c0100273 <readline+0x1f>$/;"	l
c0100260	obj/kernel.asm	/^c0100260:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100263	obj/kernel.asm	/^c0100263:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100267	obj/kernel.asm	/^c0100267:	c7 04 24 a7 57 11 c0 	movl   $0xc01157a7,(%esp)$/;"	l
c010026e	obj/kernel.asm	/^c010026e:	e8 f2 00 00 00       	call   c0100365 <cprintf>$/;"	l
c0100273	obj/kernel.asm	/^c0100273:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010027a	obj/kernel.asm	/^c010027a:	e8 6e 01 00 00       	call   c01003ed <getchar>$/;"	l
c010027f	obj/kernel.asm	/^c010027f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100282	obj/kernel.asm	/^c0100282:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100286	obj/kernel.asm	/^c0100286:	79 07                	jns    c010028f <readline+0x3b>$/;"	l
c0100288	obj/kernel.asm	/^c0100288:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010028d	obj/kernel.asm	/^c010028d:	eb 79                	jmp    c0100308 <readline+0xb4>$/;"	l
c010028f	obj/kernel.asm	/^c010028f:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c0100293	obj/kernel.asm	/^c0100293:	7e 28                	jle    c01002bd <readline+0x69>$/;"	l
c0100295	obj/kernel.asm	/^c0100295:	81 7d f4 fe 03 00 00 	cmpl   $0x3fe,-0xc(%ebp)$/;"	l
c010029c	obj/kernel.asm	/^c010029c:	7f 1f                	jg     c01002bd <readline+0x69>$/;"	l
c010029e	obj/kernel.asm	/^c010029e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01002a1	obj/kernel.asm	/^c01002a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01002a4	obj/kernel.asm	/^c01002a4:	e8 e2 00 00 00       	call   c010038b <cputchar>$/;"	l
c01002a9	obj/kernel.asm	/^c01002a9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002ac	obj/kernel.asm	/^c01002ac:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01002af	obj/kernel.asm	/^c01002af:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c01002b2	obj/kernel.asm	/^c01002b2:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01002b5	obj/kernel.asm	/^c01002b5:	88 90 00 ff 14 c0    	mov    %dl,-0x3feb0100(%eax)$/;"	l
c01002bb	obj/kernel.asm	/^c01002bb:	eb 46                	jmp    c0100303 <readline+0xaf>$/;"	l
c01002bd	obj/kernel.asm	/^c01002bd:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)$/;"	l
c01002c1	obj/kernel.asm	/^c01002c1:	75 17                	jne    c01002da <readline+0x86>$/;"	l
c01002c3	obj/kernel.asm	/^c01002c3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01002c7	obj/kernel.asm	/^c01002c7:	7e 11                	jle    c01002da <readline+0x86>$/;"	l
c01002c9	obj/kernel.asm	/^c01002c9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01002cc	obj/kernel.asm	/^c01002cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01002cf	obj/kernel.asm	/^c01002cf:	e8 b7 00 00 00       	call   c010038b <cputchar>$/;"	l
c01002d4	obj/kernel.asm	/^c01002d4:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01002d8	obj/kernel.asm	/^c01002d8:	eb 29                	jmp    c0100303 <readline+0xaf>$/;"	l
c01002da	obj/kernel.asm	/^c01002da:	83 7d f0 0a          	cmpl   $0xa,-0x10(%ebp)$/;"	l
c01002de	obj/kernel.asm	/^c01002de:	74 06                	je     c01002e6 <readline+0x92>$/;"	l
c01002e0	obj/kernel.asm	/^c01002e0:	83 7d f0 0d          	cmpl   $0xd,-0x10(%ebp)$/;"	l
c01002e4	obj/kernel.asm	/^c01002e4:	75 1d                	jne    c0100303 <readline+0xaf>$/;"	l
c01002e6	obj/kernel.asm	/^c01002e6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01002e9	obj/kernel.asm	/^c01002e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01002ec	obj/kernel.asm	/^c01002ec:	e8 9a 00 00 00       	call   c010038b <cputchar>$/;"	l
c01002f1	obj/kernel.asm	/^c01002f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002f4	obj/kernel.asm	/^c01002f4:	05 00 ff 14 c0       	add    $0xc014ff00,%eax$/;"	l
c01002f9	obj/kernel.asm	/^c01002f9:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01002fc	obj/kernel.asm	/^c01002fc:	b8 00 ff 14 c0       	mov    $0xc014ff00,%eax$/;"	l
c0100301	obj/kernel.asm	/^c0100301:	eb 05                	jmp    c0100308 <readline+0xb4>$/;"	l
c0100303	obj/kernel.asm	/^c0100303:	e9 72 ff ff ff       	jmp    c010027a <readline+0x26>$/;"	l
c0100308	obj/kernel.asm	/^c0100308:	c9                   	leave  $/;"	l
c0100309	obj/kernel.asm	/^c0100309:	c3                   	ret    $/;"	l
c010030a	obj/kernel.asm	/^c010030a <cputch>:$/;"	l
c010030a	obj/kernel.asm	/^c010030a:	55                   	push   %ebp$/;"	l
c010030b	obj/kernel.asm	/^c010030b:	89 e5                	mov    %esp,%ebp$/;"	l
c010030d	obj/kernel.asm	/^c010030d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100310	obj/kernel.asm	/^c0100310:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100313	obj/kernel.asm	/^c0100313:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100316	obj/kernel.asm	/^c0100316:	e8 e9 14 00 00       	call   c0101804 <cons_putc>$/;"	l
c010031b	obj/kernel.asm	/^c010031b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010031e	obj/kernel.asm	/^c010031e:	8b 00                	mov    (%eax),%eax$/;"	l
c0100320	obj/kernel.asm	/^c0100320:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100323	obj/kernel.asm	/^c0100323:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100326	obj/kernel.asm	/^c0100326:	89 10                	mov    %edx,(%eax)$/;"	l
c0100328	obj/kernel.asm	/^c0100328:	c9                   	leave  $/;"	l
c0100329	obj/kernel.asm	/^c0100329:	c3                   	ret    $/;"	l
c010032a	obj/kernel.asm	/^c010032a <vcprintf>:$/;"	l
c010032a	obj/kernel.asm	/^c010032a:	55                   	push   %ebp$/;"	l
c010032b	obj/kernel.asm	/^c010032b:	89 e5                	mov    %esp,%ebp$/;"	l
c010032d	obj/kernel.asm	/^c010032d:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0100330	obj/kernel.asm	/^c0100330:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100337	obj/kernel.asm	/^c0100337:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010033a	obj/kernel.asm	/^c010033a:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c010033e	obj/kernel.asm	/^c010033e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100341	obj/kernel.asm	/^c0100341:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0100345	obj/kernel.asm	/^c0100345:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0100348	obj/kernel.asm	/^c0100348:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010034c	obj/kernel.asm	/^c010034c:	c7 44 24 04 d9 6a ff 	movl   $0xffff6ad9,0x4(%esp)$/;"	l
c0100353	obj/kernel.asm	/^c0100353:	ff $/;"	l
c0100354	obj/kernel.asm	/^c0100354:	c7 04 24 0a 03 10 c0 	movl   $0xc010030a,(%esp)$/;"	l
c010035b	obj/kernel.asm	/^c010035b:	e8 c0 48 01 00       	call   c0114c20 <vprintfmt>$/;"	l
c0100360	obj/kernel.asm	/^c0100360:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100363	obj/kernel.asm	/^c0100363:	c9                   	leave  $/;"	l
c0100364	obj/kernel.asm	/^c0100364:	c3                   	ret    $/;"	l
c0100365	obj/kernel.asm	/^c0100365 <cprintf>:$/;"	l
c0100365	obj/kernel.asm	/^c0100365:	55                   	push   %ebp$/;"	l
c0100366	obj/kernel.asm	/^c0100366:	89 e5                	mov    %esp,%ebp$/;"	l
c0100368	obj/kernel.asm	/^c0100368:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010036b	obj/kernel.asm	/^c010036b:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
c010036e	obj/kernel.asm	/^c010036e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100371	obj/kernel.asm	/^c0100371:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100374	obj/kernel.asm	/^c0100374:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100378	obj/kernel.asm	/^c0100378:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010037b	obj/kernel.asm	/^c010037b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010037e	obj/kernel.asm	/^c010037e:	e8 a7 ff ff ff       	call   c010032a <vcprintf>$/;"	l
c0100383	obj/kernel.asm	/^c0100383:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100386	obj/kernel.asm	/^c0100386:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100389	obj/kernel.asm	/^c0100389:	c9                   	leave  $/;"	l
c010038a	obj/kernel.asm	/^c010038a:	c3                   	ret    $/;"	l
c010038b	obj/kernel.asm	/^c010038b <cputchar>:$/;"	l
c010038b	obj/kernel.asm	/^c010038b:	55                   	push   %ebp$/;"	l
c010038c	obj/kernel.asm	/^c010038c:	89 e5                	mov    %esp,%ebp$/;"	l
c010038e	obj/kernel.asm	/^c010038e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100391	obj/kernel.asm	/^c0100391:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100394	obj/kernel.asm	/^c0100394:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100397	obj/kernel.asm	/^c0100397:	e8 68 14 00 00       	call   c0101804 <cons_putc>$/;"	l
c010039c	obj/kernel.asm	/^c010039c:	c9                   	leave  $/;"	l
c010039d	obj/kernel.asm	/^c010039d:	c3                   	ret    $/;"	l
c010039e	obj/kernel.asm	/^c010039e <cputs>:$/;"	l
c010039e	obj/kernel.asm	/^c010039e:	55                   	push   %ebp$/;"	l
c010039f	obj/kernel.asm	/^c010039f:	89 e5                	mov    %esp,%ebp$/;"	l
c01003a1	obj/kernel.asm	/^c01003a1:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01003a4	obj/kernel.asm	/^c01003a4:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01003ab	obj/kernel.asm	/^c01003ab:	eb 13                	jmp    c01003c0 <cputs+0x22>$/;"	l
c01003ad	obj/kernel.asm	/^c01003ad:	0f be 45 f7          	movsbl -0x9(%ebp),%eax$/;"	l
c01003b1	obj/kernel.asm	/^c01003b1:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c01003b4	obj/kernel.asm	/^c01003b4:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01003b8	obj/kernel.asm	/^c01003b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01003bb	obj/kernel.asm	/^c01003bb:	e8 4a ff ff ff       	call   c010030a <cputch>$/;"	l
c01003c0	obj/kernel.asm	/^c01003c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01003c3	obj/kernel.asm	/^c01003c3:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01003c6	obj/kernel.asm	/^c01003c6:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c01003c9	obj/kernel.asm	/^c01003c9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01003cc	obj/kernel.asm	/^c01003cc:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c01003cf	obj/kernel.asm	/^c01003cf:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)$/;"	l
c01003d3	obj/kernel.asm	/^c01003d3:	75 d8                	jne    c01003ad <cputs+0xf>$/;"	l
c01003d5	obj/kernel.asm	/^c01003d5:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c01003d8	obj/kernel.asm	/^c01003d8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01003dc	obj/kernel.asm	/^c01003dc:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c01003e3	obj/kernel.asm	/^c01003e3:	e8 22 ff ff ff       	call   c010030a <cputch>$/;"	l
c01003e8	obj/kernel.asm	/^c01003e8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01003eb	obj/kernel.asm	/^c01003eb:	c9                   	leave  $/;"	l
c01003ec	obj/kernel.asm	/^c01003ec:	c3                   	ret    $/;"	l
c01003ed	obj/kernel.asm	/^c01003ed <getchar>:$/;"	l
c01003ed	obj/kernel.asm	/^c01003ed:	55                   	push   %ebp$/;"	l
c01003ee	obj/kernel.asm	/^c01003ee:	89 e5                	mov    %esp,%ebp$/;"	l
c01003f0	obj/kernel.asm	/^c01003f0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01003f3	obj/kernel.asm	/^c01003f3:	e8 48 14 00 00       	call   c0101840 <cons_getc>$/;"	l
c01003f8	obj/kernel.asm	/^c01003f8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01003fb	obj/kernel.asm	/^c01003fb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01003ff	obj/kernel.asm	/^c01003ff:	74 f2                	je     c01003f3 <getchar+0x6>$/;"	l
c0100401	obj/kernel.asm	/^c0100401:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100404	obj/kernel.asm	/^c0100404:	c9                   	leave  $/;"	l
c0100405	obj/kernel.asm	/^c0100405:	c3                   	ret    $/;"	l
c0100406	obj/kernel.asm	/^c0100406 <strdup>:$/;"	l
c0100406	obj/kernel.asm	/^c0100406:	55                   	push   %ebp$/;"	l
c0100407	obj/kernel.asm	/^c0100407:	89 e5                	mov    %esp,%ebp$/;"	l
c0100409	obj/kernel.asm	/^c0100409:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010040c	obj/kernel.asm	/^c010040c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010040f	obj/kernel.asm	/^c010040f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100412	obj/kernel.asm	/^c0100412:	e8 03 4e 01 00       	call   c011521a <strlen>$/;"	l
c0100417	obj/kernel.asm	/^c0100417:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010041a	obj/kernel.asm	/^c010041a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010041d	obj/kernel.asm	/^c010041d:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100420	obj/kernel.asm	/^c0100420:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100423	obj/kernel.asm	/^c0100423:	e8 b7 48 00 00       	call   c0104cdf <kmalloc>$/;"	l
c0100428	obj/kernel.asm	/^c0100428:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010042b	obj/kernel.asm	/^c010042b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010042f	obj/kernel.asm	/^c010042f:	74 24                	je     c0100455 <strdup+0x4f>$/;"	l
c0100431	obj/kernel.asm	/^c0100431:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100434	obj/kernel.asm	/^c0100434:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100438	obj/kernel.asm	/^c0100438:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010043b	obj/kernel.asm	/^c010043b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010043f	obj/kernel.asm	/^c010043f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100442	obj/kernel.asm	/^c0100442:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100445	obj/kernel.asm	/^c0100445:	e8 08 52 01 00       	call   c0115652 <memcpy>$/;"	l
c010044a	obj/kernel.asm	/^c010044a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010044d	obj/kernel.asm	/^c010044d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100450	obj/kernel.asm	/^c0100450:	01 d0                	add    %edx,%eax$/;"	l
c0100452	obj/kernel.asm	/^c0100452:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100455	obj/kernel.asm	/^c0100455:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100458	obj/kernel.asm	/^c0100458:	c9                   	leave  $/;"	l
c0100459	obj/kernel.asm	/^c0100459:	c3                   	ret    $/;"	l
c010045a	obj/kernel.asm	/^c010045a <stradd>:$/;"	l
c010045a	obj/kernel.asm	/^c010045a:	55                   	push   %ebp$/;"	l
c010045b	obj/kernel.asm	/^c010045b:	89 e5                	mov    %esp,%ebp$/;"	l
c010045d	obj/kernel.asm	/^c010045d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100460	obj/kernel.asm	/^c0100460:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100463	obj/kernel.asm	/^c0100463:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100466	obj/kernel.asm	/^c0100466:	e8 af 4d 01 00       	call   c011521a <strlen>$/;"	l
c010046b	obj/kernel.asm	/^c010046b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010046e	obj/kernel.asm	/^c010046e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100471	obj/kernel.asm	/^c0100471:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100474	obj/kernel.asm	/^c0100474:	e8 a1 4d 01 00       	call   c011521a <strlen>$/;"	l
c0100479	obj/kernel.asm	/^c0100479:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010047c	obj/kernel.asm	/^c010047c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010047f	obj/kernel.asm	/^c010047f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100482	obj/kernel.asm	/^c0100482:	01 d0                	add    %edx,%eax$/;"	l
c0100484	obj/kernel.asm	/^c0100484:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100487	obj/kernel.asm	/^c0100487:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010048a	obj/kernel.asm	/^c010048a:	e8 50 48 00 00       	call   c0104cdf <kmalloc>$/;"	l
c010048f	obj/kernel.asm	/^c010048f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0100492	obj/kernel.asm	/^c0100492:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100495	obj/kernel.asm	/^c0100495:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0100498	obj/kernel.asm	/^c0100498:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010049c	obj/kernel.asm	/^c010049c:	74 44                	je     c01004e2 <stradd+0x88>$/;"	l
c010049e	obj/kernel.asm	/^c010049e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01004a1	obj/kernel.asm	/^c01004a1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01004a5	obj/kernel.asm	/^c01004a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01004a8	obj/kernel.asm	/^c01004a8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01004ac	obj/kernel.asm	/^c01004ac:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01004af	obj/kernel.asm	/^c01004af:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01004b2	obj/kernel.asm	/^c01004b2:	e8 9b 51 01 00       	call   c0115652 <memcpy>$/;"	l
c01004b7	obj/kernel.asm	/^c01004b7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01004ba	obj/kernel.asm	/^c01004ba:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c01004bd	obj/kernel.asm	/^c01004bd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01004c0	obj/kernel.asm	/^c01004c0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01004c4	obj/kernel.asm	/^c01004c4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01004c7	obj/kernel.asm	/^c01004c7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01004cb	obj/kernel.asm	/^c01004cb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01004ce	obj/kernel.asm	/^c01004ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01004d1	obj/kernel.asm	/^c01004d1:	e8 7c 51 01 00       	call   c0115652 <memcpy>$/;"	l
c01004d6	obj/kernel.asm	/^c01004d6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01004d9	obj/kernel.asm	/^c01004d9:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c01004dc	obj/kernel.asm	/^c01004dc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01004df	obj/kernel.asm	/^c01004df:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01004e2	obj/kernel.asm	/^c01004e2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01004e5	obj/kernel.asm	/^c01004e5:	c9                   	leave  $/;"	l
c01004e6	obj/kernel.asm	/^c01004e6:	c3                   	ret    $/;"	l
c01004e7	obj/kernel.asm	/^c01004e7 <stab_binsearch>:$/;"	l
c01004e7	obj/kernel.asm	/^c01004e7:	55                   	push   %ebp$/;"	l
c01004e8	obj/kernel.asm	/^c01004e8:	89 e5                	mov    %esp,%ebp$/;"	l
c01004ea	obj/kernel.asm	/^c01004ea:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01004ed	obj/kernel.asm	/^c01004ed:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01004f0	obj/kernel.asm	/^c01004f0:	8b 00                	mov    (%eax),%eax$/;"	l
c01004f2	obj/kernel.asm	/^c01004f2:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01004f5	obj/kernel.asm	/^c01004f5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01004f8	obj/kernel.asm	/^c01004f8:	8b 00                	mov    (%eax),%eax$/;"	l
c01004fa	obj/kernel.asm	/^c01004fa:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01004fd	obj/kernel.asm	/^c01004fd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100504	obj/kernel.asm	/^c0100504:	e9 d2 00 00 00       	jmp    c01005db <stab_binsearch+0xf4>$/;"	l
c0100509	obj/kernel.asm	/^c0100509:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010050c	obj/kernel.asm	/^c010050c:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010050f	obj/kernel.asm	/^c010050f:	01 d0                	add    %edx,%eax$/;"	l
c0100511	obj/kernel.asm	/^c0100511:	89 c2                	mov    %eax,%edx$/;"	l
c0100513	obj/kernel.asm	/^c0100513:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
c0100516	obj/kernel.asm	/^c0100516:	01 d0                	add    %edx,%eax$/;"	l
c0100518	obj/kernel.asm	/^c0100518:	d1 f8                	sar    %eax$/;"	d
c010051a	obj/kernel.asm	/^c010051a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010051d	obj/kernel.asm	/^c010051d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100520	obj/kernel.asm	/^c0100520:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100523	obj/kernel.asm	/^c0100523:	eb 04                	jmp    c0100529 <stab_binsearch+0x42>$/;"	l
c0100525	obj/kernel.asm	/^c0100525:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c0100529	obj/kernel.asm	/^c0100529:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010052c	obj/kernel.asm	/^c010052c:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010052f	obj/kernel.asm	/^c010052f:	7c 1f                	jl     c0100550 <stab_binsearch+0x69>$/;"	l
c0100531	obj/kernel.asm	/^c0100531:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100534	obj/kernel.asm	/^c0100534:	89 d0                	mov    %edx,%eax$/;"	l
c0100536	obj/kernel.asm	/^c0100536:	01 c0                	add    %eax,%eax$/;"	l
c0100538	obj/kernel.asm	/^c0100538:	01 d0                	add    %edx,%eax$/;"	l
c010053a	obj/kernel.asm	/^c010053a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010053d	obj/kernel.asm	/^c010053d:	89 c2                	mov    %eax,%edx$/;"	l
c010053f	obj/kernel.asm	/^c010053f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100542	obj/kernel.asm	/^c0100542:	01 d0                	add    %edx,%eax$/;"	l
c0100544	obj/kernel.asm	/^c0100544:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0100548	obj/kernel.asm	/^c0100548:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010054b	obj/kernel.asm	/^c010054b:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c010054e	obj/kernel.asm	/^c010054e:	75 d5                	jne    c0100525 <stab_binsearch+0x3e>$/;"	l
c0100550	obj/kernel.asm	/^c0100550:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100553	obj/kernel.asm	/^c0100553:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0100556	obj/kernel.asm	/^c0100556:	7d 0b                	jge    c0100563 <stab_binsearch+0x7c>$/;"	l
c0100558	obj/kernel.asm	/^c0100558:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010055b	obj/kernel.asm	/^c010055b:	83 c0 01             	add    $0x1,%eax$/;"	l
c010055e	obj/kernel.asm	/^c010055e:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100561	obj/kernel.asm	/^c0100561:	eb 78                	jmp    c01005db <stab_binsearch+0xf4>$/;"	l
c0100563	obj/kernel.asm	/^c0100563:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010056a	obj/kernel.asm	/^c010056a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010056d	obj/kernel.asm	/^c010056d:	89 d0                	mov    %edx,%eax$/;"	l
c010056f	obj/kernel.asm	/^c010056f:	01 c0                	add    %eax,%eax$/;"	l
c0100571	obj/kernel.asm	/^c0100571:	01 d0                	add    %edx,%eax$/;"	l
c0100573	obj/kernel.asm	/^c0100573:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100576	obj/kernel.asm	/^c0100576:	89 c2                	mov    %eax,%edx$/;"	l
c0100578	obj/kernel.asm	/^c0100578:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010057b	obj/kernel.asm	/^c010057b:	01 d0                	add    %edx,%eax$/;"	l
c010057d	obj/kernel.asm	/^c010057d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100580	obj/kernel.asm	/^c0100580:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100583	obj/kernel.asm	/^c0100583:	73 13                	jae    c0100598 <stab_binsearch+0xb1>$/;"	l
c0100585	obj/kernel.asm	/^c0100585:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100588	obj/kernel.asm	/^c0100588:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010058b	obj/kernel.asm	/^c010058b:	89 10                	mov    %edx,(%eax)$/;"	l
c010058d	obj/kernel.asm	/^c010058d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100590	obj/kernel.asm	/^c0100590:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100593	obj/kernel.asm	/^c0100593:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100596	obj/kernel.asm	/^c0100596:	eb 43                	jmp    c01005db <stab_binsearch+0xf4>$/;"	l
c0100598	obj/kernel.asm	/^c0100598:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010059b	obj/kernel.asm	/^c010059b:	89 d0                	mov    %edx,%eax$/;"	l
c010059d	obj/kernel.asm	/^c010059d:	01 c0                	add    %eax,%eax$/;"	l
c010059f	obj/kernel.asm	/^c010059f:	01 d0                	add    %edx,%eax$/;"	l
c01005a1	obj/kernel.asm	/^c01005a1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01005a4	obj/kernel.asm	/^c01005a4:	89 c2                	mov    %eax,%edx$/;"	l
c01005a6	obj/kernel.asm	/^c01005a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01005a9	obj/kernel.asm	/^c01005a9:	01 d0                	add    %edx,%eax$/;"	l
c01005ab	obj/kernel.asm	/^c01005ab:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01005ae	obj/kernel.asm	/^c01005ae:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c01005b1	obj/kernel.asm	/^c01005b1:	76 16                	jbe    c01005c9 <stab_binsearch+0xe2>$/;"	l
c01005b3	obj/kernel.asm	/^c01005b3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01005b6	obj/kernel.asm	/^c01005b6:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01005b9	obj/kernel.asm	/^c01005b9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01005bc	obj/kernel.asm	/^c01005bc:	89 10                	mov    %edx,(%eax)$/;"	l
c01005be	obj/kernel.asm	/^c01005be:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01005c1	obj/kernel.asm	/^c01005c1:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01005c4	obj/kernel.asm	/^c01005c4:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01005c7	obj/kernel.asm	/^c01005c7:	eb 12                	jmp    c01005db <stab_binsearch+0xf4>$/;"	l
c01005c9	obj/kernel.asm	/^c01005c9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005cc	obj/kernel.asm	/^c01005cc:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01005cf	obj/kernel.asm	/^c01005cf:	89 10                	mov    %edx,(%eax)$/;"	l
c01005d1	obj/kernel.asm	/^c01005d1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01005d4	obj/kernel.asm	/^c01005d4:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01005d7	obj/kernel.asm	/^c01005d7:	83 45 18 01          	addl   $0x1,0x18(%ebp)$/;"	l
c01005db	obj/kernel.asm	/^c01005db:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01005de	obj/kernel.asm	/^c01005de:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c01005e1	obj/kernel.asm	/^c01005e1:	0f 8e 22 ff ff ff    	jle    c0100509 <stab_binsearch+0x22>$/;"	l
c01005e7	obj/kernel.asm	/^c01005e7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01005eb	obj/kernel.asm	/^c01005eb:	75 0f                	jne    c01005fc <stab_binsearch+0x115>$/;"	l
c01005ed	obj/kernel.asm	/^c01005ed:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005f0	obj/kernel.asm	/^c01005f0:	8b 00                	mov    (%eax),%eax$/;"	l
c01005f2	obj/kernel.asm	/^c01005f2:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01005f5	obj/kernel.asm	/^c01005f5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01005f8	obj/kernel.asm	/^c01005f8:	89 10                	mov    %edx,(%eax)$/;"	l
c01005fa	obj/kernel.asm	/^c01005fa:	eb 3f                	jmp    c010063b <stab_binsearch+0x154>$/;"	l
c01005fc	obj/kernel.asm	/^c01005fc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01005ff	obj/kernel.asm	/^c01005ff:	8b 00                	mov    (%eax),%eax$/;"	l
c0100601	obj/kernel.asm	/^c0100601:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100604	obj/kernel.asm	/^c0100604:	eb 04                	jmp    c010060a <stab_binsearch+0x123>$/;"	l
c0100606	obj/kernel.asm	/^c0100606:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)$/;"	l
c010060a	obj/kernel.asm	/^c010060a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010060d	obj/kernel.asm	/^c010060d:	8b 00                	mov    (%eax),%eax$/;"	l
c010060f	obj/kernel.asm	/^c010060f:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0100612	obj/kernel.asm	/^c0100612:	7d 1f                	jge    c0100633 <stab_binsearch+0x14c>$/;"	l
c0100614	obj/kernel.asm	/^c0100614:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100617	obj/kernel.asm	/^c0100617:	89 d0                	mov    %edx,%eax$/;"	l
c0100619	obj/kernel.asm	/^c0100619:	01 c0                	add    %eax,%eax$/;"	l
c010061b	obj/kernel.asm	/^c010061b:	01 d0                	add    %edx,%eax$/;"	l
c010061d	obj/kernel.asm	/^c010061d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100620	obj/kernel.asm	/^c0100620:	89 c2                	mov    %eax,%edx$/;"	l
c0100622	obj/kernel.asm	/^c0100622:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100625	obj/kernel.asm	/^c0100625:	01 d0                	add    %edx,%eax$/;"	l
c0100627	obj/kernel.asm	/^c0100627:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c010062b	obj/kernel.asm	/^c010062b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010062e	obj/kernel.asm	/^c010062e:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0100631	obj/kernel.asm	/^c0100631:	75 d3                	jne    c0100606 <stab_binsearch+0x11f>$/;"	l
c0100633	obj/kernel.asm	/^c0100633:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100636	obj/kernel.asm	/^c0100636:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100639	obj/kernel.asm	/^c0100639:	89 10                	mov    %edx,(%eax)$/;"	l
c010063b	obj/kernel.asm	/^c010063b:	c9                   	leave  $/;"	l
c010063c	obj/kernel.asm	/^c010063c:	c3                   	ret    $/;"	l
c010063d	obj/kernel.asm	/^c010063d <debuginfo_eip>:$/;"	l
c010063d	obj/kernel.asm	/^c010063d:	55                   	push   %ebp$/;"	l
c010063e	obj/kernel.asm	/^c010063e:	89 e5                	mov    %esp,%ebp$/;"	l
c0100640	obj/kernel.asm	/^c0100640:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0100643	obj/kernel.asm	/^c0100643:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100646	obj/kernel.asm	/^c0100646:	c7 00 ac 57 11 c0    	movl   $0xc01157ac,(%eax)$/;"	l
c010064c	obj/kernel.asm	/^c010064c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010064f	obj/kernel.asm	/^c010064f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0100656	obj/kernel.asm	/^c0100656:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100659	obj/kernel.asm	/^c0100659:	c7 40 08 ac 57 11 c0 	movl   $0xc01157ac,0x8(%eax)$/;"	l
c0100660	obj/kernel.asm	/^c0100660:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100663	obj/kernel.asm	/^c0100663:	c7 40 0c 09 00 00 00 	movl   $0x9,0xc(%eax)$/;"	l
c010066a	obj/kernel.asm	/^c010066a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010066d	obj/kernel.asm	/^c010066d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100670	obj/kernel.asm	/^c0100670:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100673	obj/kernel.asm	/^c0100673:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100676	obj/kernel.asm	/^c0100676:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010067d	obj/kernel.asm	/^c010067d:	81 7d 08 ff ff ff bf 	cmpl   $0xbfffffff,0x8(%ebp)$/;"	l
c0100684	obj/kernel.asm	/^c0100684:	76 21                	jbe    c01006a7 <debuginfo_eip+0x6a>$/;"	l
c0100686	obj/kernel.asm	/^c0100686:	c7 45 f4 e0 9d 11 c0 	movl   $0xc0119de0,-0xc(%ebp)$/;"	l
c010068d	obj/kernel.asm	/^c010068d:	c7 45 f0 0c f7 13 c0 	movl   $0xc013f70c,-0x10(%ebp)$/;"	l
c0100694	obj/kernel.asm	/^c0100694:	c7 45 ec 0d f7 13 c0 	movl   $0xc013f70d,-0x14(%ebp)$/;"	l
c010069b	obj/kernel.asm	/^c010069b:	c7 45 e8 72 c0 14 c0 	movl   $0xc014c072,-0x18(%ebp)$/;"	l
c01006a2	obj/kernel.asm	/^c01006a2:	e9 ea 00 00 00       	jmp    c0100791 <debuginfo_eip+0x154>$/;"	l
c01006a7	obj/kernel.asm	/^c01006a7:	c7 45 e4 00 00 20 00 	movl   $0x200000,-0x1c(%ebp)$/;"	l
c01006ae	obj/kernel.asm	/^c01006ae:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c01006b3	obj/kernel.asm	/^c01006b3:	85 c0                	test   %eax,%eax$/;"	l
c01006b5	obj/kernel.asm	/^c01006b5:	74 11                	je     c01006c8 <debuginfo_eip+0x8b>$/;"	l
c01006b7	obj/kernel.asm	/^c01006b7:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c01006bc	obj/kernel.asm	/^c01006bc:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01006bf	obj/kernel.asm	/^c01006bf:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01006c2	obj/kernel.asm	/^c01006c2:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01006c6	obj/kernel.asm	/^c01006c6:	75 0a                	jne    c01006d2 <debuginfo_eip+0x95>$/;"	l
c01006c8	obj/kernel.asm	/^c01006c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01006cd	obj/kernel.asm	/^c01006cd:	e9 9e 03 00 00       	jmp    c0100a70 <debuginfo_eip+0x433>$/;"	l
c01006d2	obj/kernel.asm	/^c01006d2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01006d5	obj/kernel.asm	/^c01006d5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01006dc	obj/kernel.asm	/^c01006dc:	00 $/;"	l
c01006dd	obj/kernel.asm	/^c01006dd:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c01006e4	obj/kernel.asm	/^c01006e4:	00 $/;"	l
c01006e5	obj/kernel.asm	/^c01006e5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01006e9	obj/kernel.asm	/^c01006e9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01006ec	obj/kernel.asm	/^c01006ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01006ef	obj/kernel.asm	/^c01006ef:	e8 5b 89 00 00       	call   c010904f <user_mem_check>$/;"	l
c01006f4	obj/kernel.asm	/^c01006f4:	85 c0                	test   %eax,%eax$/;"	l
c01006f6	obj/kernel.asm	/^c01006f6:	75 0a                	jne    c0100702 <debuginfo_eip+0xc5>$/;"	l
c01006f8	obj/kernel.asm	/^c01006f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01006fd	obj/kernel.asm	/^c01006fd:	e9 6e 03 00 00       	jmp    c0100a70 <debuginfo_eip+0x433>$/;"	l
c0100702	obj/kernel.asm	/^c0100702:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100705	obj/kernel.asm	/^c0100705:	8b 00                	mov    (%eax),%eax$/;"	l
c0100707	obj/kernel.asm	/^c0100707:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010070a	obj/kernel.asm	/^c010070a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010070d	obj/kernel.asm	/^c010070d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0100710	obj/kernel.asm	/^c0100710:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100713	obj/kernel.asm	/^c0100713:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100716	obj/kernel.asm	/^c0100716:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100719	obj/kernel.asm	/^c0100719:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010071c	obj/kernel.asm	/^c010071c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010071f	obj/kernel.asm	/^c010071f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0100722	obj/kernel.asm	/^c0100722:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0100725	obj/kernel.asm	/^c0100725:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100728	obj/kernel.asm	/^c0100728:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010072b	obj/kernel.asm	/^c010072b:	29 c2                	sub    %eax,%edx$/;"	l
c010072d	obj/kernel.asm	/^c010072d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100730	obj/kernel.asm	/^c0100730:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0100737	obj/kernel.asm	/^c0100737:	00 $/;"	l
c0100738	obj/kernel.asm	/^c0100738:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010073c	obj/kernel.asm	/^c010073c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100740	obj/kernel.asm	/^c0100740:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100743	obj/kernel.asm	/^c0100743:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100746	obj/kernel.asm	/^c0100746:	e8 04 89 00 00       	call   c010904f <user_mem_check>$/;"	l
c010074b	obj/kernel.asm	/^c010074b:	85 c0                	test   %eax,%eax$/;"	l
c010074d	obj/kernel.asm	/^c010074d:	75 0a                	jne    c0100759 <debuginfo_eip+0x11c>$/;"	l
c010074f	obj/kernel.asm	/^c010074f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100754	obj/kernel.asm	/^c0100754:	e9 17 03 00 00       	jmp    c0100a70 <debuginfo_eip+0x433>$/;"	l
c0100759	obj/kernel.asm	/^c0100759:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010075c	obj/kernel.asm	/^c010075c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010075f	obj/kernel.asm	/^c010075f:	29 c2                	sub    %eax,%edx$/;"	l
c0100761	obj/kernel.asm	/^c0100761:	89 d0                	mov    %edx,%eax$/;"	l
c0100763	obj/kernel.asm	/^c0100763:	89 c2                	mov    %eax,%edx$/;"	l
c0100765	obj/kernel.asm	/^c0100765:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100768	obj/kernel.asm	/^c0100768:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010076f	obj/kernel.asm	/^c010076f:	00 $/;"	l
c0100770	obj/kernel.asm	/^c0100770:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100774	obj/kernel.asm	/^c0100774:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100778	obj/kernel.asm	/^c0100778:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010077b	obj/kernel.asm	/^c010077b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010077e	obj/kernel.asm	/^c010077e:	e8 cc 88 00 00       	call   c010904f <user_mem_check>$/;"	l
c0100783	obj/kernel.asm	/^c0100783:	85 c0                	test   %eax,%eax$/;"	l
c0100785	obj/kernel.asm	/^c0100785:	75 0a                	jne    c0100791 <debuginfo_eip+0x154>$/;"	l
c0100787	obj/kernel.asm	/^c0100787:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010078c	obj/kernel.asm	/^c010078c:	e9 df 02 00 00       	jmp    c0100a70 <debuginfo_eip+0x433>$/;"	l
c0100791	obj/kernel.asm	/^c0100791:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100794	obj/kernel.asm	/^c0100794:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0100797	obj/kernel.asm	/^c0100797:	76 0d                	jbe    c01007a6 <debuginfo_eip+0x169>$/;"	l
c0100799	obj/kernel.asm	/^c0100799:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010079c	obj/kernel.asm	/^c010079c:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010079f	obj/kernel.asm	/^c010079f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01007a2	obj/kernel.asm	/^c01007a2:	84 c0                	test   %al,%al$/;"	l
c01007a4	obj/kernel.asm	/^c01007a4:	74 0a                	je     c01007b0 <debuginfo_eip+0x173>$/;"	l
c01007a6	obj/kernel.asm	/^c01007a6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01007ab	obj/kernel.asm	/^c01007ab:	e9 c0 02 00 00       	jmp    c0100a70 <debuginfo_eip+0x433>$/;"	l
c01007b0	obj/kernel.asm	/^c01007b0:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01007b7	obj/kernel.asm	/^c01007b7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01007ba	obj/kernel.asm	/^c01007ba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007bd	obj/kernel.asm	/^c01007bd:	29 c2                	sub    %eax,%edx$/;"	l
c01007bf	obj/kernel.asm	/^c01007bf:	89 d0                	mov    %edx,%eax$/;"	l
c01007c1	obj/kernel.asm	/^c01007c1:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c01007c4	obj/kernel.asm	/^c01007c4:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
c01007ca	obj/kernel.asm	/^c01007ca:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01007cd	obj/kernel.asm	/^c01007cd:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01007d0	obj/kernel.asm	/^c01007d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01007d3	obj/kernel.asm	/^c01007d3:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c01007d7	obj/kernel.asm	/^c01007d7:	c7 44 24 0c 64 00 00 	movl   $0x64,0xc(%esp)$/;"	l
c01007de	obj/kernel.asm	/^c01007de:	00 $/;"	l
c01007df	obj/kernel.asm	/^c01007df:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c01007e2	obj/kernel.asm	/^c01007e2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01007e6	obj/kernel.asm	/^c01007e6:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c01007e9	obj/kernel.asm	/^c01007e9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01007ed	obj/kernel.asm	/^c01007ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007f0	obj/kernel.asm	/^c01007f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01007f3	obj/kernel.asm	/^c01007f3:	e8 ef fc ff ff       	call   c01004e7 <stab_binsearch>$/;"	l
c01007f8	obj/kernel.asm	/^c01007f8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01007fb	obj/kernel.asm	/^c01007fb:	85 c0                	test   %eax,%eax$/;"	l
c01007fd	obj/kernel.asm	/^c01007fd:	75 0a                	jne    c0100809 <debuginfo_eip+0x1cc>$/;"	l
c01007ff	obj/kernel.asm	/^c01007ff:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100804	obj/kernel.asm	/^c0100804:	e9 67 02 00 00       	jmp    c0100a70 <debuginfo_eip+0x433>$/;"	l
c0100809	obj/kernel.asm	/^c0100809:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010080c	obj/kernel.asm	/^c010080c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010080f	obj/kernel.asm	/^c010080f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100812	obj/kernel.asm	/^c0100812:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0100815	obj/kernel.asm	/^c0100815:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100818	obj/kernel.asm	/^c0100818:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c010081c	obj/kernel.asm	/^c010081c:	c7 44 24 0c 24 00 00 	movl   $0x24,0xc(%esp)$/;"	l
c0100823	obj/kernel.asm	/^c0100823:	00 $/;"	l
c0100824	obj/kernel.asm	/^c0100824:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c0100827	obj/kernel.asm	/^c0100827:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010082b	obj/kernel.asm	/^c010082b:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010082e	obj/kernel.asm	/^c010082e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100832	obj/kernel.asm	/^c0100832:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100835	obj/kernel.asm	/^c0100835:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100838	obj/kernel.asm	/^c0100838:	e8 aa fc ff ff       	call   c01004e7 <stab_binsearch>$/;"	l
c010083d	obj/kernel.asm	/^c010083d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0100840	obj/kernel.asm	/^c0100840:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100843	obj/kernel.asm	/^c0100843:	39 c2                	cmp    %eax,%edx$/;"	l
c0100845	obj/kernel.asm	/^c0100845:	7f 7c                	jg     c01008c3 <debuginfo_eip+0x286>$/;"	l
c0100847	obj/kernel.asm	/^c0100847:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010084a	obj/kernel.asm	/^c010084a:	89 c2                	mov    %eax,%edx$/;"	l
c010084c	obj/kernel.asm	/^c010084c:	89 d0                	mov    %edx,%eax$/;"	l
c010084e	obj/kernel.asm	/^c010084e:	01 c0                	add    %eax,%eax$/;"	l
c0100850	obj/kernel.asm	/^c0100850:	01 d0                	add    %edx,%eax$/;"	l
c0100852	obj/kernel.asm	/^c0100852:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100855	obj/kernel.asm	/^c0100855:	89 c2                	mov    %eax,%edx$/;"	l
c0100857	obj/kernel.asm	/^c0100857:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010085a	obj/kernel.asm	/^c010085a:	01 d0                	add    %edx,%eax$/;"	l
c010085c	obj/kernel.asm	/^c010085c:	8b 10                	mov    (%eax),%edx$/;"	l
c010085e	obj/kernel.asm	/^c010085e:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c0100861	obj/kernel.asm	/^c0100861:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100864	obj/kernel.asm	/^c0100864:	29 c1                	sub    %eax,%ecx$/;"	l
c0100866	obj/kernel.asm	/^c0100866:	89 c8                	mov    %ecx,%eax$/;"	l
c0100868	obj/kernel.asm	/^c0100868:	39 c2                	cmp    %eax,%edx$/;"	l
c010086a	obj/kernel.asm	/^c010086a:	73 22                	jae    c010088e <debuginfo_eip+0x251>$/;"	l
c010086c	obj/kernel.asm	/^c010086c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010086f	obj/kernel.asm	/^c010086f:	89 c2                	mov    %eax,%edx$/;"	l
c0100871	obj/kernel.asm	/^c0100871:	89 d0                	mov    %edx,%eax$/;"	l
c0100873	obj/kernel.asm	/^c0100873:	01 c0                	add    %eax,%eax$/;"	l
c0100875	obj/kernel.asm	/^c0100875:	01 d0                	add    %edx,%eax$/;"	l
c0100877	obj/kernel.asm	/^c0100877:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010087a	obj/kernel.asm	/^c010087a:	89 c2                	mov    %eax,%edx$/;"	l
c010087c	obj/kernel.asm	/^c010087c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010087f	obj/kernel.asm	/^c010087f:	01 d0                	add    %edx,%eax$/;"	l
c0100881	obj/kernel.asm	/^c0100881:	8b 10                	mov    (%eax),%edx$/;"	l
c0100883	obj/kernel.asm	/^c0100883:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100886	obj/kernel.asm	/^c0100886:	01 c2                	add    %eax,%edx$/;"	l
c0100888	obj/kernel.asm	/^c0100888:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010088b	obj/kernel.asm	/^c010088b:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010088e	obj/kernel.asm	/^c010088e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100891	obj/kernel.asm	/^c0100891:	89 c2                	mov    %eax,%edx$/;"	l
c0100893	obj/kernel.asm	/^c0100893:	89 d0                	mov    %edx,%eax$/;"	l
c0100895	obj/kernel.asm	/^c0100895:	01 c0                	add    %eax,%eax$/;"	l
c0100897	obj/kernel.asm	/^c0100897:	01 d0                	add    %edx,%eax$/;"	l
c0100899	obj/kernel.asm	/^c0100899:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010089c	obj/kernel.asm	/^c010089c:	89 c2                	mov    %eax,%edx$/;"	l
c010089e	obj/kernel.asm	/^c010089e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008a1	obj/kernel.asm	/^c01008a1:	01 d0                	add    %edx,%eax$/;"	l
c01008a3	obj/kernel.asm	/^c01008a3:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01008a6	obj/kernel.asm	/^c01008a6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008a9	obj/kernel.asm	/^c01008a9:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01008ac	obj/kernel.asm	/^c01008ac:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008af	obj/kernel.asm	/^c01008af:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01008b2	obj/kernel.asm	/^c01008b2:	29 45 08             	sub    %eax,0x8(%ebp)$/;"	l
c01008b5	obj/kernel.asm	/^c01008b5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01008b8	obj/kernel.asm	/^c01008b8:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01008bb	obj/kernel.asm	/^c01008bb:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01008be	obj/kernel.asm	/^c01008be:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01008c1	obj/kernel.asm	/^c01008c1:	eb 15                	jmp    c01008d8 <debuginfo_eip+0x29b>$/;"	l
c01008c3	obj/kernel.asm	/^c01008c3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008c6	obj/kernel.asm	/^c01008c6:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01008c9	obj/kernel.asm	/^c01008c9:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01008cc	obj/kernel.asm	/^c01008cc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01008cf	obj/kernel.asm	/^c01008cf:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01008d2	obj/kernel.asm	/^c01008d2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01008d5	obj/kernel.asm	/^c01008d5:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01008d8	obj/kernel.asm	/^c01008d8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008db	obj/kernel.asm	/^c01008db:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01008de	obj/kernel.asm	/^c01008de:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
c01008e5	obj/kernel.asm	/^c01008e5:	00 $/;"	l
c01008e6	obj/kernel.asm	/^c01008e6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01008e9	obj/kernel.asm	/^c01008e9:	e8 f6 4a 01 00       	call   c01153e4 <strfind>$/;"	l
c01008ee	obj/kernel.asm	/^c01008ee:	89 c2                	mov    %eax,%edx$/;"	l
c01008f0	obj/kernel.asm	/^c01008f0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008f3	obj/kernel.asm	/^c01008f3:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01008f6	obj/kernel.asm	/^c01008f6:	29 c2                	sub    %eax,%edx$/;"	l
c01008f8	obj/kernel.asm	/^c01008f8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008fb	obj/kernel.asm	/^c01008fb:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01008fe	obj/kernel.asm	/^c01008fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100901	obj/kernel.asm	/^c0100901:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0100905	obj/kernel.asm	/^c0100905:	c7 44 24 0c 44 00 00 	movl   $0x44,0xc(%esp)$/;"	l
c010090c	obj/kernel.asm	/^c010090c:	00 $/;"	l
c010090d	obj/kernel.asm	/^c010090d:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c0100910	obj/kernel.asm	/^c0100910:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100914	obj/kernel.asm	/^c0100914:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c0100917	obj/kernel.asm	/^c0100917:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010091b	obj/kernel.asm	/^c010091b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010091e	obj/kernel.asm	/^c010091e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100921	obj/kernel.asm	/^c0100921:	e8 c1 fb ff ff       	call   c01004e7 <stab_binsearch>$/;"	l
c0100926	obj/kernel.asm	/^c0100926:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0100929	obj/kernel.asm	/^c0100929:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010092c	obj/kernel.asm	/^c010092c:	39 c2                	cmp    %eax,%edx$/;"	l
c010092e	obj/kernel.asm	/^c010092e:	7f 24                	jg     c0100954 <debuginfo_eip+0x317>$/;"	l
c0100930	obj/kernel.asm	/^c0100930:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100933	obj/kernel.asm	/^c0100933:	89 c2                	mov    %eax,%edx$/;"	l
c0100935	obj/kernel.asm	/^c0100935:	89 d0                	mov    %edx,%eax$/;"	l
c0100937	obj/kernel.asm	/^c0100937:	01 c0                	add    %eax,%eax$/;"	l
c0100939	obj/kernel.asm	/^c0100939:	01 d0                	add    %edx,%eax$/;"	l
c010093b	obj/kernel.asm	/^c010093b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010093e	obj/kernel.asm	/^c010093e:	89 c2                	mov    %eax,%edx$/;"	l
c0100940	obj/kernel.asm	/^c0100940:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100943	obj/kernel.asm	/^c0100943:	01 d0                	add    %edx,%eax$/;"	l
c0100945	obj/kernel.asm	/^c0100945:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c0100949	obj/kernel.asm	/^c0100949:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c010094c	obj/kernel.asm	/^c010094c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010094f	obj/kernel.asm	/^c010094f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0100952	obj/kernel.asm	/^c0100952:	eb 13                	jmp    c0100967 <debuginfo_eip+0x32a>$/;"	l
c0100954	obj/kernel.asm	/^c0100954:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100959	obj/kernel.asm	/^c0100959:	e9 12 01 00 00       	jmp    c0100a70 <debuginfo_eip+0x433>$/;"	l
c010095e	obj/kernel.asm	/^c010095e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100961	obj/kernel.asm	/^c0100961:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100964	obj/kernel.asm	/^c0100964:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100967	obj/kernel.asm	/^c0100967:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010096a	obj/kernel.asm	/^c010096a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010096d	obj/kernel.asm	/^c010096d:	39 c2                	cmp    %eax,%edx$/;"	l
c010096f	obj/kernel.asm	/^c010096f:	7c 56                	jl     c01009c7 <debuginfo_eip+0x38a>$/;"	l
c0100971	obj/kernel.asm	/^c0100971:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100974	obj/kernel.asm	/^c0100974:	89 c2                	mov    %eax,%edx$/;"	l
c0100976	obj/kernel.asm	/^c0100976:	89 d0                	mov    %edx,%eax$/;"	l
c0100978	obj/kernel.asm	/^c0100978:	01 c0                	add    %eax,%eax$/;"	l
c010097a	obj/kernel.asm	/^c010097a:	01 d0                	add    %edx,%eax$/;"	l
c010097c	obj/kernel.asm	/^c010097c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010097f	obj/kernel.asm	/^c010097f:	89 c2                	mov    %eax,%edx$/;"	l
c0100981	obj/kernel.asm	/^c0100981:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100984	obj/kernel.asm	/^c0100984:	01 d0                	add    %edx,%eax$/;"	l
c0100986	obj/kernel.asm	/^c0100986:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c010098a	obj/kernel.asm	/^c010098a:	3c 84                	cmp    $0x84,%al$/;"	l
c010098c	obj/kernel.asm	/^c010098c:	74 39                	je     c01009c7 <debuginfo_eip+0x38a>$/;"	l
c010098e	obj/kernel.asm	/^c010098e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100991	obj/kernel.asm	/^c0100991:	89 c2                	mov    %eax,%edx$/;"	l
c0100993	obj/kernel.asm	/^c0100993:	89 d0                	mov    %edx,%eax$/;"	l
c0100995	obj/kernel.asm	/^c0100995:	01 c0                	add    %eax,%eax$/;"	l
c0100997	obj/kernel.asm	/^c0100997:	01 d0                	add    %edx,%eax$/;"	l
c0100999	obj/kernel.asm	/^c0100999:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010099c	obj/kernel.asm	/^c010099c:	89 c2                	mov    %eax,%edx$/;"	l
c010099e	obj/kernel.asm	/^c010099e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009a1	obj/kernel.asm	/^c01009a1:	01 d0                	add    %edx,%eax$/;"	l
c01009a3	obj/kernel.asm	/^c01009a3:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01009a7	obj/kernel.asm	/^c01009a7:	3c 64                	cmp    $0x64,%al$/;"	l
c01009a9	obj/kernel.asm	/^c01009a9:	75 b3                	jne    c010095e <debuginfo_eip+0x321>$/;"	l
c01009ab	obj/kernel.asm	/^c01009ab:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009ae	obj/kernel.asm	/^c01009ae:	89 c2                	mov    %eax,%edx$/;"	l
c01009b0	obj/kernel.asm	/^c01009b0:	89 d0                	mov    %edx,%eax$/;"	l
c01009b2	obj/kernel.asm	/^c01009b2:	01 c0                	add    %eax,%eax$/;"	l
c01009b4	obj/kernel.asm	/^c01009b4:	01 d0                	add    %edx,%eax$/;"	l
c01009b6	obj/kernel.asm	/^c01009b6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01009b9	obj/kernel.asm	/^c01009b9:	89 c2                	mov    %eax,%edx$/;"	l
c01009bb	obj/kernel.asm	/^c01009bb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009be	obj/kernel.asm	/^c01009be:	01 d0                	add    %edx,%eax$/;"	l
c01009c0	obj/kernel.asm	/^c01009c0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01009c3	obj/kernel.asm	/^c01009c3:	85 c0                	test   %eax,%eax$/;"	l
c01009c5	obj/kernel.asm	/^c01009c5:	74 97                	je     c010095e <debuginfo_eip+0x321>$/;"	l
c01009c7	obj/kernel.asm	/^c01009c7:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01009ca	obj/kernel.asm	/^c01009ca:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01009cd	obj/kernel.asm	/^c01009cd:	39 c2                	cmp    %eax,%edx$/;"	l
c01009cf	obj/kernel.asm	/^c01009cf:	7c 46                	jl     c0100a17 <debuginfo_eip+0x3da>$/;"	l
c01009d1	obj/kernel.asm	/^c01009d1:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009d4	obj/kernel.asm	/^c01009d4:	89 c2                	mov    %eax,%edx$/;"	l
c01009d6	obj/kernel.asm	/^c01009d6:	89 d0                	mov    %edx,%eax$/;"	l
c01009d8	obj/kernel.asm	/^c01009d8:	01 c0                	add    %eax,%eax$/;"	l
c01009da	obj/kernel.asm	/^c01009da:	01 d0                	add    %edx,%eax$/;"	l
c01009dc	obj/kernel.asm	/^c01009dc:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01009df	obj/kernel.asm	/^c01009df:	89 c2                	mov    %eax,%edx$/;"	l
c01009e1	obj/kernel.asm	/^c01009e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009e4	obj/kernel.asm	/^c01009e4:	01 d0                	add    %edx,%eax$/;"	l
c01009e6	obj/kernel.asm	/^c01009e6:	8b 10                	mov    (%eax),%edx$/;"	l
c01009e8	obj/kernel.asm	/^c01009e8:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c01009eb	obj/kernel.asm	/^c01009eb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01009ee	obj/kernel.asm	/^c01009ee:	29 c1                	sub    %eax,%ecx$/;"	l
c01009f0	obj/kernel.asm	/^c01009f0:	89 c8                	mov    %ecx,%eax$/;"	l
c01009f2	obj/kernel.asm	/^c01009f2:	39 c2                	cmp    %eax,%edx$/;"	l
c01009f4	obj/kernel.asm	/^c01009f4:	73 21                	jae    c0100a17 <debuginfo_eip+0x3da>$/;"	l
c01009f6	obj/kernel.asm	/^c01009f6:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009f9	obj/kernel.asm	/^c01009f9:	89 c2                	mov    %eax,%edx$/;"	l
c01009fb	obj/kernel.asm	/^c01009fb:	89 d0                	mov    %edx,%eax$/;"	l
c01009fd	obj/kernel.asm	/^c01009fd:	01 c0                	add    %eax,%eax$/;"	l
c01009ff	obj/kernel.asm	/^c01009ff:	01 d0                	add    %edx,%eax$/;"	l
c0100a01	obj/kernel.asm	/^c0100a01:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100a04	obj/kernel.asm	/^c0100a04:	89 c2                	mov    %eax,%edx$/;"	l
c0100a06	obj/kernel.asm	/^c0100a06:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a09	obj/kernel.asm	/^c0100a09:	01 d0                	add    %edx,%eax$/;"	l
c0100a0b	obj/kernel.asm	/^c0100a0b:	8b 10                	mov    (%eax),%edx$/;"	l
c0100a0d	obj/kernel.asm	/^c0100a0d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100a10	obj/kernel.asm	/^c0100a10:	01 c2                	add    %eax,%edx$/;"	l
c0100a12	obj/kernel.asm	/^c0100a12:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a15	obj/kernel.asm	/^c0100a15:	89 10                	mov    %edx,(%eax)$/;"	l
c0100a17	obj/kernel.asm	/^c0100a17:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0100a1a	obj/kernel.asm	/^c0100a1a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100a1d	obj/kernel.asm	/^c0100a1d:	39 c2                	cmp    %eax,%edx$/;"	l
c0100a1f	obj/kernel.asm	/^c0100a1f:	7d 4a                	jge    c0100a6b <debuginfo_eip+0x42e>$/;"	l
c0100a21	obj/kernel.asm	/^c0100a21:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100a24	obj/kernel.asm	/^c0100a24:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100a27	obj/kernel.asm	/^c0100a27:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100a2a	obj/kernel.asm	/^c0100a2a:	eb 18                	jmp    c0100a44 <debuginfo_eip+0x407>$/;"	l
c0100a2c	obj/kernel.asm	/^c0100a2c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a2f	obj/kernel.asm	/^c0100a2f:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0100a32	obj/kernel.asm	/^c0100a32:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100a35	obj/kernel.asm	/^c0100a35:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a38	obj/kernel.asm	/^c0100a38:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c0100a3b	obj/kernel.asm	/^c0100a3b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100a3e	obj/kernel.asm	/^c0100a3e:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100a41	obj/kernel.asm	/^c0100a41:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100a44	obj/kernel.asm	/^c0100a44:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0100a47	obj/kernel.asm	/^c0100a47:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100a4a	obj/kernel.asm	/^c0100a4a:	39 c2                	cmp    %eax,%edx$/;"	l
c0100a4c	obj/kernel.asm	/^c0100a4c:	7d 1d                	jge    c0100a6b <debuginfo_eip+0x42e>$/;"	l
c0100a4e	obj/kernel.asm	/^c0100a4e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100a51	obj/kernel.asm	/^c0100a51:	89 c2                	mov    %eax,%edx$/;"	l
c0100a53	obj/kernel.asm	/^c0100a53:	89 d0                	mov    %edx,%eax$/;"	l
c0100a55	obj/kernel.asm	/^c0100a55:	01 c0                	add    %eax,%eax$/;"	l
c0100a57	obj/kernel.asm	/^c0100a57:	01 d0                	add    %edx,%eax$/;"	l
c0100a59	obj/kernel.asm	/^c0100a59:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100a5c	obj/kernel.asm	/^c0100a5c:	89 c2                	mov    %eax,%edx$/;"	l
c0100a5e	obj/kernel.asm	/^c0100a5e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a61	obj/kernel.asm	/^c0100a61:	01 d0                	add    %edx,%eax$/;"	l
c0100a63	obj/kernel.asm	/^c0100a63:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0100a67	obj/kernel.asm	/^c0100a67:	3c a0                	cmp    $0xa0,%al$/;"	l
c0100a69	obj/kernel.asm	/^c0100a69:	74 c1                	je     c0100a2c <debuginfo_eip+0x3ef>$/;"	l
c0100a6b	obj/kernel.asm	/^c0100a6b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100a70	obj/kernel.asm	/^c0100a70:	c9                   	leave  $/;"	l
c0100a71	obj/kernel.asm	/^c0100a71:	c3                   	ret    $/;"	l
c0100a72	obj/kernel.asm	/^c0100a72 <print_kerninfo>:$/;"	l
c0100a72	obj/kernel.asm	/^c0100a72:	55                   	push   %ebp$/;"	l
c0100a73	obj/kernel.asm	/^c0100a73:	89 e5                	mov    %esp,%ebp$/;"	l
c0100a75	obj/kernel.asm	/^c0100a75:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100a78	obj/kernel.asm	/^c0100a78:	c7 04 24 b6 57 11 c0 	movl   $0xc01157b6,(%esp)$/;"	l
c0100a7f	obj/kernel.asm	/^c0100a7f:	e8 e1 f8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100a84	obj/kernel.asm	/^c0100a84:	c7 44 24 04 2a 00 10 	movl   $0xc010002a,0x4(%esp)$/;"	l
c0100a8b	obj/kernel.asm	/^c0100a8b:	c0 $/;"	l
c0100a8c	obj/kernel.asm	/^c0100a8c:	c7 04 24 cf 57 11 c0 	movl   $0xc01157cf,(%esp)$/;"	l
c0100a93	obj/kernel.asm	/^c0100a93:	e8 cd f8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100a98	obj/kernel.asm	/^c0100a98:	c7 44 24 04 f9 56 11 	movl   $0xc01156f9,0x4(%esp)$/;"	l
c0100a9f	obj/kernel.asm	/^c0100a9f:	c0 $/;"	l
c0100aa0	obj/kernel.asm	/^c0100aa0:	c7 04 24 e7 57 11 c0 	movl   $0xc01157e7,(%esp)$/;"	l
c0100aa7	obj/kernel.asm	/^c0100aa7:	e8 b9 f8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100aac	obj/kernel.asm	/^c0100aac:	c7 44 24 04 d0 fe 14 	movl   $0xc014fed0,0x4(%esp)$/;"	l
c0100ab3	obj/kernel.asm	/^c0100ab3:	c0 $/;"	l
c0100ab4	obj/kernel.asm	/^c0100ab4:	c7 04 24 ff 57 11 c0 	movl   $0xc01157ff,(%esp)$/;"	l
c0100abb	obj/kernel.asm	/^c0100abb:	e8 a5 f8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100ac0	obj/kernel.asm	/^c0100ac0:	c7 44 24 04 04 42 15 	movl   $0xc0154204,0x4(%esp)$/;"	l
c0100ac7	obj/kernel.asm	/^c0100ac7:	c0 $/;"	l
c0100ac8	obj/kernel.asm	/^c0100ac8:	c7 04 24 17 58 11 c0 	movl   $0xc0115817,(%esp)$/;"	l
c0100acf	obj/kernel.asm	/^c0100acf:	e8 91 f8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100ad4	obj/kernel.asm	/^c0100ad4:	b8 04 42 15 c0       	mov    $0xc0154204,%eax$/;"	l
c0100ad9	obj/kernel.asm	/^c0100ad9:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c0100adf	obj/kernel.asm	/^c0100adf:	b8 2a 00 10 c0       	mov    $0xc010002a,%eax$/;"	l
c0100ae4	obj/kernel.asm	/^c0100ae4:	29 c2                	sub    %eax,%edx$/;"	l
c0100ae6	obj/kernel.asm	/^c0100ae6:	89 d0                	mov    %edx,%eax$/;"	l
c0100ae8	obj/kernel.asm	/^c0100ae8:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c0100aee	obj/kernel.asm	/^c0100aee:	85 c0                	test   %eax,%eax$/;"	l
c0100af0	obj/kernel.asm	/^c0100af0:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0100af3	obj/kernel.asm	/^c0100af3:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
c0100af6	obj/kernel.asm	/^c0100af6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100afa	obj/kernel.asm	/^c0100afa:	c7 04 24 30 58 11 c0 	movl   $0xc0115830,(%esp)$/;"	l
c0100b01	obj/kernel.asm	/^c0100b01:	e8 5f f8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100b06	obj/kernel.asm	/^c0100b06:	c9                   	leave  $/;"	l
c0100b07	obj/kernel.asm	/^c0100b07:	c3                   	ret    $/;"	l
c0100b08	obj/kernel.asm	/^c0100b08 <print_debuginfo>:$/;"	l
c0100b08	obj/kernel.asm	/^c0100b08:	55                   	push   %ebp$/;"	l
c0100b09	obj/kernel.asm	/^c0100b09:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b0b	obj/kernel.asm	/^c0100b0b:	81 ec 48 01 00 00    	sub    $0x148,%esp$/;"	l
c0100b11	obj/kernel.asm	/^c0100b11:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0100b14	obj/kernel.asm	/^c0100b14:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100b18	obj/kernel.asm	/^c0100b18:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b1b	obj/kernel.asm	/^c0100b1b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100b1e	obj/kernel.asm	/^c0100b1e:	e8 1a fb ff ff       	call   c010063d <debuginfo_eip>$/;"	l
c0100b23	obj/kernel.asm	/^c0100b23:	85 c0                	test   %eax,%eax$/;"	l
c0100b25	obj/kernel.asm	/^c0100b25:	74 15                	je     c0100b3c <print_debuginfo+0x34>$/;"	l
c0100b27	obj/kernel.asm	/^c0100b27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b2a	obj/kernel.asm	/^c0100b2a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100b2e	obj/kernel.asm	/^c0100b2e:	c7 04 24 5a 58 11 c0 	movl   $0xc011585a,(%esp)$/;"	l
c0100b35	obj/kernel.asm	/^c0100b35:	e8 2b f8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100b3a	obj/kernel.asm	/^c0100b3a:	eb 6d                	jmp    c0100ba9 <print_debuginfo+0xa1>$/;"	l
c0100b3c	obj/kernel.asm	/^c0100b3c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100b43	obj/kernel.asm	/^c0100b43:	eb 1c                	jmp    c0100b61 <print_debuginfo+0x59>$/;"	l
c0100b45	obj/kernel.asm	/^c0100b45:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0100b48	obj/kernel.asm	/^c0100b48:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b4b	obj/kernel.asm	/^c0100b4b:	01 d0                	add    %edx,%eax$/;"	l
c0100b4d	obj/kernel.asm	/^c0100b4d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100b50	obj/kernel.asm	/^c0100b50:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100b56	obj/kernel.asm	/^c0100b56:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100b59	obj/kernel.asm	/^c0100b59:	01 ca                	add    %ecx,%edx$/;"	l
c0100b5b	obj/kernel.asm	/^c0100b5b:	88 02                	mov    %al,(%edx)$/;"	l
c0100b5d	obj/kernel.asm	/^c0100b5d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100b61	obj/kernel.asm	/^c0100b61:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100b64	obj/kernel.asm	/^c0100b64:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0100b67	obj/kernel.asm	/^c0100b67:	7f dc                	jg     c0100b45 <print_debuginfo+0x3d>$/;"	l
c0100b69	obj/kernel.asm	/^c0100b69:	8d 95 dc fe ff ff    	lea    -0x124(%ebp),%edx$/;"	l
c0100b6f	obj/kernel.asm	/^c0100b6f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b72	obj/kernel.asm	/^c0100b72:	01 d0                	add    %edx,%eax$/;"	l
c0100b74	obj/kernel.asm	/^c0100b74:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100b77	obj/kernel.asm	/^c0100b77:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100b7a	obj/kernel.asm	/^c0100b7a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100b7d	obj/kernel.asm	/^c0100b7d:	89 d1                	mov    %edx,%ecx$/;"	l
c0100b7f	obj/kernel.asm	/^c0100b7f:	29 c1                	sub    %eax,%ecx$/;"	l
c0100b81	obj/kernel.asm	/^c0100b81:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0100b84	obj/kernel.asm	/^c0100b84:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100b87	obj/kernel.asm	/^c0100b87:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0100b8b	obj/kernel.asm	/^c0100b8b:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100b91	obj/kernel.asm	/^c0100b91:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c0100b95	obj/kernel.asm	/^c0100b95:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100b99	obj/kernel.asm	/^c0100b99:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100b9d	obj/kernel.asm	/^c0100b9d:	c7 04 24 76 58 11 c0 	movl   $0xc0115876,(%esp)$/;"	l
c0100ba4	obj/kernel.asm	/^c0100ba4:	e8 bc f7 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100ba9	obj/kernel.asm	/^c0100ba9:	c9                   	leave  $/;"	l
c0100baa	obj/kernel.asm	/^c0100baa:	c3                   	ret    $/;"	l
c0100bab	obj/kernel.asm	/^c0100bab <read_eip>:$/;"	l
c0100bab	obj/kernel.asm	/^c0100bab:	55                   	push   %ebp$/;"	l
c0100bac	obj/kernel.asm	/^c0100bac:	89 e5                	mov    %esp,%ebp$/;"	l
c0100bae	obj/kernel.asm	/^c0100bae:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100bb1	obj/kernel.asm	/^c0100bb1:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
c0100bb4	obj/kernel.asm	/^c0100bb4:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100bb7	obj/kernel.asm	/^c0100bb7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100bba	obj/kernel.asm	/^c0100bba:	c9                   	leave  $/;"	l
c0100bbb	obj/kernel.asm	/^c0100bbb:	c3                   	ret    $/;"	l
c0100bbc	obj/kernel.asm	/^c0100bbc <print_stackframe>:$/;"	l
c0100bbc	obj/kernel.asm	/^c0100bbc:	55                   	push   %ebp$/;"	l
c0100bbd	obj/kernel.asm	/^c0100bbd:	89 e5                	mov    %esp,%ebp$/;"	l
c0100bbf	obj/kernel.asm	/^c0100bbf:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0100bc2	obj/kernel.asm	/^c0100bc2:	89 e8                	mov    %ebp,%eax$/;"	l
c0100bc4	obj/kernel.asm	/^c0100bc4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100bc7	obj/kernel.asm	/^c0100bc7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100bca	obj/kernel.asm	/^c0100bca:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100bcd	obj/kernel.asm	/^c0100bcd:	e8 d9 ff ff ff       	call   c0100bab <read_eip>$/;"	l
c0100bd2	obj/kernel.asm	/^c0100bd2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100bd5	obj/kernel.asm	/^c0100bd5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0100bdc	obj/kernel.asm	/^c0100bdc:	e9 88 00 00 00       	jmp    c0100c69 <print_stackframe+0xad>$/;"	l
c0100be1	obj/kernel.asm	/^c0100be1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100be4	obj/kernel.asm	/^c0100be4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100be8	obj/kernel.asm	/^c0100be8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100beb	obj/kernel.asm	/^c0100beb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100bef	obj/kernel.asm	/^c0100bef:	c7 04 24 88 58 11 c0 	movl   $0xc0115888,(%esp)$/;"	l
c0100bf6	obj/kernel.asm	/^c0100bf6:	e8 6a f7 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100bfb	obj/kernel.asm	/^c0100bfb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100bfe	obj/kernel.asm	/^c0100bfe:	83 c0 08             	add    $0x8,%eax$/;"	l
c0100c01	obj/kernel.asm	/^c0100c01:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0100c04	obj/kernel.asm	/^c0100c04:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0100c0b	obj/kernel.asm	/^c0100c0b:	eb 25                	jmp    c0100c32 <print_stackframe+0x76>$/;"	l
c0100c0d	obj/kernel.asm	/^c0100c0d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100c10	obj/kernel.asm	/^c0100c10:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100c17	obj/kernel.asm	/^c0100c17:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100c1a	obj/kernel.asm	/^c0100c1a:	01 d0                	add    %edx,%eax$/;"	l
c0100c1c	obj/kernel.asm	/^c0100c1c:	8b 00                	mov    (%eax),%eax$/;"	l
c0100c1e	obj/kernel.asm	/^c0100c1e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100c22	obj/kernel.asm	/^c0100c22:	c7 04 24 a4 58 11 c0 	movl   $0xc01158a4,(%esp)$/;"	l
c0100c29	obj/kernel.asm	/^c0100c29:	e8 37 f7 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100c2e	obj/kernel.asm	/^c0100c2e:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)$/;"	l
c0100c32	obj/kernel.asm	/^c0100c32:	83 7d e8 03          	cmpl   $0x3,-0x18(%ebp)$/;"	l
c0100c36	obj/kernel.asm	/^c0100c36:	7e d5                	jle    c0100c0d <print_stackframe+0x51>$/;"	l
c0100c38	obj/kernel.asm	/^c0100c38:	c7 04 24 ac 58 11 c0 	movl   $0xc01158ac,(%esp)$/;"	l
c0100c3f	obj/kernel.asm	/^c0100c3f:	e8 21 f7 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100c44	obj/kernel.asm	/^c0100c44:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100c47	obj/kernel.asm	/^c0100c47:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100c4a	obj/kernel.asm	/^c0100c4a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100c4d	obj/kernel.asm	/^c0100c4d:	e8 b6 fe ff ff       	call   c0100b08 <print_debuginfo>$/;"	l
c0100c52	obj/kernel.asm	/^c0100c52:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c55	obj/kernel.asm	/^c0100c55:	83 c0 04             	add    $0x4,%eax$/;"	l
c0100c58	obj/kernel.asm	/^c0100c58:	8b 00                	mov    (%eax),%eax$/;"	l
c0100c5a	obj/kernel.asm	/^c0100c5a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100c5d	obj/kernel.asm	/^c0100c5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c60	obj/kernel.asm	/^c0100c60:	8b 00                	mov    (%eax),%eax$/;"	l
c0100c62	obj/kernel.asm	/^c0100c62:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100c65	obj/kernel.asm	/^c0100c65:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0100c69	obj/kernel.asm	/^c0100c69:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100c6d	obj/kernel.asm	/^c0100c6d:	74 0a                	je     c0100c79 <print_stackframe+0xbd>$/;"	l
c0100c6f	obj/kernel.asm	/^c0100c6f:	83 7d ec 13          	cmpl   $0x13,-0x14(%ebp)$/;"	l
c0100c73	obj/kernel.asm	/^c0100c73:	0f 8e 68 ff ff ff    	jle    c0100be1 <print_stackframe+0x25>$/;"	l
c0100c79	obj/kernel.asm	/^c0100c79:	c9                   	leave  $/;"	l
c0100c7a	obj/kernel.asm	/^c0100c7a:	c3                   	ret    $/;"	l
c0100c7b	obj/kernel.asm	/^c0100c7b <parse>:$/;"	l
c0100c7b	obj/kernel.asm	/^c0100c7b:	55                   	push   %ebp$/;"	l
c0100c7c	obj/kernel.asm	/^c0100c7c:	89 e5                	mov    %esp,%ebp$/;"	l
c0100c7e	obj/kernel.asm	/^c0100c7e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100c81	obj/kernel.asm	/^c0100c81:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100c88	obj/kernel.asm	/^c0100c88:	eb 0c                	jmp    c0100c96 <parse+0x1b>$/;"	l
c0100c8a	obj/kernel.asm	/^c0100c8a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c8d	obj/kernel.asm	/^c0100c8d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100c90	obj/kernel.asm	/^c0100c90:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0100c93	obj/kernel.asm	/^c0100c93:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100c96	obj/kernel.asm	/^c0100c96:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c99	obj/kernel.asm	/^c0100c99:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100c9c	obj/kernel.asm	/^c0100c9c:	84 c0                	test   %al,%al$/;"	l
c0100c9e	obj/kernel.asm	/^c0100c9e:	74 1d                	je     c0100cbd <parse+0x42>$/;"	l
c0100ca0	obj/kernel.asm	/^c0100ca0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100ca3	obj/kernel.asm	/^c0100ca3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100ca6	obj/kernel.asm	/^c0100ca6:	0f be c0             	movsbl %al,%eax$/;"	l
c0100ca9	obj/kernel.asm	/^c0100ca9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100cad	obj/kernel.asm	/^c0100cad:	c7 04 24 30 59 11 c0 	movl   $0xc0115930,(%esp)$/;"	l
c0100cb4	obj/kernel.asm	/^c0100cb4:	e8 f8 46 01 00       	call   c01153b1 <strchr>$/;"	l
c0100cb9	obj/kernel.asm	/^c0100cb9:	85 c0                	test   %eax,%eax$/;"	l
c0100cbb	obj/kernel.asm	/^c0100cbb:	75 cd                	jne    c0100c8a <parse+0xf>$/;"	l
c0100cbd	obj/kernel.asm	/^c0100cbd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100cc0	obj/kernel.asm	/^c0100cc0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100cc3	obj/kernel.asm	/^c0100cc3:	84 c0                	test   %al,%al$/;"	l
c0100cc5	obj/kernel.asm	/^c0100cc5:	75 02                	jne    c0100cc9 <parse+0x4e>$/;"	l
c0100cc7	obj/kernel.asm	/^c0100cc7:	eb 67                	jmp    c0100d30 <parse+0xb5>$/;"	l
c0100cc9	obj/kernel.asm	/^c0100cc9:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
c0100ccd	obj/kernel.asm	/^c0100ccd:	75 14                	jne    c0100ce3 <parse+0x68>$/;"	l
c0100ccf	obj/kernel.asm	/^c0100ccf:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
c0100cd6	obj/kernel.asm	/^c0100cd6:	00 $/;"	l
c0100cd7	obj/kernel.asm	/^c0100cd7:	c7 04 24 35 59 11 c0 	movl   $0xc0115935,(%esp)$/;"	l
c0100cde	obj/kernel.asm	/^c0100cde:	e8 82 f6 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100ce3	obj/kernel.asm	/^c0100ce3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ce6	obj/kernel.asm	/^c0100ce6:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100ce9	obj/kernel.asm	/^c0100ce9:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0100cec	obj/kernel.asm	/^c0100cec:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100cf3	obj/kernel.asm	/^c0100cf3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100cf6	obj/kernel.asm	/^c0100cf6:	01 c2                	add    %eax,%edx$/;"	l
c0100cf8	obj/kernel.asm	/^c0100cf8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100cfb	obj/kernel.asm	/^c0100cfb:	89 02                	mov    %eax,(%edx)$/;"	l
c0100cfd	obj/kernel.asm	/^c0100cfd:	eb 04                	jmp    c0100d03 <parse+0x88>$/;"	l
c0100cff	obj/kernel.asm	/^c0100cff:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0100d03	obj/kernel.asm	/^c0100d03:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d06	obj/kernel.asm	/^c0100d06:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100d09	obj/kernel.asm	/^c0100d09:	84 c0                	test   %al,%al$/;"	l
c0100d0b	obj/kernel.asm	/^c0100d0b:	74 1d                	je     c0100d2a <parse+0xaf>$/;"	l
c0100d0d	obj/kernel.asm	/^c0100d0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d10	obj/kernel.asm	/^c0100d10:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100d13	obj/kernel.asm	/^c0100d13:	0f be c0             	movsbl %al,%eax$/;"	l
c0100d16	obj/kernel.asm	/^c0100d16:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100d1a	obj/kernel.asm	/^c0100d1a:	c7 04 24 30 59 11 c0 	movl   $0xc0115930,(%esp)$/;"	l
c0100d21	obj/kernel.asm	/^c0100d21:	e8 8b 46 01 00       	call   c01153b1 <strchr>$/;"	l
c0100d26	obj/kernel.asm	/^c0100d26:	85 c0                	test   %eax,%eax$/;"	l
c0100d28	obj/kernel.asm	/^c0100d28:	74 d5                	je     c0100cff <parse+0x84>$/;"	l
c0100d2a	obj/kernel.asm	/^c0100d2a:	90                   	nop$/;"	l
c0100d2b	obj/kernel.asm	/^c0100d2b:	e9 66 ff ff ff       	jmp    c0100c96 <parse+0x1b>$/;"	l
c0100d30	obj/kernel.asm	/^c0100d30:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100d33	obj/kernel.asm	/^c0100d33:	c9                   	leave  $/;"	l
c0100d34	obj/kernel.asm	/^c0100d34:	c3                   	ret    $/;"	l
c0100d35	obj/kernel.asm	/^c0100d35 <runcmd>:$/;"	l
c0100d35	obj/kernel.asm	/^c0100d35:	55                   	push   %ebp$/;"	l
c0100d36	obj/kernel.asm	/^c0100d36:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d38	obj/kernel.asm	/^c0100d38:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0100d3b	obj/kernel.asm	/^c0100d3b:	8d 45 b0             	lea    -0x50(%ebp),%eax$/;"	l
c0100d3e	obj/kernel.asm	/^c0100d3e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100d42	obj/kernel.asm	/^c0100d42:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d45	obj/kernel.asm	/^c0100d45:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100d48	obj/kernel.asm	/^c0100d48:	e8 2e ff ff ff       	call   c0100c7b <parse>$/;"	l
c0100d4d	obj/kernel.asm	/^c0100d4d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100d50	obj/kernel.asm	/^c0100d50:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100d54	obj/kernel.asm	/^c0100d54:	75 0a                	jne    c0100d60 <runcmd+0x2b>$/;"	l
c0100d56	obj/kernel.asm	/^c0100d56:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100d5b	obj/kernel.asm	/^c0100d5b:	e9 85 00 00 00       	jmp    c0100de5 <runcmd+0xb0>$/;"	l
c0100d60	obj/kernel.asm	/^c0100d60:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100d67	obj/kernel.asm	/^c0100d67:	eb 5c                	jmp    c0100dc5 <runcmd+0x90>$/;"	l
c0100d69	obj/kernel.asm	/^c0100d69:	8b 4d b0             	mov    -0x50(%ebp),%ecx$/;"	l
c0100d6c	obj/kernel.asm	/^c0100d6c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d6f	obj/kernel.asm	/^c0100d6f:	89 d0                	mov    %edx,%eax$/;"	l
c0100d71	obj/kernel.asm	/^c0100d71:	01 c0                	add    %eax,%eax$/;"	l
c0100d73	obj/kernel.asm	/^c0100d73:	01 d0                	add    %edx,%eax$/;"	l
c0100d75	obj/kernel.asm	/^c0100d75:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d78	obj/kernel.asm	/^c0100d78:	05 20 f0 14 c0       	add    $0xc014f020,%eax$/;"	l
c0100d7d	obj/kernel.asm	/^c0100d7d:	8b 00                	mov    (%eax),%eax$/;"	l
c0100d7f	obj/kernel.asm	/^c0100d7f:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0100d83	obj/kernel.asm	/^c0100d83:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100d86	obj/kernel.asm	/^c0100d86:	e8 87 45 01 00       	call   c0115312 <strcmp>$/;"	l
c0100d8b	obj/kernel.asm	/^c0100d8b:	85 c0                	test   %eax,%eax$/;"	l
c0100d8d	obj/kernel.asm	/^c0100d8d:	75 32                	jne    c0100dc1 <runcmd+0x8c>$/;"	l
c0100d8f	obj/kernel.asm	/^c0100d8f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d92	obj/kernel.asm	/^c0100d92:	89 d0                	mov    %edx,%eax$/;"	l
c0100d94	obj/kernel.asm	/^c0100d94:	01 c0                	add    %eax,%eax$/;"	l
c0100d96	obj/kernel.asm	/^c0100d96:	01 d0                	add    %edx,%eax$/;"	l
c0100d98	obj/kernel.asm	/^c0100d98:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d9b	obj/kernel.asm	/^c0100d9b:	05 20 f0 14 c0       	add    $0xc014f020,%eax$/;"	l
c0100da0	obj/kernel.asm	/^c0100da0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100da3	obj/kernel.asm	/^c0100da3:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100da6	obj/kernel.asm	/^c0100da6:	8d 4a ff             	lea    -0x1(%edx),%ecx$/;"	l
c0100da9	obj/kernel.asm	/^c0100da9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0100dac	obj/kernel.asm	/^c0100dac:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100db0	obj/kernel.asm	/^c0100db0:	8d 55 b0             	lea    -0x50(%ebp),%edx$/;"	l
c0100db3	obj/kernel.asm	/^c0100db3:	83 c2 04             	add    $0x4,%edx$/;"	l
c0100db6	obj/kernel.asm	/^c0100db6:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0100dba	obj/kernel.asm	/^c0100dba:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
c0100dbd	obj/kernel.asm	/^c0100dbd:	ff d0                	call   *%eax$/;"	l
c0100dbf	obj/kernel.asm	/^c0100dbf:	eb 24                	jmp    c0100de5 <runcmd+0xb0>$/;"	l
c0100dc1	obj/kernel.asm	/^c0100dc1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100dc5	obj/kernel.asm	/^c0100dc5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100dc8	obj/kernel.asm	/^c0100dc8:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100dcb	obj/kernel.asm	/^c0100dcb:	76 9c                	jbe    c0100d69 <runcmd+0x34>$/;"	l
c0100dcd	obj/kernel.asm	/^c0100dcd:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0100dd0	obj/kernel.asm	/^c0100dd0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100dd4	obj/kernel.asm	/^c0100dd4:	c7 04 24 53 59 11 c0 	movl   $0xc0115953,(%esp)$/;"	l
c0100ddb	obj/kernel.asm	/^c0100ddb:	e8 85 f5 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100de0	obj/kernel.asm	/^c0100de0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100de5	obj/kernel.asm	/^c0100de5:	c9                   	leave  $/;"	l
c0100de6	obj/kernel.asm	/^c0100de6:	c3                   	ret    $/;"	l
c0100de7	obj/kernel.asm	/^c0100de7 <kmonitor>:$/;"	l
c0100de7	obj/kernel.asm	/^c0100de7:	55                   	push   %ebp$/;"	l
c0100de8	obj/kernel.asm	/^c0100de8:	89 e5                	mov    %esp,%ebp$/;"	l
c0100dea	obj/kernel.asm	/^c0100dea:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100ded	obj/kernel.asm	/^c0100ded:	c7 04 24 6c 59 11 c0 	movl   $0xc011596c,(%esp)$/;"	l
c0100df4	obj/kernel.asm	/^c0100df4:	e8 6c f5 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100df9	obj/kernel.asm	/^c0100df9:	c7 04 24 94 59 11 c0 	movl   $0xc0115994,(%esp)$/;"	l
c0100e00	obj/kernel.asm	/^c0100e00:	e8 60 f5 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100e05	obj/kernel.asm	/^c0100e05:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100e09	obj/kernel.asm	/^c0100e09:	74 0b                	je     c0100e16 <kmonitor+0x2f>$/;"	l
c0100e0b	obj/kernel.asm	/^c0100e0b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100e0e	obj/kernel.asm	/^c0100e0e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100e11	obj/kernel.asm	/^c0100e11:	e8 ac 16 00 00       	call   c01024c2 <print_trapframe>$/;"	l
c0100e16	obj/kernel.asm	/^c0100e16:	c7 04 24 b9 59 11 c0 	movl   $0xc01159b9,(%esp)$/;"	l
c0100e1d	obj/kernel.asm	/^c0100e1d:	e8 32 f4 ff ff       	call   c0100254 <readline>$/;"	l
c0100e22	obj/kernel.asm	/^c0100e22:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100e25	obj/kernel.asm	/^c0100e25:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100e29	obj/kernel.asm	/^c0100e29:	74 18                	je     c0100e43 <kmonitor+0x5c>$/;"	l
c0100e2b	obj/kernel.asm	/^c0100e2b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100e2e	obj/kernel.asm	/^c0100e2e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100e32	obj/kernel.asm	/^c0100e32:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100e35	obj/kernel.asm	/^c0100e35:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100e38	obj/kernel.asm	/^c0100e38:	e8 f8 fe ff ff       	call   c0100d35 <runcmd>$/;"	l
c0100e3d	obj/kernel.asm	/^c0100e3d:	85 c0                	test   %eax,%eax$/;"	l
c0100e3f	obj/kernel.asm	/^c0100e3f:	79 02                	jns    c0100e43 <kmonitor+0x5c>$/;"	l
c0100e41	obj/kernel.asm	/^c0100e41:	eb 02                	jmp    c0100e45 <kmonitor+0x5e>$/;"	l
c0100e43	obj/kernel.asm	/^c0100e43:	eb d1                	jmp    c0100e16 <kmonitor+0x2f>$/;"	l
c0100e45	obj/kernel.asm	/^c0100e45:	c9                   	leave  $/;"	l
c0100e46	obj/kernel.asm	/^c0100e46:	c3                   	ret    $/;"	l
c0100e47	obj/kernel.asm	/^c0100e47 <mon_help>:$/;"	l
c0100e47	obj/kernel.asm	/^c0100e47:	55                   	push   %ebp$/;"	l
c0100e48	obj/kernel.asm	/^c0100e48:	89 e5                	mov    %esp,%ebp$/;"	l
c0100e4a	obj/kernel.asm	/^c0100e4a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100e4d	obj/kernel.asm	/^c0100e4d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100e54	obj/kernel.asm	/^c0100e54:	eb 3f                	jmp    c0100e95 <mon_help+0x4e>$/;"	l
c0100e56	obj/kernel.asm	/^c0100e56:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100e59	obj/kernel.asm	/^c0100e59:	89 d0                	mov    %edx,%eax$/;"	l
c0100e5b	obj/kernel.asm	/^c0100e5b:	01 c0                	add    %eax,%eax$/;"	l
c0100e5d	obj/kernel.asm	/^c0100e5d:	01 d0                	add    %edx,%eax$/;"	l
c0100e5f	obj/kernel.asm	/^c0100e5f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100e62	obj/kernel.asm	/^c0100e62:	05 20 f0 14 c0       	add    $0xc014f020,%eax$/;"	l
c0100e67	obj/kernel.asm	/^c0100e67:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0100e6a	obj/kernel.asm	/^c0100e6a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100e6d	obj/kernel.asm	/^c0100e6d:	89 d0                	mov    %edx,%eax$/;"	l
c0100e6f	obj/kernel.asm	/^c0100e6f:	01 c0                	add    %eax,%eax$/;"	l
c0100e71	obj/kernel.asm	/^c0100e71:	01 d0                	add    %edx,%eax$/;"	l
c0100e73	obj/kernel.asm	/^c0100e73:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100e76	obj/kernel.asm	/^c0100e76:	05 20 f0 14 c0       	add    $0xc014f020,%eax$/;"	l
c0100e7b	obj/kernel.asm	/^c0100e7b:	8b 00                	mov    (%eax),%eax$/;"	l
c0100e7d	obj/kernel.asm	/^c0100e7d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0100e81	obj/kernel.asm	/^c0100e81:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100e85	obj/kernel.asm	/^c0100e85:	c7 04 24 bd 59 11 c0 	movl   $0xc01159bd,(%esp)$/;"	l
c0100e8c	obj/kernel.asm	/^c0100e8c:	e8 d4 f4 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100e91	obj/kernel.asm	/^c0100e91:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100e95	obj/kernel.asm	/^c0100e95:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100e98	obj/kernel.asm	/^c0100e98:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100e9b	obj/kernel.asm	/^c0100e9b:	76 b9                	jbe    c0100e56 <mon_help+0xf>$/;"	l
c0100e9d	obj/kernel.asm	/^c0100e9d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100ea2	obj/kernel.asm	/^c0100ea2:	c9                   	leave  $/;"	l
c0100ea3	obj/kernel.asm	/^c0100ea3:	c3                   	ret    $/;"	l
c0100ea4	obj/kernel.asm	/^c0100ea4 <mon_kerninfo>:$/;"	l
c0100ea4	obj/kernel.asm	/^c0100ea4:	55                   	push   %ebp$/;"	l
c0100ea5	obj/kernel.asm	/^c0100ea5:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ea7	obj/kernel.asm	/^c0100ea7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100eaa	obj/kernel.asm	/^c0100eaa:	e8 c3 fb ff ff       	call   c0100a72 <print_kerninfo>$/;"	l
c0100eaf	obj/kernel.asm	/^c0100eaf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100eb4	obj/kernel.asm	/^c0100eb4:	c9                   	leave  $/;"	l
c0100eb5	obj/kernel.asm	/^c0100eb5:	c3                   	ret    $/;"	l
c0100eb6	obj/kernel.asm	/^c0100eb6 <mon_backtrace>:$/;"	l
c0100eb6	obj/kernel.asm	/^c0100eb6:	55                   	push   %ebp$/;"	l
c0100eb7	obj/kernel.asm	/^c0100eb7:	89 e5                	mov    %esp,%ebp$/;"	l
c0100eb9	obj/kernel.asm	/^c0100eb9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100ebc	obj/kernel.asm	/^c0100ebc:	e8 fb fc ff ff       	call   c0100bbc <print_stackframe>$/;"	l
c0100ec1	obj/kernel.asm	/^c0100ec1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100ec6	obj/kernel.asm	/^c0100ec6:	c9                   	leave  $/;"	l
c0100ec7	obj/kernel.asm	/^c0100ec7:	c3                   	ret    $/;"	l
c0100ec8	obj/kernel.asm	/^c0100ec8 <__panic>:$/;"	l
c0100ec8	obj/kernel.asm	/^c0100ec8:	55                   	push   %ebp$/;"	l
c0100ec9	obj/kernel.asm	/^c0100ec9:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ecb	obj/kernel.asm	/^c0100ecb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100ece	obj/kernel.asm	/^c0100ece:	a1 00 03 15 c0       	mov    0xc0150300,%eax$/;"	l
c0100ed3	obj/kernel.asm	/^c0100ed3:	85 c0                	test   %eax,%eax$/;"	l
c0100ed5	obj/kernel.asm	/^c0100ed5:	74 02                	je     c0100ed9 <__panic+0x11>$/;"	l
c0100ed7	obj/kernel.asm	/^c0100ed7:	eb 48                	jmp    c0100f21 <__panic+0x59>$/;"	l
c0100ed9	obj/kernel.asm	/^c0100ed9:	c7 05 00 03 15 c0 01 	movl   $0x1,0xc0150300$/;"	l
c0100ee0	obj/kernel.asm	/^c0100ee0:	00 00 00 $/;"	l
c0100ee3	obj/kernel.asm	/^c0100ee3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100ee6	obj/kernel.asm	/^c0100ee6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100ee9	obj/kernel.asm	/^c0100ee9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100eec	obj/kernel.asm	/^c0100eec:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100ef0	obj/kernel.asm	/^c0100ef0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100ef3	obj/kernel.asm	/^c0100ef3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100ef7	obj/kernel.asm	/^c0100ef7:	c7 04 24 c6 59 11 c0 	movl   $0xc01159c6,(%esp)$/;"	l
c0100efe	obj/kernel.asm	/^c0100efe:	e8 62 f4 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100f03	obj/kernel.asm	/^c0100f03:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100f06	obj/kernel.asm	/^c0100f06:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100f0a	obj/kernel.asm	/^c0100f0a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100f0d	obj/kernel.asm	/^c0100f0d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100f10	obj/kernel.asm	/^c0100f10:	e8 15 f4 ff ff       	call   c010032a <vcprintf>$/;"	l
c0100f15	obj/kernel.asm	/^c0100f15:	c7 04 24 e2 59 11 c0 	movl   $0xc01159e2,(%esp)$/;"	l
c0100f1c	obj/kernel.asm	/^c0100f1c:	e8 44 f4 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100f21	obj/kernel.asm	/^c0100f21:	e8 04 12 00 00       	call   c010212a <intr_disable>$/;"	l
c0100f26	obj/kernel.asm	/^c0100f26:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0100f2d	obj/kernel.asm	/^c0100f2d:	e8 b5 fe ff ff       	call   c0100de7 <kmonitor>$/;"	l
c0100f32	obj/kernel.asm	/^c0100f32:	eb f2                	jmp    c0100f26 <__panic+0x5e>$/;"	l
c0100f34	obj/kernel.asm	/^c0100f34 <__warn>:$/;"	l
c0100f34	obj/kernel.asm	/^c0100f34:	55                   	push   %ebp$/;"	l
c0100f35	obj/kernel.asm	/^c0100f35:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f37	obj/kernel.asm	/^c0100f37:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100f3a	obj/kernel.asm	/^c0100f3a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100f3d	obj/kernel.asm	/^c0100f3d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100f40	obj/kernel.asm	/^c0100f40:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100f43	obj/kernel.asm	/^c0100f43:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100f47	obj/kernel.asm	/^c0100f47:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100f4a	obj/kernel.asm	/^c0100f4a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100f4e	obj/kernel.asm	/^c0100f4e:	c7 04 24 e4 59 11 c0 	movl   $0xc01159e4,(%esp)$/;"	l
c0100f55	obj/kernel.asm	/^c0100f55:	e8 0b f4 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100f5a	obj/kernel.asm	/^c0100f5a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100f5d	obj/kernel.asm	/^c0100f5d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100f61	obj/kernel.asm	/^c0100f61:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100f64	obj/kernel.asm	/^c0100f64:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100f67	obj/kernel.asm	/^c0100f67:	e8 be f3 ff ff       	call   c010032a <vcprintf>$/;"	l
c0100f6c	obj/kernel.asm	/^c0100f6c:	c7 04 24 e2 59 11 c0 	movl   $0xc01159e2,(%esp)$/;"	l
c0100f73	obj/kernel.asm	/^c0100f73:	e8 ed f3 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100f78	obj/kernel.asm	/^c0100f78:	c9                   	leave  $/;"	l
c0100f79	obj/kernel.asm	/^c0100f79:	c3                   	ret    $/;"	l
c0100f7a	obj/kernel.asm	/^c0100f7a <is_kernel_panic>:$/;"	l
c0100f7a	obj/kernel.asm	/^c0100f7a:	55                   	push   %ebp$/;"	l
c0100f7b	obj/kernel.asm	/^c0100f7b:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f7d	obj/kernel.asm	/^c0100f7d:	a1 00 03 15 c0       	mov    0xc0150300,%eax$/;"	l
c0100f82	obj/kernel.asm	/^c0100f82:	5d                   	pop    %ebp$/;"	l
c0100f83	obj/kernel.asm	/^c0100f83:	c3                   	ret    $/;"	l
c0100f84	obj/kernel.asm	/^c0100f84 <SYSTEM_READ_TIMER>:$/;"	l
c0100f84	obj/kernel.asm	/^c0100f84:	55                   	push   %ebp$/;"	l
c0100f85	obj/kernel.asm	/^c0100f85:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f87	obj/kernel.asm	/^c0100f87:	a1 10 40 15 c0       	mov    0xc0154010,%eax$/;"	l
c0100f8c	obj/kernel.asm	/^c0100f8c:	5d                   	pop    %ebp$/;"	l
c0100f8d	obj/kernel.asm	/^c0100f8d:	c3                   	ret    $/;"	l
c0100f8e	obj/kernel.asm	/^c0100f8e <clock_init>:$/;"	l
c0100f8e	obj/kernel.asm	/^c0100f8e:	55                   	push   %ebp$/;"	l
c0100f8f	obj/kernel.asm	/^c0100f8f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f91	obj/kernel.asm	/^c0100f91:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100f94	obj/kernel.asm	/^c0100f94:	66 c7 45 f6 43 00    	movw   $0x43,-0xa(%ebp)$/;"	l
c0100f9a	obj/kernel.asm	/^c0100f9a:	c6 45 f5 34          	movb   $0x34,-0xb(%ebp)$/;"	l
c0100f9e	obj/kernel.asm	/^c0100f9e:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0100fa2	obj/kernel.asm	/^c0100fa2:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0100fa6	obj/kernel.asm	/^c0100fa6:	ee                   	out    %al,(%dx)$/;"	l
c0100fa7	obj/kernel.asm	/^c0100fa7:	66 c7 45 f2 40 00    	movw   $0x40,-0xe(%ebp)$/;"	l
c0100fad	obj/kernel.asm	/^c0100fad:	c6 45 f1 9c          	movb   $0x9c,-0xf(%ebp)$/;"	l
c0100fb1	obj/kernel.asm	/^c0100fb1:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0100fb5	obj/kernel.asm	/^c0100fb5:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0100fb9	obj/kernel.asm	/^c0100fb9:	ee                   	out    %al,(%dx)$/;"	l
c0100fba	obj/kernel.asm	/^c0100fba:	66 c7 45 ee 40 00    	movw   $0x40,-0x12(%ebp)$/;"	l
c0100fc0	obj/kernel.asm	/^c0100fc0:	c6 45 ed 2e          	movb   $0x2e,-0x13(%ebp)$/;"	l
c0100fc4	obj/kernel.asm	/^c0100fc4:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0100fc8	obj/kernel.asm	/^c0100fc8:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0100fcc	obj/kernel.asm	/^c0100fcc:	ee                   	out    %al,(%dx)$/;"	l
c0100fcd	obj/kernel.asm	/^c0100fcd:	c7 05 10 40 15 c0 00 	movl   $0x0,0xc0154010$/;"	l
c0100fd4	obj/kernel.asm	/^c0100fd4:	00 00 00 $/;"	l
c0100fd7	obj/kernel.asm	/^c0100fd7:	c7 04 24 02 5a 11 c0 	movl   $0xc0115a02,(%esp)$/;"	l
c0100fde	obj/kernel.asm	/^c0100fde:	e8 82 f3 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100fe3	obj/kernel.asm	/^c0100fe3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0100fea	obj/kernel.asm	/^c0100fea:	e8 99 11 00 00       	call   c0102188 <pic_enable>$/;"	l
c0100fef	obj/kernel.asm	/^c0100fef:	c9                   	leave  $/;"	l
c0100ff0	obj/kernel.asm	/^c0100ff0:	c3                   	ret    $/;"	l
c0100ff1	obj/kernel.asm	/^c0100ff1 <__intr_save>:$/;"	l
c0100ff1	obj/kernel.asm	/^c0100ff1:	55                   	push   %ebp$/;"	l
c0100ff2	obj/kernel.asm	/^c0100ff2:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ff4	obj/kernel.asm	/^c0100ff4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100ff7	obj/kernel.asm	/^c0100ff7:	9c                   	pushf  $/;"	l
c0100ff8	obj/kernel.asm	/^c0100ff8:	58                   	pop    %eax$/;"	l
c0100ff9	obj/kernel.asm	/^c0100ff9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100ffc	obj/kernel.asm	/^c0100ffc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100fff	obj/kernel.asm	/^c0100fff:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0101004	obj/kernel.asm	/^c0101004:	85 c0                	test   %eax,%eax$/;"	l
c0101006	obj/kernel.asm	/^c0101006:	74 0c                	je     c0101014 <__intr_save+0x23>$/;"	l
c0101008	obj/kernel.asm	/^c0101008:	e8 1d 11 00 00       	call   c010212a <intr_disable>$/;"	l
c010100d	obj/kernel.asm	/^c010100d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0101012	obj/kernel.asm	/^c0101012:	eb 05                	jmp    c0101019 <__intr_save+0x28>$/;"	l
c0101014	obj/kernel.asm	/^c0101014:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101019	obj/kernel.asm	/^c0101019:	c9                   	leave  $/;"	l
c010101a	obj/kernel.asm	/^c010101a:	c3                   	ret    $/;"	l
c010101b	obj/kernel.asm	/^c010101b <__intr_restore>:$/;"	l
c010101b	obj/kernel.asm	/^c010101b:	55                   	push   %ebp$/;"	l
c010101c	obj/kernel.asm	/^c010101c:	89 e5                	mov    %esp,%ebp$/;"	l
c010101e	obj/kernel.asm	/^c010101e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101021	obj/kernel.asm	/^c0101021:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0101025	obj/kernel.asm	/^c0101025:	74 05                	je     c010102c <__intr_restore+0x11>$/;"	l
c0101027	obj/kernel.asm	/^c0101027:	e8 f8 10 00 00       	call   c0102124 <intr_enable>$/;"	l
c010102c	obj/kernel.asm	/^c010102c:	c9                   	leave  $/;"	l
c010102d	obj/kernel.asm	/^c010102d:	c3                   	ret    $/;"	l
c010102e	obj/kernel.asm	/^c010102e <delay>:$/;"	l
c010102e	obj/kernel.asm	/^c010102e:	55                   	push   %ebp$/;"	l
c010102f	obj/kernel.asm	/^c010102f:	89 e5                	mov    %esp,%ebp$/;"	l
c0101031	obj/kernel.asm	/^c0101031:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101034	obj/kernel.asm	/^c0101034:	66 c7 45 fe 84 00    	movw   $0x84,-0x2(%ebp)$/;"	l
c010103a	obj/kernel.asm	/^c010103a:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c010103e	obj/kernel.asm	/^c010103e:	89 c2                	mov    %eax,%edx$/;"	l
c0101040	obj/kernel.asm	/^c0101040:	ec                   	in     (%dx),%al$/;"	l
c0101041	obj/kernel.asm	/^c0101041:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0101044	obj/kernel.asm	/^c0101044:	66 c7 45 fa 84 00    	movw   $0x84,-0x6(%ebp)$/;"	l
c010104a	obj/kernel.asm	/^c010104a:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c010104e	obj/kernel.asm	/^c010104e:	89 c2                	mov    %eax,%edx$/;"	l
c0101050	obj/kernel.asm	/^c0101050:	ec                   	in     (%dx),%al$/;"	l
c0101051	obj/kernel.asm	/^c0101051:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101054	obj/kernel.asm	/^c0101054:	66 c7 45 f6 84 00    	movw   $0x84,-0xa(%ebp)$/;"	l
c010105a	obj/kernel.asm	/^c010105a:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010105e	obj/kernel.asm	/^c010105e:	89 c2                	mov    %eax,%edx$/;"	l
c0101060	obj/kernel.asm	/^c0101060:	ec                   	in     (%dx),%al$/;"	l
c0101061	obj/kernel.asm	/^c0101061:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101064	obj/kernel.asm	/^c0101064:	66 c7 45 f2 84 00    	movw   $0x84,-0xe(%ebp)$/;"	l
c010106a	obj/kernel.asm	/^c010106a:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010106e	obj/kernel.asm	/^c010106e:	89 c2                	mov    %eax,%edx$/;"	l
c0101070	obj/kernel.asm	/^c0101070:	ec                   	in     (%dx),%al$/;"	l
c0101071	obj/kernel.asm	/^c0101071:	88 45 f1             	mov    %al,-0xf(%ebp)$/;"	l
c0101074	obj/kernel.asm	/^c0101074:	c9                   	leave  $/;"	l
c0101075	obj/kernel.asm	/^c0101075:	c3                   	ret    $/;"	l
c0101076	obj/kernel.asm	/^c0101076 <cga_init>:$/;"	l
c0101076	obj/kernel.asm	/^c0101076:	55                   	push   %ebp$/;"	l
c0101077	obj/kernel.asm	/^c0101077:	89 e5                	mov    %esp,%ebp$/;"	l
c0101079	obj/kernel.asm	/^c0101079:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010107c	obj/kernel.asm	/^c010107c:	c7 45 fc 00 80 0b c0 	movl   $0xc00b8000,-0x4(%ebp)$/;"	l
c0101083	obj/kernel.asm	/^c0101083:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101086	obj/kernel.asm	/^c0101086:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0101089	obj/kernel.asm	/^c0101089:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c010108d	obj/kernel.asm	/^c010108d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101090	obj/kernel.asm	/^c0101090:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
c0101095	obj/kernel.asm	/^c0101095:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101098	obj/kernel.asm	/^c0101098:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c010109b	obj/kernel.asm	/^c010109b:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
c010109f	obj/kernel.asm	/^c010109f:	74 12                	je     c01010b3 <cga_init+0x3d>$/;"	l
c01010a1	obj/kernel.asm	/^c01010a1:	c7 45 fc 00 00 0b c0 	movl   $0xc00b0000,-0x4(%ebp)$/;"	l
c01010a8	obj/kernel.asm	/^c01010a8:	66 c7 05 26 03 15 c0 	movw   $0x3b4,0xc0150326$/;"	l
c01010af	obj/kernel.asm	/^c01010af:	b4 03 $/;"	l
c01010b1	obj/kernel.asm	/^c01010b1:	eb 13                	jmp    c01010c6 <cga_init+0x50>$/;"	l
c01010b3	obj/kernel.asm	/^c01010b3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01010b6	obj/kernel.asm	/^c01010b6:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c01010ba	obj/kernel.asm	/^c01010ba:	66 89 10             	mov    %dx,(%eax)$/;"	l
c01010bd	obj/kernel.asm	/^c01010bd:	66 c7 05 26 03 15 c0 	movw   $0x3d4,0xc0150326$/;"	l
c01010c4	obj/kernel.asm	/^c01010c4:	d4 03 $/;"	d
c01010c6	obj/kernel.asm	/^c01010c6:	0f b7 05 26 03 15 c0 	movzwl 0xc0150326,%eax$/;"	l
c01010cd	obj/kernel.asm	/^c01010cd:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01010d0	obj/kernel.asm	/^c01010d0:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c01010d4	obj/kernel.asm	/^c01010d4:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c01010d8	obj/kernel.asm	/^c01010d8:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01010dc	obj/kernel.asm	/^c01010dc:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01010e0	obj/kernel.asm	/^c01010e0:	ee                   	out    %al,(%dx)$/;"	l
c01010e1	obj/kernel.asm	/^c01010e1:	0f b7 05 26 03 15 c0 	movzwl 0xc0150326,%eax$/;"	l
c01010e8	obj/kernel.asm	/^c01010e8:	83 c0 01             	add    $0x1,%eax$/;"	l
c01010eb	obj/kernel.asm	/^c01010eb:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01010ee	obj/kernel.asm	/^c01010ee:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c01010f2	obj/kernel.asm	/^c01010f2:	0f b7 45 ee          	movzwl -0x12(%ebp),%eax$/;"	l
c01010f6	obj/kernel.asm	/^c01010f6:	89 c2                	mov    %eax,%edx$/;"	l
c01010f8	obj/kernel.asm	/^c01010f8:	ec                   	in     (%dx),%al$/;"	l
c01010f9	obj/kernel.asm	/^c01010f9:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c01010fc	obj/kernel.asm	/^c01010fc:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101100	obj/kernel.asm	/^c0101100:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101103	obj/kernel.asm	/^c0101103:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0101106	obj/kernel.asm	/^c0101106:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101109	obj/kernel.asm	/^c0101109:	0f b7 05 26 03 15 c0 	movzwl 0xc0150326,%eax$/;"	l
c0101110	obj/kernel.asm	/^c0101110:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101113	obj/kernel.asm	/^c0101113:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101117	obj/kernel.asm	/^c0101117:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c010111b	obj/kernel.asm	/^c010111b:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c010111f	obj/kernel.asm	/^c010111f:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101123	obj/kernel.asm	/^c0101123:	ee                   	out    %al,(%dx)$/;"	l
c0101124	obj/kernel.asm	/^c0101124:	0f b7 05 26 03 15 c0 	movzwl 0xc0150326,%eax$/;"	l
c010112b	obj/kernel.asm	/^c010112b:	83 c0 01             	add    $0x1,%eax$/;"	l
c010112e	obj/kernel.asm	/^c010112e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101131	obj/kernel.asm	/^c0101131:	66 89 45 e6          	mov    %ax,-0x1a(%ebp)$/;"	l
c0101135	obj/kernel.asm	/^c0101135:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax$/;"	l
c0101139	obj/kernel.asm	/^c0101139:	89 c2                	mov    %eax,%edx$/;"	l
c010113b	obj/kernel.asm	/^c010113b:	ec                   	in     (%dx),%al$/;"	l
c010113c	obj/kernel.asm	/^c010113c:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c010113f	obj/kernel.asm	/^c010113f:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101143	obj/kernel.asm	/^c0101143:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101146	obj/kernel.asm	/^c0101146:	09 45 f4             	or     %eax,-0xc(%ebp)$/;"	l
c0101149	obj/kernel.asm	/^c0101149:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010114c	obj/kernel.asm	/^c010114c:	a3 20 03 15 c0       	mov    %eax,0xc0150320$/;"	l
c0101151	obj/kernel.asm	/^c0101151:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101154	obj/kernel.asm	/^c0101154:	66 a3 24 03 15 c0    	mov    %ax,0xc0150324$/;"	l
c010115a	obj/kernel.asm	/^c010115a:	c9                   	leave  $/;"	l
c010115b	obj/kernel.asm	/^c010115b:	c3                   	ret    $/;"	l
c010115c	obj/kernel.asm	/^c010115c <serial_init>:$/;"	l
c010115c	obj/kernel.asm	/^c010115c:	55                   	push   %ebp$/;"	l
c010115d	obj/kernel.asm	/^c010115d:	89 e5                	mov    %esp,%ebp$/;"	l
c010115f	obj/kernel.asm	/^c010115f:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0101162	obj/kernel.asm	/^c0101162:	66 c7 45 f6 fa 03    	movw   $0x3fa,-0xa(%ebp)$/;"	l
c0101168	obj/kernel.asm	/^c0101168:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)$/;"	l
c010116c	obj/kernel.asm	/^c010116c:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101170	obj/kernel.asm	/^c0101170:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101174	obj/kernel.asm	/^c0101174:	ee                   	out    %al,(%dx)$/;"	l
c0101175	obj/kernel.asm	/^c0101175:	66 c7 45 f2 fb 03    	movw   $0x3fb,-0xe(%ebp)$/;"	l
c010117b	obj/kernel.asm	/^c010117b:	c6 45 f1 80          	movb   $0x80,-0xf(%ebp)$/;"	l
c010117f	obj/kernel.asm	/^c010117f:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101183	obj/kernel.asm	/^c0101183:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101187	obj/kernel.asm	/^c0101187:	ee                   	out    %al,(%dx)$/;"	l
c0101188	obj/kernel.asm	/^c0101188:	66 c7 45 ee f8 03    	movw   $0x3f8,-0x12(%ebp)$/;"	l
c010118e	obj/kernel.asm	/^c010118e:	c6 45 ed 0c          	movb   $0xc,-0x13(%ebp)$/;"	l
c0101192	obj/kernel.asm	/^c0101192:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101196	obj/kernel.asm	/^c0101196:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c010119a	obj/kernel.asm	/^c010119a:	ee                   	out    %al,(%dx)$/;"	l
c010119b	obj/kernel.asm	/^c010119b:	66 c7 45 ea f9 03    	movw   $0x3f9,-0x16(%ebp)$/;"	l
c01011a1	obj/kernel.asm	/^c01011a1:	c6 45 e9 00          	movb   $0x0,-0x17(%ebp)$/;"	l
c01011a5	obj/kernel.asm	/^c01011a5:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c01011a9	obj/kernel.asm	/^c01011a9:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01011ad	obj/kernel.asm	/^c01011ad:	ee                   	out    %al,(%dx)$/;"	l
c01011ae	obj/kernel.asm	/^c01011ae:	66 c7 45 e6 fb 03    	movw   $0x3fb,-0x1a(%ebp)$/;"	l
c01011b4	obj/kernel.asm	/^c01011b4:	c6 45 e5 03          	movb   $0x3,-0x1b(%ebp)$/;"	l
c01011b8	obj/kernel.asm	/^c01011b8:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01011bc	obj/kernel.asm	/^c01011bc:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01011c0	obj/kernel.asm	/^c01011c0:	ee                   	out    %al,(%dx)$/;"	l
c01011c1	obj/kernel.asm	/^c01011c1:	66 c7 45 e2 fc 03    	movw   $0x3fc,-0x1e(%ebp)$/;"	l
c01011c7	obj/kernel.asm	/^c01011c7:	c6 45 e1 00          	movb   $0x0,-0x1f(%ebp)$/;"	l
c01011cb	obj/kernel.asm	/^c01011cb:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01011cf	obj/kernel.asm	/^c01011cf:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01011d3	obj/kernel.asm	/^c01011d3:	ee                   	out    %al,(%dx)$/;"	l
c01011d4	obj/kernel.asm	/^c01011d4:	66 c7 45 de f9 03    	movw   $0x3f9,-0x22(%ebp)$/;"	l
c01011da	obj/kernel.asm	/^c01011da:	c6 45 dd 01          	movb   $0x1,-0x23(%ebp)$/;"	l
c01011de	obj/kernel.asm	/^c01011de:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01011e2	obj/kernel.asm	/^c01011e2:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01011e6	obj/kernel.asm	/^c01011e6:	ee                   	out    %al,(%dx)$/;"	l
c01011e7	obj/kernel.asm	/^c01011e7:	66 c7 45 da fd 03    	movw   $0x3fd,-0x26(%ebp)$/;"	l
c01011ed	obj/kernel.asm	/^c01011ed:	0f b7 45 da          	movzwl -0x26(%ebp),%eax$/;"	l
c01011f1	obj/kernel.asm	/^c01011f1:	89 c2                	mov    %eax,%edx$/;"	l
c01011f3	obj/kernel.asm	/^c01011f3:	ec                   	in     (%dx),%al$/;"	l
c01011f4	obj/kernel.asm	/^c01011f4:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c01011f7	obj/kernel.asm	/^c01011f7:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c01011fb	obj/kernel.asm	/^c01011fb:	3c ff                	cmp    $0xff,%al$/;"	l
c01011fd	obj/kernel.asm	/^c01011fd:	0f 95 c0             	setne  %al$/;"	l
c0101200	obj/kernel.asm	/^c0101200:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101203	obj/kernel.asm	/^c0101203:	a3 28 03 15 c0       	mov    %eax,0xc0150328$/;"	l
c0101208	obj/kernel.asm	/^c0101208:	66 c7 45 d6 fa 03    	movw   $0x3fa,-0x2a(%ebp)$/;"	l
c010120e	obj/kernel.asm	/^c010120e:	0f b7 45 d6          	movzwl -0x2a(%ebp),%eax$/;"	l
c0101212	obj/kernel.asm	/^c0101212:	89 c2                	mov    %eax,%edx$/;"	l
c0101214	obj/kernel.asm	/^c0101214:	ec                   	in     (%dx),%al$/;"	l
c0101215	obj/kernel.asm	/^c0101215:	88 45 d5             	mov    %al,-0x2b(%ebp)$/;"	l
c0101218	obj/kernel.asm	/^c0101218:	66 c7 45 d2 f8 03    	movw   $0x3f8,-0x2e(%ebp)$/;"	l
c010121e	obj/kernel.asm	/^c010121e:	0f b7 45 d2          	movzwl -0x2e(%ebp),%eax$/;"	l
c0101222	obj/kernel.asm	/^c0101222:	89 c2                	mov    %eax,%edx$/;"	l
c0101224	obj/kernel.asm	/^c0101224:	ec                   	in     (%dx),%al$/;"	l
c0101225	obj/kernel.asm	/^c0101225:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0101228	obj/kernel.asm	/^c0101228:	a1 28 03 15 c0       	mov    0xc0150328,%eax$/;"	l
c010122d	obj/kernel.asm	/^c010122d:	85 c0                	test   %eax,%eax$/;"	l
c010122f	obj/kernel.asm	/^c010122f:	74 0c                	je     c010123d <serial_init+0xe1>$/;"	l
c0101231	obj/kernel.asm	/^c0101231:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)$/;"	l
c0101238	obj/kernel.asm	/^c0101238:	e8 4b 0f 00 00       	call   c0102188 <pic_enable>$/;"	l
c010123d	obj/kernel.asm	/^c010123d:	c9                   	leave  $/;"	l
c010123e	obj/kernel.asm	/^c010123e:	c3                   	ret    $/;"	l
c010123f	obj/kernel.asm	/^c010123f <lpt_putc_sub>:$/;"	l
c010123f	obj/kernel.asm	/^c010123f:	55                   	push   %ebp$/;"	l
c0101240	obj/kernel.asm	/^c0101240:	89 e5                	mov    %esp,%ebp$/;"	l
c0101242	obj/kernel.asm	/^c0101242:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0101245	obj/kernel.asm	/^c0101245:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010124c	obj/kernel.asm	/^c010124c:	eb 09                	jmp    c0101257 <lpt_putc_sub+0x18>$/;"	l
c010124e	obj/kernel.asm	/^c010124e:	e8 db fd ff ff       	call   c010102e <delay>$/;"	l
c0101253	obj/kernel.asm	/^c0101253:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0101257	obj/kernel.asm	/^c0101257:	66 c7 45 fa 79 03    	movw   $0x379,-0x6(%ebp)$/;"	l
c010125d	obj/kernel.asm	/^c010125d:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101261	obj/kernel.asm	/^c0101261:	89 c2                	mov    %eax,%edx$/;"	l
c0101263	obj/kernel.asm	/^c0101263:	ec                   	in     (%dx),%al$/;"	l
c0101264	obj/kernel.asm	/^c0101264:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101267	obj/kernel.asm	/^c0101267:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c010126b	obj/kernel.asm	/^c010126b:	84 c0                	test   %al,%al$/;"	l
c010126d	obj/kernel.asm	/^c010126d:	78 09                	js     c0101278 <lpt_putc_sub+0x39>$/;"	l
c010126f	obj/kernel.asm	/^c010126f:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101276	obj/kernel.asm	/^c0101276:	7e d6                	jle    c010124e <lpt_putc_sub+0xf>$/;"	l
c0101278	obj/kernel.asm	/^c0101278:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010127b	obj/kernel.asm	/^c010127b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010127e	obj/kernel.asm	/^c010127e:	66 c7 45 f6 78 03    	movw   $0x378,-0xa(%ebp)$/;"	l
c0101284	obj/kernel.asm	/^c0101284:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101287	obj/kernel.asm	/^c0101287:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c010128b	obj/kernel.asm	/^c010128b:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c010128f	obj/kernel.asm	/^c010128f:	ee                   	out    %al,(%dx)$/;"	l
c0101290	obj/kernel.asm	/^c0101290:	66 c7 45 f2 7a 03    	movw   $0x37a,-0xe(%ebp)$/;"	l
c0101296	obj/kernel.asm	/^c0101296:	c6 45 f1 0d          	movb   $0xd,-0xf(%ebp)$/;"	l
c010129a	obj/kernel.asm	/^c010129a:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c010129e	obj/kernel.asm	/^c010129e:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01012a2	obj/kernel.asm	/^c01012a2:	ee                   	out    %al,(%dx)$/;"	l
c01012a3	obj/kernel.asm	/^c01012a3:	66 c7 45 ee 7a 03    	movw   $0x37a,-0x12(%ebp)$/;"	l
c01012a9	obj/kernel.asm	/^c01012a9:	c6 45 ed 08          	movb   $0x8,-0x13(%ebp)$/;"	l
c01012ad	obj/kernel.asm	/^c01012ad:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01012b1	obj/kernel.asm	/^c01012b1:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01012b5	obj/kernel.asm	/^c01012b5:	ee                   	out    %al,(%dx)$/;"	l
c01012b6	obj/kernel.asm	/^c01012b6:	c9                   	leave  $/;"	l
c01012b7	obj/kernel.asm	/^c01012b7:	c3                   	ret    $/;"	l
c01012b8	obj/kernel.asm	/^c01012b8 <lpt_putc>:$/;"	l
c01012b8	obj/kernel.asm	/^c01012b8:	55                   	push   %ebp$/;"	l
c01012b9	obj/kernel.asm	/^c01012b9:	89 e5                	mov    %esp,%ebp$/;"	l
c01012bb	obj/kernel.asm	/^c01012bb:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01012be	obj/kernel.asm	/^c01012be:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c01012c2	obj/kernel.asm	/^c01012c2:	74 0d                	je     c01012d1 <lpt_putc+0x19>$/;"	l
c01012c4	obj/kernel.asm	/^c01012c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01012c7	obj/kernel.asm	/^c01012c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01012ca	obj/kernel.asm	/^c01012ca:	e8 70 ff ff ff       	call   c010123f <lpt_putc_sub>$/;"	l
c01012cf	obj/kernel.asm	/^c01012cf:	eb 24                	jmp    c01012f5 <lpt_putc+0x3d>$/;"	l
c01012d1	obj/kernel.asm	/^c01012d1:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c01012d8	obj/kernel.asm	/^c01012d8:	e8 62 ff ff ff       	call   c010123f <lpt_putc_sub>$/;"	l
c01012dd	obj/kernel.asm	/^c01012dd:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c01012e4	obj/kernel.asm	/^c01012e4:	e8 56 ff ff ff       	call   c010123f <lpt_putc_sub>$/;"	l
c01012e9	obj/kernel.asm	/^c01012e9:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c01012f0	obj/kernel.asm	/^c01012f0:	e8 4a ff ff ff       	call   c010123f <lpt_putc_sub>$/;"	l
c01012f5	obj/kernel.asm	/^c01012f5:	c9                   	leave  $/;"	l
c01012f6	obj/kernel.asm	/^c01012f6:	c3                   	ret    $/;"	l
c01012f7	obj/kernel.asm	/^c01012f7 <cga_putc>:$/;"	l
c01012f7	obj/kernel.asm	/^c01012f7:	55                   	push   %ebp$/;"	l
c01012f8	obj/kernel.asm	/^c01012f8:	89 e5                	mov    %esp,%ebp$/;"	l
c01012fa	obj/kernel.asm	/^c01012fa:	53                   	push   %ebx$/;"	l
c01012fb	obj/kernel.asm	/^c01012fb:	83 ec 34             	sub    $0x34,%esp$/;"	l
c01012fe	obj/kernel.asm	/^c01012fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101301	obj/kernel.asm	/^c0101301:	b0 00                	mov    $0x0,%al$/;"	l
c0101303	obj/kernel.asm	/^c0101303:	85 c0                	test   %eax,%eax$/;"	l
c0101305	obj/kernel.asm	/^c0101305:	75 07                	jne    c010130e <cga_putc+0x17>$/;"	l
c0101307	obj/kernel.asm	/^c0101307:	81 4d 08 00 07 00 00 	orl    $0x700,0x8(%ebp)$/;"	l
c010130e	obj/kernel.asm	/^c010130e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101311	obj/kernel.asm	/^c0101311:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101314	obj/kernel.asm	/^c0101314:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
c0101317	obj/kernel.asm	/^c0101317:	74 4c                	je     c0101365 <cga_putc+0x6e>$/;"	l
c0101319	obj/kernel.asm	/^c0101319:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
c010131c	obj/kernel.asm	/^c010131c:	74 57                	je     c0101375 <cga_putc+0x7e>$/;"	l
c010131e	obj/kernel.asm	/^c010131e:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c0101321	obj/kernel.asm	/^c0101321:	0f 85 88 00 00 00    	jne    c01013af <cga_putc+0xb8>$/;"	l
c0101327	obj/kernel.asm	/^c0101327:	0f b7 05 24 03 15 c0 	movzwl 0xc0150324,%eax$/;"	l
c010132e	obj/kernel.asm	/^c010132e:	66 85 c0             	test   %ax,%ax$/;"	l
c0101331	obj/kernel.asm	/^c0101331:	74 30                	je     c0101363 <cga_putc+0x6c>$/;"	l
c0101333	obj/kernel.asm	/^c0101333:	0f b7 05 24 03 15 c0 	movzwl 0xc0150324,%eax$/;"	l
c010133a	obj/kernel.asm	/^c010133a:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010133d	obj/kernel.asm	/^c010133d:	66 a3 24 03 15 c0    	mov    %ax,0xc0150324$/;"	l
c0101343	obj/kernel.asm	/^c0101343:	a1 20 03 15 c0       	mov    0xc0150320,%eax$/;"	l
c0101348	obj/kernel.asm	/^c0101348:	0f b7 15 24 03 15 c0 	movzwl 0xc0150324,%edx$/;"	l
c010134f	obj/kernel.asm	/^c010134f:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101352	obj/kernel.asm	/^c0101352:	01 d2                	add    %edx,%edx$/;"	l
c0101354	obj/kernel.asm	/^c0101354:	01 c2                	add    %eax,%edx$/;"	l
c0101356	obj/kernel.asm	/^c0101356:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101359	obj/kernel.asm	/^c0101359:	b0 00                	mov    $0x0,%al$/;"	l
c010135b	obj/kernel.asm	/^c010135b:	83 c8 20             	or     $0x20,%eax$/;"	l
c010135e	obj/kernel.asm	/^c010135e:	66 89 02             	mov    %ax,(%edx)$/;"	l
c0101361	obj/kernel.asm	/^c0101361:	eb 72                	jmp    c01013d5 <cga_putc+0xde>$/;"	l
c0101363	obj/kernel.asm	/^c0101363:	eb 70                	jmp    c01013d5 <cga_putc+0xde>$/;"	l
c0101365	obj/kernel.asm	/^c0101365:	0f b7 05 24 03 15 c0 	movzwl 0xc0150324,%eax$/;"	l
c010136c	obj/kernel.asm	/^c010136c:	83 c0 50             	add    $0x50,%eax$/;"	l
c010136f	obj/kernel.asm	/^c010136f:	66 a3 24 03 15 c0    	mov    %ax,0xc0150324$/;"	l
c0101375	obj/kernel.asm	/^c0101375:	0f b7 1d 24 03 15 c0 	movzwl 0xc0150324,%ebx$/;"	l
c010137c	obj/kernel.asm	/^c010137c:	0f b7 0d 24 03 15 c0 	movzwl 0xc0150324,%ecx$/;"	l
c0101383	obj/kernel.asm	/^c0101383:	0f b7 c1             	movzwl %cx,%eax$/;"	l
c0101386	obj/kernel.asm	/^c0101386:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
c010138c	obj/kernel.asm	/^c010138c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010138f	obj/kernel.asm	/^c010138f:	89 c2                	mov    %eax,%edx$/;"	l
c0101391	obj/kernel.asm	/^c0101391:	66 c1 ea 06          	shr    $0x6,%dx$/;"	l
c0101395	obj/kernel.asm	/^c0101395:	89 d0                	mov    %edx,%eax$/;"	l
c0101397	obj/kernel.asm	/^c0101397:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010139a	obj/kernel.asm	/^c010139a:	01 d0                	add    %edx,%eax$/;"	l
c010139c	obj/kernel.asm	/^c010139c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c010139f	obj/kernel.asm	/^c010139f:	29 c1                	sub    %eax,%ecx$/;"	l
c01013a1	obj/kernel.asm	/^c01013a1:	89 ca                	mov    %ecx,%edx$/;"	l
c01013a3	obj/kernel.asm	/^c01013a3:	89 d8                	mov    %ebx,%eax$/;"	l
c01013a5	obj/kernel.asm	/^c01013a5:	29 d0                	sub    %edx,%eax$/;"	l
c01013a7	obj/kernel.asm	/^c01013a7:	66 a3 24 03 15 c0    	mov    %ax,0xc0150324$/;"	l
c01013ad	obj/kernel.asm	/^c01013ad:	eb 26                	jmp    c01013d5 <cga_putc+0xde>$/;"	l
c01013af	obj/kernel.asm	/^c01013af:	8b 0d 20 03 15 c0    	mov    0xc0150320,%ecx$/;"	l
c01013b5	obj/kernel.asm	/^c01013b5:	0f b7 05 24 03 15 c0 	movzwl 0xc0150324,%eax$/;"	l
c01013bc	obj/kernel.asm	/^c01013bc:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01013bf	obj/kernel.asm	/^c01013bf:	66 89 15 24 03 15 c0 	mov    %dx,0xc0150324$/;"	l
c01013c6	obj/kernel.asm	/^c01013c6:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01013c9	obj/kernel.asm	/^c01013c9:	01 c0                	add    %eax,%eax$/;"	l
c01013cb	obj/kernel.asm	/^c01013cb:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c01013ce	obj/kernel.asm	/^c01013ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01013d1	obj/kernel.asm	/^c01013d1:	66 89 02             	mov    %ax,(%edx)$/;"	l
c01013d4	obj/kernel.asm	/^c01013d4:	90                   	nop$/;"	l
c01013d5	obj/kernel.asm	/^c01013d5:	0f b7 05 24 03 15 c0 	movzwl 0xc0150324,%eax$/;"	l
c01013dc	obj/kernel.asm	/^c01013dc:	66 3d cf 07          	cmp    $0x7cf,%ax$/;"	l
c01013e0	obj/kernel.asm	/^c01013e0:	76 5b                	jbe    c010143d <cga_putc+0x146>$/;"	l
c01013e2	obj/kernel.asm	/^c01013e2:	a1 20 03 15 c0       	mov    0xc0150320,%eax$/;"	l
c01013e7	obj/kernel.asm	/^c01013e7:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
c01013ed	obj/kernel.asm	/^c01013ed:	a1 20 03 15 c0       	mov    0xc0150320,%eax$/;"	l
c01013f2	obj/kernel.asm	/^c01013f2:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
c01013f9	obj/kernel.asm	/^c01013f9:	00 $/;"	l
c01013fa	obj/kernel.asm	/^c01013fa:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01013fe	obj/kernel.asm	/^c01013fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101401	obj/kernel.asm	/^c0101401:	e8 a9 41 01 00       	call   c01155af <memmove>$/;"	l
c0101406	obj/kernel.asm	/^c0101406:	c7 45 f4 80 07 00 00 	movl   $0x780,-0xc(%ebp)$/;"	l
c010140d	obj/kernel.asm	/^c010140d:	eb 15                	jmp    c0101424 <cga_putc+0x12d>$/;"	l
c010140f	obj/kernel.asm	/^c010140f:	a1 20 03 15 c0       	mov    0xc0150320,%eax$/;"	l
c0101414	obj/kernel.asm	/^c0101414:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101417	obj/kernel.asm	/^c0101417:	01 d2                	add    %edx,%edx$/;"	l
c0101419	obj/kernel.asm	/^c0101419:	01 d0                	add    %edx,%eax$/;"	l
c010141b	obj/kernel.asm	/^c010141b:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
c0101420	obj/kernel.asm	/^c0101420:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0101424	obj/kernel.asm	/^c0101424:	81 7d f4 cf 07 00 00 	cmpl   $0x7cf,-0xc(%ebp)$/;"	l
c010142b	obj/kernel.asm	/^c010142b:	7e e2                	jle    c010140f <cga_putc+0x118>$/;"	l
c010142d	obj/kernel.asm	/^c010142d:	0f b7 05 24 03 15 c0 	movzwl 0xc0150324,%eax$/;"	l
c0101434	obj/kernel.asm	/^c0101434:	83 e8 50             	sub    $0x50,%eax$/;"	l
c0101437	obj/kernel.asm	/^c0101437:	66 a3 24 03 15 c0    	mov    %ax,0xc0150324$/;"	l
c010143d	obj/kernel.asm	/^c010143d:	0f b7 05 26 03 15 c0 	movzwl 0xc0150326,%eax$/;"	l
c0101444	obj/kernel.asm	/^c0101444:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101447	obj/kernel.asm	/^c0101447:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c010144b	obj/kernel.asm	/^c010144b:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c010144f	obj/kernel.asm	/^c010144f:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101453	obj/kernel.asm	/^c0101453:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101457	obj/kernel.asm	/^c0101457:	ee                   	out    %al,(%dx)$/;"	l
c0101458	obj/kernel.asm	/^c0101458:	0f b7 05 24 03 15 c0 	movzwl 0xc0150324,%eax$/;"	l
c010145f	obj/kernel.asm	/^c010145f:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0101463	obj/kernel.asm	/^c0101463:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101466	obj/kernel.asm	/^c0101466:	0f b7 15 26 03 15 c0 	movzwl 0xc0150326,%edx$/;"	l
c010146d	obj/kernel.asm	/^c010146d:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101470	obj/kernel.asm	/^c0101470:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101473	obj/kernel.asm	/^c0101473:	66 89 55 ee          	mov    %dx,-0x12(%ebp)$/;"	l
c0101477	obj/kernel.asm	/^c0101477:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c010147a	obj/kernel.asm	/^c010147a:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c010147e	obj/kernel.asm	/^c010147e:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101482	obj/kernel.asm	/^c0101482:	ee                   	out    %al,(%dx)$/;"	l
c0101483	obj/kernel.asm	/^c0101483:	0f b7 05 26 03 15 c0 	movzwl 0xc0150326,%eax$/;"	l
c010148a	obj/kernel.asm	/^c010148a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010148d	obj/kernel.asm	/^c010148d:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101491	obj/kernel.asm	/^c0101491:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c0101495	obj/kernel.asm	/^c0101495:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101499	obj/kernel.asm	/^c0101499:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c010149d	obj/kernel.asm	/^c010149d:	ee                   	out    %al,(%dx)$/;"	l
c010149e	obj/kernel.asm	/^c010149e:	0f b7 05 24 03 15 c0 	movzwl 0xc0150324,%eax$/;"	l
c01014a5	obj/kernel.asm	/^c01014a5:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01014a8	obj/kernel.asm	/^c01014a8:	0f b7 15 26 03 15 c0 	movzwl 0xc0150326,%edx$/;"	l
c01014af	obj/kernel.asm	/^c01014af:	83 c2 01             	add    $0x1,%edx$/;"	l
c01014b2	obj/kernel.asm	/^c01014b2:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01014b5	obj/kernel.asm	/^c01014b5:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c01014b9	obj/kernel.asm	/^c01014b9:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c01014bc	obj/kernel.asm	/^c01014bc:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01014c0	obj/kernel.asm	/^c01014c0:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01014c4	obj/kernel.asm	/^c01014c4:	ee                   	out    %al,(%dx)$/;"	l
c01014c5	obj/kernel.asm	/^c01014c5:	83 c4 34             	add    $0x34,%esp$/;"	l
c01014c8	obj/kernel.asm	/^c01014c8:	5b                   	pop    %ebx$/;"	l
c01014c9	obj/kernel.asm	/^c01014c9:	5d                   	pop    %ebp$/;"	l
c01014ca	obj/kernel.asm	/^c01014ca:	c3                   	ret    $/;"	l
c01014cb	obj/kernel.asm	/^c01014cb <serial_putc_sub>:$/;"	l
c01014cb	obj/kernel.asm	/^c01014cb:	55                   	push   %ebp$/;"	l
c01014cc	obj/kernel.asm	/^c01014cc:	89 e5                	mov    %esp,%ebp$/;"	l
c01014ce	obj/kernel.asm	/^c01014ce:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01014d1	obj/kernel.asm	/^c01014d1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01014d8	obj/kernel.asm	/^c01014d8:	eb 09                	jmp    c01014e3 <serial_putc_sub+0x18>$/;"	l
c01014da	obj/kernel.asm	/^c01014da:	e8 4f fb ff ff       	call   c010102e <delay>$/;"	l
c01014df	obj/kernel.asm	/^c01014df:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01014e3	obj/kernel.asm	/^c01014e3:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c01014e9	obj/kernel.asm	/^c01014e9:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c01014ed	obj/kernel.asm	/^c01014ed:	89 c2                	mov    %eax,%edx$/;"	l
c01014ef	obj/kernel.asm	/^c01014ef:	ec                   	in     (%dx),%al$/;"	l
c01014f0	obj/kernel.asm	/^c01014f0:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01014f3	obj/kernel.asm	/^c01014f3:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01014f7	obj/kernel.asm	/^c01014f7:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01014fa	obj/kernel.asm	/^c01014fa:	83 e0 20             	and    $0x20,%eax$/;"	l
c01014fd	obj/kernel.asm	/^c01014fd:	85 c0                	test   %eax,%eax$/;"	l
c01014ff	obj/kernel.asm	/^c01014ff:	75 09                	jne    c010150a <serial_putc_sub+0x3f>$/;"	l
c0101501	obj/kernel.asm	/^c0101501:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101508	obj/kernel.asm	/^c0101508:	7e d0                	jle    c01014da <serial_putc_sub+0xf>$/;"	l
c010150a	obj/kernel.asm	/^c010150a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010150d	obj/kernel.asm	/^c010150d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101510	obj/kernel.asm	/^c0101510:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c0101516	obj/kernel.asm	/^c0101516:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101519	obj/kernel.asm	/^c0101519:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c010151d	obj/kernel.asm	/^c010151d:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101521	obj/kernel.asm	/^c0101521:	ee                   	out    %al,(%dx)$/;"	l
c0101522	obj/kernel.asm	/^c0101522:	c9                   	leave  $/;"	l
c0101523	obj/kernel.asm	/^c0101523:	c3                   	ret    $/;"	l
c0101524	obj/kernel.asm	/^c0101524 <serial_putc>:$/;"	l
c0101524	obj/kernel.asm	/^c0101524:	55                   	push   %ebp$/;"	l
c0101525	obj/kernel.asm	/^c0101525:	89 e5                	mov    %esp,%ebp$/;"	l
c0101527	obj/kernel.asm	/^c0101527:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010152a	obj/kernel.asm	/^c010152a:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c010152e	obj/kernel.asm	/^c010152e:	74 0d                	je     c010153d <serial_putc+0x19>$/;"	l
c0101530	obj/kernel.asm	/^c0101530:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101533	obj/kernel.asm	/^c0101533:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101536	obj/kernel.asm	/^c0101536:	e8 90 ff ff ff       	call   c01014cb <serial_putc_sub>$/;"	l
c010153b	obj/kernel.asm	/^c010153b:	eb 24                	jmp    c0101561 <serial_putc+0x3d>$/;"	l
c010153d	obj/kernel.asm	/^c010153d:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c0101544	obj/kernel.asm	/^c0101544:	e8 82 ff ff ff       	call   c01014cb <serial_putc_sub>$/;"	l
c0101549	obj/kernel.asm	/^c0101549:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c0101550	obj/kernel.asm	/^c0101550:	e8 76 ff ff ff       	call   c01014cb <serial_putc_sub>$/;"	l
c0101555	obj/kernel.asm	/^c0101555:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c010155c	obj/kernel.asm	/^c010155c:	e8 6a ff ff ff       	call   c01014cb <serial_putc_sub>$/;"	l
c0101561	obj/kernel.asm	/^c0101561:	c9                   	leave  $/;"	l
c0101562	obj/kernel.asm	/^c0101562:	c3                   	ret    $/;"	l
c0101563	obj/kernel.asm	/^c0101563 <cons_intr>:$/;"	l
c0101563	obj/kernel.asm	/^c0101563:	55                   	push   %ebp$/;"	l
c0101564	obj/kernel.asm	/^c0101564:	89 e5                	mov    %esp,%ebp$/;"	l
c0101566	obj/kernel.asm	/^c0101566:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101569	obj/kernel.asm	/^c0101569:	eb 33                	jmp    c010159e <cons_intr+0x3b>$/;"	l
c010156b	obj/kernel.asm	/^c010156b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010156f	obj/kernel.asm	/^c010156f:	74 2d                	je     c010159e <cons_intr+0x3b>$/;"	l
c0101571	obj/kernel.asm	/^c0101571:	a1 44 05 15 c0       	mov    0xc0150544,%eax$/;"	l
c0101576	obj/kernel.asm	/^c0101576:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101579	obj/kernel.asm	/^c0101579:	89 15 44 05 15 c0    	mov    %edx,0xc0150544$/;"	l
c010157f	obj/kernel.asm	/^c010157f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101582	obj/kernel.asm	/^c0101582:	88 90 40 03 15 c0    	mov    %dl,-0x3feafcc0(%eax)$/;"	l
c0101588	obj/kernel.asm	/^c0101588:	a1 44 05 15 c0       	mov    0xc0150544,%eax$/;"	l
c010158d	obj/kernel.asm	/^c010158d:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101592	obj/kernel.asm	/^c0101592:	75 0a                	jne    c010159e <cons_intr+0x3b>$/;"	l
c0101594	obj/kernel.asm	/^c0101594:	c7 05 44 05 15 c0 00 	movl   $0x0,0xc0150544$/;"	l
c010159b	obj/kernel.asm	/^c010159b:	00 00 00 $/;"	l
c010159e	obj/kernel.asm	/^c010159e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01015a1	obj/kernel.asm	/^c01015a1:	ff d0                	call   *%eax$/;"	l
c01015a3	obj/kernel.asm	/^c01015a3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01015a6	obj/kernel.asm	/^c01015a6:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)$/;"	l
c01015aa	obj/kernel.asm	/^c01015aa:	75 bf                	jne    c010156b <cons_intr+0x8>$/;"	l
c01015ac	obj/kernel.asm	/^c01015ac:	c9                   	leave  $/;"	l
c01015ad	obj/kernel.asm	/^c01015ad:	c3                   	ret    $/;"	l
c01015ae	obj/kernel.asm	/^c01015ae <serial_proc_data>:$/;"	l
c01015ae	obj/kernel.asm	/^c01015ae:	55                   	push   %ebp$/;"	l
c01015af	obj/kernel.asm	/^c01015af:	89 e5                	mov    %esp,%ebp$/;"	l
c01015b1	obj/kernel.asm	/^c01015b1:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01015b4	obj/kernel.asm	/^c01015b4:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c01015ba	obj/kernel.asm	/^c01015ba:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c01015be	obj/kernel.asm	/^c01015be:	89 c2                	mov    %eax,%edx$/;"	l
c01015c0	obj/kernel.asm	/^c01015c0:	ec                   	in     (%dx),%al$/;"	l
c01015c1	obj/kernel.asm	/^c01015c1:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01015c4	obj/kernel.asm	/^c01015c4:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01015c8	obj/kernel.asm	/^c01015c8:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01015cb	obj/kernel.asm	/^c01015cb:	83 e0 01             	and    $0x1,%eax$/;"	l
c01015ce	obj/kernel.asm	/^c01015ce:	85 c0                	test   %eax,%eax$/;"	l
c01015d0	obj/kernel.asm	/^c01015d0:	75 07                	jne    c01015d9 <serial_proc_data+0x2b>$/;"	l
c01015d2	obj/kernel.asm	/^c01015d2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01015d7	obj/kernel.asm	/^c01015d7:	eb 2a                	jmp    c0101603 <serial_proc_data+0x55>$/;"	l
c01015d9	obj/kernel.asm	/^c01015d9:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c01015df	obj/kernel.asm	/^c01015df:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01015e3	obj/kernel.asm	/^c01015e3:	89 c2                	mov    %eax,%edx$/;"	l
c01015e5	obj/kernel.asm	/^c01015e5:	ec                   	in     (%dx),%al$/;"	l
c01015e6	obj/kernel.asm	/^c01015e6:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c01015e9	obj/kernel.asm	/^c01015e9:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01015ed	obj/kernel.asm	/^c01015ed:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01015f0	obj/kernel.asm	/^c01015f0:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01015f3	obj/kernel.asm	/^c01015f3:	83 7d fc 7f          	cmpl   $0x7f,-0x4(%ebp)$/;"	l
c01015f7	obj/kernel.asm	/^c01015f7:	75 07                	jne    c0101600 <serial_proc_data+0x52>$/;"	l
c01015f9	obj/kernel.asm	/^c01015f9:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%ebp)$/;"	l
c0101600	obj/kernel.asm	/^c0101600:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101603	obj/kernel.asm	/^c0101603:	c9                   	leave  $/;"	l
c0101604	obj/kernel.asm	/^c0101604:	c3                   	ret    $/;"	l
c0101605	obj/kernel.asm	/^c0101605 <serial_intr>:$/;"	l
c0101605	obj/kernel.asm	/^c0101605:	55                   	push   %ebp$/;"	l
c0101606	obj/kernel.asm	/^c0101606:	89 e5                	mov    %esp,%ebp$/;"	l
c0101608	obj/kernel.asm	/^c0101608:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010160b	obj/kernel.asm	/^c010160b:	a1 28 03 15 c0       	mov    0xc0150328,%eax$/;"	l
c0101610	obj/kernel.asm	/^c0101610:	85 c0                	test   %eax,%eax$/;"	l
c0101612	obj/kernel.asm	/^c0101612:	74 0c                	je     c0101620 <serial_intr+0x1b>$/;"	l
c0101614	obj/kernel.asm	/^c0101614:	c7 04 24 ae 15 10 c0 	movl   $0xc01015ae,(%esp)$/;"	l
c010161b	obj/kernel.asm	/^c010161b:	e8 43 ff ff ff       	call   c0101563 <cons_intr>$/;"	l
c0101620	obj/kernel.asm	/^c0101620:	c9                   	leave  $/;"	l
c0101621	obj/kernel.asm	/^c0101621:	c3                   	ret    $/;"	l
c0101622	obj/kernel.asm	/^c0101622 <kbd_proc_data>:$/;"	l
c0101622	obj/kernel.asm	/^c0101622:	55                   	push   %ebp$/;"	l
c0101623	obj/kernel.asm	/^c0101623:	89 e5                	mov    %esp,%ebp$/;"	l
c0101625	obj/kernel.asm	/^c0101625:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0101628	obj/kernel.asm	/^c0101628:	66 c7 45 f0 64 00    	movw   $0x64,-0x10(%ebp)$/;"	l
c010162e	obj/kernel.asm	/^c010162e:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101632	obj/kernel.asm	/^c0101632:	89 c2                	mov    %eax,%edx$/;"	l
c0101634	obj/kernel.asm	/^c0101634:	ec                   	in     (%dx),%al$/;"	l
c0101635	obj/kernel.asm	/^c0101635:	88 45 ef             	mov    %al,-0x11(%ebp)$/;"	l
c0101638	obj/kernel.asm	/^c0101638:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
c010163c	obj/kernel.asm	/^c010163c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010163f	obj/kernel.asm	/^c010163f:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101642	obj/kernel.asm	/^c0101642:	85 c0                	test   %eax,%eax$/;"	l
c0101644	obj/kernel.asm	/^c0101644:	75 0a                	jne    c0101650 <kbd_proc_data+0x2e>$/;"	l
c0101646	obj/kernel.asm	/^c0101646:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010164b	obj/kernel.asm	/^c010164b:	e9 59 01 00 00       	jmp    c01017a9 <kbd_proc_data+0x187>$/;"	l
c0101650	obj/kernel.asm	/^c0101650:	66 c7 45 ec 60 00    	movw   $0x60,-0x14(%ebp)$/;"	l
c0101656	obj/kernel.asm	/^c0101656:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c010165a	obj/kernel.asm	/^c010165a:	89 c2                	mov    %eax,%edx$/;"	l
c010165c	obj/kernel.asm	/^c010165c:	ec                   	in     (%dx),%al$/;"	l
c010165d	obj/kernel.asm	/^c010165d:	88 45 eb             	mov    %al,-0x15(%ebp)$/;"	l
c0101660	obj/kernel.asm	/^c0101660:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
c0101664	obj/kernel.asm	/^c0101664:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0101667	obj/kernel.asm	/^c0101667:	80 7d f3 e0          	cmpb   $0xe0,-0xd(%ebp)$/;"	l
c010166b	obj/kernel.asm	/^c010166b:	75 17                	jne    c0101684 <kbd_proc_data+0x62>$/;"	l
c010166d	obj/kernel.asm	/^c010166d:	a1 48 05 15 c0       	mov    0xc0150548,%eax$/;"	l
c0101672	obj/kernel.asm	/^c0101672:	83 c8 40             	or     $0x40,%eax$/;"	l
c0101675	obj/kernel.asm	/^c0101675:	a3 48 05 15 c0       	mov    %eax,0xc0150548$/;"	l
c010167a	obj/kernel.asm	/^c010167a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010167f	obj/kernel.asm	/^c010167f:	e9 25 01 00 00       	jmp    c01017a9 <kbd_proc_data+0x187>$/;"	l
c0101684	obj/kernel.asm	/^c0101684:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101688	obj/kernel.asm	/^c0101688:	84 c0                	test   %al,%al$/;"	l
c010168a	obj/kernel.asm	/^c010168a:	79 47                	jns    c01016d3 <kbd_proc_data+0xb1>$/;"	l
c010168c	obj/kernel.asm	/^c010168c:	a1 48 05 15 c0       	mov    0xc0150548,%eax$/;"	l
c0101691	obj/kernel.asm	/^c0101691:	83 e0 40             	and    $0x40,%eax$/;"	l
c0101694	obj/kernel.asm	/^c0101694:	85 c0                	test   %eax,%eax$/;"	l
c0101696	obj/kernel.asm	/^c0101696:	75 09                	jne    c01016a1 <kbd_proc_data+0x7f>$/;"	l
c0101698	obj/kernel.asm	/^c0101698:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c010169c	obj/kernel.asm	/^c010169c:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c010169f	obj/kernel.asm	/^c010169f:	eb 04                	jmp    c01016a5 <kbd_proc_data+0x83>$/;"	l
c01016a1	obj/kernel.asm	/^c01016a1:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01016a5	obj/kernel.asm	/^c01016a5:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c01016a8	obj/kernel.asm	/^c01016a8:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01016ac	obj/kernel.asm	/^c01016ac:	0f b6 80 60 f0 14 c0 	movzbl -0x3feb0fa0(%eax),%eax$/;"	l
c01016b3	obj/kernel.asm	/^c01016b3:	83 c8 40             	or     $0x40,%eax$/;"	l
c01016b6	obj/kernel.asm	/^c01016b6:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01016b9	obj/kernel.asm	/^c01016b9:	f7 d0                	not    %eax$/;"	l
c01016bb	obj/kernel.asm	/^c01016bb:	89 c2                	mov    %eax,%edx$/;"	l
c01016bd	obj/kernel.asm	/^c01016bd:	a1 48 05 15 c0       	mov    0xc0150548,%eax$/;"	l
c01016c2	obj/kernel.asm	/^c01016c2:	21 d0                	and    %edx,%eax$/;"	l
c01016c4	obj/kernel.asm	/^c01016c4:	a3 48 05 15 c0       	mov    %eax,0xc0150548$/;"	l
c01016c9	obj/kernel.asm	/^c01016c9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01016ce	obj/kernel.asm	/^c01016ce:	e9 d6 00 00 00       	jmp    c01017a9 <kbd_proc_data+0x187>$/;"	l
c01016d3	obj/kernel.asm	/^c01016d3:	a1 48 05 15 c0       	mov    0xc0150548,%eax$/;"	l
c01016d8	obj/kernel.asm	/^c01016d8:	83 e0 40             	and    $0x40,%eax$/;"	l
c01016db	obj/kernel.asm	/^c01016db:	85 c0                	test   %eax,%eax$/;"	l
c01016dd	obj/kernel.asm	/^c01016dd:	74 11                	je     c01016f0 <kbd_proc_data+0xce>$/;"	l
c01016df	obj/kernel.asm	/^c01016df:	80 4d f3 80          	orb    $0x80,-0xd(%ebp)$/;"	l
c01016e3	obj/kernel.asm	/^c01016e3:	a1 48 05 15 c0       	mov    0xc0150548,%eax$/;"	l
c01016e8	obj/kernel.asm	/^c01016e8:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
c01016eb	obj/kernel.asm	/^c01016eb:	a3 48 05 15 c0       	mov    %eax,0xc0150548$/;"	l
c01016f0	obj/kernel.asm	/^c01016f0:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01016f4	obj/kernel.asm	/^c01016f4:	0f b6 80 60 f0 14 c0 	movzbl -0x3feb0fa0(%eax),%eax$/;"	l
c01016fb	obj/kernel.asm	/^c01016fb:	0f b6 d0             	movzbl %al,%edx$/;"	l
c01016fe	obj/kernel.asm	/^c01016fe:	a1 48 05 15 c0       	mov    0xc0150548,%eax$/;"	l
c0101703	obj/kernel.asm	/^c0101703:	09 d0                	or     %edx,%eax$/;"	l
c0101705	obj/kernel.asm	/^c0101705:	a3 48 05 15 c0       	mov    %eax,0xc0150548$/;"	l
c010170a	obj/kernel.asm	/^c010170a:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c010170e	obj/kernel.asm	/^c010170e:	0f b6 80 60 f1 14 c0 	movzbl -0x3feb0ea0(%eax),%eax$/;"	l
c0101715	obj/kernel.asm	/^c0101715:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101718	obj/kernel.asm	/^c0101718:	a1 48 05 15 c0       	mov    0xc0150548,%eax$/;"	l
c010171d	obj/kernel.asm	/^c010171d:	31 d0                	xor    %edx,%eax$/;"	l
c010171f	obj/kernel.asm	/^c010171f:	a3 48 05 15 c0       	mov    %eax,0xc0150548$/;"	l
c0101724	obj/kernel.asm	/^c0101724:	a1 48 05 15 c0       	mov    0xc0150548,%eax$/;"	l
c0101729	obj/kernel.asm	/^c0101729:	83 e0 03             	and    $0x3,%eax$/;"	l
c010172c	obj/kernel.asm	/^c010172c:	8b 14 85 60 f5 14 c0 	mov    -0x3feb0aa0(,%eax,4),%edx$/;"	l
c0101733	obj/kernel.asm	/^c0101733:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101737	obj/kernel.asm	/^c0101737:	01 d0                	add    %edx,%eax$/;"	l
c0101739	obj/kernel.asm	/^c0101739:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010173c	obj/kernel.asm	/^c010173c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010173f	obj/kernel.asm	/^c010173f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101742	obj/kernel.asm	/^c0101742:	a1 48 05 15 c0       	mov    0xc0150548,%eax$/;"	l
c0101747	obj/kernel.asm	/^c0101747:	83 e0 08             	and    $0x8,%eax$/;"	l
c010174a	obj/kernel.asm	/^c010174a:	85 c0                	test   %eax,%eax$/;"	l
c010174c	obj/kernel.asm	/^c010174c:	74 22                	je     c0101770 <kbd_proc_data+0x14e>$/;"	l
c010174e	obj/kernel.asm	/^c010174e:	83 7d f4 60          	cmpl   $0x60,-0xc(%ebp)$/;"	l
c0101752	obj/kernel.asm	/^c0101752:	7e 0c                	jle    c0101760 <kbd_proc_data+0x13e>$/;"	l
c0101754	obj/kernel.asm	/^c0101754:	83 7d f4 7a          	cmpl   $0x7a,-0xc(%ebp)$/;"	l
c0101758	obj/kernel.asm	/^c0101758:	7f 06                	jg     c0101760 <kbd_proc_data+0x13e>$/;"	l
c010175a	obj/kernel.asm	/^c010175a:	83 6d f4 20          	subl   $0x20,-0xc(%ebp)$/;"	l
c010175e	obj/kernel.asm	/^c010175e:	eb 10                	jmp    c0101770 <kbd_proc_data+0x14e>$/;"	l
c0101760	obj/kernel.asm	/^c0101760:	83 7d f4 40          	cmpl   $0x40,-0xc(%ebp)$/;"	l
c0101764	obj/kernel.asm	/^c0101764:	7e 0a                	jle    c0101770 <kbd_proc_data+0x14e>$/;"	l
c0101766	obj/kernel.asm	/^c0101766:	83 7d f4 5a          	cmpl   $0x5a,-0xc(%ebp)$/;"	l
c010176a	obj/kernel.asm	/^c010176a:	7f 04                	jg     c0101770 <kbd_proc_data+0x14e>$/;"	l
c010176c	obj/kernel.asm	/^c010176c:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0101770	obj/kernel.asm	/^c0101770:	a1 48 05 15 c0       	mov    0xc0150548,%eax$/;"	l
c0101775	obj/kernel.asm	/^c0101775:	f7 d0                	not    %eax$/;"	l
c0101777	obj/kernel.asm	/^c0101777:	83 e0 06             	and    $0x6,%eax$/;"	l
c010177a	obj/kernel.asm	/^c010177a:	85 c0                	test   %eax,%eax$/;"	l
c010177c	obj/kernel.asm	/^c010177c:	75 28                	jne    c01017a6 <kbd_proc_data+0x184>$/;"	l
c010177e	obj/kernel.asm	/^c010177e:	81 7d f4 e9 00 00 00 	cmpl   $0xe9,-0xc(%ebp)$/;"	l
c0101785	obj/kernel.asm	/^c0101785:	75 1f                	jne    c01017a6 <kbd_proc_data+0x184>$/;"	l
c0101787	obj/kernel.asm	/^c0101787:	c7 04 24 1d 5a 11 c0 	movl   $0xc0115a1d,(%esp)$/;"	l
c010178e	obj/kernel.asm	/^c010178e:	e8 d2 eb ff ff       	call   c0100365 <cprintf>$/;"	l
c0101793	obj/kernel.asm	/^c0101793:	66 c7 45 e8 92 00    	movw   $0x92,-0x18(%ebp)$/;"	l
c0101799	obj/kernel.asm	/^c0101799:	c6 45 e7 03          	movb   $0x3,-0x19(%ebp)$/;"	l
c010179d	obj/kernel.asm	/^c010179d:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
c01017a1	obj/kernel.asm	/^c01017a1:	0f b7 55 e8          	movzwl -0x18(%ebp),%edx$/;"	l
c01017a5	obj/kernel.asm	/^c01017a5:	ee                   	out    %al,(%dx)$/;"	l
c01017a6	obj/kernel.asm	/^c01017a6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01017a9	obj/kernel.asm	/^c01017a9:	c9                   	leave  $/;"	l
c01017aa	obj/kernel.asm	/^c01017aa:	c3                   	ret    $/;"	l
c01017ab	obj/kernel.asm	/^c01017ab <kbd_intr>:$/;"	l
c01017ab	obj/kernel.asm	/^c01017ab:	55                   	push   %ebp$/;"	l
c01017ac	obj/kernel.asm	/^c01017ac:	89 e5                	mov    %esp,%ebp$/;"	l
c01017ae	obj/kernel.asm	/^c01017ae:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01017b1	obj/kernel.asm	/^c01017b1:	c7 04 24 22 16 10 c0 	movl   $0xc0101622,(%esp)$/;"	l
c01017b8	obj/kernel.asm	/^c01017b8:	e8 a6 fd ff ff       	call   c0101563 <cons_intr>$/;"	l
c01017bd	obj/kernel.asm	/^c01017bd:	c9                   	leave  $/;"	l
c01017be	obj/kernel.asm	/^c01017be:	c3                   	ret    $/;"	l
c01017bf	obj/kernel.asm	/^c01017bf <kbd_init>:$/;"	l
c01017bf	obj/kernel.asm	/^c01017bf:	55                   	push   %ebp$/;"	l
c01017c0	obj/kernel.asm	/^c01017c0:	89 e5                	mov    %esp,%ebp$/;"	l
c01017c2	obj/kernel.asm	/^c01017c2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01017c5	obj/kernel.asm	/^c01017c5:	e8 e1 ff ff ff       	call   c01017ab <kbd_intr>$/;"	l
c01017ca	obj/kernel.asm	/^c01017ca:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01017d1	obj/kernel.asm	/^c01017d1:	e8 b2 09 00 00       	call   c0102188 <pic_enable>$/;"	l
c01017d6	obj/kernel.asm	/^c01017d6:	c9                   	leave  $/;"	l
c01017d7	obj/kernel.asm	/^c01017d7:	c3                   	ret    $/;"	l
c01017d8	obj/kernel.asm	/^c01017d8 <cons_init>:$/;"	l
c01017d8	obj/kernel.asm	/^c01017d8:	55                   	push   %ebp$/;"	l
c01017d9	obj/kernel.asm	/^c01017d9:	89 e5                	mov    %esp,%ebp$/;"	l
c01017db	obj/kernel.asm	/^c01017db:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01017de	obj/kernel.asm	/^c01017de:	e8 93 f8 ff ff       	call   c0101076 <cga_init>$/;"	l
c01017e3	obj/kernel.asm	/^c01017e3:	e8 74 f9 ff ff       	call   c010115c <serial_init>$/;"	l
c01017e8	obj/kernel.asm	/^c01017e8:	e8 d2 ff ff ff       	call   c01017bf <kbd_init>$/;"	l
c01017ed	obj/kernel.asm	/^c01017ed:	a1 28 03 15 c0       	mov    0xc0150328,%eax$/;"	l
c01017f2	obj/kernel.asm	/^c01017f2:	85 c0                	test   %eax,%eax$/;"	l
c01017f4	obj/kernel.asm	/^c01017f4:	75 0c                	jne    c0101802 <cons_init+0x2a>$/;"	l
c01017f6	obj/kernel.asm	/^c01017f6:	c7 04 24 29 5a 11 c0 	movl   $0xc0115a29,(%esp)$/;"	l
c01017fd	obj/kernel.asm	/^c01017fd:	e8 63 eb ff ff       	call   c0100365 <cprintf>$/;"	l
c0101802	obj/kernel.asm	/^c0101802:	c9                   	leave  $/;"	l
c0101803	obj/kernel.asm	/^c0101803:	c3                   	ret    $/;"	l
c0101804	obj/kernel.asm	/^c0101804 <cons_putc>:$/;"	l
c0101804	obj/kernel.asm	/^c0101804:	55                   	push   %ebp$/;"	l
c0101805	obj/kernel.asm	/^c0101805:	89 e5                	mov    %esp,%ebp$/;"	l
c0101807	obj/kernel.asm	/^c0101807:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010180a	obj/kernel.asm	/^c010180a:	e8 e2 f7 ff ff       	call   c0100ff1 <__intr_save>$/;"	l
c010180f	obj/kernel.asm	/^c010180f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101812	obj/kernel.asm	/^c0101812:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101815	obj/kernel.asm	/^c0101815:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101818	obj/kernel.asm	/^c0101818:	e8 9b fa ff ff       	call   c01012b8 <lpt_putc>$/;"	l
c010181d	obj/kernel.asm	/^c010181d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101820	obj/kernel.asm	/^c0101820:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101823	obj/kernel.asm	/^c0101823:	e8 cf fa ff ff       	call   c01012f7 <cga_putc>$/;"	l
c0101828	obj/kernel.asm	/^c0101828:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010182b	obj/kernel.asm	/^c010182b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010182e	obj/kernel.asm	/^c010182e:	e8 f1 fc ff ff       	call   c0101524 <serial_putc>$/;"	l
c0101833	obj/kernel.asm	/^c0101833:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101836	obj/kernel.asm	/^c0101836:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101839	obj/kernel.asm	/^c0101839:	e8 dd f7 ff ff       	call   c010101b <__intr_restore>$/;"	l
c010183e	obj/kernel.asm	/^c010183e:	c9                   	leave  $/;"	l
c010183f	obj/kernel.asm	/^c010183f:	c3                   	ret    $/;"	l
c0101840	obj/kernel.asm	/^c0101840 <cons_getc>:$/;"	l
c0101840	obj/kernel.asm	/^c0101840:	55                   	push   %ebp$/;"	l
c0101841	obj/kernel.asm	/^c0101841:	89 e5                	mov    %esp,%ebp$/;"	l
c0101843	obj/kernel.asm	/^c0101843:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0101846	obj/kernel.asm	/^c0101846:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010184d	obj/kernel.asm	/^c010184d:	e8 9f f7 ff ff       	call   c0100ff1 <__intr_save>$/;"	l
c0101852	obj/kernel.asm	/^c0101852:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101855	obj/kernel.asm	/^c0101855:	e8 ab fd ff ff       	call   c0101605 <serial_intr>$/;"	l
c010185a	obj/kernel.asm	/^c010185a:	e8 4c ff ff ff       	call   c01017ab <kbd_intr>$/;"	l
c010185f	obj/kernel.asm	/^c010185f:	8b 15 40 05 15 c0    	mov    0xc0150540,%edx$/;"	l
c0101865	obj/kernel.asm	/^c0101865:	a1 44 05 15 c0       	mov    0xc0150544,%eax$/;"	l
c010186a	obj/kernel.asm	/^c010186a:	39 c2                	cmp    %eax,%edx$/;"	l
c010186c	obj/kernel.asm	/^c010186c:	74 31                	je     c010189f <cons_getc+0x5f>$/;"	l
c010186e	obj/kernel.asm	/^c010186e:	a1 40 05 15 c0       	mov    0xc0150540,%eax$/;"	l
c0101873	obj/kernel.asm	/^c0101873:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101876	obj/kernel.asm	/^c0101876:	89 15 40 05 15 c0    	mov    %edx,0xc0150540$/;"	l
c010187c	obj/kernel.asm	/^c010187c:	0f b6 80 40 03 15 c0 	movzbl -0x3feafcc0(%eax),%eax$/;"	l
c0101883	obj/kernel.asm	/^c0101883:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101886	obj/kernel.asm	/^c0101886:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101889	obj/kernel.asm	/^c0101889:	a1 40 05 15 c0       	mov    0xc0150540,%eax$/;"	l
c010188e	obj/kernel.asm	/^c010188e:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101893	obj/kernel.asm	/^c0101893:	75 0a                	jne    c010189f <cons_getc+0x5f>$/;"	l
c0101895	obj/kernel.asm	/^c0101895:	c7 05 40 05 15 c0 00 	movl   $0x0,0xc0150540$/;"	l
c010189c	obj/kernel.asm	/^c010189c:	00 00 00 $/;"	l
c010189f	obj/kernel.asm	/^c010189f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01018a2	obj/kernel.asm	/^c01018a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01018a5	obj/kernel.asm	/^c01018a5:	e8 71 f7 ff ff       	call   c010101b <__intr_restore>$/;"	l
c01018aa	obj/kernel.asm	/^c01018aa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01018ad	obj/kernel.asm	/^c01018ad:	c9                   	leave  $/;"	l
c01018ae	obj/kernel.asm	/^c01018ae:	c3                   	ret    $/;"	l
c01018af	obj/kernel.asm	/^c01018af <ide_wait_ready>:$/;"	l
c01018af	obj/kernel.asm	/^c01018af:	55                   	push   %ebp$/;"	l
c01018b0	obj/kernel.asm	/^c01018b0:	89 e5                	mov    %esp,%ebp$/;"	l
c01018b2	obj/kernel.asm	/^c01018b2:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01018b5	obj/kernel.asm	/^c01018b5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01018b8	obj/kernel.asm	/^c01018b8:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c01018bc	obj/kernel.asm	/^c01018bc:	90                   	nop$/;"	l
c01018bd	obj/kernel.asm	/^c01018bd:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c01018c1	obj/kernel.asm	/^c01018c1:	83 c0 07             	add    $0x7,%eax$/;"	l
c01018c4	obj/kernel.asm	/^c01018c4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01018c7	obj/kernel.asm	/^c01018c7:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c01018cb	obj/kernel.asm	/^c01018cb:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c01018cf	obj/kernel.asm	/^c01018cf:	89 c2                	mov    %eax,%edx$/;"	l
c01018d1	obj/kernel.asm	/^c01018d1:	ec                   	in     (%dx),%al$/;"	l
c01018d2	obj/kernel.asm	/^c01018d2:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01018d5	obj/kernel.asm	/^c01018d5:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01018d9	obj/kernel.asm	/^c01018d9:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01018dc	obj/kernel.asm	/^c01018dc:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01018df	obj/kernel.asm	/^c01018df:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01018e2	obj/kernel.asm	/^c01018e2:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
c01018e7	obj/kernel.asm	/^c01018e7:	85 c0                	test   %eax,%eax$/;"	l
c01018e9	obj/kernel.asm	/^c01018e9:	75 d2                	jne    c01018bd <ide_wait_ready+0xe>$/;"	l
c01018eb	obj/kernel.asm	/^c01018eb:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01018ef	obj/kernel.asm	/^c01018ef:	74 11                	je     c0101902 <ide_wait_ready+0x53>$/;"	l
c01018f1	obj/kernel.asm	/^c01018f1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01018f4	obj/kernel.asm	/^c01018f4:	83 e0 21             	and    $0x21,%eax$/;"	l
c01018f7	obj/kernel.asm	/^c01018f7:	85 c0                	test   %eax,%eax$/;"	l
c01018f9	obj/kernel.asm	/^c01018f9:	74 07                	je     c0101902 <ide_wait_ready+0x53>$/;"	l
c01018fb	obj/kernel.asm	/^c01018fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101900	obj/kernel.asm	/^c0101900:	eb 05                	jmp    c0101907 <ide_wait_ready+0x58>$/;"	l
c0101902	obj/kernel.asm	/^c0101902:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101907	obj/kernel.asm	/^c0101907:	c9                   	leave  $/;"	l
c0101908	obj/kernel.asm	/^c0101908:	c3                   	ret    $/;"	l
c0101909	obj/kernel.asm	/^c0101909 <ide_init>:$/;"	l
c0101909	obj/kernel.asm	/^c0101909:	55                   	push   %ebp$/;"	l
c010190a	obj/kernel.asm	/^c010190a:	89 e5                	mov    %esp,%ebp$/;"	l
c010190c	obj/kernel.asm	/^c010190c:	57                   	push   %edi$/;"	l
c010190d	obj/kernel.asm	/^c010190d:	53                   	push   %ebx$/;"	l
c010190e	obj/kernel.asm	/^c010190e:	81 ec 50 02 00 00    	sub    $0x250,%esp$/;"	l
c0101914	obj/kernel.asm	/^c0101914:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)$/;"	l
c010191a	obj/kernel.asm	/^c010191a:	e9 d6 02 00 00       	jmp    c0101bf5 <ide_init+0x2ec>$/;"	l
c010191f	obj/kernel.asm	/^c010191f:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101923	obj/kernel.asm	/^c0101923:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101926	obj/kernel.asm	/^c0101926:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010192d	obj/kernel.asm	/^c010192d:	29 c2                	sub    %eax,%edx$/;"	l
c010192f	obj/kernel.asm	/^c010192f:	8d 82 60 05 15 c0    	lea    -0x3feafaa0(%edx),%eax$/;"	l
c0101935	obj/kernel.asm	/^c0101935:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0101938	obj/kernel.asm	/^c0101938:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010193c	obj/kernel.asm	/^c010193c:	66 d1 e8             	shr    %ax$/;"	l
c010193f	obj/kernel.asm	/^c010193f:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101942	obj/kernel.asm	/^c0101942:	0f b7 04 85 48 5a 11 	movzwl -0x3feea5b8(,%eax,4),%eax$/;"	l
c0101949	obj/kernel.asm	/^c0101949:	c0 $/;"	l
c010194a	obj/kernel.asm	/^c010194a:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c010194e	obj/kernel.asm	/^c010194e:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101952	obj/kernel.asm	/^c0101952:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101959	obj/kernel.asm	/^c0101959:	00 $/;"	l
c010195a	obj/kernel.asm	/^c010195a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010195d	obj/kernel.asm	/^c010195d:	e8 4d ff ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c0101962	obj/kernel.asm	/^c0101962:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101966	obj/kernel.asm	/^c0101966:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101969	obj/kernel.asm	/^c0101969:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c010196c	obj/kernel.asm	/^c010196c:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c010196f	obj/kernel.asm	/^c010196f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101972	obj/kernel.asm	/^c0101972:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101976	obj/kernel.asm	/^c0101976:	83 c2 06             	add    $0x6,%edx$/;"	l
c0101979	obj/kernel.asm	/^c0101979:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010197c	obj/kernel.asm	/^c010197c:	66 89 55 d2          	mov    %dx,-0x2e(%ebp)$/;"	l
c0101980	obj/kernel.asm	/^c0101980:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0101983	obj/kernel.asm	/^c0101983:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c0101987	obj/kernel.asm	/^c0101987:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c010198b	obj/kernel.asm	/^c010198b:	ee                   	out    %al,(%dx)$/;"	l
c010198c	obj/kernel.asm	/^c010198c:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101990	obj/kernel.asm	/^c0101990:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101997	obj/kernel.asm	/^c0101997:	00 $/;"	l
c0101998	obj/kernel.asm	/^c0101998:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010199b	obj/kernel.asm	/^c010199b:	e8 0f ff ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c01019a0	obj/kernel.asm	/^c01019a0:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01019a4	obj/kernel.asm	/^c01019a4:	83 c0 07             	add    $0x7,%eax$/;"	l
c01019a7	obj/kernel.asm	/^c01019a7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01019aa	obj/kernel.asm	/^c01019aa:	66 89 45 ce          	mov    %ax,-0x32(%ebp)$/;"	l
c01019ae	obj/kernel.asm	/^c01019ae:	c6 45 cd ec          	movb   $0xec,-0x33(%ebp)$/;"	l
c01019b2	obj/kernel.asm	/^c01019b2:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c01019b6	obj/kernel.asm	/^c01019b6:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c01019ba	obj/kernel.asm	/^c01019ba:	ee                   	out    %al,(%dx)$/;"	l
c01019bb	obj/kernel.asm	/^c01019bb:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01019bf	obj/kernel.asm	/^c01019bf:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01019c6	obj/kernel.asm	/^c01019c6:	00 $/;"	l
c01019c7	obj/kernel.asm	/^c01019c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01019ca	obj/kernel.asm	/^c01019ca:	e8 e0 fe ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c01019cf	obj/kernel.asm	/^c01019cf:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01019d3	obj/kernel.asm	/^c01019d3:	83 c0 07             	add    $0x7,%eax$/;"	l
c01019d6	obj/kernel.asm	/^c01019d6:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01019d9	obj/kernel.asm	/^c01019d9:	66 89 45 ca          	mov    %ax,-0x36(%ebp)$/;"	l
c01019dd	obj/kernel.asm	/^c01019dd:	0f b7 45 ca          	movzwl -0x36(%ebp),%eax$/;"	l
c01019e1	obj/kernel.asm	/^c01019e1:	89 c2                	mov    %eax,%edx$/;"	l
c01019e3	obj/kernel.asm	/^c01019e3:	ec                   	in     (%dx),%al$/;"	l
c01019e4	obj/kernel.asm	/^c01019e4:	88 45 c9             	mov    %al,-0x37(%ebp)$/;"	l
c01019e7	obj/kernel.asm	/^c01019e7:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c01019eb	obj/kernel.asm	/^c01019eb:	84 c0                	test   %al,%al$/;"	l
c01019ed	obj/kernel.asm	/^c01019ed:	0f 84 f7 01 00 00    	je     c0101bea <ide_init+0x2e1>$/;"	l
c01019f3	obj/kernel.asm	/^c01019f3:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01019f7	obj/kernel.asm	/^c01019f7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01019fe	obj/kernel.asm	/^c01019fe:	00 $/;"	l
c01019ff	obj/kernel.asm	/^c01019ff:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101a02	obj/kernel.asm	/^c0101a02:	e8 a8 fe ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c0101a07	obj/kernel.asm	/^c0101a07:	85 c0                	test   %eax,%eax$/;"	l
c0101a09	obj/kernel.asm	/^c0101a09:	0f 85 db 01 00 00    	jne    c0101bea <ide_init+0x2e1>$/;"	l
c0101a0f	obj/kernel.asm	/^c0101a0f:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101a13	obj/kernel.asm	/^c0101a13:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101a16	obj/kernel.asm	/^c0101a16:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101a1d	obj/kernel.asm	/^c0101a1d:	29 c2                	sub    %eax,%edx$/;"	l
c0101a1f	obj/kernel.asm	/^c0101a1f:	8d 82 60 05 15 c0    	lea    -0x3feafaa0(%edx),%eax$/;"	l
c0101a25	obj/kernel.asm	/^c0101a25:	c6 00 01             	movb   $0x1,(%eax)$/;"	l
c0101a28	obj/kernel.asm	/^c0101a28:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101a2c	obj/kernel.asm	/^c0101a2c:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0101a2f	obj/kernel.asm	/^c0101a2f:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0101a35	obj/kernel.asm	/^c0101a35:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0101a38	obj/kernel.asm	/^c0101a38:	c7 45 bc 80 00 00 00 	movl   $0x80,-0x44(%ebp)$/;"	l
c0101a3f	obj/kernel.asm	/^c0101a3f:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0101a42	obj/kernel.asm	/^c0101a42:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
c0101a45	obj/kernel.asm	/^c0101a45:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0101a48	obj/kernel.asm	/^c0101a48:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101a4a	obj/kernel.asm	/^c0101a4a:	89 df                	mov    %ebx,%edi$/;"	l
c0101a4c	obj/kernel.asm	/^c0101a4c:	89 c1                	mov    %eax,%ecx$/;"	l
c0101a4e	obj/kernel.asm	/^c0101a4e:	fc                   	cld    $/;"	l
c0101a4f	obj/kernel.asm	/^c0101a4f:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0101a51	obj/kernel.asm	/^c0101a51:	89 c8                	mov    %ecx,%eax$/;"	l
c0101a53	obj/kernel.asm	/^c0101a53:	89 fb                	mov    %edi,%ebx$/;"	l
c0101a55	obj/kernel.asm	/^c0101a55:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
c0101a58	obj/kernel.asm	/^c0101a58:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0101a5b	obj/kernel.asm	/^c0101a5b:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0101a61	obj/kernel.asm	/^c0101a61:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0101a64	obj/kernel.asm	/^c0101a64:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101a67	obj/kernel.asm	/^c0101a67:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax$/;"	l
c0101a6d	obj/kernel.asm	/^c0101a6d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0101a70	obj/kernel.asm	/^c0101a70:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0101a73	obj/kernel.asm	/^c0101a73:	25 00 00 00 04       	and    $0x4000000,%eax$/;"	l
c0101a78	obj/kernel.asm	/^c0101a78:	85 c0                	test   %eax,%eax$/;"	l
c0101a7a	obj/kernel.asm	/^c0101a7a:	74 0e                	je     c0101a8a <ide_init+0x181>$/;"	l
c0101a7c	obj/kernel.asm	/^c0101a7c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101a7f	obj/kernel.asm	/^c0101a7f:	8b 80 c8 00 00 00    	mov    0xc8(%eax),%eax$/;"	l
c0101a85	obj/kernel.asm	/^c0101a85:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101a88	obj/kernel.asm	/^c0101a88:	eb 09                	jmp    c0101a93 <ide_init+0x18a>$/;"	l
c0101a8a	obj/kernel.asm	/^c0101a8a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101a8d	obj/kernel.asm	/^c0101a8d:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0101a90	obj/kernel.asm	/^c0101a90:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101a93	obj/kernel.asm	/^c0101a93:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101a97	obj/kernel.asm	/^c0101a97:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101a9a	obj/kernel.asm	/^c0101a9a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101aa1	obj/kernel.asm	/^c0101aa1:	29 c2                	sub    %eax,%edx$/;"	l
c0101aa3	obj/kernel.asm	/^c0101aa3:	81 c2 60 05 15 c0    	add    $0xc0150560,%edx$/;"	l
c0101aa9	obj/kernel.asm	/^c0101aa9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0101aac	obj/kernel.asm	/^c0101aac:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c0101aaf	obj/kernel.asm	/^c0101aaf:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101ab3	obj/kernel.asm	/^c0101ab3:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101ab6	obj/kernel.asm	/^c0101ab6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101abd	obj/kernel.asm	/^c0101abd:	29 c2                	sub    %eax,%edx$/;"	l
c0101abf	obj/kernel.asm	/^c0101abf:	81 c2 60 05 15 c0    	add    $0xc0150560,%edx$/;"	l
c0101ac5	obj/kernel.asm	/^c0101ac5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0101ac8	obj/kernel.asm	/^c0101ac8:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c0101acb	obj/kernel.asm	/^c0101acb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101ace	obj/kernel.asm	/^c0101ace:	83 c0 62             	add    $0x62,%eax$/;"	l
c0101ad1	obj/kernel.asm	/^c0101ad1:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0101ad4	obj/kernel.asm	/^c0101ad4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101ad7	obj/kernel.asm	/^c0101ad7:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0101adc	obj/kernel.asm	/^c0101adc:	85 c0                	test   %eax,%eax$/;"	l
c0101ade	obj/kernel.asm	/^c0101ade:	75 24                	jne    c0101b04 <ide_init+0x1fb>$/;"	l
c0101ae0	obj/kernel.asm	/^c0101ae0:	c7 44 24 0c 50 5a 11 	movl   $0xc0115a50,0xc(%esp)$/;"	l
c0101ae7	obj/kernel.asm	/^c0101ae7:	c0 $/;"	l
c0101ae8	obj/kernel.asm	/^c0101ae8:	c7 44 24 08 93 5a 11 	movl   $0xc0115a93,0x8(%esp)$/;"	l
c0101aef	obj/kernel.asm	/^c0101aef:	c0 $/;"	l
c0101af0	obj/kernel.asm	/^c0101af0:	c7 44 24 04 7d 00 00 	movl   $0x7d,0x4(%esp)$/;"	l
c0101af7	obj/kernel.asm	/^c0101af7:	00 $/;"	l
c0101af8	obj/kernel.asm	/^c0101af8:	c7 04 24 a8 5a 11 c0 	movl   $0xc0115aa8,(%esp)$/;"	l
c0101aff	obj/kernel.asm	/^c0101aff:	e8 c4 f3 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0101b04	obj/kernel.asm	/^c0101b04:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101b08	obj/kernel.asm	/^c0101b08:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101b0b	obj/kernel.asm	/^c0101b0b:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101b12	obj/kernel.asm	/^c0101b12:	29 c2                	sub    %eax,%edx$/;"	l
c0101b14	obj/kernel.asm	/^c0101b14:	8d 82 60 05 15 c0    	lea    -0x3feafaa0(%edx),%eax$/;"	l
c0101b1a	obj/kernel.asm	/^c0101b1a:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0101b1d	obj/kernel.asm	/^c0101b1d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0101b20	obj/kernel.asm	/^c0101b20:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101b23	obj/kernel.asm	/^c0101b23:	83 c0 36             	add    $0x36,%eax$/;"	l
c0101b26	obj/kernel.asm	/^c0101b26:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0101b29	obj/kernel.asm	/^c0101b29:	c7 45 d4 28 00 00 00 	movl   $0x28,-0x2c(%ebp)$/;"	l
c0101b30	obj/kernel.asm	/^c0101b30:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0101b37	obj/kernel.asm	/^c0101b37:	eb 34                	jmp    c0101b6d <ide_init+0x264>$/;"	l
c0101b39	obj/kernel.asm	/^c0101b39:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b3c	obj/kernel.asm	/^c0101b3c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101b3f	obj/kernel.asm	/^c0101b3f:	01 c2                	add    %eax,%edx$/;"	l
c0101b41	obj/kernel.asm	/^c0101b41:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b44	obj/kernel.asm	/^c0101b44:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0101b47	obj/kernel.asm	/^c0101b47:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0101b4a	obj/kernel.asm	/^c0101b4a:	01 c8                	add    %ecx,%eax$/;"	l
c0101b4c	obj/kernel.asm	/^c0101b4c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101b4f	obj/kernel.asm	/^c0101b4f:	88 02                	mov    %al,(%edx)$/;"	l
c0101b51	obj/kernel.asm	/^c0101b51:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b54	obj/kernel.asm	/^c0101b54:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101b57	obj/kernel.asm	/^c0101b57:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0101b5a	obj/kernel.asm	/^c0101b5a:	01 c2                	add    %eax,%edx$/;"	l
c0101b5c	obj/kernel.asm	/^c0101b5c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b5f	obj/kernel.asm	/^c0101b5f:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
c0101b62	obj/kernel.asm	/^c0101b62:	01 c8                	add    %ecx,%eax$/;"	l
c0101b64	obj/kernel.asm	/^c0101b64:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101b67	obj/kernel.asm	/^c0101b67:	88 02                	mov    %al,(%edx)$/;"	l
c0101b69	obj/kernel.asm	/^c0101b69:	83 45 ec 02          	addl   $0x2,-0x14(%ebp)$/;"	l
c0101b6d	obj/kernel.asm	/^c0101b6d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b70	obj/kernel.asm	/^c0101b70:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0101b73	obj/kernel.asm	/^c0101b73:	72 c4                	jb     c0101b39 <ide_init+0x230>$/;"	l
c0101b75	obj/kernel.asm	/^c0101b75:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b78	obj/kernel.asm	/^c0101b78:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101b7b	obj/kernel.asm	/^c0101b7b:	01 d0                	add    %edx,%eax$/;"	l
c0101b7d	obj/kernel.asm	/^c0101b7d:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0101b80	obj/kernel.asm	/^c0101b80:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b83	obj/kernel.asm	/^c0101b83:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0101b86	obj/kernel.asm	/^c0101b86:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0101b89	obj/kernel.asm	/^c0101b89:	85 c0                	test   %eax,%eax$/;"	l
c0101b8b	obj/kernel.asm	/^c0101b8b:	74 0f                	je     c0101b9c <ide_init+0x293>$/;"	l
c0101b8d	obj/kernel.asm	/^c0101b8d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b90	obj/kernel.asm	/^c0101b90:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101b93	obj/kernel.asm	/^c0101b93:	01 d0                	add    %edx,%eax$/;"	l
c0101b95	obj/kernel.asm	/^c0101b95:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101b98	obj/kernel.asm	/^c0101b98:	3c 20                	cmp    $0x20,%al$/;"	l
c0101b9a	obj/kernel.asm	/^c0101b9a:	74 d9                	je     c0101b75 <ide_init+0x26c>$/;"	l
c0101b9c	obj/kernel.asm	/^c0101b9c:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101ba0	obj/kernel.asm	/^c0101ba0:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101ba3	obj/kernel.asm	/^c0101ba3:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101baa	obj/kernel.asm	/^c0101baa:	29 c2                	sub    %eax,%edx$/;"	l
c0101bac	obj/kernel.asm	/^c0101bac:	8d 82 60 05 15 c0    	lea    -0x3feafaa0(%edx),%eax$/;"	l
c0101bb2	obj/kernel.asm	/^c0101bb2:	8d 48 0c             	lea    0xc(%eax),%ecx$/;"	l
c0101bb5	obj/kernel.asm	/^c0101bb5:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101bb9	obj/kernel.asm	/^c0101bb9:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101bbc	obj/kernel.asm	/^c0101bbc:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101bc3	obj/kernel.asm	/^c0101bc3:	29 c2                	sub    %eax,%edx$/;"	l
c0101bc5	obj/kernel.asm	/^c0101bc5:	8d 82 60 05 15 c0    	lea    -0x3feafaa0(%edx),%eax$/;"	l
c0101bcb	obj/kernel.asm	/^c0101bcb:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0101bce	obj/kernel.asm	/^c0101bce:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101bd2	obj/kernel.asm	/^c0101bd2:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c0101bd6	obj/kernel.asm	/^c0101bd6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0101bda	obj/kernel.asm	/^c0101bda:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0101bde	obj/kernel.asm	/^c0101bde:	c7 04 24 ba 5a 11 c0 	movl   $0xc0115aba,(%esp)$/;"	l
c0101be5	obj/kernel.asm	/^c0101be5:	e8 7b e7 ff ff       	call   c0100365 <cprintf>$/;"	l
c0101bea	obj/kernel.asm	/^c0101bea:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101bee	obj/kernel.asm	/^c0101bee:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101bf1	obj/kernel.asm	/^c0101bf1:	66 89 45 f6          	mov    %ax,-0xa(%ebp)$/;"	l
c0101bf5	obj/kernel.asm	/^c0101bf5:	66 83 7d f6 03       	cmpw   $0x3,-0xa(%ebp)$/;"	l
c0101bfa	obj/kernel.asm	/^c0101bfa:	0f 86 1f fd ff ff    	jbe    c010191f <ide_init+0x16>$/;"	l
c0101c00	obj/kernel.asm	/^c0101c00:	c7 04 24 0e 00 00 00 	movl   $0xe,(%esp)$/;"	l
c0101c07	obj/kernel.asm	/^c0101c07:	e8 7c 05 00 00       	call   c0102188 <pic_enable>$/;"	l
c0101c0c	obj/kernel.asm	/^c0101c0c:	c7 04 24 0f 00 00 00 	movl   $0xf,(%esp)$/;"	l
c0101c13	obj/kernel.asm	/^c0101c13:	e8 70 05 00 00       	call   c0102188 <pic_enable>$/;"	l
c0101c18	obj/kernel.asm	/^c0101c18:	81 c4 50 02 00 00    	add    $0x250,%esp$/;"	l
c0101c1e	obj/kernel.asm	/^c0101c1e:	5b                   	pop    %ebx$/;"	l
c0101c1f	obj/kernel.asm	/^c0101c1f:	5f                   	pop    %edi$/;"	l
c0101c20	obj/kernel.asm	/^c0101c20:	5d                   	pop    %ebp$/;"	l
c0101c21	obj/kernel.asm	/^c0101c21:	c3                   	ret    $/;"	l
c0101c22	obj/kernel.asm	/^c0101c22 <ide_device_valid>:$/;"	l
c0101c22	obj/kernel.asm	/^c0101c22:	55                   	push   %ebp$/;"	l
c0101c23	obj/kernel.asm	/^c0101c23:	89 e5                	mov    %esp,%ebp$/;"	l
c0101c25	obj/kernel.asm	/^c0101c25:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101c28	obj/kernel.asm	/^c0101c28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101c2b	obj/kernel.asm	/^c0101c2b:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101c2f	obj/kernel.asm	/^c0101c2f:	66 83 7d fc 03       	cmpw   $0x3,-0x4(%ebp)$/;"	l
c0101c34	obj/kernel.asm	/^c0101c34:	77 24                	ja     c0101c5a <ide_device_valid+0x38>$/;"	l
c0101c36	obj/kernel.asm	/^c0101c36:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101c3a	obj/kernel.asm	/^c0101c3a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101c3d	obj/kernel.asm	/^c0101c3d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101c44	obj/kernel.asm	/^c0101c44:	29 c2                	sub    %eax,%edx$/;"	l
c0101c46	obj/kernel.asm	/^c0101c46:	8d 82 60 05 15 c0    	lea    -0x3feafaa0(%edx),%eax$/;"	l
c0101c4c	obj/kernel.asm	/^c0101c4c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101c4f	obj/kernel.asm	/^c0101c4f:	84 c0                	test   %al,%al$/;"	l
c0101c51	obj/kernel.asm	/^c0101c51:	74 07                	je     c0101c5a <ide_device_valid+0x38>$/;"	l
c0101c53	obj/kernel.asm	/^c0101c53:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0101c58	obj/kernel.asm	/^c0101c58:	eb 05                	jmp    c0101c5f <ide_device_valid+0x3d>$/;"	l
c0101c5a	obj/kernel.asm	/^c0101c5a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101c5f	obj/kernel.asm	/^c0101c5f:	c9                   	leave  $/;"	l
c0101c60	obj/kernel.asm	/^c0101c60:	c3                   	ret    $/;"	l
c0101c61	obj/kernel.asm	/^c0101c61 <ide_device_size>:$/;"	l
c0101c61	obj/kernel.asm	/^c0101c61:	55                   	push   %ebp$/;"	l
c0101c62	obj/kernel.asm	/^c0101c62:	89 e5                	mov    %esp,%ebp$/;"	l
c0101c64	obj/kernel.asm	/^c0101c64:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101c67	obj/kernel.asm	/^c0101c67:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101c6a	obj/kernel.asm	/^c0101c6a:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101c6e	obj/kernel.asm	/^c0101c6e:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101c72	obj/kernel.asm	/^c0101c72:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101c75	obj/kernel.asm	/^c0101c75:	e8 a8 ff ff ff       	call   c0101c22 <ide_device_valid>$/;"	l
c0101c7a	obj/kernel.asm	/^c0101c7a:	85 c0                	test   %eax,%eax$/;"	l
c0101c7c	obj/kernel.asm	/^c0101c7c:	74 1b                	je     c0101c99 <ide_device_size+0x38>$/;"	l
c0101c7e	obj/kernel.asm	/^c0101c7e:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101c82	obj/kernel.asm	/^c0101c82:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101c85	obj/kernel.asm	/^c0101c85:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101c8c	obj/kernel.asm	/^c0101c8c:	29 c2                	sub    %eax,%edx$/;"	l
c0101c8e	obj/kernel.asm	/^c0101c8e:	8d 82 60 05 15 c0    	lea    -0x3feafaa0(%edx),%eax$/;"	l
c0101c94	obj/kernel.asm	/^c0101c94:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0101c97	obj/kernel.asm	/^c0101c97:	eb 05                	jmp    c0101c9e <ide_device_size+0x3d>$/;"	l
c0101c99	obj/kernel.asm	/^c0101c99:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101c9e	obj/kernel.asm	/^c0101c9e:	c9                   	leave  $/;"	l
c0101c9f	obj/kernel.asm	/^c0101c9f:	c3                   	ret    $/;"	l
c0101ca0	obj/kernel.asm	/^c0101ca0 <ide_read_secs>:$/;"	l
c0101ca0	obj/kernel.asm	/^c0101ca0:	55                   	push   %ebp$/;"	l
c0101ca1	obj/kernel.asm	/^c0101ca1:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ca3	obj/kernel.asm	/^c0101ca3:	57                   	push   %edi$/;"	l
c0101ca4	obj/kernel.asm	/^c0101ca4:	53                   	push   %ebx$/;"	l
c0101ca5	obj/kernel.asm	/^c0101ca5:	83 ec 50             	sub    $0x50,%esp$/;"	l
c0101ca8	obj/kernel.asm	/^c0101ca8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101cab	obj/kernel.asm	/^c0101cab:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101caf	obj/kernel.asm	/^c0101caf:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101cb6	obj/kernel.asm	/^c0101cb6:	77 24                	ja     c0101cdc <ide_read_secs+0x3c>$/;"	l
c0101cb8	obj/kernel.asm	/^c0101cb8:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101cbd	obj/kernel.asm	/^c0101cbd:	77 1d                	ja     c0101cdc <ide_read_secs+0x3c>$/;"	l
c0101cbf	obj/kernel.asm	/^c0101cbf:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101cc3	obj/kernel.asm	/^c0101cc3:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101cc6	obj/kernel.asm	/^c0101cc6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101ccd	obj/kernel.asm	/^c0101ccd:	29 c2                	sub    %eax,%edx$/;"	l
c0101ccf	obj/kernel.asm	/^c0101ccf:	8d 82 60 05 15 c0    	lea    -0x3feafaa0(%edx),%eax$/;"	l
c0101cd5	obj/kernel.asm	/^c0101cd5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101cd8	obj/kernel.asm	/^c0101cd8:	84 c0                	test   %al,%al$/;"	l
c0101cda	obj/kernel.asm	/^c0101cda:	75 24                	jne    c0101d00 <ide_read_secs+0x60>$/;"	l
c0101cdc	obj/kernel.asm	/^c0101cdc:	c7 44 24 0c d8 5a 11 	movl   $0xc0115ad8,0xc(%esp)$/;"	l
c0101ce3	obj/kernel.asm	/^c0101ce3:	c0 $/;"	l
c0101ce4	obj/kernel.asm	/^c0101ce4:	c7 44 24 08 93 5a 11 	movl   $0xc0115a93,0x8(%esp)$/;"	l
c0101ceb	obj/kernel.asm	/^c0101ceb:	c0 $/;"	l
c0101cec	obj/kernel.asm	/^c0101cec:	c7 44 24 04 9f 00 00 	movl   $0x9f,0x4(%esp)$/;"	l
c0101cf3	obj/kernel.asm	/^c0101cf3:	00 $/;"	l
c0101cf4	obj/kernel.asm	/^c0101cf4:	c7 04 24 a8 5a 11 c0 	movl   $0xc0115aa8,(%esp)$/;"	l
c0101cfb	obj/kernel.asm	/^c0101cfb:	e8 c8 f1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0101d00	obj/kernel.asm	/^c0101d00:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c0101d07	obj/kernel.asm	/^c0101d07:	77 0f                	ja     c0101d18 <ide_read_secs+0x78>$/;"	l
c0101d09	obj/kernel.asm	/^c0101d09:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101d0c	obj/kernel.asm	/^c0101d0c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0101d0f	obj/kernel.asm	/^c0101d0f:	01 d0                	add    %edx,%eax$/;"	l
c0101d11	obj/kernel.asm	/^c0101d11:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c0101d16	obj/kernel.asm	/^c0101d16:	76 24                	jbe    c0101d3c <ide_read_secs+0x9c>$/;"	l
c0101d18	obj/kernel.asm	/^c0101d18:	c7 44 24 0c 00 5b 11 	movl   $0xc0115b00,0xc(%esp)$/;"	l
c0101d1f	obj/kernel.asm	/^c0101d1f:	c0 $/;"	l
c0101d20	obj/kernel.asm	/^c0101d20:	c7 44 24 08 93 5a 11 	movl   $0xc0115a93,0x8(%esp)$/;"	l
c0101d27	obj/kernel.asm	/^c0101d27:	c0 $/;"	l
c0101d28	obj/kernel.asm	/^c0101d28:	c7 44 24 04 a0 00 00 	movl   $0xa0,0x4(%esp)$/;"	l
c0101d2f	obj/kernel.asm	/^c0101d2f:	00 $/;"	l
c0101d30	obj/kernel.asm	/^c0101d30:	c7 04 24 a8 5a 11 c0 	movl   $0xc0115aa8,(%esp)$/;"	l
c0101d37	obj/kernel.asm	/^c0101d37:	e8 8c f1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0101d3c	obj/kernel.asm	/^c0101d3c:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101d40	obj/kernel.asm	/^c0101d40:	66 d1 e8             	shr    %ax$/;"	l
c0101d43	obj/kernel.asm	/^c0101d43:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101d46	obj/kernel.asm	/^c0101d46:	0f b7 04 85 48 5a 11 	movzwl -0x3feea5b8(,%eax,4),%eax$/;"	l
c0101d4d	obj/kernel.asm	/^c0101d4d:	c0 $/;"	l
c0101d4e	obj/kernel.asm	/^c0101d4e:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101d52	obj/kernel.asm	/^c0101d52:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101d56	obj/kernel.asm	/^c0101d56:	66 d1 e8             	shr    %ax$/;"	l
c0101d59	obj/kernel.asm	/^c0101d59:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101d5c	obj/kernel.asm	/^c0101d5c:	0f b7 04 85 4a 5a 11 	movzwl -0x3feea5b6(,%eax,4),%eax$/;"	l
c0101d63	obj/kernel.asm	/^c0101d63:	c0 $/;"	l
c0101d64	obj/kernel.asm	/^c0101d64:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101d68	obj/kernel.asm	/^c0101d68:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101d6c	obj/kernel.asm	/^c0101d6c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101d73	obj/kernel.asm	/^c0101d73:	00 $/;"	l
c0101d74	obj/kernel.asm	/^c0101d74:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101d77	obj/kernel.asm	/^c0101d77:	e8 33 fb ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c0101d7c	obj/kernel.asm	/^c0101d7c:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101d80	obj/kernel.asm	/^c0101d80:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101d83	obj/kernel.asm	/^c0101d83:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101d86	obj/kernel.asm	/^c0101d86:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101d8a	obj/kernel.asm	/^c0101d8a:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101d8e	obj/kernel.asm	/^c0101d8e:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101d92	obj/kernel.asm	/^c0101d92:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101d96	obj/kernel.asm	/^c0101d96:	ee                   	out    %al,(%dx)$/;"	l
c0101d97	obj/kernel.asm	/^c0101d97:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101d9a	obj/kernel.asm	/^c0101d9a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101d9d	obj/kernel.asm	/^c0101d9d:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101da1	obj/kernel.asm	/^c0101da1:	83 c2 02             	add    $0x2,%edx$/;"	l
c0101da4	obj/kernel.asm	/^c0101da4:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101da7	obj/kernel.asm	/^c0101da7:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101dab	obj/kernel.asm	/^c0101dab:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101dae	obj/kernel.asm	/^c0101dae:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101db2	obj/kernel.asm	/^c0101db2:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101db6	obj/kernel.asm	/^c0101db6:	ee                   	out    %al,(%dx)$/;"	l
c0101db7	obj/kernel.asm	/^c0101db7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101dba	obj/kernel.asm	/^c0101dba:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101dbd	obj/kernel.asm	/^c0101dbd:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101dc1	obj/kernel.asm	/^c0101dc1:	83 c2 03             	add    $0x3,%edx$/;"	l
c0101dc4	obj/kernel.asm	/^c0101dc4:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101dc7	obj/kernel.asm	/^c0101dc7:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101dcb	obj/kernel.asm	/^c0101dcb:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101dce	obj/kernel.asm	/^c0101dce:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101dd2	obj/kernel.asm	/^c0101dd2:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101dd6	obj/kernel.asm	/^c0101dd6:	ee                   	out    %al,(%dx)$/;"	l
c0101dd7	obj/kernel.asm	/^c0101dd7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101dda	obj/kernel.asm	/^c0101dda:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0101ddd	obj/kernel.asm	/^c0101ddd:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101de0	obj/kernel.asm	/^c0101de0:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101de4	obj/kernel.asm	/^c0101de4:	83 c2 04             	add    $0x4,%edx$/;"	l
c0101de7	obj/kernel.asm	/^c0101de7:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101dea	obj/kernel.asm	/^c0101dea:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c0101dee	obj/kernel.asm	/^c0101dee:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c0101df1	obj/kernel.asm	/^c0101df1:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0101df5	obj/kernel.asm	/^c0101df5:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0101df9	obj/kernel.asm	/^c0101df9:	ee                   	out    %al,(%dx)$/;"	l
c0101dfa	obj/kernel.asm	/^c0101dfa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101dfd	obj/kernel.asm	/^c0101dfd:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101e00	obj/kernel.asm	/^c0101e00:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101e03	obj/kernel.asm	/^c0101e03:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101e07	obj/kernel.asm	/^c0101e07:	83 c2 05             	add    $0x5,%edx$/;"	l
c0101e0a	obj/kernel.asm	/^c0101e0a:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101e0d	obj/kernel.asm	/^c0101e0d:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c0101e11	obj/kernel.asm	/^c0101e11:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c0101e14	obj/kernel.asm	/^c0101e14:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0101e18	obj/kernel.asm	/^c0101e18:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0101e1c	obj/kernel.asm	/^c0101e1c:	ee                   	out    %al,(%dx)$/;"	l
c0101e1d	obj/kernel.asm	/^c0101e1d:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101e21	obj/kernel.asm	/^c0101e21:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101e24	obj/kernel.asm	/^c0101e24:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0101e27	obj/kernel.asm	/^c0101e27:	89 c2                	mov    %eax,%edx$/;"	l
c0101e29	obj/kernel.asm	/^c0101e29:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101e2c	obj/kernel.asm	/^c0101e2c:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0101e2f	obj/kernel.asm	/^c0101e2f:	83 e0 0f             	and    $0xf,%eax$/;"	l
c0101e32	obj/kernel.asm	/^c0101e32:	09 d0                	or     %edx,%eax$/;"	l
c0101e34	obj/kernel.asm	/^c0101e34:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0101e37	obj/kernel.asm	/^c0101e37:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101e3a	obj/kernel.asm	/^c0101e3a:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101e3e	obj/kernel.asm	/^c0101e3e:	83 c2 06             	add    $0x6,%edx$/;"	l
c0101e41	obj/kernel.asm	/^c0101e41:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101e44	obj/kernel.asm	/^c0101e44:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c0101e48	obj/kernel.asm	/^c0101e48:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101e4b	obj/kernel.asm	/^c0101e4b:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0101e4f	obj/kernel.asm	/^c0101e4f:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0101e53	obj/kernel.asm	/^c0101e53:	ee                   	out    %al,(%dx)$/;"	l
c0101e54	obj/kernel.asm	/^c0101e54:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101e58	obj/kernel.asm	/^c0101e58:	83 c0 07             	add    $0x7,%eax$/;"	l
c0101e5b	obj/kernel.asm	/^c0101e5b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101e5e	obj/kernel.asm	/^c0101e5e:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c0101e62	obj/kernel.asm	/^c0101e62:	c6 45 d5 20          	movb   $0x20,-0x2b(%ebp)$/;"	l
c0101e66	obj/kernel.asm	/^c0101e66:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0101e6a	obj/kernel.asm	/^c0101e6a:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101e6e	obj/kernel.asm	/^c0101e6e:	ee                   	out    %al,(%dx)$/;"	l
c0101e6f	obj/kernel.asm	/^c0101e6f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101e76	obj/kernel.asm	/^c0101e76:	eb 5a                	jmp    c0101ed2 <ide_read_secs+0x232>$/;"	l
c0101e78	obj/kernel.asm	/^c0101e78:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101e7c	obj/kernel.asm	/^c0101e7c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0101e83	obj/kernel.asm	/^c0101e83:	00 $/;"	l
c0101e84	obj/kernel.asm	/^c0101e84:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101e87	obj/kernel.asm	/^c0101e87:	e8 23 fa ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c0101e8c	obj/kernel.asm	/^c0101e8c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101e8f	obj/kernel.asm	/^c0101e8f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101e93	obj/kernel.asm	/^c0101e93:	74 02                	je     c0101e97 <ide_read_secs+0x1f7>$/;"	l
c0101e95	obj/kernel.asm	/^c0101e95:	eb 41                	jmp    c0101ed8 <ide_read_secs+0x238>$/;"	l
c0101e97	obj/kernel.asm	/^c0101e97:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101e9b	obj/kernel.asm	/^c0101e9b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101e9e	obj/kernel.asm	/^c0101e9e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101ea1	obj/kernel.asm	/^c0101ea1:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101ea4	obj/kernel.asm	/^c0101ea4:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c0101eab	obj/kernel.asm	/^c0101eab:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0101eae	obj/kernel.asm	/^c0101eae:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c0101eb1	obj/kernel.asm	/^c0101eb1:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0101eb4	obj/kernel.asm	/^c0101eb4:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101eb6	obj/kernel.asm	/^c0101eb6:	89 df                	mov    %ebx,%edi$/;"	l
c0101eb8	obj/kernel.asm	/^c0101eb8:	89 c1                	mov    %eax,%ecx$/;"	l
c0101eba	obj/kernel.asm	/^c0101eba:	fc                   	cld    $/;"	l
c0101ebb	obj/kernel.asm	/^c0101ebb:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0101ebd	obj/kernel.asm	/^c0101ebd:	89 c8                	mov    %ecx,%eax$/;"	l
c0101ebf	obj/kernel.asm	/^c0101ebf:	89 fb                	mov    %edi,%ebx$/;"	l
c0101ec1	obj/kernel.asm	/^c0101ec1:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c0101ec4	obj/kernel.asm	/^c0101ec4:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0101ec7	obj/kernel.asm	/^c0101ec7:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0101ecb	obj/kernel.asm	/^c0101ecb:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c0101ed2	obj/kernel.asm	/^c0101ed2:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0101ed6	obj/kernel.asm	/^c0101ed6:	75 a0                	jne    c0101e78 <ide_read_secs+0x1d8>$/;"	l
c0101ed8	obj/kernel.asm	/^c0101ed8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101edb	obj/kernel.asm	/^c0101edb:	83 c4 50             	add    $0x50,%esp$/;"	l
c0101ede	obj/kernel.asm	/^c0101ede:	5b                   	pop    %ebx$/;"	l
c0101edf	obj/kernel.asm	/^c0101edf:	5f                   	pop    %edi$/;"	l
c0101ee0	obj/kernel.asm	/^c0101ee0:	5d                   	pop    %ebp$/;"	l
c0101ee1	obj/kernel.asm	/^c0101ee1:	c3                   	ret    $/;"	l
c0101ee2	obj/kernel.asm	/^c0101ee2 <ide_write_secs>:$/;"	l
c0101ee2	obj/kernel.asm	/^c0101ee2:	55                   	push   %ebp$/;"	l
c0101ee3	obj/kernel.asm	/^c0101ee3:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ee5	obj/kernel.asm	/^c0101ee5:	56                   	push   %esi$/;"	l
c0101ee6	obj/kernel.asm	/^c0101ee6:	53                   	push   %ebx$/;"	l
c0101ee7	obj/kernel.asm	/^c0101ee7:	83 ec 50             	sub    $0x50,%esp$/;"	l
c0101eea	obj/kernel.asm	/^c0101eea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101eed	obj/kernel.asm	/^c0101eed:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101ef1	obj/kernel.asm	/^c0101ef1:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101ef8	obj/kernel.asm	/^c0101ef8:	77 24                	ja     c0101f1e <ide_write_secs+0x3c>$/;"	l
c0101efa	obj/kernel.asm	/^c0101efa:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101eff	obj/kernel.asm	/^c0101eff:	77 1d                	ja     c0101f1e <ide_write_secs+0x3c>$/;"	l
c0101f01	obj/kernel.asm	/^c0101f01:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101f05	obj/kernel.asm	/^c0101f05:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101f08	obj/kernel.asm	/^c0101f08:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101f0f	obj/kernel.asm	/^c0101f0f:	29 c2                	sub    %eax,%edx$/;"	l
c0101f11	obj/kernel.asm	/^c0101f11:	8d 82 60 05 15 c0    	lea    -0x3feafaa0(%edx),%eax$/;"	l
c0101f17	obj/kernel.asm	/^c0101f17:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101f1a	obj/kernel.asm	/^c0101f1a:	84 c0                	test   %al,%al$/;"	l
c0101f1c	obj/kernel.asm	/^c0101f1c:	75 24                	jne    c0101f42 <ide_write_secs+0x60>$/;"	l
c0101f1e	obj/kernel.asm	/^c0101f1e:	c7 44 24 0c d8 5a 11 	movl   $0xc0115ad8,0xc(%esp)$/;"	l
c0101f25	obj/kernel.asm	/^c0101f25:	c0 $/;"	l
c0101f26	obj/kernel.asm	/^c0101f26:	c7 44 24 08 93 5a 11 	movl   $0xc0115a93,0x8(%esp)$/;"	l
c0101f2d	obj/kernel.asm	/^c0101f2d:	c0 $/;"	l
c0101f2e	obj/kernel.asm	/^c0101f2e:	c7 44 24 04 bc 00 00 	movl   $0xbc,0x4(%esp)$/;"	l
c0101f35	obj/kernel.asm	/^c0101f35:	00 $/;"	l
c0101f36	obj/kernel.asm	/^c0101f36:	c7 04 24 a8 5a 11 c0 	movl   $0xc0115aa8,(%esp)$/;"	l
c0101f3d	obj/kernel.asm	/^c0101f3d:	e8 86 ef ff ff       	call   c0100ec8 <__panic>$/;"	l
c0101f42	obj/kernel.asm	/^c0101f42:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c0101f49	obj/kernel.asm	/^c0101f49:	77 0f                	ja     c0101f5a <ide_write_secs+0x78>$/;"	l
c0101f4b	obj/kernel.asm	/^c0101f4b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101f4e	obj/kernel.asm	/^c0101f4e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0101f51	obj/kernel.asm	/^c0101f51:	01 d0                	add    %edx,%eax$/;"	l
c0101f53	obj/kernel.asm	/^c0101f53:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c0101f58	obj/kernel.asm	/^c0101f58:	76 24                	jbe    c0101f7e <ide_write_secs+0x9c>$/;"	l
c0101f5a	obj/kernel.asm	/^c0101f5a:	c7 44 24 0c 00 5b 11 	movl   $0xc0115b00,0xc(%esp)$/;"	l
c0101f61	obj/kernel.asm	/^c0101f61:	c0 $/;"	l
c0101f62	obj/kernel.asm	/^c0101f62:	c7 44 24 08 93 5a 11 	movl   $0xc0115a93,0x8(%esp)$/;"	l
c0101f69	obj/kernel.asm	/^c0101f69:	c0 $/;"	l
c0101f6a	obj/kernel.asm	/^c0101f6a:	c7 44 24 04 bd 00 00 	movl   $0xbd,0x4(%esp)$/;"	l
c0101f71	obj/kernel.asm	/^c0101f71:	00 $/;"	l
c0101f72	obj/kernel.asm	/^c0101f72:	c7 04 24 a8 5a 11 c0 	movl   $0xc0115aa8,(%esp)$/;"	l
c0101f79	obj/kernel.asm	/^c0101f79:	e8 4a ef ff ff       	call   c0100ec8 <__panic>$/;"	l
c0101f7e	obj/kernel.asm	/^c0101f7e:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101f82	obj/kernel.asm	/^c0101f82:	66 d1 e8             	shr    %ax$/;"	l
c0101f85	obj/kernel.asm	/^c0101f85:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101f88	obj/kernel.asm	/^c0101f88:	0f b7 04 85 48 5a 11 	movzwl -0x3feea5b8(,%eax,4),%eax$/;"	l
c0101f8f	obj/kernel.asm	/^c0101f8f:	c0 $/;"	l
c0101f90	obj/kernel.asm	/^c0101f90:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101f94	obj/kernel.asm	/^c0101f94:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101f98	obj/kernel.asm	/^c0101f98:	66 d1 e8             	shr    %ax$/;"	l
c0101f9b	obj/kernel.asm	/^c0101f9b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101f9e	obj/kernel.asm	/^c0101f9e:	0f b7 04 85 4a 5a 11 	movzwl -0x3feea5b6(,%eax,4),%eax$/;"	l
c0101fa5	obj/kernel.asm	/^c0101fa5:	c0 $/;"	l
c0101fa6	obj/kernel.asm	/^c0101fa6:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101faa	obj/kernel.asm	/^c0101faa:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101fae	obj/kernel.asm	/^c0101fae:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101fb5	obj/kernel.asm	/^c0101fb5:	00 $/;"	l
c0101fb6	obj/kernel.asm	/^c0101fb6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101fb9	obj/kernel.asm	/^c0101fb9:	e8 f1 f8 ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c0101fbe	obj/kernel.asm	/^c0101fbe:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101fc2	obj/kernel.asm	/^c0101fc2:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101fc5	obj/kernel.asm	/^c0101fc5:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101fc8	obj/kernel.asm	/^c0101fc8:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101fcc	obj/kernel.asm	/^c0101fcc:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101fd0	obj/kernel.asm	/^c0101fd0:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101fd4	obj/kernel.asm	/^c0101fd4:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101fd8	obj/kernel.asm	/^c0101fd8:	ee                   	out    %al,(%dx)$/;"	l
c0101fd9	obj/kernel.asm	/^c0101fd9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101fdc	obj/kernel.asm	/^c0101fdc:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101fdf	obj/kernel.asm	/^c0101fdf:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101fe3	obj/kernel.asm	/^c0101fe3:	83 c2 02             	add    $0x2,%edx$/;"	l
c0101fe6	obj/kernel.asm	/^c0101fe6:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101fe9	obj/kernel.asm	/^c0101fe9:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101fed	obj/kernel.asm	/^c0101fed:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101ff0	obj/kernel.asm	/^c0101ff0:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101ff4	obj/kernel.asm	/^c0101ff4:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101ff8	obj/kernel.asm	/^c0101ff8:	ee                   	out    %al,(%dx)$/;"	l
c0101ff9	obj/kernel.asm	/^c0101ff9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101ffc	obj/kernel.asm	/^c0101ffc:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101fff	obj/kernel.asm	/^c0101fff:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0102003	obj/kernel.asm	/^c0102003:	83 c2 03             	add    $0x3,%edx$/;"	l
c0102006	obj/kernel.asm	/^c0102006:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0102009	obj/kernel.asm	/^c0102009:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c010200d	obj/kernel.asm	/^c010200d:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0102010	obj/kernel.asm	/^c0102010:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0102014	obj/kernel.asm	/^c0102014:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0102018	obj/kernel.asm	/^c0102018:	ee                   	out    %al,(%dx)$/;"	l
c0102019	obj/kernel.asm	/^c0102019:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010201c	obj/kernel.asm	/^c010201c:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c010201f	obj/kernel.asm	/^c010201f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102022	obj/kernel.asm	/^c0102022:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0102026	obj/kernel.asm	/^c0102026:	83 c2 04             	add    $0x4,%edx$/;"	l
c0102029	obj/kernel.asm	/^c0102029:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010202c	obj/kernel.asm	/^c010202c:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c0102030	obj/kernel.asm	/^c0102030:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c0102033	obj/kernel.asm	/^c0102033:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0102037	obj/kernel.asm	/^c0102037:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c010203b	obj/kernel.asm	/^c010203b:	ee                   	out    %al,(%dx)$/;"	l
c010203c	obj/kernel.asm	/^c010203c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010203f	obj/kernel.asm	/^c010203f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0102042	obj/kernel.asm	/^c0102042:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102045	obj/kernel.asm	/^c0102045:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0102049	obj/kernel.asm	/^c0102049:	83 c2 05             	add    $0x5,%edx$/;"	l
c010204c	obj/kernel.asm	/^c010204c:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010204f	obj/kernel.asm	/^c010204f:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c0102053	obj/kernel.asm	/^c0102053:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c0102056	obj/kernel.asm	/^c0102056:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c010205a	obj/kernel.asm	/^c010205a:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c010205e	obj/kernel.asm	/^c010205e:	ee                   	out    %al,(%dx)$/;"	l
c010205f	obj/kernel.asm	/^c010205f:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0102063	obj/kernel.asm	/^c0102063:	83 e0 01             	and    $0x1,%eax$/;"	l
c0102066	obj/kernel.asm	/^c0102066:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0102069	obj/kernel.asm	/^c0102069:	89 c2                	mov    %eax,%edx$/;"	l
c010206b	obj/kernel.asm	/^c010206b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010206e	obj/kernel.asm	/^c010206e:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0102071	obj/kernel.asm	/^c0102071:	83 e0 0f             	and    $0xf,%eax$/;"	l
c0102074	obj/kernel.asm	/^c0102074:	09 d0                	or     %edx,%eax$/;"	l
c0102076	obj/kernel.asm	/^c0102076:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0102079	obj/kernel.asm	/^c0102079:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010207c	obj/kernel.asm	/^c010207c:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0102080	obj/kernel.asm	/^c0102080:	83 c2 06             	add    $0x6,%edx$/;"	l
c0102083	obj/kernel.asm	/^c0102083:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0102086	obj/kernel.asm	/^c0102086:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c010208a	obj/kernel.asm	/^c010208a:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c010208d	obj/kernel.asm	/^c010208d:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0102091	obj/kernel.asm	/^c0102091:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0102095	obj/kernel.asm	/^c0102095:	ee                   	out    %al,(%dx)$/;"	l
c0102096	obj/kernel.asm	/^c0102096:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010209a	obj/kernel.asm	/^c010209a:	83 c0 07             	add    $0x7,%eax$/;"	l
c010209d	obj/kernel.asm	/^c010209d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01020a0	obj/kernel.asm	/^c01020a0:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c01020a4	obj/kernel.asm	/^c01020a4:	c6 45 d5 30          	movb   $0x30,-0x2b(%ebp)$/;"	l
c01020a8	obj/kernel.asm	/^c01020a8:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c01020ac	obj/kernel.asm	/^c01020ac:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c01020b0	obj/kernel.asm	/^c01020b0:	ee                   	out    %al,(%dx)$/;"	l
c01020b1	obj/kernel.asm	/^c01020b1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01020b8	obj/kernel.asm	/^c01020b8:	eb 5a                	jmp    c0102114 <ide_write_secs+0x232>$/;"	l
c01020ba	obj/kernel.asm	/^c01020ba:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01020be	obj/kernel.asm	/^c01020be:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01020c5	obj/kernel.asm	/^c01020c5:	00 $/;"	l
c01020c6	obj/kernel.asm	/^c01020c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01020c9	obj/kernel.asm	/^c01020c9:	e8 e1 f7 ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c01020ce	obj/kernel.asm	/^c01020ce:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01020d1	obj/kernel.asm	/^c01020d1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01020d5	obj/kernel.asm	/^c01020d5:	74 02                	je     c01020d9 <ide_write_secs+0x1f7>$/;"	l
c01020d7	obj/kernel.asm	/^c01020d7:	eb 41                	jmp    c010211a <ide_write_secs+0x238>$/;"	l
c01020d9	obj/kernel.asm	/^c01020d9:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01020dd	obj/kernel.asm	/^c01020dd:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01020e0	obj/kernel.asm	/^c01020e0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01020e3	obj/kernel.asm	/^c01020e3:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01020e6	obj/kernel.asm	/^c01020e6:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c01020ed	obj/kernel.asm	/^c01020ed:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01020f0	obj/kernel.asm	/^c01020f0:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c01020f3	obj/kernel.asm	/^c01020f3:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01020f6	obj/kernel.asm	/^c01020f6:	89 cb                	mov    %ecx,%ebx$/;"	l
c01020f8	obj/kernel.asm	/^c01020f8:	89 de                	mov    %ebx,%esi$/;"	l
c01020fa	obj/kernel.asm	/^c01020fa:	89 c1                	mov    %eax,%ecx$/;"	l
c01020fc	obj/kernel.asm	/^c01020fc:	fc                   	cld    $/;"	l
c01020fd	obj/kernel.asm	/^c01020fd:	f2 6f                	repnz outsl %ds:(%esi),(%dx)$/;"	l
c01020ff	obj/kernel.asm	/^c01020ff:	89 c8                	mov    %ecx,%eax$/;"	l
c0102101	obj/kernel.asm	/^c0102101:	89 f3                	mov    %esi,%ebx$/;"	l
c0102103	obj/kernel.asm	/^c0102103:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c0102106	obj/kernel.asm	/^c0102106:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0102109	obj/kernel.asm	/^c0102109:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c010210d	obj/kernel.asm	/^c010210d:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c0102114	obj/kernel.asm	/^c0102114:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0102118	obj/kernel.asm	/^c0102118:	75 a0                	jne    c01020ba <ide_write_secs+0x1d8>$/;"	l
c010211a	obj/kernel.asm	/^c010211a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010211d	obj/kernel.asm	/^c010211d:	83 c4 50             	add    $0x50,%esp$/;"	l
c0102120	obj/kernel.asm	/^c0102120:	5b                   	pop    %ebx$/;"	l
c0102121	obj/kernel.asm	/^c0102121:	5e                   	pop    %esi$/;"	l
c0102122	obj/kernel.asm	/^c0102122:	5d                   	pop    %ebp$/;"	l
c0102123	obj/kernel.asm	/^c0102123:	c3                   	ret    $/;"	l
c0102124	obj/kernel.asm	/^c0102124 <intr_enable>:$/;"	l
c0102124	obj/kernel.asm	/^c0102124:	55                   	push   %ebp$/;"	l
c0102125	obj/kernel.asm	/^c0102125:	89 e5                	mov    %esp,%ebp$/;"	l
c0102127	obj/kernel.asm	/^c0102127:	fb                   	sti    $/;"	l
c0102128	obj/kernel.asm	/^c0102128:	5d                   	pop    %ebp$/;"	l
c0102129	obj/kernel.asm	/^c0102129:	c3                   	ret    $/;"	l
c010212a	obj/kernel.asm	/^c010212a <intr_disable>:$/;"	l
c010212a	obj/kernel.asm	/^c010212a:	55                   	push   %ebp$/;"	l
c010212b	obj/kernel.asm	/^c010212b:	89 e5                	mov    %esp,%ebp$/;"	l
c010212d	obj/kernel.asm	/^c010212d:	fa                   	cli    $/;"	l
c010212e	obj/kernel.asm	/^c010212e:	5d                   	pop    %ebp$/;"	l
c010212f	obj/kernel.asm	/^c010212f:	c3                   	ret    $/;"	l
c0102130	obj/kernel.asm	/^c0102130 <pic_setmask>:$/;"	l
c0102130	obj/kernel.asm	/^c0102130:	55                   	push   %ebp$/;"	l
c0102131	obj/kernel.asm	/^c0102131:	89 e5                	mov    %esp,%ebp$/;"	l
c0102133	obj/kernel.asm	/^c0102133:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0102136	obj/kernel.asm	/^c0102136:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102139	obj/kernel.asm	/^c0102139:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c010213d	obj/kernel.asm	/^c010213d:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0102141	obj/kernel.asm	/^c0102141:	66 a3 70 f5 14 c0    	mov    %ax,0xc014f570$/;"	l
c0102147	obj/kernel.asm	/^c0102147:	a1 40 06 15 c0       	mov    0xc0150640,%eax$/;"	l
c010214c	obj/kernel.asm	/^c010214c:	85 c0                	test   %eax,%eax$/;"	l
c010214e	obj/kernel.asm	/^c010214e:	74 36                	je     c0102186 <pic_setmask+0x56>$/;"	l
c0102150	obj/kernel.asm	/^c0102150:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0102154	obj/kernel.asm	/^c0102154:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102157	obj/kernel.asm	/^c0102157:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c010215d	obj/kernel.asm	/^c010215d:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0102160	obj/kernel.asm	/^c0102160:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c0102164	obj/kernel.asm	/^c0102164:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c0102168	obj/kernel.asm	/^c0102168:	ee                   	out    %al,(%dx)$/;"	l
c0102169	obj/kernel.asm	/^c0102169:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c010216d	obj/kernel.asm	/^c010216d:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0102171	obj/kernel.asm	/^c0102171:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102174	obj/kernel.asm	/^c0102174:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c010217a	obj/kernel.asm	/^c010217a:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c010217d	obj/kernel.asm	/^c010217d:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0102181	obj/kernel.asm	/^c0102181:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c0102185	obj/kernel.asm	/^c0102185:	ee                   	out    %al,(%dx)$/;"	l
c0102186	obj/kernel.asm	/^c0102186:	c9                   	leave  $/;"	l
c0102187	obj/kernel.asm	/^c0102187:	c3                   	ret    $/;"	l
c0102188	obj/kernel.asm	/^c0102188 <pic_enable>:$/;"	l
c0102188	obj/kernel.asm	/^c0102188:	55                   	push   %ebp$/;"	l
c0102189	obj/kernel.asm	/^c0102189:	89 e5                	mov    %esp,%ebp$/;"	l
c010218b	obj/kernel.asm	/^c010218b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010218e	obj/kernel.asm	/^c010218e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102191	obj/kernel.asm	/^c0102191:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0102196	obj/kernel.asm	/^c0102196:	89 c1                	mov    %eax,%ecx$/;"	l
c0102198	obj/kernel.asm	/^c0102198:	d3 e2                	shl    %cl,%edx$/;"	d
c010219a	obj/kernel.asm	/^c010219a:	89 d0                	mov    %edx,%eax$/;"	l
c010219c	obj/kernel.asm	/^c010219c:	f7 d0                	not    %eax$/;"	l
c010219e	obj/kernel.asm	/^c010219e:	89 c2                	mov    %eax,%edx$/;"	l
c01021a0	obj/kernel.asm	/^c01021a0:	0f b7 05 70 f5 14 c0 	movzwl 0xc014f570,%eax$/;"	l
c01021a7	obj/kernel.asm	/^c01021a7:	21 d0                	and    %edx,%eax$/;"	l
c01021a9	obj/kernel.asm	/^c01021a9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01021ac	obj/kernel.asm	/^c01021ac:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01021af	obj/kernel.asm	/^c01021af:	e8 7c ff ff ff       	call   c0102130 <pic_setmask>$/;"	l
c01021b4	obj/kernel.asm	/^c01021b4:	c9                   	leave  $/;"	l
c01021b5	obj/kernel.asm	/^c01021b5:	c3                   	ret    $/;"	l
c01021b6	obj/kernel.asm	/^c01021b6 <pic_init>:$/;"	l
c01021b6	obj/kernel.asm	/^c01021b6:	55                   	push   %ebp$/;"	l
c01021b7	obj/kernel.asm	/^c01021b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01021b9	obj/kernel.asm	/^c01021b9:	83 ec 44             	sub    $0x44,%esp$/;"	l
c01021bc	obj/kernel.asm	/^c01021bc:	c7 05 40 06 15 c0 01 	movl   $0x1,0xc0150640$/;"	l
c01021c3	obj/kernel.asm	/^c01021c3:	00 00 00 $/;"	l
c01021c6	obj/kernel.asm	/^c01021c6:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c01021cc	obj/kernel.asm	/^c01021cc:	c6 45 fd ff          	movb   $0xff,-0x3(%ebp)$/;"	l
c01021d0	obj/kernel.asm	/^c01021d0:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c01021d4	obj/kernel.asm	/^c01021d4:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c01021d8	obj/kernel.asm	/^c01021d8:	ee                   	out    %al,(%dx)$/;"	l
c01021d9	obj/kernel.asm	/^c01021d9:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c01021df	obj/kernel.asm	/^c01021df:	c6 45 f9 ff          	movb   $0xff,-0x7(%ebp)$/;"	l
c01021e3	obj/kernel.asm	/^c01021e3:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01021e7	obj/kernel.asm	/^c01021e7:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c01021eb	obj/kernel.asm	/^c01021eb:	ee                   	out    %al,(%dx)$/;"	l
c01021ec	obj/kernel.asm	/^c01021ec:	66 c7 45 f6 20 00    	movw   $0x20,-0xa(%ebp)$/;"	l
c01021f2	obj/kernel.asm	/^c01021f2:	c6 45 f5 11          	movb   $0x11,-0xb(%ebp)$/;"	l
c01021f6	obj/kernel.asm	/^c01021f6:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01021fa	obj/kernel.asm	/^c01021fa:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c01021fe	obj/kernel.asm	/^c01021fe:	ee                   	out    %al,(%dx)$/;"	l
c01021ff	obj/kernel.asm	/^c01021ff:	66 c7 45 f2 21 00    	movw   $0x21,-0xe(%ebp)$/;"	l
c0102205	obj/kernel.asm	/^c0102205:	c6 45 f1 20          	movb   $0x20,-0xf(%ebp)$/;"	l
c0102209	obj/kernel.asm	/^c0102209:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c010220d	obj/kernel.asm	/^c010220d:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0102211	obj/kernel.asm	/^c0102211:	ee                   	out    %al,(%dx)$/;"	l
c0102212	obj/kernel.asm	/^c0102212:	66 c7 45 ee 21 00    	movw   $0x21,-0x12(%ebp)$/;"	l
c0102218	obj/kernel.asm	/^c0102218:	c6 45 ed 04          	movb   $0x4,-0x13(%ebp)$/;"	l
c010221c	obj/kernel.asm	/^c010221c:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0102220	obj/kernel.asm	/^c0102220:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0102224	obj/kernel.asm	/^c0102224:	ee                   	out    %al,(%dx)$/;"	l
c0102225	obj/kernel.asm	/^c0102225:	66 c7 45 ea 21 00    	movw   $0x21,-0x16(%ebp)$/;"	l
c010222b	obj/kernel.asm	/^c010222b:	c6 45 e9 03          	movb   $0x3,-0x17(%ebp)$/;"	l
c010222f	obj/kernel.asm	/^c010222f:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0102233	obj/kernel.asm	/^c0102233:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0102237	obj/kernel.asm	/^c0102237:	ee                   	out    %al,(%dx)$/;"	l
c0102238	obj/kernel.asm	/^c0102238:	66 c7 45 e6 a0 00    	movw   $0xa0,-0x1a(%ebp)$/;"	l
c010223e	obj/kernel.asm	/^c010223e:	c6 45 e5 11          	movb   $0x11,-0x1b(%ebp)$/;"	l
c0102242	obj/kernel.asm	/^c0102242:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0102246	obj/kernel.asm	/^c0102246:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c010224a	obj/kernel.asm	/^c010224a:	ee                   	out    %al,(%dx)$/;"	l
c010224b	obj/kernel.asm	/^c010224b:	66 c7 45 e2 a1 00    	movw   $0xa1,-0x1e(%ebp)$/;"	l
c0102251	obj/kernel.asm	/^c0102251:	c6 45 e1 28          	movb   $0x28,-0x1f(%ebp)$/;"	l
c0102255	obj/kernel.asm	/^c0102255:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0102259	obj/kernel.asm	/^c0102259:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c010225d	obj/kernel.asm	/^c010225d:	ee                   	out    %al,(%dx)$/;"	l
c010225e	obj/kernel.asm	/^c010225e:	66 c7 45 de a1 00    	movw   $0xa1,-0x22(%ebp)$/;"	l
c0102264	obj/kernel.asm	/^c0102264:	c6 45 dd 02          	movb   $0x2,-0x23(%ebp)$/;"	l
c0102268	obj/kernel.asm	/^c0102268:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c010226c	obj/kernel.asm	/^c010226c:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0102270	obj/kernel.asm	/^c0102270:	ee                   	out    %al,(%dx)$/;"	l
c0102271	obj/kernel.asm	/^c0102271:	66 c7 45 da a1 00    	movw   $0xa1,-0x26(%ebp)$/;"	l
c0102277	obj/kernel.asm	/^c0102277:	c6 45 d9 03          	movb   $0x3,-0x27(%ebp)$/;"	l
c010227b	obj/kernel.asm	/^c010227b:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c010227f	obj/kernel.asm	/^c010227f:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0102283	obj/kernel.asm	/^c0102283:	ee                   	out    %al,(%dx)$/;"	l
c0102284	obj/kernel.asm	/^c0102284:	66 c7 45 d6 20 00    	movw   $0x20,-0x2a(%ebp)$/;"	l
c010228a	obj/kernel.asm	/^c010228a:	c6 45 d5 68          	movb   $0x68,-0x2b(%ebp)$/;"	l
c010228e	obj/kernel.asm	/^c010228e:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0102292	obj/kernel.asm	/^c0102292:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0102296	obj/kernel.asm	/^c0102296:	ee                   	out    %al,(%dx)$/;"	l
c0102297	obj/kernel.asm	/^c0102297:	66 c7 45 d2 20 00    	movw   $0x20,-0x2e(%ebp)$/;"	l
c010229d	obj/kernel.asm	/^c010229d:	c6 45 d1 0a          	movb   $0xa,-0x2f(%ebp)$/;"	l
c01022a1	obj/kernel.asm	/^c01022a1:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c01022a5	obj/kernel.asm	/^c01022a5:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c01022a9	obj/kernel.asm	/^c01022a9:	ee                   	out    %al,(%dx)$/;"	l
c01022aa	obj/kernel.asm	/^c01022aa:	66 c7 45 ce a0 00    	movw   $0xa0,-0x32(%ebp)$/;"	l
c01022b0	obj/kernel.asm	/^c01022b0:	c6 45 cd 68          	movb   $0x68,-0x33(%ebp)$/;"	l
c01022b4	obj/kernel.asm	/^c01022b4:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c01022b8	obj/kernel.asm	/^c01022b8:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c01022bc	obj/kernel.asm	/^c01022bc:	ee                   	out    %al,(%dx)$/;"	l
c01022bd	obj/kernel.asm	/^c01022bd:	66 c7 45 ca a0 00    	movw   $0xa0,-0x36(%ebp)$/;"	l
c01022c3	obj/kernel.asm	/^c01022c3:	c6 45 c9 0a          	movb   $0xa,-0x37(%ebp)$/;"	l
c01022c7	obj/kernel.asm	/^c01022c7:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c01022cb	obj/kernel.asm	/^c01022cb:	0f b7 55 ca          	movzwl -0x36(%ebp),%edx$/;"	l
c01022cf	obj/kernel.asm	/^c01022cf:	ee                   	out    %al,(%dx)$/;"	l
c01022d0	obj/kernel.asm	/^c01022d0:	0f b7 05 70 f5 14 c0 	movzwl 0xc014f570,%eax$/;"	l
c01022d7	obj/kernel.asm	/^c01022d7:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
c01022db	obj/kernel.asm	/^c01022db:	74 12                	je     c01022ef <pic_init+0x139>$/;"	l
c01022dd	obj/kernel.asm	/^c01022dd:	0f b7 05 70 f5 14 c0 	movzwl 0xc014f570,%eax$/;"	l
c01022e4	obj/kernel.asm	/^c01022e4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01022e7	obj/kernel.asm	/^c01022e7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01022ea	obj/kernel.asm	/^c01022ea:	e8 41 fe ff ff       	call   c0102130 <pic_setmask>$/;"	l
c01022ef	obj/kernel.asm	/^c01022ef:	c9                   	leave  $/;"	l
c01022f0	obj/kernel.asm	/^c01022f0:	c3                   	ret    $/;"	l
c01022f1	obj/kernel.asm	/^c01022f1 <print_ticks>:$/;"	l
c01022f1	obj/kernel.asm	/^c01022f1:	55                   	push   %ebp$/;"	l
c01022f2	obj/kernel.asm	/^c01022f2:	89 e5                	mov    %esp,%ebp$/;"	l
c01022f4	obj/kernel.asm	/^c01022f4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01022f7	obj/kernel.asm	/^c01022f7:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c01022fe	obj/kernel.asm	/^c01022fe:	00 $/;"	l
c01022ff	obj/kernel.asm	/^c01022ff:	c7 04 24 40 5b 11 c0 	movl   $0xc0115b40,(%esp)$/;"	l
c0102306	obj/kernel.asm	/^c0102306:	e8 5a e0 ff ff       	call   c0100365 <cprintf>$/;"	l
c010230b	obj/kernel.asm	/^c010230b:	c9                   	leave  $/;"	l
c010230c	obj/kernel.asm	/^c010230c:	c3                   	ret    $/;"	l
c010230d	obj/kernel.asm	/^c010230d <idt_init>:$/;"	l
c010230d	obj/kernel.asm	/^c010230d:	55                   	push   %ebp$/;"	l
c010230e	obj/kernel.asm	/^c010230e:	89 e5                	mov    %esp,%ebp$/;"	l
c0102310	obj/kernel.asm	/^c0102310:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0102313	obj/kernel.asm	/^c0102313:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010231a	obj/kernel.asm	/^c010231a:	e9 c3 00 00 00       	jmp    c01023e2 <idt_init+0xd5>$/;"	l
c010231f	obj/kernel.asm	/^c010231f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102322	obj/kernel.asm	/^c0102322:	8b 04 85 00 f6 14 c0 	mov    -0x3feb0a00(,%eax,4),%eax$/;"	l
c0102329	obj/kernel.asm	/^c0102329:	89 c2                	mov    %eax,%edx$/;"	l
c010232b	obj/kernel.asm	/^c010232b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010232e	obj/kernel.asm	/^c010232e:	66 89 14 c5 60 06 15 	mov    %dx,-0x3feaf9a0(,%eax,8)$/;"	l
c0102335	obj/kernel.asm	/^c0102335:	c0 $/;"	l
c0102336	obj/kernel.asm	/^c0102336:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102339	obj/kernel.asm	/^c0102339:	66 c7 04 c5 62 06 15 	movw   $0x8,-0x3feaf99e(,%eax,8)$/;"	l
c0102340	obj/kernel.asm	/^c0102340:	c0 08 00 $/;"	l
c0102343	obj/kernel.asm	/^c0102343:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102346	obj/kernel.asm	/^c0102346:	0f b6 14 c5 64 06 15 	movzbl -0x3feaf99c(,%eax,8),%edx$/;"	l
c010234d	obj/kernel.asm	/^c010234d:	c0 $/;"	l
c010234e	obj/kernel.asm	/^c010234e:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c0102351	obj/kernel.asm	/^c0102351:	88 14 c5 64 06 15 c0 	mov    %dl,-0x3feaf99c(,%eax,8)$/;"	l
c0102358	obj/kernel.asm	/^c0102358:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010235b	obj/kernel.asm	/^c010235b:	0f b6 14 c5 64 06 15 	movzbl -0x3feaf99c(,%eax,8),%edx$/;"	l
c0102362	obj/kernel.asm	/^c0102362:	c0 $/;"	l
c0102363	obj/kernel.asm	/^c0102363:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c0102366	obj/kernel.asm	/^c0102366:	88 14 c5 64 06 15 c0 	mov    %dl,-0x3feaf99c(,%eax,8)$/;"	l
c010236d	obj/kernel.asm	/^c010236d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102370	obj/kernel.asm	/^c0102370:	0f b6 14 c5 65 06 15 	movzbl -0x3feaf99b(,%eax,8),%edx$/;"	l
c0102377	obj/kernel.asm	/^c0102377:	c0 $/;"	l
c0102378	obj/kernel.asm	/^c0102378:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c010237b	obj/kernel.asm	/^c010237b:	83 ca 0e             	or     $0xe,%edx$/;"	l
c010237e	obj/kernel.asm	/^c010237e:	88 14 c5 65 06 15 c0 	mov    %dl,-0x3feaf99b(,%eax,8)$/;"	l
c0102385	obj/kernel.asm	/^c0102385:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102388	obj/kernel.asm	/^c0102388:	0f b6 14 c5 65 06 15 	movzbl -0x3feaf99b(,%eax,8),%edx$/;"	l
c010238f	obj/kernel.asm	/^c010238f:	c0 $/;"	l
c0102390	obj/kernel.asm	/^c0102390:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c0102393	obj/kernel.asm	/^c0102393:	88 14 c5 65 06 15 c0 	mov    %dl,-0x3feaf99b(,%eax,8)$/;"	l
c010239a	obj/kernel.asm	/^c010239a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010239d	obj/kernel.asm	/^c010239d:	0f b6 14 c5 65 06 15 	movzbl -0x3feaf99b(,%eax,8),%edx$/;"	l
c01023a4	obj/kernel.asm	/^c01023a4:	c0 $/;"	l
c01023a5	obj/kernel.asm	/^c01023a5:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c01023a8	obj/kernel.asm	/^c01023a8:	88 14 c5 65 06 15 c0 	mov    %dl,-0x3feaf99b(,%eax,8)$/;"	l
c01023af	obj/kernel.asm	/^c01023af:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01023b2	obj/kernel.asm	/^c01023b2:	0f b6 14 c5 65 06 15 	movzbl -0x3feaf99b(,%eax,8),%edx$/;"	l
c01023b9	obj/kernel.asm	/^c01023b9:	c0 $/;"	l
c01023ba	obj/kernel.asm	/^c01023ba:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01023bd	obj/kernel.asm	/^c01023bd:	88 14 c5 65 06 15 c0 	mov    %dl,-0x3feaf99b(,%eax,8)$/;"	l
c01023c4	obj/kernel.asm	/^c01023c4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01023c7	obj/kernel.asm	/^c01023c7:	8b 04 85 00 f6 14 c0 	mov    -0x3feb0a00(,%eax,4),%eax$/;"	l
c01023ce	obj/kernel.asm	/^c01023ce:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01023d1	obj/kernel.asm	/^c01023d1:	89 c2                	mov    %eax,%edx$/;"	l
c01023d3	obj/kernel.asm	/^c01023d3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01023d6	obj/kernel.asm	/^c01023d6:	66 89 14 c5 66 06 15 	mov    %dx,-0x3feaf99a(,%eax,8)$/;"	l
c01023dd	obj/kernel.asm	/^c01023dd:	c0 $/;"	l
c01023de	obj/kernel.asm	/^c01023de:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01023e2	obj/kernel.asm	/^c01023e2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01023e5	obj/kernel.asm	/^c01023e5:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c01023ea	obj/kernel.asm	/^c01023ea:	0f 86 2f ff ff ff    	jbe    c010231f <idt_init+0x12>$/;"	l
c01023f0	obj/kernel.asm	/^c01023f0:	a1 00 f8 14 c0       	mov    0xc014f800,%eax$/;"	l
c01023f5	obj/kernel.asm	/^c01023f5:	66 a3 60 0a 15 c0    	mov    %ax,0xc0150a60$/;"	l
c01023fb	obj/kernel.asm	/^c01023fb:	66 c7 05 62 0a 15 c0 	movw   $0x8,0xc0150a62$/;"	l
c0102402	obj/kernel.asm	/^c0102402:	08 00 $/;"	l
c0102404	obj/kernel.asm	/^c0102404:	0f b6 05 64 0a 15 c0 	movzbl 0xc0150a64,%eax$/;"	l
c010240b	obj/kernel.asm	/^c010240b:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
c010240e	obj/kernel.asm	/^c010240e:	a2 64 0a 15 c0       	mov    %al,0xc0150a64$/;"	l
c0102413	obj/kernel.asm	/^c0102413:	0f b6 05 64 0a 15 c0 	movzbl 0xc0150a64,%eax$/;"	l
c010241a	obj/kernel.asm	/^c010241a:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c010241d	obj/kernel.asm	/^c010241d:	a2 64 0a 15 c0       	mov    %al,0xc0150a64$/;"	l
c0102422	obj/kernel.asm	/^c0102422:	0f b6 05 65 0a 15 c0 	movzbl 0xc0150a65,%eax$/;"	l
c0102429	obj/kernel.asm	/^c0102429:	83 c8 0f             	or     $0xf,%eax$/;"	l
c010242c	obj/kernel.asm	/^c010242c:	a2 65 0a 15 c0       	mov    %al,0xc0150a65$/;"	l
c0102431	obj/kernel.asm	/^c0102431:	0f b6 05 65 0a 15 c0 	movzbl 0xc0150a65,%eax$/;"	l
c0102438	obj/kernel.asm	/^c0102438:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c010243b	obj/kernel.asm	/^c010243b:	a2 65 0a 15 c0       	mov    %al,0xc0150a65$/;"	l
c0102440	obj/kernel.asm	/^c0102440:	0f b6 05 65 0a 15 c0 	movzbl 0xc0150a65,%eax$/;"	l
c0102447	obj/kernel.asm	/^c0102447:	83 c8 60             	or     $0x60,%eax$/;"	l
c010244a	obj/kernel.asm	/^c010244a:	a2 65 0a 15 c0       	mov    %al,0xc0150a65$/;"	l
c010244f	obj/kernel.asm	/^c010244f:	0f b6 05 65 0a 15 c0 	movzbl 0xc0150a65,%eax$/;"	l
c0102456	obj/kernel.asm	/^c0102456:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c0102459	obj/kernel.asm	/^c0102459:	a2 65 0a 15 c0       	mov    %al,0xc0150a65$/;"	l
c010245e	obj/kernel.asm	/^c010245e:	a1 00 f8 14 c0       	mov    0xc014f800,%eax$/;"	l
c0102463	obj/kernel.asm	/^c0102463:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0102466	obj/kernel.asm	/^c0102466:	66 a3 66 0a 15 c0    	mov    %ax,0xc0150a66$/;"	l
c010246c	obj/kernel.asm	/^c010246c:	c7 45 f8 80 f5 14 c0 	movl   $0xc014f580,-0x8(%ebp)$/;"	l
c0102473	obj/kernel.asm	/^c0102473:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0102476	obj/kernel.asm	/^c0102476:	0f 01 18             	lidtl  (%eax)$/;"	l
c0102479	obj/kernel.asm	/^c0102479:	c9                   	leave  $/;"	l
c010247a	obj/kernel.asm	/^c010247a:	c3                   	ret    $/;"	l
c010247b	obj/kernel.asm	/^c010247b <trapname>:$/;"	l
c010247b	obj/kernel.asm	/^c010247b:	55                   	push   %ebp$/;"	l
c010247c	obj/kernel.asm	/^c010247c:	89 e5                	mov    %esp,%ebp$/;"	l
c010247e	obj/kernel.asm	/^c010247e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102481	obj/kernel.asm	/^c0102481:	83 f8 13             	cmp    $0x13,%eax$/;"	l
c0102484	obj/kernel.asm	/^c0102484:	77 0c                	ja     c0102492 <trapname+0x17>$/;"	l
c0102486	obj/kernel.asm	/^c0102486:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102489	obj/kernel.asm	/^c0102489:	8b 04 85 c0 5f 11 c0 	mov    -0x3feea040(,%eax,4),%eax$/;"	l
c0102490	obj/kernel.asm	/^c0102490:	eb 18                	jmp    c01024aa <trapname+0x2f>$/;"	l
c0102492	obj/kernel.asm	/^c0102492:	83 7d 08 1f          	cmpl   $0x1f,0x8(%ebp)$/;"	l
c0102496	obj/kernel.asm	/^c0102496:	7e 0d                	jle    c01024a5 <trapname+0x2a>$/;"	l
c0102498	obj/kernel.asm	/^c0102498:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)$/;"	l
c010249c	obj/kernel.asm	/^c010249c:	7f 07                	jg     c01024a5 <trapname+0x2a>$/;"	l
c010249e	obj/kernel.asm	/^c010249e:	b8 4a 5b 11 c0       	mov    $0xc0115b4a,%eax$/;"	l
c01024a3	obj/kernel.asm	/^c01024a3:	eb 05                	jmp    c01024aa <trapname+0x2f>$/;"	l
c01024a5	obj/kernel.asm	/^c01024a5:	b8 5d 5b 11 c0       	mov    $0xc0115b5d,%eax$/;"	l
c01024aa	obj/kernel.asm	/^c01024aa:	5d                   	pop    %ebp$/;"	l
c01024ab	obj/kernel.asm	/^c01024ab:	c3                   	ret    $/;"	l
c01024ac	obj/kernel.asm	/^c01024ac <trap_in_kernel>:$/;"	l
c01024ac	obj/kernel.asm	/^c01024ac:	55                   	push   %ebp$/;"	l
c01024ad	obj/kernel.asm	/^c01024ad:	89 e5                	mov    %esp,%ebp$/;"	l
c01024af	obj/kernel.asm	/^c01024af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024b2	obj/kernel.asm	/^c01024b2:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c01024b6	obj/kernel.asm	/^c01024b6:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
c01024ba	obj/kernel.asm	/^c01024ba:	0f 94 c0             	sete   %al$/;"	l
c01024bd	obj/kernel.asm	/^c01024bd:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01024c0	obj/kernel.asm	/^c01024c0:	5d                   	pop    %ebp$/;"	l
c01024c1	obj/kernel.asm	/^c01024c1:	c3                   	ret    $/;"	l
c01024c2	obj/kernel.asm	/^c01024c2 <print_trapframe>:$/;"	l
c01024c2	obj/kernel.asm	/^c01024c2:	55                   	push   %ebp$/;"	l
c01024c3	obj/kernel.asm	/^c01024c3:	89 e5                	mov    %esp,%ebp$/;"	l
c01024c5	obj/kernel.asm	/^c01024c5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01024c8	obj/kernel.asm	/^c01024c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024cb	obj/kernel.asm	/^c01024cb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01024cf	obj/kernel.asm	/^c01024cf:	c7 04 24 9e 5b 11 c0 	movl   $0xc0115b9e,(%esp)$/;"	l
c01024d6	obj/kernel.asm	/^c01024d6:	e8 8a de ff ff       	call   c0100365 <cprintf>$/;"	l
c01024db	obj/kernel.asm	/^c01024db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024de	obj/kernel.asm	/^c01024de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01024e1	obj/kernel.asm	/^c01024e1:	e8 a1 01 00 00       	call   c0102687 <print_regs>$/;"	l
c01024e6	obj/kernel.asm	/^c01024e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024e9	obj/kernel.asm	/^c01024e9:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c01024ed	obj/kernel.asm	/^c01024ed:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01024f0	obj/kernel.asm	/^c01024f0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01024f4	obj/kernel.asm	/^c01024f4:	c7 04 24 af 5b 11 c0 	movl   $0xc0115baf,(%esp)$/;"	l
c01024fb	obj/kernel.asm	/^c01024fb:	e8 65 de ff ff       	call   c0100365 <cprintf>$/;"	l
c0102500	obj/kernel.asm	/^c0102500:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102503	obj/kernel.asm	/^c0102503:	0f b7 40 28          	movzwl 0x28(%eax),%eax$/;"	l
c0102507	obj/kernel.asm	/^c0102507:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010250a	obj/kernel.asm	/^c010250a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010250e	obj/kernel.asm	/^c010250e:	c7 04 24 c2 5b 11 c0 	movl   $0xc0115bc2,(%esp)$/;"	l
c0102515	obj/kernel.asm	/^c0102515:	e8 4b de ff ff       	call   c0100365 <cprintf>$/;"	l
c010251a	obj/kernel.asm	/^c010251a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010251d	obj/kernel.asm	/^c010251d:	0f b7 40 24          	movzwl 0x24(%eax),%eax$/;"	l
c0102521	obj/kernel.asm	/^c0102521:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102524	obj/kernel.asm	/^c0102524:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102528	obj/kernel.asm	/^c0102528:	c7 04 24 d5 5b 11 c0 	movl   $0xc0115bd5,(%esp)$/;"	l
c010252f	obj/kernel.asm	/^c010252f:	e8 31 de ff ff       	call   c0100365 <cprintf>$/;"	l
c0102534	obj/kernel.asm	/^c0102534:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102537	obj/kernel.asm	/^c0102537:	0f b7 40 20          	movzwl 0x20(%eax),%eax$/;"	l
c010253b	obj/kernel.asm	/^c010253b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010253e	obj/kernel.asm	/^c010253e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102542	obj/kernel.asm	/^c0102542:	c7 04 24 e8 5b 11 c0 	movl   $0xc0115be8,(%esp)$/;"	l
c0102549	obj/kernel.asm	/^c0102549:	e8 17 de ff ff       	call   c0100365 <cprintf>$/;"	l
c010254e	obj/kernel.asm	/^c010254e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102551	obj/kernel.asm	/^c0102551:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0102554	obj/kernel.asm	/^c0102554:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102557	obj/kernel.asm	/^c0102557:	e8 1f ff ff ff       	call   c010247b <trapname>$/;"	l
c010255c	obj/kernel.asm	/^c010255c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010255f	obj/kernel.asm	/^c010255f:	8b 52 30             	mov    0x30(%edx),%edx$/;"	l
c0102562	obj/kernel.asm	/^c0102562:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0102566	obj/kernel.asm	/^c0102566:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010256a	obj/kernel.asm	/^c010256a:	c7 04 24 fb 5b 11 c0 	movl   $0xc0115bfb,(%esp)$/;"	l
c0102571	obj/kernel.asm	/^c0102571:	e8 ef dd ff ff       	call   c0100365 <cprintf>$/;"	l
c0102576	obj/kernel.asm	/^c0102576:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102579	obj/kernel.asm	/^c0102579:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010257c	obj/kernel.asm	/^c010257c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102580	obj/kernel.asm	/^c0102580:	c7 04 24 0d 5c 11 c0 	movl   $0xc0115c0d,(%esp)$/;"	l
c0102587	obj/kernel.asm	/^c0102587:	e8 d9 dd ff ff       	call   c0100365 <cprintf>$/;"	l
c010258c	obj/kernel.asm	/^c010258c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010258f	obj/kernel.asm	/^c010258f:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0102592	obj/kernel.asm	/^c0102592:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102596	obj/kernel.asm	/^c0102596:	c7 04 24 1c 5c 11 c0 	movl   $0xc0115c1c,(%esp)$/;"	l
c010259d	obj/kernel.asm	/^c010259d:	e8 c3 dd ff ff       	call   c0100365 <cprintf>$/;"	l
c01025a2	obj/kernel.asm	/^c01025a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025a5	obj/kernel.asm	/^c01025a5:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c01025a9	obj/kernel.asm	/^c01025a9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01025ac	obj/kernel.asm	/^c01025ac:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01025b0	obj/kernel.asm	/^c01025b0:	c7 04 24 2b 5c 11 c0 	movl   $0xc0115c2b,(%esp)$/;"	l
c01025b7	obj/kernel.asm	/^c01025b7:	e8 a9 dd ff ff       	call   c0100365 <cprintf>$/;"	l
c01025bc	obj/kernel.asm	/^c01025bc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025bf	obj/kernel.asm	/^c01025bf:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c01025c2	obj/kernel.asm	/^c01025c2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01025c6	obj/kernel.asm	/^c01025c6:	c7 04 24 3e 5c 11 c0 	movl   $0xc0115c3e,(%esp)$/;"	l
c01025cd	obj/kernel.asm	/^c01025cd:	e8 93 dd ff ff       	call   c0100365 <cprintf>$/;"	l
c01025d2	obj/kernel.asm	/^c01025d2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01025d9	obj/kernel.asm	/^c01025d9:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c01025e0	obj/kernel.asm	/^c01025e0:	eb 3e                	jmp    c0102620 <print_trapframe+0x15e>$/;"	l
c01025e2	obj/kernel.asm	/^c01025e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025e5	obj/kernel.asm	/^c01025e5:	8b 50 40             	mov    0x40(%eax),%edx$/;"	l
c01025e8	obj/kernel.asm	/^c01025e8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01025eb	obj/kernel.asm	/^c01025eb:	21 d0                	and    %edx,%eax$/;"	l
c01025ed	obj/kernel.asm	/^c01025ed:	85 c0                	test   %eax,%eax$/;"	l
c01025ef	obj/kernel.asm	/^c01025ef:	74 28                	je     c0102619 <print_trapframe+0x157>$/;"	l
c01025f1	obj/kernel.asm	/^c01025f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01025f4	obj/kernel.asm	/^c01025f4:	8b 04 85 a0 f5 14 c0 	mov    -0x3feb0a60(,%eax,4),%eax$/;"	l
c01025fb	obj/kernel.asm	/^c01025fb:	85 c0                	test   %eax,%eax$/;"	l
c01025fd	obj/kernel.asm	/^c01025fd:	74 1a                	je     c0102619 <print_trapframe+0x157>$/;"	l
c01025ff	obj/kernel.asm	/^c01025ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102602	obj/kernel.asm	/^c0102602:	8b 04 85 a0 f5 14 c0 	mov    -0x3feb0a60(,%eax,4),%eax$/;"	l
c0102609	obj/kernel.asm	/^c0102609:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010260d	obj/kernel.asm	/^c010260d:	c7 04 24 4d 5c 11 c0 	movl   $0xc0115c4d,(%esp)$/;"	l
c0102614	obj/kernel.asm	/^c0102614:	e8 4c dd ff ff       	call   c0100365 <cprintf>$/;"	l
c0102619	obj/kernel.asm	/^c0102619:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010261d	obj/kernel.asm	/^c010261d:	d1 65 f0             	shll   -0x10(%ebp)$/;"	d
c0102620	obj/kernel.asm	/^c0102620:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102623	obj/kernel.asm	/^c0102623:	83 f8 17             	cmp    $0x17,%eax$/;"	l
c0102626	obj/kernel.asm	/^c0102626:	76 ba                	jbe    c01025e2 <print_trapframe+0x120>$/;"	l
c0102628	obj/kernel.asm	/^c0102628:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010262b	obj/kernel.asm	/^c010262b:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c010262e	obj/kernel.asm	/^c010262e:	25 00 30 00 00       	and    $0x3000,%eax$/;"	l
c0102633	obj/kernel.asm	/^c0102633:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0102636	obj/kernel.asm	/^c0102636:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010263a	obj/kernel.asm	/^c010263a:	c7 04 24 51 5c 11 c0 	movl   $0xc0115c51,(%esp)$/;"	l
c0102641	obj/kernel.asm	/^c0102641:	e8 1f dd ff ff       	call   c0100365 <cprintf>$/;"	l
c0102646	obj/kernel.asm	/^c0102646:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102649	obj/kernel.asm	/^c0102649:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010264c	obj/kernel.asm	/^c010264c:	e8 5b fe ff ff       	call   c01024ac <trap_in_kernel>$/;"	l
c0102651	obj/kernel.asm	/^c0102651:	85 c0                	test   %eax,%eax$/;"	l
c0102653	obj/kernel.asm	/^c0102653:	75 30                	jne    c0102685 <print_trapframe+0x1c3>$/;"	l
c0102655	obj/kernel.asm	/^c0102655:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102658	obj/kernel.asm	/^c0102658:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010265b	obj/kernel.asm	/^c010265b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010265f	obj/kernel.asm	/^c010265f:	c7 04 24 5a 5c 11 c0 	movl   $0xc0115c5a,(%esp)$/;"	l
c0102666	obj/kernel.asm	/^c0102666:	e8 fa dc ff ff       	call   c0100365 <cprintf>$/;"	l
c010266b	obj/kernel.asm	/^c010266b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010266e	obj/kernel.asm	/^c010266e:	0f b7 40 48          	movzwl 0x48(%eax),%eax$/;"	l
c0102672	obj/kernel.asm	/^c0102672:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102675	obj/kernel.asm	/^c0102675:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102679	obj/kernel.asm	/^c0102679:	c7 04 24 69 5c 11 c0 	movl   $0xc0115c69,(%esp)$/;"	l
c0102680	obj/kernel.asm	/^c0102680:	e8 e0 dc ff ff       	call   c0100365 <cprintf>$/;"	l
c0102685	obj/kernel.asm	/^c0102685:	c9                   	leave  $/;"	l
c0102686	obj/kernel.asm	/^c0102686:	c3                   	ret    $/;"	l
c0102687	obj/kernel.asm	/^c0102687 <print_regs>:$/;"	l
c0102687	obj/kernel.asm	/^c0102687:	55                   	push   %ebp$/;"	l
c0102688	obj/kernel.asm	/^c0102688:	89 e5                	mov    %esp,%ebp$/;"	l
c010268a	obj/kernel.asm	/^c010268a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010268d	obj/kernel.asm	/^c010268d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102690	obj/kernel.asm	/^c0102690:	8b 00                	mov    (%eax),%eax$/;"	l
c0102692	obj/kernel.asm	/^c0102692:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102696	obj/kernel.asm	/^c0102696:	c7 04 24 7c 5c 11 c0 	movl   $0xc0115c7c,(%esp)$/;"	l
c010269d	obj/kernel.asm	/^c010269d:	e8 c3 dc ff ff       	call   c0100365 <cprintf>$/;"	l
c01026a2	obj/kernel.asm	/^c01026a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026a5	obj/kernel.asm	/^c01026a5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01026a8	obj/kernel.asm	/^c01026a8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01026ac	obj/kernel.asm	/^c01026ac:	c7 04 24 8b 5c 11 c0 	movl   $0xc0115c8b,(%esp)$/;"	l
c01026b3	obj/kernel.asm	/^c01026b3:	e8 ad dc ff ff       	call   c0100365 <cprintf>$/;"	l
c01026b8	obj/kernel.asm	/^c01026b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026bb	obj/kernel.asm	/^c01026bb:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01026be	obj/kernel.asm	/^c01026be:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01026c2	obj/kernel.asm	/^c01026c2:	c7 04 24 9a 5c 11 c0 	movl   $0xc0115c9a,(%esp)$/;"	l
c01026c9	obj/kernel.asm	/^c01026c9:	e8 97 dc ff ff       	call   c0100365 <cprintf>$/;"	l
c01026ce	obj/kernel.asm	/^c01026ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026d1	obj/kernel.asm	/^c01026d1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01026d4	obj/kernel.asm	/^c01026d4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01026d8	obj/kernel.asm	/^c01026d8:	c7 04 24 a9 5c 11 c0 	movl   $0xc0115ca9,(%esp)$/;"	l
c01026df	obj/kernel.asm	/^c01026df:	e8 81 dc ff ff       	call   c0100365 <cprintf>$/;"	l
c01026e4	obj/kernel.asm	/^c01026e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026e7	obj/kernel.asm	/^c01026e7:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01026ea	obj/kernel.asm	/^c01026ea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01026ee	obj/kernel.asm	/^c01026ee:	c7 04 24 b8 5c 11 c0 	movl   $0xc0115cb8,(%esp)$/;"	l
c01026f5	obj/kernel.asm	/^c01026f5:	e8 6b dc ff ff       	call   c0100365 <cprintf>$/;"	l
c01026fa	obj/kernel.asm	/^c01026fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026fd	obj/kernel.asm	/^c01026fd:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0102700	obj/kernel.asm	/^c0102700:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102704	obj/kernel.asm	/^c0102704:	c7 04 24 c7 5c 11 c0 	movl   $0xc0115cc7,(%esp)$/;"	l
c010270b	obj/kernel.asm	/^c010270b:	e8 55 dc ff ff       	call   c0100365 <cprintf>$/;"	l
c0102710	obj/kernel.asm	/^c0102710:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102713	obj/kernel.asm	/^c0102713:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0102716	obj/kernel.asm	/^c0102716:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010271a	obj/kernel.asm	/^c010271a:	c7 04 24 d6 5c 11 c0 	movl   $0xc0115cd6,(%esp)$/;"	l
c0102721	obj/kernel.asm	/^c0102721:	e8 3f dc ff ff       	call   c0100365 <cprintf>$/;"	l
c0102726	obj/kernel.asm	/^c0102726:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102729	obj/kernel.asm	/^c0102729:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010272c	obj/kernel.asm	/^c010272c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102730	obj/kernel.asm	/^c0102730:	c7 04 24 e5 5c 11 c0 	movl   $0xc0115ce5,(%esp)$/;"	l
c0102737	obj/kernel.asm	/^c0102737:	e8 29 dc ff ff       	call   c0100365 <cprintf>$/;"	l
c010273c	obj/kernel.asm	/^c010273c:	c9                   	leave  $/;"	l
c010273d	obj/kernel.asm	/^c010273d:	c3                   	ret    $/;"	l
c010273e	obj/kernel.asm	/^c010273e <print_pgfault>:$/;"	l
c010273e	obj/kernel.asm	/^c010273e:	55                   	push   %ebp$/;"	l
c010273f	obj/kernel.asm	/^c010273f:	89 e5                	mov    %esp,%ebp$/;"	l
c0102741	obj/kernel.asm	/^c0102741:	53                   	push   %ebx$/;"	l
c0102742	obj/kernel.asm	/^c0102742:	83 ec 34             	sub    $0x34,%esp$/;"	l
c0102745	obj/kernel.asm	/^c0102745:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102748	obj/kernel.asm	/^c0102748:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010274b	obj/kernel.asm	/^c010274b:	83 e0 01             	and    $0x1,%eax$/;"	l
c010274e	obj/kernel.asm	/^c010274e:	85 c0                	test   %eax,%eax$/;"	l
c0102750	obj/kernel.asm	/^c0102750:	74 07                	je     c0102759 <print_pgfault+0x1b>$/;"	l
c0102752	obj/kernel.asm	/^c0102752:	b9 f4 5c 11 c0       	mov    $0xc0115cf4,%ecx$/;"	l
c0102757	obj/kernel.asm	/^c0102757:	eb 05                	jmp    c010275e <print_pgfault+0x20>$/;"	l
c0102759	obj/kernel.asm	/^c0102759:	b9 05 5d 11 c0       	mov    $0xc0115d05,%ecx$/;"	l
c010275e	obj/kernel.asm	/^c010275e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102761	obj/kernel.asm	/^c0102761:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102764	obj/kernel.asm	/^c0102764:	83 e0 02             	and    $0x2,%eax$/;"	l
c0102767	obj/kernel.asm	/^c0102767:	85 c0                	test   %eax,%eax$/;"	l
c0102769	obj/kernel.asm	/^c0102769:	74 07                	je     c0102772 <print_pgfault+0x34>$/;"	l
c010276b	obj/kernel.asm	/^c010276b:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
c0102770	obj/kernel.asm	/^c0102770:	eb 05                	jmp    c0102777 <print_pgfault+0x39>$/;"	l
c0102772	obj/kernel.asm	/^c0102772:	ba 52 00 00 00       	mov    $0x52,%edx$/;"	l
c0102777	obj/kernel.asm	/^c0102777:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010277a	obj/kernel.asm	/^c010277a:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010277d	obj/kernel.asm	/^c010277d:	83 e0 04             	and    $0x4,%eax$/;"	l
c0102780	obj/kernel.asm	/^c0102780:	85 c0                	test   %eax,%eax$/;"	l
c0102782	obj/kernel.asm	/^c0102782:	74 07                	je     c010278b <print_pgfault+0x4d>$/;"	l
c0102784	obj/kernel.asm	/^c0102784:	b8 55 00 00 00       	mov    $0x55,%eax$/;"	l
c0102789	obj/kernel.asm	/^c0102789:	eb 05                	jmp    c0102790 <print_pgfault+0x52>$/;"	l
c010278b	obj/kernel.asm	/^c010278b:	b8 4b 00 00 00       	mov    $0x4b,%eax$/;"	l
c0102790	obj/kernel.asm	/^c0102790:	0f 20 d3             	mov    %cr2,%ebx$/;"	l
c0102793	obj/kernel.asm	/^c0102793:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
c0102796	obj/kernel.asm	/^c0102796:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
c0102799	obj/kernel.asm	/^c0102799:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c010279d	obj/kernel.asm	/^c010279d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c01027a1	obj/kernel.asm	/^c01027a1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01027a5	obj/kernel.asm	/^c01027a5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c01027a9	obj/kernel.asm	/^c01027a9:	c7 04 24 14 5d 11 c0 	movl   $0xc0115d14,(%esp)$/;"	l
c01027b0	obj/kernel.asm	/^c01027b0:	e8 b0 db ff ff       	call   c0100365 <cprintf>$/;"	l
c01027b5	obj/kernel.asm	/^c01027b5:	83 c4 34             	add    $0x34,%esp$/;"	l
c01027b8	obj/kernel.asm	/^c01027b8:	5b                   	pop    %ebx$/;"	l
c01027b9	obj/kernel.asm	/^c01027b9:	5d                   	pop    %ebp$/;"	l
c01027ba	obj/kernel.asm	/^c01027ba:	c3                   	ret    $/;"	l
c01027bb	obj/kernel.asm	/^c01027bb <pgfault_handler>:$/;"	l
c01027bb	obj/kernel.asm	/^c01027bb:	55                   	push   %ebp$/;"	l
c01027bc	obj/kernel.asm	/^c01027bc:	89 e5                	mov    %esp,%ebp$/;"	l
c01027be	obj/kernel.asm	/^c01027be:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01027c1	obj/kernel.asm	/^c01027c1:	a1 0c 41 15 c0       	mov    0xc015410c,%eax$/;"	l
c01027c6	obj/kernel.asm	/^c01027c6:	85 c0                	test   %eax,%eax$/;"	l
c01027c8	obj/kernel.asm	/^c01027c8:	74 0b                	je     c01027d5 <pgfault_handler+0x1a>$/;"	l
c01027ca	obj/kernel.asm	/^c01027ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01027cd	obj/kernel.asm	/^c01027cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01027d0	obj/kernel.asm	/^c01027d0:	e8 69 ff ff ff       	call   c010273e <print_pgfault>$/;"	l
c01027d5	obj/kernel.asm	/^c01027d5:	a1 0c 41 15 c0       	mov    0xc015410c,%eax$/;"	l
c01027da	obj/kernel.asm	/^c01027da:	85 c0                	test   %eax,%eax$/;"	l
c01027dc	obj/kernel.asm	/^c01027dc:	74 3d                	je     c010281b <pgfault_handler+0x60>$/;"	l
c01027de	obj/kernel.asm	/^c01027de:	8b 15 28 0f 15 c0    	mov    0xc0150f28,%edx$/;"	l
c01027e4	obj/kernel.asm	/^c01027e4:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c01027e9	obj/kernel.asm	/^c01027e9:	39 c2                	cmp    %eax,%edx$/;"	l
c01027eb	obj/kernel.asm	/^c01027eb:	74 24                	je     c0102811 <pgfault_handler+0x56>$/;"	l
c01027ed	obj/kernel.asm	/^c01027ed:	c7 44 24 0c 37 5d 11 	movl   $0xc0115d37,0xc(%esp)$/;"	l
c01027f4	obj/kernel.asm	/^c01027f4:	c0 $/;"	l
c01027f5	obj/kernel.asm	/^c01027f5:	c7 44 24 08 4b 5d 11 	movl   $0xc0115d4b,0x8(%esp)$/;"	l
c01027fc	obj/kernel.asm	/^c01027fc:	c0 $/;"	l
c01027fd	obj/kernel.asm	/^c01027fd:	c7 44 24 04 b0 00 00 	movl   $0xb0,0x4(%esp)$/;"	l
c0102804	obj/kernel.asm	/^c0102804:	00 $/;"	l
c0102805	obj/kernel.asm	/^c0102805:	c7 04 24 60 5d 11 c0 	movl   $0xc0115d60,(%esp)$/;"	l
c010280c	obj/kernel.asm	/^c010280c:	e8 b7 e6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0102811	obj/kernel.asm	/^c0102811:	a1 0c 41 15 c0       	mov    0xc015410c,%eax$/;"	l
c0102816	obj/kernel.asm	/^c0102816:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102819	obj/kernel.asm	/^c0102819:	eb 46                	jmp    c0102861 <pgfault_handler+0xa6>$/;"	l
c010281b	obj/kernel.asm	/^c010281b:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c0102820	obj/kernel.asm	/^c0102820:	85 c0                	test   %eax,%eax$/;"	l
c0102822	obj/kernel.asm	/^c0102822:	75 32                	jne    c0102856 <pgfault_handler+0x9b>$/;"	l
c0102824	obj/kernel.asm	/^c0102824:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102827	obj/kernel.asm	/^c0102827:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010282a	obj/kernel.asm	/^c010282a:	e8 93 fc ff ff       	call   c01024c2 <print_trapframe>$/;"	l
c010282f	obj/kernel.asm	/^c010282f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102832	obj/kernel.asm	/^c0102832:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102835	obj/kernel.asm	/^c0102835:	e8 04 ff ff ff       	call   c010273e <print_pgfault>$/;"	l
c010283a	obj/kernel.asm	/^c010283a:	c7 44 24 08 71 5d 11 	movl   $0xc0115d71,0x8(%esp)$/;"	l
c0102841	obj/kernel.asm	/^c0102841:	c0 $/;"	l
c0102842	obj/kernel.asm	/^c0102842:	c7 44 24 04 b7 00 00 	movl   $0xb7,0x4(%esp)$/;"	l
c0102849	obj/kernel.asm	/^c0102849:	00 $/;"	l
c010284a	obj/kernel.asm	/^c010284a:	c7 04 24 60 5d 11 c0 	movl   $0xc0115d60,(%esp)$/;"	l
c0102851	obj/kernel.asm	/^c0102851:	e8 72 e6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0102856	obj/kernel.asm	/^c0102856:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010285b	obj/kernel.asm	/^c010285b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010285e	obj/kernel.asm	/^c010285e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102861	obj/kernel.asm	/^c0102861:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c0102864	obj/kernel.asm	/^c0102864:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0102867	obj/kernel.asm	/^c0102867:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010286a	obj/kernel.asm	/^c010286a:	89 c2                	mov    %eax,%edx$/;"	l
c010286c	obj/kernel.asm	/^c010286c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010286f	obj/kernel.asm	/^c010286f:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102872	obj/kernel.asm	/^c0102872:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0102876	obj/kernel.asm	/^c0102876:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010287a	obj/kernel.asm	/^c010287a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010287d	obj/kernel.asm	/^c010287d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102880	obj/kernel.asm	/^c0102880:	e8 7c 65 00 00       	call   c0108e01 <do_pgfault>$/;"	l
c0102885	obj/kernel.asm	/^c0102885:	c9                   	leave  $/;"	l
c0102886	obj/kernel.asm	/^c0102886:	c3                   	ret    $/;"	l
c0102887	obj/kernel.asm	/^c0102887 <trap_dispatch>:$/;"	l
c0102887	obj/kernel.asm	/^c0102887:	55                   	push   %ebp$/;"	l
c0102888	obj/kernel.asm	/^c0102888:	89 e5                	mov    %esp,%ebp$/;"	l
c010288a	obj/kernel.asm	/^c010288a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010288d	obj/kernel.asm	/^c010288d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0102894	obj/kernel.asm	/^c0102894:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102897	obj/kernel.asm	/^c0102897:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010289a	obj/kernel.asm	/^c010289a:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
c010289d	obj/kernel.asm	/^c010289d:	77 38                	ja     c01028d7 <trap_dispatch+0x50>$/;"	l
c010289f	obj/kernel.asm	/^c010289f:	83 f8 2e             	cmp    $0x2e,%eax$/;"	l
c01028a2	obj/kernel.asm	/^c01028a2:	0f 83 cb 01 00 00    	jae    c0102a73 <trap_dispatch+0x1ec>$/;"	l
c01028a8	obj/kernel.asm	/^c01028a8:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c01028ab	obj/kernel.asm	/^c01028ab:	0f 84 07 01 00 00    	je     c01029b8 <trap_dispatch+0x131>$/;"	l
c01028b1	obj/kernel.asm	/^c01028b1:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c01028b4	obj/kernel.asm	/^c01028b4:	77 0a                	ja     c01028c0 <trap_dispatch+0x39>$/;"	l
c01028b6	obj/kernel.asm	/^c01028b6:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
c01028b9	obj/kernel.asm	/^c01028b9:	74 3e                	je     c01028f9 <trap_dispatch+0x72>$/;"	l
c01028bb	obj/kernel.asm	/^c01028bb:	e9 6b 01 00 00       	jmp    c0102a2b <trap_dispatch+0x1a4>$/;"	l
c01028c0	obj/kernel.asm	/^c01028c0:	83 f8 21             	cmp    $0x21,%eax$/;"	l
c01028c3	obj/kernel.asm	/^c01028c3:	0f 84 30 01 00 00    	je     c01029f9 <trap_dispatch+0x172>$/;"	l
c01028c9	obj/kernel.asm	/^c01028c9:	83 f8 24             	cmp    $0x24,%eax$/;"	l
c01028cc	obj/kernel.asm	/^c01028cc:	0f 84 27 01 00 00    	je     c01029f9 <trap_dispatch+0x172>$/;"	l
c01028d2	obj/kernel.asm	/^c01028d2:	e9 54 01 00 00       	jmp    c0102a2b <trap_dispatch+0x1a4>$/;"	l
c01028d7	obj/kernel.asm	/^c01028d7:	83 f8 78             	cmp    $0x78,%eax$/;"	l
c01028da	obj/kernel.asm	/^c01028da:	0f 82 4b 01 00 00    	jb     c0102a2b <trap_dispatch+0x1a4>$/;"	l
c01028e0	obj/kernel.asm	/^c01028e0:	83 f8 79             	cmp    $0x79,%eax$/;"	l
c01028e3	obj/kernel.asm	/^c01028e3:	0f 86 26 01 00 00    	jbe    c0102a0f <trap_dispatch+0x188>$/;"	l
c01028e9	obj/kernel.asm	/^c01028e9:	3d 80 00 00 00       	cmp    $0x80,%eax$/;"	l
c01028ee	obj/kernel.asm	/^c01028ee:	0f 84 ba 00 00 00    	je     c01029ae <trap_dispatch+0x127>$/;"	l
c01028f4	obj/kernel.asm	/^c01028f4:	e9 32 01 00 00       	jmp    c0102a2b <trap_dispatch+0x1a4>$/;"	l
c01028f9	obj/kernel.asm	/^c01028f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01028fc	obj/kernel.asm	/^c01028fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01028ff	obj/kernel.asm	/^c01028ff:	e8 b7 fe ff ff       	call   c01027bb <pgfault_handler>$/;"	l
c0102904	obj/kernel.asm	/^c0102904:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102907	obj/kernel.asm	/^c0102907:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010290b	obj/kernel.asm	/^c010290b:	0f 84 98 00 00 00    	je     c01029a9 <trap_dispatch+0x122>$/;"	l
c0102911	obj/kernel.asm	/^c0102911:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102914	obj/kernel.asm	/^c0102914:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102917	obj/kernel.asm	/^c0102917:	e8 a6 fb ff ff       	call   c01024c2 <print_trapframe>$/;"	l
c010291c	obj/kernel.asm	/^c010291c:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c0102921	obj/kernel.asm	/^c0102921:	85 c0                	test   %eax,%eax$/;"	l
c0102923	obj/kernel.asm	/^c0102923:	75 23                	jne    c0102948 <trap_dispatch+0xc1>$/;"	l
c0102925	obj/kernel.asm	/^c0102925:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102928	obj/kernel.asm	/^c0102928:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010292c	obj/kernel.asm	/^c010292c:	c7 44 24 08 88 5d 11 	movl   $0xc0115d88,0x8(%esp)$/;"	l
c0102933	obj/kernel.asm	/^c0102933:	c0 $/;"	l
c0102934	obj/kernel.asm	/^c0102934:	c7 44 24 04 cc 00 00 	movl   $0xcc,0x4(%esp)$/;"	l
c010293b	obj/kernel.asm	/^c010293b:	00 $/;"	l
c010293c	obj/kernel.asm	/^c010293c:	c7 04 24 60 5d 11 c0 	movl   $0xc0115d60,(%esp)$/;"	l
c0102943	obj/kernel.asm	/^c0102943:	e8 80 e5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0102948	obj/kernel.asm	/^c0102948:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010294b	obj/kernel.asm	/^c010294b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010294e	obj/kernel.asm	/^c010294e:	e8 59 fb ff ff       	call   c01024ac <trap_in_kernel>$/;"	l
c0102953	obj/kernel.asm	/^c0102953:	85 c0                	test   %eax,%eax$/;"	l
c0102955	obj/kernel.asm	/^c0102955:	74 23                	je     c010297a <trap_dispatch+0xf3>$/;"	l
c0102957	obj/kernel.asm	/^c0102957:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010295a	obj/kernel.asm	/^c010295a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010295e	obj/kernel.asm	/^c010295e:	c7 44 24 08 a8 5d 11 	movl   $0xc0115da8,0x8(%esp)$/;"	l
c0102965	obj/kernel.asm	/^c0102965:	c0 $/;"	l
c0102966	obj/kernel.asm	/^c0102966:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)$/;"	l
c010296d	obj/kernel.asm	/^c010296d:	00 $/;"	l
c010296e	obj/kernel.asm	/^c010296e:	c7 04 24 60 5d 11 c0 	movl   $0xc0115d60,(%esp)$/;"	l
c0102975	obj/kernel.asm	/^c0102975:	e8 4e e5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010297a	obj/kernel.asm	/^c010297a:	c7 04 24 d6 5d 11 c0 	movl   $0xc0115dd6,(%esp)$/;"	l
c0102981	obj/kernel.asm	/^c0102981:	e8 df d9 ff ff       	call   c0100365 <cprintf>$/;"	l
c0102986	obj/kernel.asm	/^c0102986:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102989	obj/kernel.asm	/^c0102989:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010298d	obj/kernel.asm	/^c010298d:	c7 44 24 08 ec 5d 11 	movl   $0xc0115dec,0x8(%esp)$/;"	l
c0102994	obj/kernel.asm	/^c0102994:	c0 $/;"	l
c0102995	obj/kernel.asm	/^c0102995:	c7 44 24 04 d3 00 00 	movl   $0xd3,0x4(%esp)$/;"	l
c010299c	obj/kernel.asm	/^c010299c:	00 $/;"	l
c010299d	obj/kernel.asm	/^c010299d:	c7 04 24 60 5d 11 c0 	movl   $0xc0115d60,(%esp)$/;"	l
c01029a4	obj/kernel.asm	/^c01029a4:	e8 1f e5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01029a9	obj/kernel.asm	/^c01029a9:	e9 c6 00 00 00       	jmp    c0102a74 <trap_dispatch+0x1ed>$/;"	l
c01029ae	obj/kernel.asm	/^c01029ae:	e8 f4 c3 00 00       	call   c010eda7 <syscall>$/;"	l
c01029b3	obj/kernel.asm	/^c01029b3:	e9 bc 00 00 00       	jmp    c0102a74 <trap_dispatch+0x1ed>$/;"	l
c01029b8	obj/kernel.asm	/^c01029b8:	a1 10 40 15 c0       	mov    0xc0154010,%eax$/;"	l
c01029bd	obj/kernel.asm	/^c01029bd:	83 c0 01             	add    $0x1,%eax$/;"	l
c01029c0	obj/kernel.asm	/^c01029c0:	a3 10 40 15 c0       	mov    %eax,0xc0154010$/;"	l
c01029c5	obj/kernel.asm	/^c01029c5:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c01029ca	obj/kernel.asm	/^c01029ca:	85 c0                	test   %eax,%eax$/;"	l
c01029cc	obj/kernel.asm	/^c01029cc:	75 24                	jne    c01029f2 <trap_dispatch+0x16b>$/;"	l
c01029ce	obj/kernel.asm	/^c01029ce:	c7 44 24 0c 15 5e 11 	movl   $0xc0115e15,0xc(%esp)$/;"	l
c01029d5	obj/kernel.asm	/^c01029d5:	c0 $/;"	l
c01029d6	obj/kernel.asm	/^c01029d6:	c7 44 24 08 4b 5d 11 	movl   $0xc0115d4b,0x8(%esp)$/;"	l
c01029dd	obj/kernel.asm	/^c01029dd:	c0 $/;"	l
c01029de	obj/kernel.asm	/^c01029de:	c7 44 24 04 f3 00 00 	movl   $0xf3,0x4(%esp)$/;"	l
c01029e5	obj/kernel.asm	/^c01029e5:	00 $/;"	l
c01029e6	obj/kernel.asm	/^c01029e6:	c7 04 24 60 5d 11 c0 	movl   $0xc0115d60,(%esp)$/;"	l
c01029ed	obj/kernel.asm	/^c01029ed:	e8 d6 e4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01029f2	obj/kernel.asm	/^c01029f2:	e8 3b bf 00 00       	call   c010e932 <run_timer_list>$/;"	l
c01029f7	obj/kernel.asm	/^c01029f7:	eb 7b                	jmp    c0102a74 <trap_dispatch+0x1ed>$/;"	l
c01029f9	obj/kernel.asm	/^c01029f9:	e8 42 ee ff ff       	call   c0101840 <cons_getc>$/;"	l
c01029fe	obj/kernel.asm	/^c01029fe:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0102a01	obj/kernel.asm	/^c0102a01:	0f be 45 f3          	movsbl -0xd(%ebp),%eax$/;"	l
c0102a05	obj/kernel.asm	/^c0102a05:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102a08	obj/kernel.asm	/^c0102a08:	e8 a2 e6 00 00       	call   c01110af <dev_stdin_write>$/;"	l
c0102a0d	obj/kernel.asm	/^c0102a0d:	eb 65                	jmp    c0102a74 <trap_dispatch+0x1ed>$/;"	l
c0102a0f	obj/kernel.asm	/^c0102a0f:	c7 44 24 08 25 5e 11 	movl   $0xc0115e25,0x8(%esp)$/;"	l
c0102a16	obj/kernel.asm	/^c0102a16:	c0 $/;"	l
c0102a17	obj/kernel.asm	/^c0102a17:	c7 44 24 04 05 01 00 	movl   $0x105,0x4(%esp)$/;"	l
c0102a1e	obj/kernel.asm	/^c0102a1e:	00 $/;"	l
c0102a1f	obj/kernel.asm	/^c0102a1f:	c7 04 24 60 5d 11 c0 	movl   $0xc0115d60,(%esp)$/;"	l
c0102a26	obj/kernel.asm	/^c0102a26:	e8 9d e4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0102a2b	obj/kernel.asm	/^c0102a2b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a2e	obj/kernel.asm	/^c0102a2e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102a31	obj/kernel.asm	/^c0102a31:	e8 8c fa ff ff       	call   c01024c2 <print_trapframe>$/;"	l
c0102a36	obj/kernel.asm	/^c0102a36:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c0102a3b	obj/kernel.asm	/^c0102a3b:	85 c0                	test   %eax,%eax$/;"	l
c0102a3d	obj/kernel.asm	/^c0102a3d:	74 18                	je     c0102a57 <trap_dispatch+0x1d0>$/;"	l
c0102a3f	obj/kernel.asm	/^c0102a3f:	c7 04 24 35 5e 11 c0 	movl   $0xc0115e35,(%esp)$/;"	l
c0102a46	obj/kernel.asm	/^c0102a46:	e8 1a d9 ff ff       	call   c0100365 <cprintf>$/;"	l
c0102a4b	obj/kernel.asm	/^c0102a4b:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c0102a52	obj/kernel.asm	/^c0102a52:	e8 08 a1 00 00       	call   c010cb5f <do_exit>$/;"	l
c0102a57	obj/kernel.asm	/^c0102a57:	c7 44 24 08 46 5e 11 	movl   $0xc0115e46,0x8(%esp)$/;"	l
c0102a5e	obj/kernel.asm	/^c0102a5e:	c0 $/;"	l
c0102a5f	obj/kernel.asm	/^c0102a5f:	c7 44 24 04 12 01 00 	movl   $0x112,0x4(%esp)$/;"	l
c0102a66	obj/kernel.asm	/^c0102a66:	00 $/;"	l
c0102a67	obj/kernel.asm	/^c0102a67:	c7 04 24 60 5d 11 c0 	movl   $0xc0115d60,(%esp)$/;"	l
c0102a6e	obj/kernel.asm	/^c0102a6e:	e8 55 e4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0102a73	obj/kernel.asm	/^c0102a73:	90                   	nop$/;"	l
c0102a74	obj/kernel.asm	/^c0102a74:	c9                   	leave  $/;"	l
c0102a75	obj/kernel.asm	/^c0102a75:	c3                   	ret    $/;"	l
c0102a76	obj/kernel.asm	/^c0102a76 <trap>:$/;"	l
c0102a76	obj/kernel.asm	/^c0102a76:	55                   	push   %ebp$/;"	l
c0102a77	obj/kernel.asm	/^c0102a77:	89 e5                	mov    %esp,%ebp$/;"	l
c0102a79	obj/kernel.asm	/^c0102a79:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0102a7c	obj/kernel.asm	/^c0102a7c:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c0102a81	obj/kernel.asm	/^c0102a81:	85 c0                	test   %eax,%eax$/;"	l
c0102a83	obj/kernel.asm	/^c0102a83:	75 0d                	jne    c0102a92 <trap+0x1c>$/;"	l
c0102a85	obj/kernel.asm	/^c0102a85:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a88	obj/kernel.asm	/^c0102a88:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102a8b	obj/kernel.asm	/^c0102a8b:	e8 f7 fd ff ff       	call   c0102887 <trap_dispatch>$/;"	l
c0102a90	obj/kernel.asm	/^c0102a90:	eb 6c                	jmp    c0102afe <trap+0x88>$/;"	l
c0102a92	obj/kernel.asm	/^c0102a92:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c0102a97	obj/kernel.asm	/^c0102a97:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0102a9a	obj/kernel.asm	/^c0102a9a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102a9d	obj/kernel.asm	/^c0102a9d:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c0102aa2	obj/kernel.asm	/^c0102aa2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0102aa5	obj/kernel.asm	/^c0102aa5:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102aa8	obj/kernel.asm	/^c0102aa8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102aab	obj/kernel.asm	/^c0102aab:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102aae	obj/kernel.asm	/^c0102aae:	e8 f9 f9 ff ff       	call   c01024ac <trap_in_kernel>$/;"	l
c0102ab3	obj/kernel.asm	/^c0102ab3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0102ab6	obj/kernel.asm	/^c0102ab6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102ab9	obj/kernel.asm	/^c0102ab9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102abc	obj/kernel.asm	/^c0102abc:	e8 c6 fd ff ff       	call   c0102887 <trap_dispatch>$/;"	l
c0102ac1	obj/kernel.asm	/^c0102ac1:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c0102ac6	obj/kernel.asm	/^c0102ac6:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0102ac9	obj/kernel.asm	/^c0102ac9:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102acc	obj/kernel.asm	/^c0102acc:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0102ad0	obj/kernel.asm	/^c0102ad0:	75 2c                	jne    c0102afe <trap+0x88>$/;"	l
c0102ad2	obj/kernel.asm	/^c0102ad2:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c0102ad7	obj/kernel.asm	/^c0102ad7:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102ada	obj/kernel.asm	/^c0102ada:	83 e0 01             	and    $0x1,%eax$/;"	l
c0102add	obj/kernel.asm	/^c0102add:	85 c0                	test   %eax,%eax$/;"	l
c0102adf	obj/kernel.asm	/^c0102adf:	74 0c                	je     c0102aed <trap+0x77>$/;"	l
c0102ae1	obj/kernel.asm	/^c0102ae1:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c0102ae8	obj/kernel.asm	/^c0102ae8:	e8 72 a0 00 00       	call   c010cb5f <do_exit>$/;"	l
c0102aed	obj/kernel.asm	/^c0102aed:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c0102af2	obj/kernel.asm	/^c0102af2:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102af5	obj/kernel.asm	/^c0102af5:	85 c0                	test   %eax,%eax$/;"	l
c0102af7	obj/kernel.asm	/^c0102af7:	74 05                	je     c0102afe <trap+0x88>$/;"	l
c0102af9	obj/kernel.asm	/^c0102af9:	e8 a7 bb 00 00       	call   c010e6a5 <schedule>$/;"	l
c0102afe	obj/kernel.asm	/^c0102afe:	c9                   	leave  $/;"	l
c0102aff	obj/kernel.asm	/^c0102aff:	c3                   	ret    $/;"	l
c0102b00	obj/kernel.asm	/^c0102b00 <__alltraps>:$/;"	l
c0102b00	obj/kernel.asm	/^c0102b00:	1e                   	push   %ds$/;"	l
c0102b01	obj/kernel.asm	/^c0102b01:	06                   	push   %es$/;"	l
c0102b02	obj/kernel.asm	/^c0102b02:	0f a0                	push   %fs$/;"	l
c0102b04	obj/kernel.asm	/^c0102b04:	0f a8                	push   %gs$/;"	l
c0102b06	obj/kernel.asm	/^c0102b06:	60                   	pusha  $/;"	l
c0102b07	obj/kernel.asm	/^c0102b07:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0102b0c	obj/kernel.asm	/^c0102b0c:	8e d8                	mov    %eax,%ds$/;"	l
c0102b0e	obj/kernel.asm	/^c0102b0e:	8e c0                	mov    %eax,%es$/;"	l
c0102b10	obj/kernel.asm	/^c0102b10:	54                   	push   %esp$/;"	l
c0102b11	obj/kernel.asm	/^c0102b11:	e8 60 ff ff ff       	call   c0102a76 <trap>$/;"	l
c0102b16	obj/kernel.asm	/^c0102b16:	5c                   	pop    %esp$/;"	l
c0102b17	obj/kernel.asm	/^c0102b17 <__trapret>:$/;"	l
c0102b17	obj/kernel.asm	/^c0102b17:	61                   	popa   $/;"	l
c0102b18	obj/kernel.asm	/^c0102b18:	0f a9                	pop    %gs$/;"	l
c0102b1a	obj/kernel.asm	/^c0102b1a:	0f a1                	pop    %fs$/;"	l
c0102b1c	obj/kernel.asm	/^c0102b1c:	07                   	pop    %es$/;"	l
c0102b1d	obj/kernel.asm	/^c0102b1d:	1f                   	pop    %ds$/;"	l
c0102b1e	obj/kernel.asm	/^c0102b1e:	83 c4 08             	add    $0x8,%esp$/;"	l
c0102b21	obj/kernel.asm	/^c0102b21:	cf                   	iret   $/;"	l
c0102b22	obj/kernel.asm	/^c0102b22 <forkrets>:$/;"	l
c0102b22	obj/kernel.asm	/^c0102b22:	8b 64 24 04          	mov    0x4(%esp),%esp$/;"	l
c0102b26	obj/kernel.asm	/^c0102b26:	e9 ec ff ff ff       	jmp    c0102b17 <__trapret>$/;"	l
c0102b2b	obj/kernel.asm	/^c0102b2b <vector0>:$/;"	l
c0102b2b	obj/kernel.asm	/^c0102b2b:	6a 00                	push   $0x0$/;"	l
c0102b2d	obj/kernel.asm	/^c0102b2d:	6a 00                	push   $0x0$/;"	l
c0102b2f	obj/kernel.asm	/^c0102b2f:	e9 cc ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b34	obj/kernel.asm	/^c0102b34 <vector1>:$/;"	l
c0102b34	obj/kernel.asm	/^c0102b34:	6a 00                	push   $0x0$/;"	l
c0102b36	obj/kernel.asm	/^c0102b36:	6a 01                	push   $0x1$/;"	l
c0102b38	obj/kernel.asm	/^c0102b38:	e9 c3 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b3d	obj/kernel.asm	/^c0102b3d <vector2>:$/;"	l
c0102b3d	obj/kernel.asm	/^c0102b3d:	6a 00                	push   $0x0$/;"	l
c0102b3f	obj/kernel.asm	/^c0102b3f:	6a 02                	push   $0x2$/;"	l
c0102b41	obj/kernel.asm	/^c0102b41:	e9 ba ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b46	obj/kernel.asm	/^c0102b46 <vector3>:$/;"	l
c0102b46	obj/kernel.asm	/^c0102b46:	6a 00                	push   $0x0$/;"	l
c0102b48	obj/kernel.asm	/^c0102b48:	6a 03                	push   $0x3$/;"	l
c0102b4a	obj/kernel.asm	/^c0102b4a:	e9 b1 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b4f	obj/kernel.asm	/^c0102b4f <vector4>:$/;"	l
c0102b4f	obj/kernel.asm	/^c0102b4f:	6a 00                	push   $0x0$/;"	l
c0102b51	obj/kernel.asm	/^c0102b51:	6a 04                	push   $0x4$/;"	l
c0102b53	obj/kernel.asm	/^c0102b53:	e9 a8 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b58	obj/kernel.asm	/^c0102b58 <vector5>:$/;"	l
c0102b58	obj/kernel.asm	/^c0102b58:	6a 00                	push   $0x0$/;"	l
c0102b5a	obj/kernel.asm	/^c0102b5a:	6a 05                	push   $0x5$/;"	l
c0102b5c	obj/kernel.asm	/^c0102b5c:	e9 9f ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b61	obj/kernel.asm	/^c0102b61 <vector6>:$/;"	l
c0102b61	obj/kernel.asm	/^c0102b61:	6a 00                	push   $0x0$/;"	l
c0102b63	obj/kernel.asm	/^c0102b63:	6a 06                	push   $0x6$/;"	l
c0102b65	obj/kernel.asm	/^c0102b65:	e9 96 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b6a	obj/kernel.asm	/^c0102b6a <vector7>:$/;"	l
c0102b6a	obj/kernel.asm	/^c0102b6a:	6a 00                	push   $0x0$/;"	l
c0102b6c	obj/kernel.asm	/^c0102b6c:	6a 07                	push   $0x7$/;"	l
c0102b6e	obj/kernel.asm	/^c0102b6e:	e9 8d ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b73	obj/kernel.asm	/^c0102b73 <vector8>:$/;"	l
c0102b73	obj/kernel.asm	/^c0102b73:	6a 08                	push   $0x8$/;"	l
c0102b75	obj/kernel.asm	/^c0102b75:	e9 86 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b7a	obj/kernel.asm	/^c0102b7a <vector9>:$/;"	l
c0102b7a	obj/kernel.asm	/^c0102b7a:	6a 09                	push   $0x9$/;"	l
c0102b7c	obj/kernel.asm	/^c0102b7c:	e9 7f ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b81	obj/kernel.asm	/^c0102b81 <vector10>:$/;"	l
c0102b81	obj/kernel.asm	/^c0102b81:	6a 0a                	push   $0xa$/;"	l
c0102b83	obj/kernel.asm	/^c0102b83:	e9 78 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b88	obj/kernel.asm	/^c0102b88 <vector11>:$/;"	l
c0102b88	obj/kernel.asm	/^c0102b88:	6a 0b                	push   $0xb$/;"	l
c0102b8a	obj/kernel.asm	/^c0102b8a:	e9 71 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b8f	obj/kernel.asm	/^c0102b8f <vector12>:$/;"	l
c0102b8f	obj/kernel.asm	/^c0102b8f:	6a 0c                	push   $0xc$/;"	l
c0102b91	obj/kernel.asm	/^c0102b91:	e9 6a ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b96	obj/kernel.asm	/^c0102b96 <vector13>:$/;"	l
c0102b96	obj/kernel.asm	/^c0102b96:	6a 0d                	push   $0xd$/;"	l
c0102b98	obj/kernel.asm	/^c0102b98:	e9 63 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b9d	obj/kernel.asm	/^c0102b9d <vector14>:$/;"	l
c0102b9d	obj/kernel.asm	/^c0102b9d:	6a 0e                	push   $0xe$/;"	l
c0102b9f	obj/kernel.asm	/^c0102b9f:	e9 5c ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ba4	obj/kernel.asm	/^c0102ba4 <vector15>:$/;"	l
c0102ba4	obj/kernel.asm	/^c0102ba4:	6a 00                	push   $0x0$/;"	l
c0102ba6	obj/kernel.asm	/^c0102ba6:	6a 0f                	push   $0xf$/;"	l
c0102ba8	obj/kernel.asm	/^c0102ba8:	e9 53 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bad	obj/kernel.asm	/^c0102bad <vector16>:$/;"	l
c0102bad	obj/kernel.asm	/^c0102bad:	6a 00                	push   $0x0$/;"	l
c0102baf	obj/kernel.asm	/^c0102baf:	6a 10                	push   $0x10$/;"	l
c0102bb1	obj/kernel.asm	/^c0102bb1:	e9 4a ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bb6	obj/kernel.asm	/^c0102bb6 <vector17>:$/;"	l
c0102bb6	obj/kernel.asm	/^c0102bb6:	6a 11                	push   $0x11$/;"	l
c0102bb8	obj/kernel.asm	/^c0102bb8:	e9 43 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bbd	obj/kernel.asm	/^c0102bbd <vector18>:$/;"	l
c0102bbd	obj/kernel.asm	/^c0102bbd:	6a 00                	push   $0x0$/;"	l
c0102bbf	obj/kernel.asm	/^c0102bbf:	6a 12                	push   $0x12$/;"	l
c0102bc1	obj/kernel.asm	/^c0102bc1:	e9 3a ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bc6	obj/kernel.asm	/^c0102bc6 <vector19>:$/;"	l
c0102bc6	obj/kernel.asm	/^c0102bc6:	6a 00                	push   $0x0$/;"	l
c0102bc8	obj/kernel.asm	/^c0102bc8:	6a 13                	push   $0x13$/;"	l
c0102bca	obj/kernel.asm	/^c0102bca:	e9 31 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bcf	obj/kernel.asm	/^c0102bcf <vector20>:$/;"	l
c0102bcf	obj/kernel.asm	/^c0102bcf:	6a 00                	push   $0x0$/;"	l
c0102bd1	obj/kernel.asm	/^c0102bd1:	6a 14                	push   $0x14$/;"	l
c0102bd3	obj/kernel.asm	/^c0102bd3:	e9 28 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bd8	obj/kernel.asm	/^c0102bd8 <vector21>:$/;"	l
c0102bd8	obj/kernel.asm	/^c0102bd8:	6a 00                	push   $0x0$/;"	l
c0102bda	obj/kernel.asm	/^c0102bda:	6a 15                	push   $0x15$/;"	l
c0102bdc	obj/kernel.asm	/^c0102bdc:	e9 1f ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102be1	obj/kernel.asm	/^c0102be1 <vector22>:$/;"	l
c0102be1	obj/kernel.asm	/^c0102be1:	6a 00                	push   $0x0$/;"	l
c0102be3	obj/kernel.asm	/^c0102be3:	6a 16                	push   $0x16$/;"	l
c0102be5	obj/kernel.asm	/^c0102be5:	e9 16 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bea	obj/kernel.asm	/^c0102bea <vector23>:$/;"	l
c0102bea	obj/kernel.asm	/^c0102bea:	6a 00                	push   $0x0$/;"	l
c0102bec	obj/kernel.asm	/^c0102bec:	6a 17                	push   $0x17$/;"	l
c0102bee	obj/kernel.asm	/^c0102bee:	e9 0d ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bf3	obj/kernel.asm	/^c0102bf3 <vector24>:$/;"	l
c0102bf3	obj/kernel.asm	/^c0102bf3:	6a 00                	push   $0x0$/;"	l
c0102bf5	obj/kernel.asm	/^c0102bf5:	6a 18                	push   $0x18$/;"	l
c0102bf7	obj/kernel.asm	/^c0102bf7:	e9 04 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bfc	obj/kernel.asm	/^c0102bfc <vector25>:$/;"	l
c0102bfc	obj/kernel.asm	/^c0102bfc:	6a 00                	push   $0x0$/;"	l
c0102bfe	obj/kernel.asm	/^c0102bfe:	6a 19                	push   $0x19$/;"	l
c0102c00	obj/kernel.asm	/^c0102c00:	e9 fb fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c05	obj/kernel.asm	/^c0102c05 <vector26>:$/;"	l
c0102c05	obj/kernel.asm	/^c0102c05:	6a 00                	push   $0x0$/;"	l
c0102c07	obj/kernel.asm	/^c0102c07:	6a 1a                	push   $0x1a$/;"	l
c0102c09	obj/kernel.asm	/^c0102c09:	e9 f2 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c0e	obj/kernel.asm	/^c0102c0e <vector27>:$/;"	l
c0102c0e	obj/kernel.asm	/^c0102c0e:	6a 00                	push   $0x0$/;"	l
c0102c10	obj/kernel.asm	/^c0102c10:	6a 1b                	push   $0x1b$/;"	l
c0102c12	obj/kernel.asm	/^c0102c12:	e9 e9 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c17	obj/kernel.asm	/^c0102c17 <vector28>:$/;"	l
c0102c17	obj/kernel.asm	/^c0102c17:	6a 00                	push   $0x0$/;"	l
c0102c19	obj/kernel.asm	/^c0102c19:	6a 1c                	push   $0x1c$/;"	l
c0102c1b	obj/kernel.asm	/^c0102c1b:	e9 e0 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c20	obj/kernel.asm	/^c0102c20 <vector29>:$/;"	l
c0102c20	obj/kernel.asm	/^c0102c20:	6a 00                	push   $0x0$/;"	l
c0102c22	obj/kernel.asm	/^c0102c22:	6a 1d                	push   $0x1d$/;"	l
c0102c24	obj/kernel.asm	/^c0102c24:	e9 d7 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c29	obj/kernel.asm	/^c0102c29 <vector30>:$/;"	l
c0102c29	obj/kernel.asm	/^c0102c29:	6a 00                	push   $0x0$/;"	l
c0102c2b	obj/kernel.asm	/^c0102c2b:	6a 1e                	push   $0x1e$/;"	l
c0102c2d	obj/kernel.asm	/^c0102c2d:	e9 ce fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c32	obj/kernel.asm	/^c0102c32 <vector31>:$/;"	l
c0102c32	obj/kernel.asm	/^c0102c32:	6a 00                	push   $0x0$/;"	l
c0102c34	obj/kernel.asm	/^c0102c34:	6a 1f                	push   $0x1f$/;"	l
c0102c36	obj/kernel.asm	/^c0102c36:	e9 c5 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c3b	obj/kernel.asm	/^c0102c3b <vector32>:$/;"	l
c0102c3b	obj/kernel.asm	/^c0102c3b:	6a 00                	push   $0x0$/;"	l
c0102c3d	obj/kernel.asm	/^c0102c3d:	6a 20                	push   $0x20$/;"	l
c0102c3f	obj/kernel.asm	/^c0102c3f:	e9 bc fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c44	obj/kernel.asm	/^c0102c44 <vector33>:$/;"	l
c0102c44	obj/kernel.asm	/^c0102c44:	6a 00                	push   $0x0$/;"	l
c0102c46	obj/kernel.asm	/^c0102c46:	6a 21                	push   $0x21$/;"	l
c0102c48	obj/kernel.asm	/^c0102c48:	e9 b3 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c4d	obj/kernel.asm	/^c0102c4d <vector34>:$/;"	l
c0102c4d	obj/kernel.asm	/^c0102c4d:	6a 00                	push   $0x0$/;"	l
c0102c4f	obj/kernel.asm	/^c0102c4f:	6a 22                	push   $0x22$/;"	l
c0102c51	obj/kernel.asm	/^c0102c51:	e9 aa fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c56	obj/kernel.asm	/^c0102c56 <vector35>:$/;"	l
c0102c56	obj/kernel.asm	/^c0102c56:	6a 00                	push   $0x0$/;"	l
c0102c58	obj/kernel.asm	/^c0102c58:	6a 23                	push   $0x23$/;"	l
c0102c5a	obj/kernel.asm	/^c0102c5a:	e9 a1 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c5f	obj/kernel.asm	/^c0102c5f <vector36>:$/;"	l
c0102c5f	obj/kernel.asm	/^c0102c5f:	6a 00                	push   $0x0$/;"	l
c0102c61	obj/kernel.asm	/^c0102c61:	6a 24                	push   $0x24$/;"	l
c0102c63	obj/kernel.asm	/^c0102c63:	e9 98 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c68	obj/kernel.asm	/^c0102c68 <vector37>:$/;"	l
c0102c68	obj/kernel.asm	/^c0102c68:	6a 00                	push   $0x0$/;"	l
c0102c6a	obj/kernel.asm	/^c0102c6a:	6a 25                	push   $0x25$/;"	l
c0102c6c	obj/kernel.asm	/^c0102c6c:	e9 8f fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c71	obj/kernel.asm	/^c0102c71 <vector38>:$/;"	l
c0102c71	obj/kernel.asm	/^c0102c71:	6a 00                	push   $0x0$/;"	l
c0102c73	obj/kernel.asm	/^c0102c73:	6a 26                	push   $0x26$/;"	l
c0102c75	obj/kernel.asm	/^c0102c75:	e9 86 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c7a	obj/kernel.asm	/^c0102c7a <vector39>:$/;"	l
c0102c7a	obj/kernel.asm	/^c0102c7a:	6a 00                	push   $0x0$/;"	l
c0102c7c	obj/kernel.asm	/^c0102c7c:	6a 27                	push   $0x27$/;"	l
c0102c7e	obj/kernel.asm	/^c0102c7e:	e9 7d fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c83	obj/kernel.asm	/^c0102c83 <vector40>:$/;"	l
c0102c83	obj/kernel.asm	/^c0102c83:	6a 00                	push   $0x0$/;"	l
c0102c85	obj/kernel.asm	/^c0102c85:	6a 28                	push   $0x28$/;"	l
c0102c87	obj/kernel.asm	/^c0102c87:	e9 74 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c8c	obj/kernel.asm	/^c0102c8c <vector41>:$/;"	l
c0102c8c	obj/kernel.asm	/^c0102c8c:	6a 00                	push   $0x0$/;"	l
c0102c8e	obj/kernel.asm	/^c0102c8e:	6a 29                	push   $0x29$/;"	l
c0102c90	obj/kernel.asm	/^c0102c90:	e9 6b fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c95	obj/kernel.asm	/^c0102c95 <vector42>:$/;"	l
c0102c95	obj/kernel.asm	/^c0102c95:	6a 00                	push   $0x0$/;"	l
c0102c97	obj/kernel.asm	/^c0102c97:	6a 2a                	push   $0x2a$/;"	l
c0102c99	obj/kernel.asm	/^c0102c99:	e9 62 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c9e	obj/kernel.asm	/^c0102c9e <vector43>:$/;"	l
c0102c9e	obj/kernel.asm	/^c0102c9e:	6a 00                	push   $0x0$/;"	l
c0102ca0	obj/kernel.asm	/^c0102ca0:	6a 2b                	push   $0x2b$/;"	l
c0102ca2	obj/kernel.asm	/^c0102ca2:	e9 59 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ca7	obj/kernel.asm	/^c0102ca7 <vector44>:$/;"	l
c0102ca7	obj/kernel.asm	/^c0102ca7:	6a 00                	push   $0x0$/;"	l
c0102ca9	obj/kernel.asm	/^c0102ca9:	6a 2c                	push   $0x2c$/;"	l
c0102cab	obj/kernel.asm	/^c0102cab:	e9 50 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102cb0	obj/kernel.asm	/^c0102cb0 <vector45>:$/;"	l
c0102cb0	obj/kernel.asm	/^c0102cb0:	6a 00                	push   $0x0$/;"	l
c0102cb2	obj/kernel.asm	/^c0102cb2:	6a 2d                	push   $0x2d$/;"	l
c0102cb4	obj/kernel.asm	/^c0102cb4:	e9 47 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102cb9	obj/kernel.asm	/^c0102cb9 <vector46>:$/;"	l
c0102cb9	obj/kernel.asm	/^c0102cb9:	6a 00                	push   $0x0$/;"	l
c0102cbb	obj/kernel.asm	/^c0102cbb:	6a 2e                	push   $0x2e$/;"	l
c0102cbd	obj/kernel.asm	/^c0102cbd:	e9 3e fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102cc2	obj/kernel.asm	/^c0102cc2 <vector47>:$/;"	l
c0102cc2	obj/kernel.asm	/^c0102cc2:	6a 00                	push   $0x0$/;"	l
c0102cc4	obj/kernel.asm	/^c0102cc4:	6a 2f                	push   $0x2f$/;"	l
c0102cc6	obj/kernel.asm	/^c0102cc6:	e9 35 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ccb	obj/kernel.asm	/^c0102ccb <vector48>:$/;"	l
c0102ccb	obj/kernel.asm	/^c0102ccb:	6a 00                	push   $0x0$/;"	l
c0102ccd	obj/kernel.asm	/^c0102ccd:	6a 30                	push   $0x30$/;"	l
c0102ccf	obj/kernel.asm	/^c0102ccf:	e9 2c fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102cd4	obj/kernel.asm	/^c0102cd4 <vector49>:$/;"	l
c0102cd4	obj/kernel.asm	/^c0102cd4:	6a 00                	push   $0x0$/;"	l
c0102cd6	obj/kernel.asm	/^c0102cd6:	6a 31                	push   $0x31$/;"	l
c0102cd8	obj/kernel.asm	/^c0102cd8:	e9 23 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102cdd	obj/kernel.asm	/^c0102cdd <vector50>:$/;"	l
c0102cdd	obj/kernel.asm	/^c0102cdd:	6a 00                	push   $0x0$/;"	l
c0102cdf	obj/kernel.asm	/^c0102cdf:	6a 32                	push   $0x32$/;"	l
c0102ce1	obj/kernel.asm	/^c0102ce1:	e9 1a fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ce6	obj/kernel.asm	/^c0102ce6 <vector51>:$/;"	l
c0102ce6	obj/kernel.asm	/^c0102ce6:	6a 00                	push   $0x0$/;"	l
c0102ce8	obj/kernel.asm	/^c0102ce8:	6a 33                	push   $0x33$/;"	l
c0102cea	obj/kernel.asm	/^c0102cea:	e9 11 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102cef	obj/kernel.asm	/^c0102cef <vector52>:$/;"	l
c0102cef	obj/kernel.asm	/^c0102cef:	6a 00                	push   $0x0$/;"	l
c0102cf1	obj/kernel.asm	/^c0102cf1:	6a 34                	push   $0x34$/;"	l
c0102cf3	obj/kernel.asm	/^c0102cf3:	e9 08 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102cf8	obj/kernel.asm	/^c0102cf8 <vector53>:$/;"	l
c0102cf8	obj/kernel.asm	/^c0102cf8:	6a 00                	push   $0x0$/;"	l
c0102cfa	obj/kernel.asm	/^c0102cfa:	6a 35                	push   $0x35$/;"	l
c0102cfc	obj/kernel.asm	/^c0102cfc:	e9 ff fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d01	obj/kernel.asm	/^c0102d01 <vector54>:$/;"	l
c0102d01	obj/kernel.asm	/^c0102d01:	6a 00                	push   $0x0$/;"	l
c0102d03	obj/kernel.asm	/^c0102d03:	6a 36                	push   $0x36$/;"	l
c0102d05	obj/kernel.asm	/^c0102d05:	e9 f6 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d0a	obj/kernel.asm	/^c0102d0a <vector55>:$/;"	l
c0102d0a	obj/kernel.asm	/^c0102d0a:	6a 00                	push   $0x0$/;"	l
c0102d0c	obj/kernel.asm	/^c0102d0c:	6a 37                	push   $0x37$/;"	l
c0102d0e	obj/kernel.asm	/^c0102d0e:	e9 ed fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d13	obj/kernel.asm	/^c0102d13 <vector56>:$/;"	l
c0102d13	obj/kernel.asm	/^c0102d13:	6a 00                	push   $0x0$/;"	l
c0102d15	obj/kernel.asm	/^c0102d15:	6a 38                	push   $0x38$/;"	l
c0102d17	obj/kernel.asm	/^c0102d17:	e9 e4 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d1c	obj/kernel.asm	/^c0102d1c <vector57>:$/;"	l
c0102d1c	obj/kernel.asm	/^c0102d1c:	6a 00                	push   $0x0$/;"	l
c0102d1e	obj/kernel.asm	/^c0102d1e:	6a 39                	push   $0x39$/;"	l
c0102d20	obj/kernel.asm	/^c0102d20:	e9 db fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d25	obj/kernel.asm	/^c0102d25 <vector58>:$/;"	l
c0102d25	obj/kernel.asm	/^c0102d25:	6a 00                	push   $0x0$/;"	l
c0102d27	obj/kernel.asm	/^c0102d27:	6a 3a                	push   $0x3a$/;"	l
c0102d29	obj/kernel.asm	/^c0102d29:	e9 d2 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d2e	obj/kernel.asm	/^c0102d2e <vector59>:$/;"	l
c0102d2e	obj/kernel.asm	/^c0102d2e:	6a 00                	push   $0x0$/;"	l
c0102d30	obj/kernel.asm	/^c0102d30:	6a 3b                	push   $0x3b$/;"	l
c0102d32	obj/kernel.asm	/^c0102d32:	e9 c9 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d37	obj/kernel.asm	/^c0102d37 <vector60>:$/;"	l
c0102d37	obj/kernel.asm	/^c0102d37:	6a 00                	push   $0x0$/;"	l
c0102d39	obj/kernel.asm	/^c0102d39:	6a 3c                	push   $0x3c$/;"	l
c0102d3b	obj/kernel.asm	/^c0102d3b:	e9 c0 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d40	obj/kernel.asm	/^c0102d40 <vector61>:$/;"	l
c0102d40	obj/kernel.asm	/^c0102d40:	6a 00                	push   $0x0$/;"	l
c0102d42	obj/kernel.asm	/^c0102d42:	6a 3d                	push   $0x3d$/;"	l
c0102d44	obj/kernel.asm	/^c0102d44:	e9 b7 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d49	obj/kernel.asm	/^c0102d49 <vector62>:$/;"	l
c0102d49	obj/kernel.asm	/^c0102d49:	6a 00                	push   $0x0$/;"	l
c0102d4b	obj/kernel.asm	/^c0102d4b:	6a 3e                	push   $0x3e$/;"	l
c0102d4d	obj/kernel.asm	/^c0102d4d:	e9 ae fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d52	obj/kernel.asm	/^c0102d52 <vector63>:$/;"	l
c0102d52	obj/kernel.asm	/^c0102d52:	6a 00                	push   $0x0$/;"	l
c0102d54	obj/kernel.asm	/^c0102d54:	6a 3f                	push   $0x3f$/;"	l
c0102d56	obj/kernel.asm	/^c0102d56:	e9 a5 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d5b	obj/kernel.asm	/^c0102d5b <vector64>:$/;"	l
c0102d5b	obj/kernel.asm	/^c0102d5b:	6a 00                	push   $0x0$/;"	l
c0102d5d	obj/kernel.asm	/^c0102d5d:	6a 40                	push   $0x40$/;"	l
c0102d5f	obj/kernel.asm	/^c0102d5f:	e9 9c fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d64	obj/kernel.asm	/^c0102d64 <vector65>:$/;"	l
c0102d64	obj/kernel.asm	/^c0102d64:	6a 00                	push   $0x0$/;"	l
c0102d66	obj/kernel.asm	/^c0102d66:	6a 41                	push   $0x41$/;"	l
c0102d68	obj/kernel.asm	/^c0102d68:	e9 93 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d6d	obj/kernel.asm	/^c0102d6d <vector66>:$/;"	l
c0102d6d	obj/kernel.asm	/^c0102d6d:	6a 00                	push   $0x0$/;"	l
c0102d6f	obj/kernel.asm	/^c0102d6f:	6a 42                	push   $0x42$/;"	l
c0102d71	obj/kernel.asm	/^c0102d71:	e9 8a fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d76	obj/kernel.asm	/^c0102d76 <vector67>:$/;"	l
c0102d76	obj/kernel.asm	/^c0102d76:	6a 00                	push   $0x0$/;"	l
c0102d78	obj/kernel.asm	/^c0102d78:	6a 43                	push   $0x43$/;"	l
c0102d7a	obj/kernel.asm	/^c0102d7a:	e9 81 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d7f	obj/kernel.asm	/^c0102d7f <vector68>:$/;"	l
c0102d7f	obj/kernel.asm	/^c0102d7f:	6a 00                	push   $0x0$/;"	l
c0102d81	obj/kernel.asm	/^c0102d81:	6a 44                	push   $0x44$/;"	l
c0102d83	obj/kernel.asm	/^c0102d83:	e9 78 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d88	obj/kernel.asm	/^c0102d88 <vector69>:$/;"	l
c0102d88	obj/kernel.asm	/^c0102d88:	6a 00                	push   $0x0$/;"	l
c0102d8a	obj/kernel.asm	/^c0102d8a:	6a 45                	push   $0x45$/;"	l
c0102d8c	obj/kernel.asm	/^c0102d8c:	e9 6f fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d91	obj/kernel.asm	/^c0102d91 <vector70>:$/;"	l
c0102d91	obj/kernel.asm	/^c0102d91:	6a 00                	push   $0x0$/;"	l
c0102d93	obj/kernel.asm	/^c0102d93:	6a 46                	push   $0x46$/;"	l
c0102d95	obj/kernel.asm	/^c0102d95:	e9 66 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d9a	obj/kernel.asm	/^c0102d9a <vector71>:$/;"	l
c0102d9a	obj/kernel.asm	/^c0102d9a:	6a 00                	push   $0x0$/;"	l
c0102d9c	obj/kernel.asm	/^c0102d9c:	6a 47                	push   $0x47$/;"	l
c0102d9e	obj/kernel.asm	/^c0102d9e:	e9 5d fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102da3	obj/kernel.asm	/^c0102da3 <vector72>:$/;"	l
c0102da3	obj/kernel.asm	/^c0102da3:	6a 00                	push   $0x0$/;"	l
c0102da5	obj/kernel.asm	/^c0102da5:	6a 48                	push   $0x48$/;"	l
c0102da7	obj/kernel.asm	/^c0102da7:	e9 54 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102dac	obj/kernel.asm	/^c0102dac <vector73>:$/;"	l
c0102dac	obj/kernel.asm	/^c0102dac:	6a 00                	push   $0x0$/;"	l
c0102dae	obj/kernel.asm	/^c0102dae:	6a 49                	push   $0x49$/;"	l
c0102db0	obj/kernel.asm	/^c0102db0:	e9 4b fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102db5	obj/kernel.asm	/^c0102db5 <vector74>:$/;"	l
c0102db5	obj/kernel.asm	/^c0102db5:	6a 00                	push   $0x0$/;"	l
c0102db7	obj/kernel.asm	/^c0102db7:	6a 4a                	push   $0x4a$/;"	l
c0102db9	obj/kernel.asm	/^c0102db9:	e9 42 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102dbe	obj/kernel.asm	/^c0102dbe <vector75>:$/;"	l
c0102dbe	obj/kernel.asm	/^c0102dbe:	6a 00                	push   $0x0$/;"	l
c0102dc0	obj/kernel.asm	/^c0102dc0:	6a 4b                	push   $0x4b$/;"	l
c0102dc2	obj/kernel.asm	/^c0102dc2:	e9 39 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102dc7	obj/kernel.asm	/^c0102dc7 <vector76>:$/;"	l
c0102dc7	obj/kernel.asm	/^c0102dc7:	6a 00                	push   $0x0$/;"	l
c0102dc9	obj/kernel.asm	/^c0102dc9:	6a 4c                	push   $0x4c$/;"	l
c0102dcb	obj/kernel.asm	/^c0102dcb:	e9 30 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102dd0	obj/kernel.asm	/^c0102dd0 <vector77>:$/;"	l
c0102dd0	obj/kernel.asm	/^c0102dd0:	6a 00                	push   $0x0$/;"	l
c0102dd2	obj/kernel.asm	/^c0102dd2:	6a 4d                	push   $0x4d$/;"	l
c0102dd4	obj/kernel.asm	/^c0102dd4:	e9 27 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102dd9	obj/kernel.asm	/^c0102dd9 <vector78>:$/;"	l
c0102dd9	obj/kernel.asm	/^c0102dd9:	6a 00                	push   $0x0$/;"	l
c0102ddb	obj/kernel.asm	/^c0102ddb:	6a 4e                	push   $0x4e$/;"	l
c0102ddd	obj/kernel.asm	/^c0102ddd:	e9 1e fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102de2	obj/kernel.asm	/^c0102de2 <vector79>:$/;"	l
c0102de2	obj/kernel.asm	/^c0102de2:	6a 00                	push   $0x0$/;"	l
c0102de4	obj/kernel.asm	/^c0102de4:	6a 4f                	push   $0x4f$/;"	l
c0102de6	obj/kernel.asm	/^c0102de6:	e9 15 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102deb	obj/kernel.asm	/^c0102deb <vector80>:$/;"	l
c0102deb	obj/kernel.asm	/^c0102deb:	6a 00                	push   $0x0$/;"	l
c0102ded	obj/kernel.asm	/^c0102ded:	6a 50                	push   $0x50$/;"	l
c0102def	obj/kernel.asm	/^c0102def:	e9 0c fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102df4	obj/kernel.asm	/^c0102df4 <vector81>:$/;"	l
c0102df4	obj/kernel.asm	/^c0102df4:	6a 00                	push   $0x0$/;"	l
c0102df6	obj/kernel.asm	/^c0102df6:	6a 51                	push   $0x51$/;"	l
c0102df8	obj/kernel.asm	/^c0102df8:	e9 03 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102dfd	obj/kernel.asm	/^c0102dfd <vector82>:$/;"	l
c0102dfd	obj/kernel.asm	/^c0102dfd:	6a 00                	push   $0x0$/;"	l
c0102dff	obj/kernel.asm	/^c0102dff:	6a 52                	push   $0x52$/;"	l
c0102e01	obj/kernel.asm	/^c0102e01:	e9 fa fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e06	obj/kernel.asm	/^c0102e06 <vector83>:$/;"	l
c0102e06	obj/kernel.asm	/^c0102e06:	6a 00                	push   $0x0$/;"	l
c0102e08	obj/kernel.asm	/^c0102e08:	6a 53                	push   $0x53$/;"	l
c0102e0a	obj/kernel.asm	/^c0102e0a:	e9 f1 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e0f	obj/kernel.asm	/^c0102e0f <vector84>:$/;"	l
c0102e0f	obj/kernel.asm	/^c0102e0f:	6a 00                	push   $0x0$/;"	l
c0102e11	obj/kernel.asm	/^c0102e11:	6a 54                	push   $0x54$/;"	l
c0102e13	obj/kernel.asm	/^c0102e13:	e9 e8 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e18	obj/kernel.asm	/^c0102e18 <vector85>:$/;"	l
c0102e18	obj/kernel.asm	/^c0102e18:	6a 00                	push   $0x0$/;"	l
c0102e1a	obj/kernel.asm	/^c0102e1a:	6a 55                	push   $0x55$/;"	l
c0102e1c	obj/kernel.asm	/^c0102e1c:	e9 df fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e21	obj/kernel.asm	/^c0102e21 <vector86>:$/;"	l
c0102e21	obj/kernel.asm	/^c0102e21:	6a 00                	push   $0x0$/;"	l
c0102e23	obj/kernel.asm	/^c0102e23:	6a 56                	push   $0x56$/;"	l
c0102e25	obj/kernel.asm	/^c0102e25:	e9 d6 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e2a	obj/kernel.asm	/^c0102e2a <vector87>:$/;"	l
c0102e2a	obj/kernel.asm	/^c0102e2a:	6a 00                	push   $0x0$/;"	l
c0102e2c	obj/kernel.asm	/^c0102e2c:	6a 57                	push   $0x57$/;"	l
c0102e2e	obj/kernel.asm	/^c0102e2e:	e9 cd fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e33	obj/kernel.asm	/^c0102e33 <vector88>:$/;"	l
c0102e33	obj/kernel.asm	/^c0102e33:	6a 00                	push   $0x0$/;"	l
c0102e35	obj/kernel.asm	/^c0102e35:	6a 58                	push   $0x58$/;"	l
c0102e37	obj/kernel.asm	/^c0102e37:	e9 c4 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e3c	obj/kernel.asm	/^c0102e3c <vector89>:$/;"	l
c0102e3c	obj/kernel.asm	/^c0102e3c:	6a 00                	push   $0x0$/;"	l
c0102e3e	obj/kernel.asm	/^c0102e3e:	6a 59                	push   $0x59$/;"	l
c0102e40	obj/kernel.asm	/^c0102e40:	e9 bb fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e45	obj/kernel.asm	/^c0102e45 <vector90>:$/;"	l
c0102e45	obj/kernel.asm	/^c0102e45:	6a 00                	push   $0x0$/;"	l
c0102e47	obj/kernel.asm	/^c0102e47:	6a 5a                	push   $0x5a$/;"	l
c0102e49	obj/kernel.asm	/^c0102e49:	e9 b2 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e4e	obj/kernel.asm	/^c0102e4e <vector91>:$/;"	l
c0102e4e	obj/kernel.asm	/^c0102e4e:	6a 00                	push   $0x0$/;"	l
c0102e50	obj/kernel.asm	/^c0102e50:	6a 5b                	push   $0x5b$/;"	l
c0102e52	obj/kernel.asm	/^c0102e52:	e9 a9 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e57	obj/kernel.asm	/^c0102e57 <vector92>:$/;"	l
c0102e57	obj/kernel.asm	/^c0102e57:	6a 00                	push   $0x0$/;"	l
c0102e59	obj/kernel.asm	/^c0102e59:	6a 5c                	push   $0x5c$/;"	l
c0102e5b	obj/kernel.asm	/^c0102e5b:	e9 a0 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e60	obj/kernel.asm	/^c0102e60 <vector93>:$/;"	l
c0102e60	obj/kernel.asm	/^c0102e60:	6a 00                	push   $0x0$/;"	l
c0102e62	obj/kernel.asm	/^c0102e62:	6a 5d                	push   $0x5d$/;"	l
c0102e64	obj/kernel.asm	/^c0102e64:	e9 97 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e69	obj/kernel.asm	/^c0102e69 <vector94>:$/;"	l
c0102e69	obj/kernel.asm	/^c0102e69:	6a 00                	push   $0x0$/;"	l
c0102e6b	obj/kernel.asm	/^c0102e6b:	6a 5e                	push   $0x5e$/;"	l
c0102e6d	obj/kernel.asm	/^c0102e6d:	e9 8e fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e72	obj/kernel.asm	/^c0102e72 <vector95>:$/;"	l
c0102e72	obj/kernel.asm	/^c0102e72:	6a 00                	push   $0x0$/;"	l
c0102e74	obj/kernel.asm	/^c0102e74:	6a 5f                	push   $0x5f$/;"	l
c0102e76	obj/kernel.asm	/^c0102e76:	e9 85 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e7b	obj/kernel.asm	/^c0102e7b <vector96>:$/;"	l
c0102e7b	obj/kernel.asm	/^c0102e7b:	6a 00                	push   $0x0$/;"	l
c0102e7d	obj/kernel.asm	/^c0102e7d:	6a 60                	push   $0x60$/;"	l
c0102e7f	obj/kernel.asm	/^c0102e7f:	e9 7c fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e84	obj/kernel.asm	/^c0102e84 <vector97>:$/;"	l
c0102e84	obj/kernel.asm	/^c0102e84:	6a 00                	push   $0x0$/;"	l
c0102e86	obj/kernel.asm	/^c0102e86:	6a 61                	push   $0x61$/;"	l
c0102e88	obj/kernel.asm	/^c0102e88:	e9 73 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e8d	obj/kernel.asm	/^c0102e8d <vector98>:$/;"	l
c0102e8d	obj/kernel.asm	/^c0102e8d:	6a 00                	push   $0x0$/;"	l
c0102e8f	obj/kernel.asm	/^c0102e8f:	6a 62                	push   $0x62$/;"	l
c0102e91	obj/kernel.asm	/^c0102e91:	e9 6a fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e96	obj/kernel.asm	/^c0102e96 <vector99>:$/;"	l
c0102e96	obj/kernel.asm	/^c0102e96:	6a 00                	push   $0x0$/;"	l
c0102e98	obj/kernel.asm	/^c0102e98:	6a 63                	push   $0x63$/;"	l
c0102e9a	obj/kernel.asm	/^c0102e9a:	e9 61 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e9f	obj/kernel.asm	/^c0102e9f <vector100>:$/;"	l
c0102e9f	obj/kernel.asm	/^c0102e9f:	6a 00                	push   $0x0$/;"	l
c0102ea1	obj/kernel.asm	/^c0102ea1:	6a 64                	push   $0x64$/;"	l
c0102ea3	obj/kernel.asm	/^c0102ea3:	e9 58 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ea8	obj/kernel.asm	/^c0102ea8 <vector101>:$/;"	l
c0102ea8	obj/kernel.asm	/^c0102ea8:	6a 00                	push   $0x0$/;"	l
c0102eaa	obj/kernel.asm	/^c0102eaa:	6a 65                	push   $0x65$/;"	l
c0102eac	obj/kernel.asm	/^c0102eac:	e9 4f fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102eb1	obj/kernel.asm	/^c0102eb1 <vector102>:$/;"	l
c0102eb1	obj/kernel.asm	/^c0102eb1:	6a 00                	push   $0x0$/;"	l
c0102eb3	obj/kernel.asm	/^c0102eb3:	6a 66                	push   $0x66$/;"	l
c0102eb5	obj/kernel.asm	/^c0102eb5:	e9 46 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102eba	obj/kernel.asm	/^c0102eba <vector103>:$/;"	l
c0102eba	obj/kernel.asm	/^c0102eba:	6a 00                	push   $0x0$/;"	l
c0102ebc	obj/kernel.asm	/^c0102ebc:	6a 67                	push   $0x67$/;"	l
c0102ebe	obj/kernel.asm	/^c0102ebe:	e9 3d fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ec3	obj/kernel.asm	/^c0102ec3 <vector104>:$/;"	l
c0102ec3	obj/kernel.asm	/^c0102ec3:	6a 00                	push   $0x0$/;"	l
c0102ec5	obj/kernel.asm	/^c0102ec5:	6a 68                	push   $0x68$/;"	l
c0102ec7	obj/kernel.asm	/^c0102ec7:	e9 34 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ecc	obj/kernel.asm	/^c0102ecc <vector105>:$/;"	l
c0102ecc	obj/kernel.asm	/^c0102ecc:	6a 00                	push   $0x0$/;"	l
c0102ece	obj/kernel.asm	/^c0102ece:	6a 69                	push   $0x69$/;"	l
c0102ed0	obj/kernel.asm	/^c0102ed0:	e9 2b fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ed5	obj/kernel.asm	/^c0102ed5 <vector106>:$/;"	l
c0102ed5	obj/kernel.asm	/^c0102ed5:	6a 00                	push   $0x0$/;"	l
c0102ed7	obj/kernel.asm	/^c0102ed7:	6a 6a                	push   $0x6a$/;"	l
c0102ed9	obj/kernel.asm	/^c0102ed9:	e9 22 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ede	obj/kernel.asm	/^c0102ede <vector107>:$/;"	l
c0102ede	obj/kernel.asm	/^c0102ede:	6a 00                	push   $0x0$/;"	l
c0102ee0	obj/kernel.asm	/^c0102ee0:	6a 6b                	push   $0x6b$/;"	l
c0102ee2	obj/kernel.asm	/^c0102ee2:	e9 19 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ee7	obj/kernel.asm	/^c0102ee7 <vector108>:$/;"	l
c0102ee7	obj/kernel.asm	/^c0102ee7:	6a 00                	push   $0x0$/;"	l
c0102ee9	obj/kernel.asm	/^c0102ee9:	6a 6c                	push   $0x6c$/;"	l
c0102eeb	obj/kernel.asm	/^c0102eeb:	e9 10 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ef0	obj/kernel.asm	/^c0102ef0 <vector109>:$/;"	l
c0102ef0	obj/kernel.asm	/^c0102ef0:	6a 00                	push   $0x0$/;"	l
c0102ef2	obj/kernel.asm	/^c0102ef2:	6a 6d                	push   $0x6d$/;"	l
c0102ef4	obj/kernel.asm	/^c0102ef4:	e9 07 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ef9	obj/kernel.asm	/^c0102ef9 <vector110>:$/;"	l
c0102ef9	obj/kernel.asm	/^c0102ef9:	6a 00                	push   $0x0$/;"	l
c0102efb	obj/kernel.asm	/^c0102efb:	6a 6e                	push   $0x6e$/;"	l
c0102efd	obj/kernel.asm	/^c0102efd:	e9 fe fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f02	obj/kernel.asm	/^c0102f02 <vector111>:$/;"	l
c0102f02	obj/kernel.asm	/^c0102f02:	6a 00                	push   $0x0$/;"	l
c0102f04	obj/kernel.asm	/^c0102f04:	6a 6f                	push   $0x6f$/;"	l
c0102f06	obj/kernel.asm	/^c0102f06:	e9 f5 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f0b	obj/kernel.asm	/^c0102f0b <vector112>:$/;"	l
c0102f0b	obj/kernel.asm	/^c0102f0b:	6a 00                	push   $0x0$/;"	l
c0102f0d	obj/kernel.asm	/^c0102f0d:	6a 70                	push   $0x70$/;"	l
c0102f0f	obj/kernel.asm	/^c0102f0f:	e9 ec fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f14	obj/kernel.asm	/^c0102f14 <vector113>:$/;"	l
c0102f14	obj/kernel.asm	/^c0102f14:	6a 00                	push   $0x0$/;"	l
c0102f16	obj/kernel.asm	/^c0102f16:	6a 71                	push   $0x71$/;"	l
c0102f18	obj/kernel.asm	/^c0102f18:	e9 e3 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f1d	obj/kernel.asm	/^c0102f1d <vector114>:$/;"	l
c0102f1d	obj/kernel.asm	/^c0102f1d:	6a 00                	push   $0x0$/;"	l
c0102f1f	obj/kernel.asm	/^c0102f1f:	6a 72                	push   $0x72$/;"	l
c0102f21	obj/kernel.asm	/^c0102f21:	e9 da fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f26	obj/kernel.asm	/^c0102f26 <vector115>:$/;"	l
c0102f26	obj/kernel.asm	/^c0102f26:	6a 00                	push   $0x0$/;"	l
c0102f28	obj/kernel.asm	/^c0102f28:	6a 73                	push   $0x73$/;"	l
c0102f2a	obj/kernel.asm	/^c0102f2a:	e9 d1 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f2f	obj/kernel.asm	/^c0102f2f <vector116>:$/;"	l
c0102f2f	obj/kernel.asm	/^c0102f2f:	6a 00                	push   $0x0$/;"	l
c0102f31	obj/kernel.asm	/^c0102f31:	6a 74                	push   $0x74$/;"	l
c0102f33	obj/kernel.asm	/^c0102f33:	e9 c8 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f38	obj/kernel.asm	/^c0102f38 <vector117>:$/;"	l
c0102f38	obj/kernel.asm	/^c0102f38:	6a 00                	push   $0x0$/;"	l
c0102f3a	obj/kernel.asm	/^c0102f3a:	6a 75                	push   $0x75$/;"	l
c0102f3c	obj/kernel.asm	/^c0102f3c:	e9 bf fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f41	obj/kernel.asm	/^c0102f41 <vector118>:$/;"	l
c0102f41	obj/kernel.asm	/^c0102f41:	6a 00                	push   $0x0$/;"	l
c0102f43	obj/kernel.asm	/^c0102f43:	6a 76                	push   $0x76$/;"	l
c0102f45	obj/kernel.asm	/^c0102f45:	e9 b6 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f4a	obj/kernel.asm	/^c0102f4a <vector119>:$/;"	l
c0102f4a	obj/kernel.asm	/^c0102f4a:	6a 00                	push   $0x0$/;"	l
c0102f4c	obj/kernel.asm	/^c0102f4c:	6a 77                	push   $0x77$/;"	l
c0102f4e	obj/kernel.asm	/^c0102f4e:	e9 ad fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f53	obj/kernel.asm	/^c0102f53 <vector120>:$/;"	l
c0102f53	obj/kernel.asm	/^c0102f53:	6a 00                	push   $0x0$/;"	l
c0102f55	obj/kernel.asm	/^c0102f55:	6a 78                	push   $0x78$/;"	l
c0102f57	obj/kernel.asm	/^c0102f57:	e9 a4 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f5c	obj/kernel.asm	/^c0102f5c <vector121>:$/;"	l
c0102f5c	obj/kernel.asm	/^c0102f5c:	6a 00                	push   $0x0$/;"	l
c0102f5e	obj/kernel.asm	/^c0102f5e:	6a 79                	push   $0x79$/;"	l
c0102f60	obj/kernel.asm	/^c0102f60:	e9 9b fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f65	obj/kernel.asm	/^c0102f65 <vector122>:$/;"	l
c0102f65	obj/kernel.asm	/^c0102f65:	6a 00                	push   $0x0$/;"	l
c0102f67	obj/kernel.asm	/^c0102f67:	6a 7a                	push   $0x7a$/;"	l
c0102f69	obj/kernel.asm	/^c0102f69:	e9 92 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f6e	obj/kernel.asm	/^c0102f6e <vector123>:$/;"	l
c0102f6e	obj/kernel.asm	/^c0102f6e:	6a 00                	push   $0x0$/;"	l
c0102f70	obj/kernel.asm	/^c0102f70:	6a 7b                	push   $0x7b$/;"	l
c0102f72	obj/kernel.asm	/^c0102f72:	e9 89 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f77	obj/kernel.asm	/^c0102f77 <vector124>:$/;"	l
c0102f77	obj/kernel.asm	/^c0102f77:	6a 00                	push   $0x0$/;"	l
c0102f79	obj/kernel.asm	/^c0102f79:	6a 7c                	push   $0x7c$/;"	l
c0102f7b	obj/kernel.asm	/^c0102f7b:	e9 80 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f80	obj/kernel.asm	/^c0102f80 <vector125>:$/;"	l
c0102f80	obj/kernel.asm	/^c0102f80:	6a 00                	push   $0x0$/;"	l
c0102f82	obj/kernel.asm	/^c0102f82:	6a 7d                	push   $0x7d$/;"	l
c0102f84	obj/kernel.asm	/^c0102f84:	e9 77 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f89	obj/kernel.asm	/^c0102f89 <vector126>:$/;"	l
c0102f89	obj/kernel.asm	/^c0102f89:	6a 00                	push   $0x0$/;"	l
c0102f8b	obj/kernel.asm	/^c0102f8b:	6a 7e                	push   $0x7e$/;"	l
c0102f8d	obj/kernel.asm	/^c0102f8d:	e9 6e fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f92	obj/kernel.asm	/^c0102f92 <vector127>:$/;"	l
c0102f92	obj/kernel.asm	/^c0102f92:	6a 00                	push   $0x0$/;"	l
c0102f94	obj/kernel.asm	/^c0102f94:	6a 7f                	push   $0x7f$/;"	l
c0102f96	obj/kernel.asm	/^c0102f96:	e9 65 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f9b	obj/kernel.asm	/^c0102f9b <vector128>:$/;"	l
c0102f9b	obj/kernel.asm	/^c0102f9b:	6a 00                	push   $0x0$/;"	l
c0102f9d	obj/kernel.asm	/^c0102f9d:	68 80 00 00 00       	push   $0x80$/;"	l
c0102fa2	obj/kernel.asm	/^c0102fa2:	e9 59 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102fa7	obj/kernel.asm	/^c0102fa7 <vector129>:$/;"	l
c0102fa7	obj/kernel.asm	/^c0102fa7:	6a 00                	push   $0x0$/;"	l
c0102fa9	obj/kernel.asm	/^c0102fa9:	68 81 00 00 00       	push   $0x81$/;"	l
c0102fae	obj/kernel.asm	/^c0102fae:	e9 4d fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102fb3	obj/kernel.asm	/^c0102fb3 <vector130>:$/;"	l
c0102fb3	obj/kernel.asm	/^c0102fb3:	6a 00                	push   $0x0$/;"	l
c0102fb5	obj/kernel.asm	/^c0102fb5:	68 82 00 00 00       	push   $0x82$/;"	l
c0102fba	obj/kernel.asm	/^c0102fba:	e9 41 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102fbf	obj/kernel.asm	/^c0102fbf <vector131>:$/;"	l
c0102fbf	obj/kernel.asm	/^c0102fbf:	6a 00                	push   $0x0$/;"	l
c0102fc1	obj/kernel.asm	/^c0102fc1:	68 83 00 00 00       	push   $0x83$/;"	l
c0102fc6	obj/kernel.asm	/^c0102fc6:	e9 35 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102fcb	obj/kernel.asm	/^c0102fcb <vector132>:$/;"	l
c0102fcb	obj/kernel.asm	/^c0102fcb:	6a 00                	push   $0x0$/;"	l
c0102fcd	obj/kernel.asm	/^c0102fcd:	68 84 00 00 00       	push   $0x84$/;"	l
c0102fd2	obj/kernel.asm	/^c0102fd2:	e9 29 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102fd7	obj/kernel.asm	/^c0102fd7 <vector133>:$/;"	l
c0102fd7	obj/kernel.asm	/^c0102fd7:	6a 00                	push   $0x0$/;"	l
c0102fd9	obj/kernel.asm	/^c0102fd9:	68 85 00 00 00       	push   $0x85$/;"	l
c0102fde	obj/kernel.asm	/^c0102fde:	e9 1d fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102fe3	obj/kernel.asm	/^c0102fe3 <vector134>:$/;"	l
c0102fe3	obj/kernel.asm	/^c0102fe3:	6a 00                	push   $0x0$/;"	l
c0102fe5	obj/kernel.asm	/^c0102fe5:	68 86 00 00 00       	push   $0x86$/;"	l
c0102fea	obj/kernel.asm	/^c0102fea:	e9 11 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102fef	obj/kernel.asm	/^c0102fef <vector135>:$/;"	l
c0102fef	obj/kernel.asm	/^c0102fef:	6a 00                	push   $0x0$/;"	l
c0102ff1	obj/kernel.asm	/^c0102ff1:	68 87 00 00 00       	push   $0x87$/;"	l
c0102ff6	obj/kernel.asm	/^c0102ff6:	e9 05 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ffb	obj/kernel.asm	/^c0102ffb <vector136>:$/;"	l
c0102ffb	obj/kernel.asm	/^c0102ffb:	6a 00                	push   $0x0$/;"	l
c0102ffd	obj/kernel.asm	/^c0102ffd:	68 88 00 00 00       	push   $0x88$/;"	l
c0103002	obj/kernel.asm	/^c0103002:	e9 f9 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103007	obj/kernel.asm	/^c0103007 <vector137>:$/;"	l
c0103007	obj/kernel.asm	/^c0103007:	6a 00                	push   $0x0$/;"	l
c0103009	obj/kernel.asm	/^c0103009:	68 89 00 00 00       	push   $0x89$/;"	l
c010300e	obj/kernel.asm	/^c010300e:	e9 ed fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103013	obj/kernel.asm	/^c0103013 <vector138>:$/;"	l
c0103013	obj/kernel.asm	/^c0103013:	6a 00                	push   $0x0$/;"	l
c0103015	obj/kernel.asm	/^c0103015:	68 8a 00 00 00       	push   $0x8a$/;"	l
c010301a	obj/kernel.asm	/^c010301a:	e9 e1 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010301f	obj/kernel.asm	/^c010301f <vector139>:$/;"	l
c010301f	obj/kernel.asm	/^c010301f:	6a 00                	push   $0x0$/;"	l
c0103021	obj/kernel.asm	/^c0103021:	68 8b 00 00 00       	push   $0x8b$/;"	l
c0103026	obj/kernel.asm	/^c0103026:	e9 d5 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010302b	obj/kernel.asm	/^c010302b <vector140>:$/;"	l
c010302b	obj/kernel.asm	/^c010302b:	6a 00                	push   $0x0$/;"	l
c010302d	obj/kernel.asm	/^c010302d:	68 8c 00 00 00       	push   $0x8c$/;"	l
c0103032	obj/kernel.asm	/^c0103032:	e9 c9 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103037	obj/kernel.asm	/^c0103037 <vector141>:$/;"	l
c0103037	obj/kernel.asm	/^c0103037:	6a 00                	push   $0x0$/;"	l
c0103039	obj/kernel.asm	/^c0103039:	68 8d 00 00 00       	push   $0x8d$/;"	l
c010303e	obj/kernel.asm	/^c010303e:	e9 bd fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103043	obj/kernel.asm	/^c0103043 <vector142>:$/;"	l
c0103043	obj/kernel.asm	/^c0103043:	6a 00                	push   $0x0$/;"	l
c0103045	obj/kernel.asm	/^c0103045:	68 8e 00 00 00       	push   $0x8e$/;"	l
c010304a	obj/kernel.asm	/^c010304a:	e9 b1 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010304f	obj/kernel.asm	/^c010304f <vector143>:$/;"	l
c010304f	obj/kernel.asm	/^c010304f:	6a 00                	push   $0x0$/;"	l
c0103051	obj/kernel.asm	/^c0103051:	68 8f 00 00 00       	push   $0x8f$/;"	l
c0103056	obj/kernel.asm	/^c0103056:	e9 a5 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010305b	obj/kernel.asm	/^c010305b <vector144>:$/;"	l
c010305b	obj/kernel.asm	/^c010305b:	6a 00                	push   $0x0$/;"	l
c010305d	obj/kernel.asm	/^c010305d:	68 90 00 00 00       	push   $0x90$/;"	l
c0103062	obj/kernel.asm	/^c0103062:	e9 99 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103067	obj/kernel.asm	/^c0103067 <vector145>:$/;"	l
c0103067	obj/kernel.asm	/^c0103067:	6a 00                	push   $0x0$/;"	l
c0103069	obj/kernel.asm	/^c0103069:	68 91 00 00 00       	push   $0x91$/;"	l
c010306e	obj/kernel.asm	/^c010306e:	e9 8d fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103073	obj/kernel.asm	/^c0103073 <vector146>:$/;"	l
c0103073	obj/kernel.asm	/^c0103073:	6a 00                	push   $0x0$/;"	l
c0103075	obj/kernel.asm	/^c0103075:	68 92 00 00 00       	push   $0x92$/;"	l
c010307a	obj/kernel.asm	/^c010307a:	e9 81 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010307f	obj/kernel.asm	/^c010307f <vector147>:$/;"	l
c010307f	obj/kernel.asm	/^c010307f:	6a 00                	push   $0x0$/;"	l
c0103081	obj/kernel.asm	/^c0103081:	68 93 00 00 00       	push   $0x93$/;"	l
c0103086	obj/kernel.asm	/^c0103086:	e9 75 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010308b	obj/kernel.asm	/^c010308b <vector148>:$/;"	l
c010308b	obj/kernel.asm	/^c010308b:	6a 00                	push   $0x0$/;"	l
c010308d	obj/kernel.asm	/^c010308d:	68 94 00 00 00       	push   $0x94$/;"	l
c0103092	obj/kernel.asm	/^c0103092:	e9 69 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103097	obj/kernel.asm	/^c0103097 <vector149>:$/;"	l
c0103097	obj/kernel.asm	/^c0103097:	6a 00                	push   $0x0$/;"	l
c0103099	obj/kernel.asm	/^c0103099:	68 95 00 00 00       	push   $0x95$/;"	l
c010309e	obj/kernel.asm	/^c010309e:	e9 5d fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030a3	obj/kernel.asm	/^c01030a3 <vector150>:$/;"	l
c01030a3	obj/kernel.asm	/^c01030a3:	6a 00                	push   $0x0$/;"	l
c01030a5	obj/kernel.asm	/^c01030a5:	68 96 00 00 00       	push   $0x96$/;"	l
c01030aa	obj/kernel.asm	/^c01030aa:	e9 51 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030af	obj/kernel.asm	/^c01030af <vector151>:$/;"	l
c01030af	obj/kernel.asm	/^c01030af:	6a 00                	push   $0x0$/;"	l
c01030b1	obj/kernel.asm	/^c01030b1:	68 97 00 00 00       	push   $0x97$/;"	l
c01030b6	obj/kernel.asm	/^c01030b6:	e9 45 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030bb	obj/kernel.asm	/^c01030bb <vector152>:$/;"	l
c01030bb	obj/kernel.asm	/^c01030bb:	6a 00                	push   $0x0$/;"	l
c01030bd	obj/kernel.asm	/^c01030bd:	68 98 00 00 00       	push   $0x98$/;"	l
c01030c2	obj/kernel.asm	/^c01030c2:	e9 39 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030c7	obj/kernel.asm	/^c01030c7 <vector153>:$/;"	l
c01030c7	obj/kernel.asm	/^c01030c7:	6a 00                	push   $0x0$/;"	l
c01030c9	obj/kernel.asm	/^c01030c9:	68 99 00 00 00       	push   $0x99$/;"	l
c01030ce	obj/kernel.asm	/^c01030ce:	e9 2d fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030d3	obj/kernel.asm	/^c01030d3 <vector154>:$/;"	l
c01030d3	obj/kernel.asm	/^c01030d3:	6a 00                	push   $0x0$/;"	l
c01030d5	obj/kernel.asm	/^c01030d5:	68 9a 00 00 00       	push   $0x9a$/;"	l
c01030da	obj/kernel.asm	/^c01030da:	e9 21 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030df	obj/kernel.asm	/^c01030df <vector155>:$/;"	l
c01030df	obj/kernel.asm	/^c01030df:	6a 00                	push   $0x0$/;"	l
c01030e1	obj/kernel.asm	/^c01030e1:	68 9b 00 00 00       	push   $0x9b$/;"	l
c01030e6	obj/kernel.asm	/^c01030e6:	e9 15 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030eb	obj/kernel.asm	/^c01030eb <vector156>:$/;"	l
c01030eb	obj/kernel.asm	/^c01030eb:	6a 00                	push   $0x0$/;"	l
c01030ed	obj/kernel.asm	/^c01030ed:	68 9c 00 00 00       	push   $0x9c$/;"	l
c01030f2	obj/kernel.asm	/^c01030f2:	e9 09 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030f7	obj/kernel.asm	/^c01030f7 <vector157>:$/;"	l
c01030f7	obj/kernel.asm	/^c01030f7:	6a 00                	push   $0x0$/;"	l
c01030f9	obj/kernel.asm	/^c01030f9:	68 9d 00 00 00       	push   $0x9d$/;"	l
c01030fe	obj/kernel.asm	/^c01030fe:	e9 fd f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103103	obj/kernel.asm	/^c0103103 <vector158>:$/;"	l
c0103103	obj/kernel.asm	/^c0103103:	6a 00                	push   $0x0$/;"	l
c0103105	obj/kernel.asm	/^c0103105:	68 9e 00 00 00       	push   $0x9e$/;"	l
c010310a	obj/kernel.asm	/^c010310a:	e9 f1 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010310f	obj/kernel.asm	/^c010310f <vector159>:$/;"	l
c010310f	obj/kernel.asm	/^c010310f:	6a 00                	push   $0x0$/;"	l
c0103111	obj/kernel.asm	/^c0103111:	68 9f 00 00 00       	push   $0x9f$/;"	l
c0103116	obj/kernel.asm	/^c0103116:	e9 e5 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010311b	obj/kernel.asm	/^c010311b <vector160>:$/;"	l
c010311b	obj/kernel.asm	/^c010311b:	6a 00                	push   $0x0$/;"	l
c010311d	obj/kernel.asm	/^c010311d:	68 a0 00 00 00       	push   $0xa0$/;"	l
c0103122	obj/kernel.asm	/^c0103122:	e9 d9 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103127	obj/kernel.asm	/^c0103127 <vector161>:$/;"	l
c0103127	obj/kernel.asm	/^c0103127:	6a 00                	push   $0x0$/;"	l
c0103129	obj/kernel.asm	/^c0103129:	68 a1 00 00 00       	push   $0xa1$/;"	l
c010312e	obj/kernel.asm	/^c010312e:	e9 cd f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103133	obj/kernel.asm	/^c0103133 <vector162>:$/;"	l
c0103133	obj/kernel.asm	/^c0103133:	6a 00                	push   $0x0$/;"	l
c0103135	obj/kernel.asm	/^c0103135:	68 a2 00 00 00       	push   $0xa2$/;"	l
c010313a	obj/kernel.asm	/^c010313a:	e9 c1 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010313f	obj/kernel.asm	/^c010313f <vector163>:$/;"	l
c010313f	obj/kernel.asm	/^c010313f:	6a 00                	push   $0x0$/;"	l
c0103141	obj/kernel.asm	/^c0103141:	68 a3 00 00 00       	push   $0xa3$/;"	l
c0103146	obj/kernel.asm	/^c0103146:	e9 b5 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010314b	obj/kernel.asm	/^c010314b <vector164>:$/;"	l
c010314b	obj/kernel.asm	/^c010314b:	6a 00                	push   $0x0$/;"	l
c010314d	obj/kernel.asm	/^c010314d:	68 a4 00 00 00       	push   $0xa4$/;"	l
c0103152	obj/kernel.asm	/^c0103152:	e9 a9 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103157	obj/kernel.asm	/^c0103157 <vector165>:$/;"	l
c0103157	obj/kernel.asm	/^c0103157:	6a 00                	push   $0x0$/;"	l
c0103159	obj/kernel.asm	/^c0103159:	68 a5 00 00 00       	push   $0xa5$/;"	l
c010315e	obj/kernel.asm	/^c010315e:	e9 9d f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103163	obj/kernel.asm	/^c0103163 <vector166>:$/;"	l
c0103163	obj/kernel.asm	/^c0103163:	6a 00                	push   $0x0$/;"	l
c0103165	obj/kernel.asm	/^c0103165:	68 a6 00 00 00       	push   $0xa6$/;"	l
c010316a	obj/kernel.asm	/^c010316a:	e9 91 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010316f	obj/kernel.asm	/^c010316f <vector167>:$/;"	l
c010316f	obj/kernel.asm	/^c010316f:	6a 00                	push   $0x0$/;"	l
c0103171	obj/kernel.asm	/^c0103171:	68 a7 00 00 00       	push   $0xa7$/;"	l
c0103176	obj/kernel.asm	/^c0103176:	e9 85 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010317b	obj/kernel.asm	/^c010317b <vector168>:$/;"	l
c010317b	obj/kernel.asm	/^c010317b:	6a 00                	push   $0x0$/;"	l
c010317d	obj/kernel.asm	/^c010317d:	68 a8 00 00 00       	push   $0xa8$/;"	l
c0103182	obj/kernel.asm	/^c0103182:	e9 79 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103187	obj/kernel.asm	/^c0103187 <vector169>:$/;"	l
c0103187	obj/kernel.asm	/^c0103187:	6a 00                	push   $0x0$/;"	l
c0103189	obj/kernel.asm	/^c0103189:	68 a9 00 00 00       	push   $0xa9$/;"	l
c010318e	obj/kernel.asm	/^c010318e:	e9 6d f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103193	obj/kernel.asm	/^c0103193 <vector170>:$/;"	l
c0103193	obj/kernel.asm	/^c0103193:	6a 00                	push   $0x0$/;"	l
c0103195	obj/kernel.asm	/^c0103195:	68 aa 00 00 00       	push   $0xaa$/;"	l
c010319a	obj/kernel.asm	/^c010319a:	e9 61 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010319f	obj/kernel.asm	/^c010319f <vector171>:$/;"	l
c010319f	obj/kernel.asm	/^c010319f:	6a 00                	push   $0x0$/;"	l
c01031a1	obj/kernel.asm	/^c01031a1:	68 ab 00 00 00       	push   $0xab$/;"	l
c01031a6	obj/kernel.asm	/^c01031a6:	e9 55 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031ab	obj/kernel.asm	/^c01031ab <vector172>:$/;"	l
c01031ab	obj/kernel.asm	/^c01031ab:	6a 00                	push   $0x0$/;"	l
c01031ad	obj/kernel.asm	/^c01031ad:	68 ac 00 00 00       	push   $0xac$/;"	l
c01031b2	obj/kernel.asm	/^c01031b2:	e9 49 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031b7	obj/kernel.asm	/^c01031b7 <vector173>:$/;"	l
c01031b7	obj/kernel.asm	/^c01031b7:	6a 00                	push   $0x0$/;"	l
c01031b9	obj/kernel.asm	/^c01031b9:	68 ad 00 00 00       	push   $0xad$/;"	l
c01031be	obj/kernel.asm	/^c01031be:	e9 3d f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031c3	obj/kernel.asm	/^c01031c3 <vector174>:$/;"	l
c01031c3	obj/kernel.asm	/^c01031c3:	6a 00                	push   $0x0$/;"	l
c01031c5	obj/kernel.asm	/^c01031c5:	68 ae 00 00 00       	push   $0xae$/;"	l
c01031ca	obj/kernel.asm	/^c01031ca:	e9 31 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031cf	obj/kernel.asm	/^c01031cf <vector175>:$/;"	l
c01031cf	obj/kernel.asm	/^c01031cf:	6a 00                	push   $0x0$/;"	l
c01031d1	obj/kernel.asm	/^c01031d1:	68 af 00 00 00       	push   $0xaf$/;"	l
c01031d6	obj/kernel.asm	/^c01031d6:	e9 25 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031db	obj/kernel.asm	/^c01031db <vector176>:$/;"	l
c01031db	obj/kernel.asm	/^c01031db:	6a 00                	push   $0x0$/;"	l
c01031dd	obj/kernel.asm	/^c01031dd:	68 b0 00 00 00       	push   $0xb0$/;"	l
c01031e2	obj/kernel.asm	/^c01031e2:	e9 19 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031e7	obj/kernel.asm	/^c01031e7 <vector177>:$/;"	l
c01031e7	obj/kernel.asm	/^c01031e7:	6a 00                	push   $0x0$/;"	l
c01031e9	obj/kernel.asm	/^c01031e9:	68 b1 00 00 00       	push   $0xb1$/;"	l
c01031ee	obj/kernel.asm	/^c01031ee:	e9 0d f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031f3	obj/kernel.asm	/^c01031f3 <vector178>:$/;"	l
c01031f3	obj/kernel.asm	/^c01031f3:	6a 00                	push   $0x0$/;"	l
c01031f5	obj/kernel.asm	/^c01031f5:	68 b2 00 00 00       	push   $0xb2$/;"	l
c01031fa	obj/kernel.asm	/^c01031fa:	e9 01 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031ff	obj/kernel.asm	/^c01031ff <vector179>:$/;"	l
c01031ff	obj/kernel.asm	/^c01031ff:	6a 00                	push   $0x0$/;"	l
c0103201	obj/kernel.asm	/^c0103201:	68 b3 00 00 00       	push   $0xb3$/;"	l
c0103206	obj/kernel.asm	/^c0103206:	e9 f5 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010320b	obj/kernel.asm	/^c010320b <vector180>:$/;"	l
c010320b	obj/kernel.asm	/^c010320b:	6a 00                	push   $0x0$/;"	l
c010320d	obj/kernel.asm	/^c010320d:	68 b4 00 00 00       	push   $0xb4$/;"	l
c0103212	obj/kernel.asm	/^c0103212:	e9 e9 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103217	obj/kernel.asm	/^c0103217 <vector181>:$/;"	l
c0103217	obj/kernel.asm	/^c0103217:	6a 00                	push   $0x0$/;"	l
c0103219	obj/kernel.asm	/^c0103219:	68 b5 00 00 00       	push   $0xb5$/;"	l
c010321e	obj/kernel.asm	/^c010321e:	e9 dd f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103223	obj/kernel.asm	/^c0103223 <vector182>:$/;"	l
c0103223	obj/kernel.asm	/^c0103223:	6a 00                	push   $0x0$/;"	l
c0103225	obj/kernel.asm	/^c0103225:	68 b6 00 00 00       	push   $0xb6$/;"	l
c010322a	obj/kernel.asm	/^c010322a:	e9 d1 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010322f	obj/kernel.asm	/^c010322f <vector183>:$/;"	l
c010322f	obj/kernel.asm	/^c010322f:	6a 00                	push   $0x0$/;"	l
c0103231	obj/kernel.asm	/^c0103231:	68 b7 00 00 00       	push   $0xb7$/;"	l
c0103236	obj/kernel.asm	/^c0103236:	e9 c5 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010323b	obj/kernel.asm	/^c010323b <vector184>:$/;"	l
c010323b	obj/kernel.asm	/^c010323b:	6a 00                	push   $0x0$/;"	l
c010323d	obj/kernel.asm	/^c010323d:	68 b8 00 00 00       	push   $0xb8$/;"	l
c0103242	obj/kernel.asm	/^c0103242:	e9 b9 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103247	obj/kernel.asm	/^c0103247 <vector185>:$/;"	l
c0103247	obj/kernel.asm	/^c0103247:	6a 00                	push   $0x0$/;"	l
c0103249	obj/kernel.asm	/^c0103249:	68 b9 00 00 00       	push   $0xb9$/;"	l
c010324e	obj/kernel.asm	/^c010324e:	e9 ad f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103253	obj/kernel.asm	/^c0103253 <vector186>:$/;"	l
c0103253	obj/kernel.asm	/^c0103253:	6a 00                	push   $0x0$/;"	l
c0103255	obj/kernel.asm	/^c0103255:	68 ba 00 00 00       	push   $0xba$/;"	l
c010325a	obj/kernel.asm	/^c010325a:	e9 a1 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010325f	obj/kernel.asm	/^c010325f <vector187>:$/;"	l
c010325f	obj/kernel.asm	/^c010325f:	6a 00                	push   $0x0$/;"	l
c0103261	obj/kernel.asm	/^c0103261:	68 bb 00 00 00       	push   $0xbb$/;"	l
c0103266	obj/kernel.asm	/^c0103266:	e9 95 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010326b	obj/kernel.asm	/^c010326b <vector188>:$/;"	l
c010326b	obj/kernel.asm	/^c010326b:	6a 00                	push   $0x0$/;"	l
c010326d	obj/kernel.asm	/^c010326d:	68 bc 00 00 00       	push   $0xbc$/;"	l
c0103272	obj/kernel.asm	/^c0103272:	e9 89 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103277	obj/kernel.asm	/^c0103277 <vector189>:$/;"	l
c0103277	obj/kernel.asm	/^c0103277:	6a 00                	push   $0x0$/;"	l
c0103279	obj/kernel.asm	/^c0103279:	68 bd 00 00 00       	push   $0xbd$/;"	l
c010327e	obj/kernel.asm	/^c010327e:	e9 7d f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103283	obj/kernel.asm	/^c0103283 <vector190>:$/;"	l
c0103283	obj/kernel.asm	/^c0103283:	6a 00                	push   $0x0$/;"	l
c0103285	obj/kernel.asm	/^c0103285:	68 be 00 00 00       	push   $0xbe$/;"	l
c010328a	obj/kernel.asm	/^c010328a:	e9 71 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010328f	obj/kernel.asm	/^c010328f <vector191>:$/;"	l
c010328f	obj/kernel.asm	/^c010328f:	6a 00                	push   $0x0$/;"	l
c0103291	obj/kernel.asm	/^c0103291:	68 bf 00 00 00       	push   $0xbf$/;"	l
c0103296	obj/kernel.asm	/^c0103296:	e9 65 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010329b	obj/kernel.asm	/^c010329b <vector192>:$/;"	l
c010329b	obj/kernel.asm	/^c010329b:	6a 00                	push   $0x0$/;"	l
c010329d	obj/kernel.asm	/^c010329d:	68 c0 00 00 00       	push   $0xc0$/;"	l
c01032a2	obj/kernel.asm	/^c01032a2:	e9 59 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032a7	obj/kernel.asm	/^c01032a7 <vector193>:$/;"	l
c01032a7	obj/kernel.asm	/^c01032a7:	6a 00                	push   $0x0$/;"	l
c01032a9	obj/kernel.asm	/^c01032a9:	68 c1 00 00 00       	push   $0xc1$/;"	l
c01032ae	obj/kernel.asm	/^c01032ae:	e9 4d f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032b3	obj/kernel.asm	/^c01032b3 <vector194>:$/;"	l
c01032b3	obj/kernel.asm	/^c01032b3:	6a 00                	push   $0x0$/;"	l
c01032b5	obj/kernel.asm	/^c01032b5:	68 c2 00 00 00       	push   $0xc2$/;"	l
c01032ba	obj/kernel.asm	/^c01032ba:	e9 41 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032bf	obj/kernel.asm	/^c01032bf <vector195>:$/;"	l
c01032bf	obj/kernel.asm	/^c01032bf:	6a 00                	push   $0x0$/;"	l
c01032c1	obj/kernel.asm	/^c01032c1:	68 c3 00 00 00       	push   $0xc3$/;"	l
c01032c6	obj/kernel.asm	/^c01032c6:	e9 35 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032cb	obj/kernel.asm	/^c01032cb <vector196>:$/;"	l
c01032cb	obj/kernel.asm	/^c01032cb:	6a 00                	push   $0x0$/;"	l
c01032cd	obj/kernel.asm	/^c01032cd:	68 c4 00 00 00       	push   $0xc4$/;"	l
c01032d2	obj/kernel.asm	/^c01032d2:	e9 29 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032d7	obj/kernel.asm	/^c01032d7 <vector197>:$/;"	l
c01032d7	obj/kernel.asm	/^c01032d7:	6a 00                	push   $0x0$/;"	l
c01032d9	obj/kernel.asm	/^c01032d9:	68 c5 00 00 00       	push   $0xc5$/;"	l
c01032de	obj/kernel.asm	/^c01032de:	e9 1d f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032e3	obj/kernel.asm	/^c01032e3 <vector198>:$/;"	l
c01032e3	obj/kernel.asm	/^c01032e3:	6a 00                	push   $0x0$/;"	l
c01032e5	obj/kernel.asm	/^c01032e5:	68 c6 00 00 00       	push   $0xc6$/;"	l
c01032ea	obj/kernel.asm	/^c01032ea:	e9 11 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032ef	obj/kernel.asm	/^c01032ef <vector199>:$/;"	l
c01032ef	obj/kernel.asm	/^c01032ef:	6a 00                	push   $0x0$/;"	l
c01032f1	obj/kernel.asm	/^c01032f1:	68 c7 00 00 00       	push   $0xc7$/;"	l
c01032f6	obj/kernel.asm	/^c01032f6:	e9 05 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032fb	obj/kernel.asm	/^c01032fb <vector200>:$/;"	l
c01032fb	obj/kernel.asm	/^c01032fb:	6a 00                	push   $0x0$/;"	l
c01032fd	obj/kernel.asm	/^c01032fd:	68 c8 00 00 00       	push   $0xc8$/;"	l
c0103302	obj/kernel.asm	/^c0103302:	e9 f9 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103307	obj/kernel.asm	/^c0103307 <vector201>:$/;"	l
c0103307	obj/kernel.asm	/^c0103307:	6a 00                	push   $0x0$/;"	l
c0103309	obj/kernel.asm	/^c0103309:	68 c9 00 00 00       	push   $0xc9$/;"	l
c010330e	obj/kernel.asm	/^c010330e:	e9 ed f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103313	obj/kernel.asm	/^c0103313 <vector202>:$/;"	l
c0103313	obj/kernel.asm	/^c0103313:	6a 00                	push   $0x0$/;"	l
c0103315	obj/kernel.asm	/^c0103315:	68 ca 00 00 00       	push   $0xca$/;"	l
c010331a	obj/kernel.asm	/^c010331a:	e9 e1 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010331f	obj/kernel.asm	/^c010331f <vector203>:$/;"	l
c010331f	obj/kernel.asm	/^c010331f:	6a 00                	push   $0x0$/;"	l
c0103321	obj/kernel.asm	/^c0103321:	68 cb 00 00 00       	push   $0xcb$/;"	l
c0103326	obj/kernel.asm	/^c0103326:	e9 d5 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010332b	obj/kernel.asm	/^c010332b <vector204>:$/;"	l
c010332b	obj/kernel.asm	/^c010332b:	6a 00                	push   $0x0$/;"	l
c010332d	obj/kernel.asm	/^c010332d:	68 cc 00 00 00       	push   $0xcc$/;"	l
c0103332	obj/kernel.asm	/^c0103332:	e9 c9 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103337	obj/kernel.asm	/^c0103337 <vector205>:$/;"	l
c0103337	obj/kernel.asm	/^c0103337:	6a 00                	push   $0x0$/;"	l
c0103339	obj/kernel.asm	/^c0103339:	68 cd 00 00 00       	push   $0xcd$/;"	l
c010333e	obj/kernel.asm	/^c010333e:	e9 bd f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103343	obj/kernel.asm	/^c0103343 <vector206>:$/;"	l
c0103343	obj/kernel.asm	/^c0103343:	6a 00                	push   $0x0$/;"	l
c0103345	obj/kernel.asm	/^c0103345:	68 ce 00 00 00       	push   $0xce$/;"	l
c010334a	obj/kernel.asm	/^c010334a:	e9 b1 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010334f	obj/kernel.asm	/^c010334f <vector207>:$/;"	l
c010334f	obj/kernel.asm	/^c010334f:	6a 00                	push   $0x0$/;"	l
c0103351	obj/kernel.asm	/^c0103351:	68 cf 00 00 00       	push   $0xcf$/;"	l
c0103356	obj/kernel.asm	/^c0103356:	e9 a5 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010335b	obj/kernel.asm	/^c010335b <vector208>:$/;"	l
c010335b	obj/kernel.asm	/^c010335b:	6a 00                	push   $0x0$/;"	l
c010335d	obj/kernel.asm	/^c010335d:	68 d0 00 00 00       	push   $0xd0$/;"	l
c0103362	obj/kernel.asm	/^c0103362:	e9 99 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103367	obj/kernel.asm	/^c0103367 <vector209>:$/;"	l
c0103367	obj/kernel.asm	/^c0103367:	6a 00                	push   $0x0$/;"	l
c0103369	obj/kernel.asm	/^c0103369:	68 d1 00 00 00       	push   $0xd1$/;"	l
c010336e	obj/kernel.asm	/^c010336e:	e9 8d f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103373	obj/kernel.asm	/^c0103373 <vector210>:$/;"	l
c0103373	obj/kernel.asm	/^c0103373:	6a 00                	push   $0x0$/;"	l
c0103375	obj/kernel.asm	/^c0103375:	68 d2 00 00 00       	push   $0xd2$/;"	l
c010337a	obj/kernel.asm	/^c010337a:	e9 81 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010337f	obj/kernel.asm	/^c010337f <vector211>:$/;"	l
c010337f	obj/kernel.asm	/^c010337f:	6a 00                	push   $0x0$/;"	l
c0103381	obj/kernel.asm	/^c0103381:	68 d3 00 00 00       	push   $0xd3$/;"	l
c0103386	obj/kernel.asm	/^c0103386:	e9 75 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010338b	obj/kernel.asm	/^c010338b <vector212>:$/;"	l
c010338b	obj/kernel.asm	/^c010338b:	6a 00                	push   $0x0$/;"	l
c010338d	obj/kernel.asm	/^c010338d:	68 d4 00 00 00       	push   $0xd4$/;"	l
c0103392	obj/kernel.asm	/^c0103392:	e9 69 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103397	obj/kernel.asm	/^c0103397 <vector213>:$/;"	l
c0103397	obj/kernel.asm	/^c0103397:	6a 00                	push   $0x0$/;"	l
c0103399	obj/kernel.asm	/^c0103399:	68 d5 00 00 00       	push   $0xd5$/;"	l
c010339e	obj/kernel.asm	/^c010339e:	e9 5d f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033a3	obj/kernel.asm	/^c01033a3 <vector214>:$/;"	l
c01033a3	obj/kernel.asm	/^c01033a3:	6a 00                	push   $0x0$/;"	l
c01033a5	obj/kernel.asm	/^c01033a5:	68 d6 00 00 00       	push   $0xd6$/;"	l
c01033aa	obj/kernel.asm	/^c01033aa:	e9 51 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033af	obj/kernel.asm	/^c01033af <vector215>:$/;"	l
c01033af	obj/kernel.asm	/^c01033af:	6a 00                	push   $0x0$/;"	l
c01033b1	obj/kernel.asm	/^c01033b1:	68 d7 00 00 00       	push   $0xd7$/;"	l
c01033b6	obj/kernel.asm	/^c01033b6:	e9 45 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033bb	obj/kernel.asm	/^c01033bb <vector216>:$/;"	l
c01033bb	obj/kernel.asm	/^c01033bb:	6a 00                	push   $0x0$/;"	l
c01033bd	obj/kernel.asm	/^c01033bd:	68 d8 00 00 00       	push   $0xd8$/;"	l
c01033c2	obj/kernel.asm	/^c01033c2:	e9 39 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033c7	obj/kernel.asm	/^c01033c7 <vector217>:$/;"	l
c01033c7	obj/kernel.asm	/^c01033c7:	6a 00                	push   $0x0$/;"	l
c01033c9	obj/kernel.asm	/^c01033c9:	68 d9 00 00 00       	push   $0xd9$/;"	l
c01033ce	obj/kernel.asm	/^c01033ce:	e9 2d f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033d3	obj/kernel.asm	/^c01033d3 <vector218>:$/;"	l
c01033d3	obj/kernel.asm	/^c01033d3:	6a 00                	push   $0x0$/;"	l
c01033d5	obj/kernel.asm	/^c01033d5:	68 da 00 00 00       	push   $0xda$/;"	l
c01033da	obj/kernel.asm	/^c01033da:	e9 21 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033df	obj/kernel.asm	/^c01033df <vector219>:$/;"	l
c01033df	obj/kernel.asm	/^c01033df:	6a 00                	push   $0x0$/;"	l
c01033e1	obj/kernel.asm	/^c01033e1:	68 db 00 00 00       	push   $0xdb$/;"	l
c01033e6	obj/kernel.asm	/^c01033e6:	e9 15 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033eb	obj/kernel.asm	/^c01033eb <vector220>:$/;"	l
c01033eb	obj/kernel.asm	/^c01033eb:	6a 00                	push   $0x0$/;"	l
c01033ed	obj/kernel.asm	/^c01033ed:	68 dc 00 00 00       	push   $0xdc$/;"	l
c01033f2	obj/kernel.asm	/^c01033f2:	e9 09 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033f7	obj/kernel.asm	/^c01033f7 <vector221>:$/;"	l
c01033f7	obj/kernel.asm	/^c01033f7:	6a 00                	push   $0x0$/;"	l
c01033f9	obj/kernel.asm	/^c01033f9:	68 dd 00 00 00       	push   $0xdd$/;"	l
c01033fe	obj/kernel.asm	/^c01033fe:	e9 fd f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103403	obj/kernel.asm	/^c0103403 <vector222>:$/;"	l
c0103403	obj/kernel.asm	/^c0103403:	6a 00                	push   $0x0$/;"	l
c0103405	obj/kernel.asm	/^c0103405:	68 de 00 00 00       	push   $0xde$/;"	l
c010340a	obj/kernel.asm	/^c010340a:	e9 f1 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010340f	obj/kernel.asm	/^c010340f <vector223>:$/;"	l
c010340f	obj/kernel.asm	/^c010340f:	6a 00                	push   $0x0$/;"	l
c0103411	obj/kernel.asm	/^c0103411:	68 df 00 00 00       	push   $0xdf$/;"	l
c0103416	obj/kernel.asm	/^c0103416:	e9 e5 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010341b	obj/kernel.asm	/^c010341b <vector224>:$/;"	l
c010341b	obj/kernel.asm	/^c010341b:	6a 00                	push   $0x0$/;"	l
c010341d	obj/kernel.asm	/^c010341d:	68 e0 00 00 00       	push   $0xe0$/;"	l
c0103422	obj/kernel.asm	/^c0103422:	e9 d9 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103427	obj/kernel.asm	/^c0103427 <vector225>:$/;"	l
c0103427	obj/kernel.asm	/^c0103427:	6a 00                	push   $0x0$/;"	l
c0103429	obj/kernel.asm	/^c0103429:	68 e1 00 00 00       	push   $0xe1$/;"	l
c010342e	obj/kernel.asm	/^c010342e:	e9 cd f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103433	obj/kernel.asm	/^c0103433 <vector226>:$/;"	l
c0103433	obj/kernel.asm	/^c0103433:	6a 00                	push   $0x0$/;"	l
c0103435	obj/kernel.asm	/^c0103435:	68 e2 00 00 00       	push   $0xe2$/;"	l
c010343a	obj/kernel.asm	/^c010343a:	e9 c1 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010343f	obj/kernel.asm	/^c010343f <vector227>:$/;"	l
c010343f	obj/kernel.asm	/^c010343f:	6a 00                	push   $0x0$/;"	l
c0103441	obj/kernel.asm	/^c0103441:	68 e3 00 00 00       	push   $0xe3$/;"	l
c0103446	obj/kernel.asm	/^c0103446:	e9 b5 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010344b	obj/kernel.asm	/^c010344b <vector228>:$/;"	l
c010344b	obj/kernel.asm	/^c010344b:	6a 00                	push   $0x0$/;"	l
c010344d	obj/kernel.asm	/^c010344d:	68 e4 00 00 00       	push   $0xe4$/;"	l
c0103452	obj/kernel.asm	/^c0103452:	e9 a9 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103457	obj/kernel.asm	/^c0103457 <vector229>:$/;"	l
c0103457	obj/kernel.asm	/^c0103457:	6a 00                	push   $0x0$/;"	l
c0103459	obj/kernel.asm	/^c0103459:	68 e5 00 00 00       	push   $0xe5$/;"	l
c010345e	obj/kernel.asm	/^c010345e:	e9 9d f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103463	obj/kernel.asm	/^c0103463 <vector230>:$/;"	l
c0103463	obj/kernel.asm	/^c0103463:	6a 00                	push   $0x0$/;"	l
c0103465	obj/kernel.asm	/^c0103465:	68 e6 00 00 00       	push   $0xe6$/;"	l
c010346a	obj/kernel.asm	/^c010346a:	e9 91 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010346f	obj/kernel.asm	/^c010346f <vector231>:$/;"	l
c010346f	obj/kernel.asm	/^c010346f:	6a 00                	push   $0x0$/;"	l
c0103471	obj/kernel.asm	/^c0103471:	68 e7 00 00 00       	push   $0xe7$/;"	l
c0103476	obj/kernel.asm	/^c0103476:	e9 85 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010347b	obj/kernel.asm	/^c010347b <vector232>:$/;"	l
c010347b	obj/kernel.asm	/^c010347b:	6a 00                	push   $0x0$/;"	l
c010347d	obj/kernel.asm	/^c010347d:	68 e8 00 00 00       	push   $0xe8$/;"	l
c0103482	obj/kernel.asm	/^c0103482:	e9 79 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103487	obj/kernel.asm	/^c0103487 <vector233>:$/;"	l
c0103487	obj/kernel.asm	/^c0103487:	6a 00                	push   $0x0$/;"	l
c0103489	obj/kernel.asm	/^c0103489:	68 e9 00 00 00       	push   $0xe9$/;"	l
c010348e	obj/kernel.asm	/^c010348e:	e9 6d f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103493	obj/kernel.asm	/^c0103493 <vector234>:$/;"	l
c0103493	obj/kernel.asm	/^c0103493:	6a 00                	push   $0x0$/;"	l
c0103495	obj/kernel.asm	/^c0103495:	68 ea 00 00 00       	push   $0xea$/;"	l
c010349a	obj/kernel.asm	/^c010349a:	e9 61 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010349f	obj/kernel.asm	/^c010349f <vector235>:$/;"	l
c010349f	obj/kernel.asm	/^c010349f:	6a 00                	push   $0x0$/;"	l
c01034a1	obj/kernel.asm	/^c01034a1:	68 eb 00 00 00       	push   $0xeb$/;"	l
c01034a6	obj/kernel.asm	/^c01034a6:	e9 55 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034ab	obj/kernel.asm	/^c01034ab <vector236>:$/;"	l
c01034ab	obj/kernel.asm	/^c01034ab:	6a 00                	push   $0x0$/;"	l
c01034ad	obj/kernel.asm	/^c01034ad:	68 ec 00 00 00       	push   $0xec$/;"	l
c01034b2	obj/kernel.asm	/^c01034b2:	e9 49 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034b7	obj/kernel.asm	/^c01034b7 <vector237>:$/;"	l
c01034b7	obj/kernel.asm	/^c01034b7:	6a 00                	push   $0x0$/;"	l
c01034b9	obj/kernel.asm	/^c01034b9:	68 ed 00 00 00       	push   $0xed$/;"	l
c01034be	obj/kernel.asm	/^c01034be:	e9 3d f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034c3	obj/kernel.asm	/^c01034c3 <vector238>:$/;"	l
c01034c3	obj/kernel.asm	/^c01034c3:	6a 00                	push   $0x0$/;"	l
c01034c5	obj/kernel.asm	/^c01034c5:	68 ee 00 00 00       	push   $0xee$/;"	l
c01034ca	obj/kernel.asm	/^c01034ca:	e9 31 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034cf	obj/kernel.asm	/^c01034cf <vector239>:$/;"	l
c01034cf	obj/kernel.asm	/^c01034cf:	6a 00                	push   $0x0$/;"	l
c01034d1	obj/kernel.asm	/^c01034d1:	68 ef 00 00 00       	push   $0xef$/;"	l
c01034d6	obj/kernel.asm	/^c01034d6:	e9 25 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034db	obj/kernel.asm	/^c01034db <vector240>:$/;"	l
c01034db	obj/kernel.asm	/^c01034db:	6a 00                	push   $0x0$/;"	l
c01034dd	obj/kernel.asm	/^c01034dd:	68 f0 00 00 00       	push   $0xf0$/;"	l
c01034e2	obj/kernel.asm	/^c01034e2:	e9 19 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034e7	obj/kernel.asm	/^c01034e7 <vector241>:$/;"	l
c01034e7	obj/kernel.asm	/^c01034e7:	6a 00                	push   $0x0$/;"	l
c01034e9	obj/kernel.asm	/^c01034e9:	68 f1 00 00 00       	push   $0xf1$/;"	l
c01034ee	obj/kernel.asm	/^c01034ee:	e9 0d f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034f3	obj/kernel.asm	/^c01034f3 <vector242>:$/;"	l
c01034f3	obj/kernel.asm	/^c01034f3:	6a 00                	push   $0x0$/;"	l
c01034f5	obj/kernel.asm	/^c01034f5:	68 f2 00 00 00       	push   $0xf2$/;"	l
c01034fa	obj/kernel.asm	/^c01034fa:	e9 01 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034ff	obj/kernel.asm	/^c01034ff <vector243>:$/;"	l
c01034ff	obj/kernel.asm	/^c01034ff:	6a 00                	push   $0x0$/;"	l
c0103501	obj/kernel.asm	/^c0103501:	68 f3 00 00 00       	push   $0xf3$/;"	l
c0103506	obj/kernel.asm	/^c0103506:	e9 f5 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010350b	obj/kernel.asm	/^c010350b <vector244>:$/;"	l
c010350b	obj/kernel.asm	/^c010350b:	6a 00                	push   $0x0$/;"	l
c010350d	obj/kernel.asm	/^c010350d:	68 f4 00 00 00       	push   $0xf4$/;"	l
c0103512	obj/kernel.asm	/^c0103512:	e9 e9 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103517	obj/kernel.asm	/^c0103517 <vector245>:$/;"	l
c0103517	obj/kernel.asm	/^c0103517:	6a 00                	push   $0x0$/;"	l
c0103519	obj/kernel.asm	/^c0103519:	68 f5 00 00 00       	push   $0xf5$/;"	l
c010351e	obj/kernel.asm	/^c010351e:	e9 dd f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103523	obj/kernel.asm	/^c0103523 <vector246>:$/;"	l
c0103523	obj/kernel.asm	/^c0103523:	6a 00                	push   $0x0$/;"	l
c0103525	obj/kernel.asm	/^c0103525:	68 f6 00 00 00       	push   $0xf6$/;"	l
c010352a	obj/kernel.asm	/^c010352a:	e9 d1 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010352f	obj/kernel.asm	/^c010352f <vector247>:$/;"	l
c010352f	obj/kernel.asm	/^c010352f:	6a 00                	push   $0x0$/;"	l
c0103531	obj/kernel.asm	/^c0103531:	68 f7 00 00 00       	push   $0xf7$/;"	l
c0103536	obj/kernel.asm	/^c0103536:	e9 c5 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010353b	obj/kernel.asm	/^c010353b <vector248>:$/;"	l
c010353b	obj/kernel.asm	/^c010353b:	6a 00                	push   $0x0$/;"	l
c010353d	obj/kernel.asm	/^c010353d:	68 f8 00 00 00       	push   $0xf8$/;"	l
c0103542	obj/kernel.asm	/^c0103542:	e9 b9 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103547	obj/kernel.asm	/^c0103547 <vector249>:$/;"	l
c0103547	obj/kernel.asm	/^c0103547:	6a 00                	push   $0x0$/;"	l
c0103549	obj/kernel.asm	/^c0103549:	68 f9 00 00 00       	push   $0xf9$/;"	l
c010354e	obj/kernel.asm	/^c010354e:	e9 ad f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103553	obj/kernel.asm	/^c0103553 <vector250>:$/;"	l
c0103553	obj/kernel.asm	/^c0103553:	6a 00                	push   $0x0$/;"	l
c0103555	obj/kernel.asm	/^c0103555:	68 fa 00 00 00       	push   $0xfa$/;"	l
c010355a	obj/kernel.asm	/^c010355a:	e9 a1 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010355f	obj/kernel.asm	/^c010355f <vector251>:$/;"	l
c010355f	obj/kernel.asm	/^c010355f:	6a 00                	push   $0x0$/;"	l
c0103561	obj/kernel.asm	/^c0103561:	68 fb 00 00 00       	push   $0xfb$/;"	l
c0103566	obj/kernel.asm	/^c0103566:	e9 95 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010356b	obj/kernel.asm	/^c010356b <vector252>:$/;"	l
c010356b	obj/kernel.asm	/^c010356b:	6a 00                	push   $0x0$/;"	l
c010356d	obj/kernel.asm	/^c010356d:	68 fc 00 00 00       	push   $0xfc$/;"	l
c0103572	obj/kernel.asm	/^c0103572:	e9 89 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103577	obj/kernel.asm	/^c0103577 <vector253>:$/;"	l
c0103577	obj/kernel.asm	/^c0103577:	6a 00                	push   $0x0$/;"	l
c0103579	obj/kernel.asm	/^c0103579:	68 fd 00 00 00       	push   $0xfd$/;"	l
c010357e	obj/kernel.asm	/^c010357e:	e9 7d f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103583	obj/kernel.asm	/^c0103583 <vector254>:$/;"	l
c0103583	obj/kernel.asm	/^c0103583:	6a 00                	push   $0x0$/;"	l
c0103585	obj/kernel.asm	/^c0103585:	68 fe 00 00 00       	push   $0xfe$/;"	l
c010358a	obj/kernel.asm	/^c010358a:	e9 71 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010358f	obj/kernel.asm	/^c010358f <vector255>:$/;"	l
c010358f	obj/kernel.asm	/^c010358f:	6a 00                	push   $0x0$/;"	l
c0103591	obj/kernel.asm	/^c0103591:	68 ff 00 00 00       	push   $0xff$/;"	l
c0103596	obj/kernel.asm	/^c0103596:	e9 65 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010359b	obj/kernel.asm	/^c010359b <page2ppn>:$/;"	l
c010359b	obj/kernel.asm	/^c010359b:	55                   	push   %ebp$/;"	l
c010359c	obj/kernel.asm	/^c010359c:	89 e5                	mov    %esp,%ebp$/;"	l
c010359e	obj/kernel.asm	/^c010359e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01035a1	obj/kernel.asm	/^c01035a1:	a1 28 40 15 c0       	mov    0xc0154028,%eax$/;"	l
c01035a6	obj/kernel.asm	/^c01035a6:	29 c2                	sub    %eax,%edx$/;"	l
c01035a8	obj/kernel.asm	/^c01035a8:	89 d0                	mov    %edx,%eax$/;"	l
c01035aa	obj/kernel.asm	/^c01035aa:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c01035ad	obj/kernel.asm	/^c01035ad:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c01035b3	obj/kernel.asm	/^c01035b3:	5d                   	pop    %ebp$/;"	l
c01035b4	obj/kernel.asm	/^c01035b4:	c3                   	ret    $/;"	l
c01035b5	obj/kernel.asm	/^c01035b5 <page2pa>:$/;"	l
c01035b5	obj/kernel.asm	/^c01035b5:	55                   	push   %ebp$/;"	l
c01035b6	obj/kernel.asm	/^c01035b6:	89 e5                	mov    %esp,%ebp$/;"	l
c01035b8	obj/kernel.asm	/^c01035b8:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01035bb	obj/kernel.asm	/^c01035bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01035be	obj/kernel.asm	/^c01035be:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01035c1	obj/kernel.asm	/^c01035c1:	e8 d5 ff ff ff       	call   c010359b <page2ppn>$/;"	l
c01035c6	obj/kernel.asm	/^c01035c6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01035c9	obj/kernel.asm	/^c01035c9:	c9                   	leave  $/;"	l
c01035ca	obj/kernel.asm	/^c01035ca:	c3                   	ret    $/;"	l
c01035cb	obj/kernel.asm	/^c01035cb <page_ref>:$/;"	l
c01035cb	obj/kernel.asm	/^c01035cb:	55                   	push   %ebp$/;"	l
c01035cc	obj/kernel.asm	/^c01035cc:	89 e5                	mov    %esp,%ebp$/;"	l
c01035ce	obj/kernel.asm	/^c01035ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01035d1	obj/kernel.asm	/^c01035d1:	8b 00                	mov    (%eax),%eax$/;"	l
c01035d3	obj/kernel.asm	/^c01035d3:	5d                   	pop    %ebp$/;"	l
c01035d4	obj/kernel.asm	/^c01035d4:	c3                   	ret    $/;"	l
c01035d5	obj/kernel.asm	/^c01035d5 <set_page_ref>:$/;"	l
c01035d5	obj/kernel.asm	/^c01035d5:	55                   	push   %ebp$/;"	l
c01035d6	obj/kernel.asm	/^c01035d6:	89 e5                	mov    %esp,%ebp$/;"	l
c01035d8	obj/kernel.asm	/^c01035d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01035db	obj/kernel.asm	/^c01035db:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01035de	obj/kernel.asm	/^c01035de:	89 10                	mov    %edx,(%eax)$/;"	l
c01035e0	obj/kernel.asm	/^c01035e0:	5d                   	pop    %ebp$/;"	l
c01035e1	obj/kernel.asm	/^c01035e1:	c3                   	ret    $/;"	l
c01035e2	obj/kernel.asm	/^c01035e2 <default_init>:$/;"	l
c01035e2	obj/kernel.asm	/^c01035e2:	55                   	push   %ebp$/;"	l
c01035e3	obj/kernel.asm	/^c01035e3:	89 e5                	mov    %esp,%ebp$/;"	l
c01035e5	obj/kernel.asm	/^c01035e5:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01035e8	obj/kernel.asm	/^c01035e8:	c7 45 fc 14 40 15 c0 	movl   $0xc0154014,-0x4(%ebp)$/;"	l
c01035ef	obj/kernel.asm	/^c01035ef:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01035f2	obj/kernel.asm	/^c01035f2:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01035f5	obj/kernel.asm	/^c01035f5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01035f8	obj/kernel.asm	/^c01035f8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01035fb	obj/kernel.asm	/^c01035fb:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01035fe	obj/kernel.asm	/^c01035fe:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0103601	obj/kernel.asm	/^c0103601:	89 10                	mov    %edx,(%eax)$/;"	l
c0103603	obj/kernel.asm	/^c0103603:	c7 05 1c 40 15 c0 00 	movl   $0x0,0xc015401c$/;"	l
c010360a	obj/kernel.asm	/^c010360a:	00 00 00 $/;"	l
c010360d	obj/kernel.asm	/^c010360d:	c9                   	leave  $/;"	l
c010360e	obj/kernel.asm	/^c010360e:	c3                   	ret    $/;"	l
c010360f	obj/kernel.asm	/^c010360f <default_init_memmap>:$/;"	l
c010360f	obj/kernel.asm	/^c010360f:	55                   	push   %ebp$/;"	l
c0103610	obj/kernel.asm	/^c0103610:	89 e5                	mov    %esp,%ebp$/;"	l
c0103612	obj/kernel.asm	/^c0103612:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0103615	obj/kernel.asm	/^c0103615:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0103619	obj/kernel.asm	/^c0103619:	75 24                	jne    c010363f <default_init_memmap+0x30>$/;"	l
c010361b	obj/kernel.asm	/^c010361b:	c7 44 24 0c 10 60 11 	movl   $0xc0116010,0xc(%esp)$/;"	l
c0103622	obj/kernel.asm	/^c0103622:	c0 $/;"	l
c0103623	obj/kernel.asm	/^c0103623:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c010362a	obj/kernel.asm	/^c010362a:	c0 $/;"	l
c010362b	obj/kernel.asm	/^c010362b:	c7 44 24 04 46 00 00 	movl   $0x46,0x4(%esp)$/;"	l
c0103632	obj/kernel.asm	/^c0103632:	00 $/;"	l
c0103633	obj/kernel.asm	/^c0103633:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c010363a	obj/kernel.asm	/^c010363a:	e8 89 d8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010363f	obj/kernel.asm	/^c010363f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103642	obj/kernel.asm	/^c0103642:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103645	obj/kernel.asm	/^c0103645:	e9 dc 00 00 00       	jmp    c0103726 <default_init_memmap+0x117>$/;"	l
c010364a	obj/kernel.asm	/^c010364a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010364d	obj/kernel.asm	/^c010364d:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103650	obj/kernel.asm	/^c0103650:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0103657	obj/kernel.asm	/^c0103657:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010365a	obj/kernel.asm	/^c010365a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010365d	obj/kernel.asm	/^c010365d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0103660	obj/kernel.asm	/^c0103660:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0103663	obj/kernel.asm	/^c0103663:	19 c0                	sbb    %eax,%eax$/;"	l
c0103665	obj/kernel.asm	/^c0103665:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103668	obj/kernel.asm	/^c0103668:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010366c	obj/kernel.asm	/^c010366c:	0f 95 c0             	setne  %al$/;"	l
c010366f	obj/kernel.asm	/^c010366f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0103672	obj/kernel.asm	/^c0103672:	85 c0                	test   %eax,%eax$/;"	l
c0103674	obj/kernel.asm	/^c0103674:	75 24                	jne    c010369a <default_init_memmap+0x8b>$/;"	l
c0103676	obj/kernel.asm	/^c0103676:	c7 44 24 0c 41 60 11 	movl   $0xc0116041,0xc(%esp)$/;"	l
c010367d	obj/kernel.asm	/^c010367d:	c0 $/;"	l
c010367e	obj/kernel.asm	/^c010367e:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103685	obj/kernel.asm	/^c0103685:	c0 $/;"	l
c0103686	obj/kernel.asm	/^c0103686:	c7 44 24 04 49 00 00 	movl   $0x49,0x4(%esp)$/;"	l
c010368d	obj/kernel.asm	/^c010368d:	00 $/;"	l
c010368e	obj/kernel.asm	/^c010368e:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103695	obj/kernel.asm	/^c0103695:	e8 2e d8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010369a	obj/kernel.asm	/^c010369a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010369d	obj/kernel.asm	/^c010369d:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c01036a4	obj/kernel.asm	/^c01036a4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036a7	obj/kernel.asm	/^c01036a7:	83 c0 04             	add    $0x4,%eax$/;"	l
c01036aa	obj/kernel.asm	/^c01036aa:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
c01036b1	obj/kernel.asm	/^c01036b1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01036b4	obj/kernel.asm	/^c01036b4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01036b7	obj/kernel.asm	/^c01036b7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01036ba	obj/kernel.asm	/^c01036ba:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c01036bd	obj/kernel.asm	/^c01036bd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036c0	obj/kernel.asm	/^c01036c0:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01036c7	obj/kernel.asm	/^c01036c7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01036ce	obj/kernel.asm	/^c01036ce:	00 $/;"	l
c01036cf	obj/kernel.asm	/^c01036cf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036d2	obj/kernel.asm	/^c01036d2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01036d5	obj/kernel.asm	/^c01036d5:	e8 fb fe ff ff       	call   c01035d5 <set_page_ref>$/;"	l
c01036da	obj/kernel.asm	/^c01036da:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036dd	obj/kernel.asm	/^c01036dd:	83 c0 10             	add    $0x10,%eax$/;"	l
c01036e0	obj/kernel.asm	/^c01036e0:	c7 45 dc 14 40 15 c0 	movl   $0xc0154014,-0x24(%ebp)$/;"	l
c01036e7	obj/kernel.asm	/^c01036e7:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01036ea	obj/kernel.asm	/^c01036ea:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01036ed	obj/kernel.asm	/^c01036ed:	8b 00                	mov    (%eax),%eax$/;"	l
c01036ef	obj/kernel.asm	/^c01036ef:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01036f2	obj/kernel.asm	/^c01036f2:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01036f5	obj/kernel.asm	/^c01036f5:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01036f8	obj/kernel.asm	/^c01036f8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01036fb	obj/kernel.asm	/^c01036fb:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01036fe	obj/kernel.asm	/^c01036fe:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0103701	obj/kernel.asm	/^c0103701:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103704	obj/kernel.asm	/^c0103704:	89 10                	mov    %edx,(%eax)$/;"	l
c0103706	obj/kernel.asm	/^c0103706:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0103709	obj/kernel.asm	/^c0103709:	8b 10                	mov    (%eax),%edx$/;"	l
c010370b	obj/kernel.asm	/^c010370b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010370e	obj/kernel.asm	/^c010370e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0103711	obj/kernel.asm	/^c0103711:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0103714	obj/kernel.asm	/^c0103714:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0103717	obj/kernel.asm	/^c0103717:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010371a	obj/kernel.asm	/^c010371a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010371d	obj/kernel.asm	/^c010371d:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0103720	obj/kernel.asm	/^c0103720:	89 10                	mov    %edx,(%eax)$/;"	l
c0103722	obj/kernel.asm	/^c0103722:	83 45 f4 24          	addl   $0x24,-0xc(%ebp)$/;"	l
c0103726	obj/kernel.asm	/^c0103726:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0103729	obj/kernel.asm	/^c0103729:	89 d0                	mov    %edx,%eax$/;"	l
c010372b	obj/kernel.asm	/^c010372b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010372e	obj/kernel.asm	/^c010372e:	01 d0                	add    %edx,%eax$/;"	l
c0103730	obj/kernel.asm	/^c0103730:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103733	obj/kernel.asm	/^c0103733:	89 c2                	mov    %eax,%edx$/;"	l
c0103735	obj/kernel.asm	/^c0103735:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103738	obj/kernel.asm	/^c0103738:	01 d0                	add    %edx,%eax$/;"	l
c010373a	obj/kernel.asm	/^c010373a:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010373d	obj/kernel.asm	/^c010373d:	0f 85 07 ff ff ff    	jne    c010364a <default_init_memmap+0x3b>$/;"	l
c0103743	obj/kernel.asm	/^c0103743:	8b 15 1c 40 15 c0    	mov    0xc015401c,%edx$/;"	l
c0103749	obj/kernel.asm	/^c0103749:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010374c	obj/kernel.asm	/^c010374c:	01 d0                	add    %edx,%eax$/;"	l
c010374e	obj/kernel.asm	/^c010374e:	a3 1c 40 15 c0       	mov    %eax,0xc015401c$/;"	l
c0103753	obj/kernel.asm	/^c0103753:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103756	obj/kernel.asm	/^c0103756:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0103759	obj/kernel.asm	/^c0103759:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010375c	obj/kernel.asm	/^c010375c:	c9                   	leave  $/;"	l
c010375d	obj/kernel.asm	/^c010375d:	c3                   	ret    $/;"	l
c010375e	obj/kernel.asm	/^c010375e <default_alloc_pages>:$/;"	l
c010375e	obj/kernel.asm	/^c010375e:	55                   	push   %ebp$/;"	l
c010375f	obj/kernel.asm	/^c010375f:	89 e5                	mov    %esp,%ebp$/;"	l
c0103761	obj/kernel.asm	/^c0103761:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0103764	obj/kernel.asm	/^c0103764:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0103768	obj/kernel.asm	/^c0103768:	75 24                	jne    c010378e <default_alloc_pages+0x30>$/;"	l
c010376a	obj/kernel.asm	/^c010376a:	c7 44 24 0c 10 60 11 	movl   $0xc0116010,0xc(%esp)$/;"	l
c0103771	obj/kernel.asm	/^c0103771:	c0 $/;"	l
c0103772	obj/kernel.asm	/^c0103772:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103779	obj/kernel.asm	/^c0103779:	c0 $/;"	l
c010377a	obj/kernel.asm	/^c010377a:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
c0103781	obj/kernel.asm	/^c0103781:	00 $/;"	l
c0103782	obj/kernel.asm	/^c0103782:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103789	obj/kernel.asm	/^c0103789:	e8 3a d7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010378e	obj/kernel.asm	/^c010378e:	a1 1c 40 15 c0       	mov    0xc015401c,%eax$/;"	l
c0103793	obj/kernel.asm	/^c0103793:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0103796	obj/kernel.asm	/^c0103796:	73 0a                	jae    c01037a2 <default_alloc_pages+0x44>$/;"	l
c0103798	obj/kernel.asm	/^c0103798:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010379d	obj/kernel.asm	/^c010379d:	e9 37 01 00 00       	jmp    c01038d9 <default_alloc_pages+0x17b>$/;"	l
c01037a2	obj/kernel.asm	/^c01037a2:	c7 45 f4 14 40 15 c0 	movl   $0xc0154014,-0xc(%ebp)$/;"	l
c01037a9	obj/kernel.asm	/^c01037a9:	e9 0a 01 00 00       	jmp    c01038b8 <default_alloc_pages+0x15a>$/;"	l
c01037ae	obj/kernel.asm	/^c01037ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01037b1	obj/kernel.asm	/^c01037b1:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01037b4	obj/kernel.asm	/^c01037b4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01037b7	obj/kernel.asm	/^c01037b7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01037ba	obj/kernel.asm	/^c01037ba:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01037bd	obj/kernel.asm	/^c01037bd:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01037c0	obj/kernel.asm	/^c01037c0:	0f 82 f2 00 00 00    	jb     c01038b8 <default_alloc_pages+0x15a>$/;"	l
c01037c6	obj/kernel.asm	/^c01037c6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01037cd	obj/kernel.asm	/^c01037cd:	eb 7c                	jmp    c010384b <default_alloc_pages+0xed>$/;"	l
c01037cf	obj/kernel.asm	/^c01037cf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01037d2	obj/kernel.asm	/^c01037d2:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01037d5	obj/kernel.asm	/^c01037d5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01037d8	obj/kernel.asm	/^c01037d8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01037db	obj/kernel.asm	/^c01037db:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01037de	obj/kernel.asm	/^c01037de:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01037e1	obj/kernel.asm	/^c01037e1:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01037e4	obj/kernel.asm	/^c01037e4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01037e7	obj/kernel.asm	/^c01037e7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01037ea	obj/kernel.asm	/^c01037ea:	83 c0 04             	add    $0x4,%eax$/;"	l
c01037ed	obj/kernel.asm	/^c01037ed:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01037f4	obj/kernel.asm	/^c01037f4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01037f7	obj/kernel.asm	/^c01037f7:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01037fa	obj/kernel.asm	/^c01037fa:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01037fd	obj/kernel.asm	/^c01037fd:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0103800	obj/kernel.asm	/^c0103800:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0103803	obj/kernel.asm	/^c0103803:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103806	obj/kernel.asm	/^c0103806:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)$/;"	l
c010380d	obj/kernel.asm	/^c010380d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103810	obj/kernel.asm	/^c0103810:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103813	obj/kernel.asm	/^c0103813:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103816	obj/kernel.asm	/^c0103816:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0103819	obj/kernel.asm	/^c0103819:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010381c	obj/kernel.asm	/^c010381c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010381f	obj/kernel.asm	/^c010381f:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0103822	obj/kernel.asm	/^c0103822:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103825	obj/kernel.asm	/^c0103825:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0103828	obj/kernel.asm	/^c0103828:	8b 12                	mov    (%edx),%edx$/;"	l
c010382a	obj/kernel.asm	/^c010382a:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c010382d	obj/kernel.asm	/^c010382d:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0103830	obj/kernel.asm	/^c0103830:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0103833	obj/kernel.asm	/^c0103833:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0103836	obj/kernel.asm	/^c0103836:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0103839	obj/kernel.asm	/^c0103839:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010383c	obj/kernel.asm	/^c010383c:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c010383f	obj/kernel.asm	/^c010383f:	89 10                	mov    %edx,(%eax)$/;"	l
c0103841	obj/kernel.asm	/^c0103841:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0103844	obj/kernel.asm	/^c0103844:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103847	obj/kernel.asm	/^c0103847:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c010384b	obj/kernel.asm	/^c010384b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010384e	obj/kernel.asm	/^c010384e:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0103851	obj/kernel.asm	/^c0103851:	0f 82 78 ff ff ff    	jb     c01037cf <default_alloc_pages+0x71>$/;"	l
c0103857	obj/kernel.asm	/^c0103857:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010385a	obj/kernel.asm	/^c010385a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010385d	obj/kernel.asm	/^c010385d:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0103860	obj/kernel.asm	/^c0103860:	76 12                	jbe    c0103874 <default_alloc_pages+0x116>$/;"	l
c0103862	obj/kernel.asm	/^c0103862:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103865	obj/kernel.asm	/^c0103865:	8d 50 f0             	lea    -0x10(%eax),%edx$/;"	l
c0103868	obj/kernel.asm	/^c0103868:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010386b	obj/kernel.asm	/^c010386b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010386e	obj/kernel.asm	/^c010386e:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c0103871	obj/kernel.asm	/^c0103871:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c0103874	obj/kernel.asm	/^c0103874:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103877	obj/kernel.asm	/^c0103877:	83 c0 04             	add    $0x4,%eax$/;"	l
c010387a	obj/kernel.asm	/^c010387a:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c0103881	obj/kernel.asm	/^c0103881:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0103884	obj/kernel.asm	/^c0103884:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0103887	obj/kernel.asm	/^c0103887:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c010388a	obj/kernel.asm	/^c010388a:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c010388d	obj/kernel.asm	/^c010388d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103890	obj/kernel.asm	/^c0103890:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103893	obj/kernel.asm	/^c0103893:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)$/;"	l
c010389a	obj/kernel.asm	/^c010389a:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010389d	obj/kernel.asm	/^c010389d:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c01038a0	obj/kernel.asm	/^c01038a0:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c01038a3	obj/kernel.asm	/^c01038a3:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c01038a6	obj/kernel.asm	/^c01038a6:	a1 1c 40 15 c0       	mov    0xc015401c,%eax$/;"	l
c01038ab	obj/kernel.asm	/^c01038ab:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c01038ae	obj/kernel.asm	/^c01038ae:	a3 1c 40 15 c0       	mov    %eax,0xc015401c$/;"	l
c01038b3	obj/kernel.asm	/^c01038b3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01038b6	obj/kernel.asm	/^c01038b6:	eb 21                	jmp    c01038d9 <default_alloc_pages+0x17b>$/;"	l
c01038b8	obj/kernel.asm	/^c01038b8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01038bb	obj/kernel.asm	/^c01038bb:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c01038be	obj/kernel.asm	/^c01038be:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c01038c1	obj/kernel.asm	/^c01038c1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01038c4	obj/kernel.asm	/^c01038c4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01038c7	obj/kernel.asm	/^c01038c7:	81 7d f4 14 40 15 c0 	cmpl   $0xc0154014,-0xc(%ebp)$/;"	l
c01038ce	obj/kernel.asm	/^c01038ce:	0f 85 da fe ff ff    	jne    c01037ae <default_alloc_pages+0x50>$/;"	l
c01038d4	obj/kernel.asm	/^c01038d4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01038d9	obj/kernel.asm	/^c01038d9:	c9                   	leave  $/;"	l
c01038da	obj/kernel.asm	/^c01038da:	c3                   	ret    $/;"	l
c01038db	obj/kernel.asm	/^c01038db <default_free_pages>:$/;"	l
c01038db	obj/kernel.asm	/^c01038db:	55                   	push   %ebp$/;"	l
c01038dc	obj/kernel.asm	/^c01038dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01038de	obj/kernel.asm	/^c01038de:	83 ec 68             	sub    $0x68,%esp$/;"	l
c01038e1	obj/kernel.asm	/^c01038e1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01038e5	obj/kernel.asm	/^c01038e5:	75 24                	jne    c010390b <default_free_pages+0x30>$/;"	l
c01038e7	obj/kernel.asm	/^c01038e7:	c7 44 24 0c 10 60 11 	movl   $0xc0116010,0xc(%esp)$/;"	l
c01038ee	obj/kernel.asm	/^c01038ee:	c0 $/;"	l
c01038ef	obj/kernel.asm	/^c01038ef:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c01038f6	obj/kernel.asm	/^c01038f6:	c0 $/;"	l
c01038f7	obj/kernel.asm	/^c01038f7:	c7 44 24 04 78 00 00 	movl   $0x78,0x4(%esp)$/;"	l
c01038fe	obj/kernel.asm	/^c01038fe:	00 $/;"	l
c01038ff	obj/kernel.asm	/^c01038ff:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103906	obj/kernel.asm	/^c0103906:	e8 bd d5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010390b	obj/kernel.asm	/^c010390b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010390e	obj/kernel.asm	/^c010390e:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103911	obj/kernel.asm	/^c0103911:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0103918	obj/kernel.asm	/^c0103918:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010391b	obj/kernel.asm	/^c010391b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010391e	obj/kernel.asm	/^c010391e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0103921	obj/kernel.asm	/^c0103921:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0103924	obj/kernel.asm	/^c0103924:	19 c0                	sbb    %eax,%eax$/;"	l
c0103926	obj/kernel.asm	/^c0103926:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0103929	obj/kernel.asm	/^c0103929:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010392d	obj/kernel.asm	/^c010392d:	0f 95 c0             	setne  %al$/;"	l
c0103930	obj/kernel.asm	/^c0103930:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0103933	obj/kernel.asm	/^c0103933:	85 c0                	test   %eax,%eax$/;"	l
c0103935	obj/kernel.asm	/^c0103935:	75 24                	jne    c010395b <default_free_pages+0x80>$/;"	l
c0103937	obj/kernel.asm	/^c0103937:	c7 44 24 0c 51 60 11 	movl   $0xc0116051,0xc(%esp)$/;"	l
c010393e	obj/kernel.asm	/^c010393e:	c0 $/;"	l
c010393f	obj/kernel.asm	/^c010393f:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103946	obj/kernel.asm	/^c0103946:	c0 $/;"	l
c0103947	obj/kernel.asm	/^c0103947:	c7 44 24 04 79 00 00 	movl   $0x79,0x4(%esp)$/;"	l
c010394e	obj/kernel.asm	/^c010394e:	00 $/;"	l
c010394f	obj/kernel.asm	/^c010394f:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103956	obj/kernel.asm	/^c0103956:	e8 6d d5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010395b	obj/kernel.asm	/^c010395b:	c7 45 f4 14 40 15 c0 	movl   $0xc0154014,-0xc(%ebp)$/;"	l
c0103962	obj/kernel.asm	/^c0103962:	eb 13                	jmp    c0103977 <default_free_pages+0x9c>$/;"	l
c0103964	obj/kernel.asm	/^c0103964:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103967	obj/kernel.asm	/^c0103967:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010396a	obj/kernel.asm	/^c010396a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010396d	obj/kernel.asm	/^c010396d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103970	obj/kernel.asm	/^c0103970:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0103973	obj/kernel.asm	/^c0103973:	76 02                	jbe    c0103977 <default_free_pages+0x9c>$/;"	l
c0103975	obj/kernel.asm	/^c0103975:	eb 18                	jmp    c010398f <default_free_pages+0xb4>$/;"	l
c0103977	obj/kernel.asm	/^c0103977:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010397a	obj/kernel.asm	/^c010397a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010397d	obj/kernel.asm	/^c010397d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103980	obj/kernel.asm	/^c0103980:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103983	obj/kernel.asm	/^c0103983:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103986	obj/kernel.asm	/^c0103986:	81 7d f4 14 40 15 c0 	cmpl   $0xc0154014,-0xc(%ebp)$/;"	l
c010398d	obj/kernel.asm	/^c010398d:	75 d5                	jne    c0103964 <default_free_pages+0x89>$/;"	l
c010398f	obj/kernel.asm	/^c010398f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103992	obj/kernel.asm	/^c0103992:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103995	obj/kernel.asm	/^c0103995:	eb 4b                	jmp    c01039e2 <default_free_pages+0x107>$/;"	l
c0103997	obj/kernel.asm	/^c0103997:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010399a	obj/kernel.asm	/^c010399a:	8d 50 10             	lea    0x10(%eax),%edx$/;"	l
c010399d	obj/kernel.asm	/^c010399d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01039a0	obj/kernel.asm	/^c01039a0:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01039a3	obj/kernel.asm	/^c01039a3:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c01039a6	obj/kernel.asm	/^c01039a6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01039a9	obj/kernel.asm	/^c01039a9:	8b 00                	mov    (%eax),%eax$/;"	l
c01039ab	obj/kernel.asm	/^c01039ab:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01039ae	obj/kernel.asm	/^c01039ae:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01039b1	obj/kernel.asm	/^c01039b1:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01039b4	obj/kernel.asm	/^c01039b4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01039b7	obj/kernel.asm	/^c01039b7:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01039ba	obj/kernel.asm	/^c01039ba:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01039bd	obj/kernel.asm	/^c01039bd:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01039c0	obj/kernel.asm	/^c01039c0:	89 10                	mov    %edx,(%eax)$/;"	l
c01039c2	obj/kernel.asm	/^c01039c2:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01039c5	obj/kernel.asm	/^c01039c5:	8b 10                	mov    (%eax),%edx$/;"	l
c01039c7	obj/kernel.asm	/^c01039c7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01039ca	obj/kernel.asm	/^c01039ca:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01039cd	obj/kernel.asm	/^c01039cd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01039d0	obj/kernel.asm	/^c01039d0:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01039d3	obj/kernel.asm	/^c01039d3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01039d6	obj/kernel.asm	/^c01039d6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01039d9	obj/kernel.asm	/^c01039d9:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01039dc	obj/kernel.asm	/^c01039dc:	89 10                	mov    %edx,(%eax)$/;"	l
c01039de	obj/kernel.asm	/^c01039de:	83 45 f0 24          	addl   $0x24,-0x10(%ebp)$/;"	l
c01039e2	obj/kernel.asm	/^c01039e2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01039e5	obj/kernel.asm	/^c01039e5:	89 d0                	mov    %edx,%eax$/;"	l
c01039e7	obj/kernel.asm	/^c01039e7:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01039ea	obj/kernel.asm	/^c01039ea:	01 d0                	add    %edx,%eax$/;"	l
c01039ec	obj/kernel.asm	/^c01039ec:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01039ef	obj/kernel.asm	/^c01039ef:	89 c2                	mov    %eax,%edx$/;"	l
c01039f1	obj/kernel.asm	/^c01039f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01039f4	obj/kernel.asm	/^c01039f4:	01 d0                	add    %edx,%eax$/;"	l
c01039f6	obj/kernel.asm	/^c01039f6:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01039f9	obj/kernel.asm	/^c01039f9:	77 9c                	ja     c0103997 <default_free_pages+0xbc>$/;"	l
c01039fb	obj/kernel.asm	/^c01039fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01039fe	obj/kernel.asm	/^c01039fe:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0103a05	obj/kernel.asm	/^c0103a05:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0103a0c	obj/kernel.asm	/^c0103a0c:	00 $/;"	l
c0103a0d	obj/kernel.asm	/^c0103a0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a10	obj/kernel.asm	/^c0103a10:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103a13	obj/kernel.asm	/^c0103a13:	e8 bd fb ff ff       	call   c01035d5 <set_page_ref>$/;"	l
c0103a18	obj/kernel.asm	/^c0103a18:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a1b	obj/kernel.asm	/^c0103a1b:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103a1e	obj/kernel.asm	/^c0103a1e:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)$/;"	l
c0103a25	obj/kernel.asm	/^c0103a25:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0103a28	obj/kernel.asm	/^c0103a28:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0103a2b	obj/kernel.asm	/^c0103a2b:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c0103a2e	obj/kernel.asm	/^c0103a2e:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0103a31	obj/kernel.asm	/^c0103a31:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a34	obj/kernel.asm	/^c0103a34:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103a37	obj/kernel.asm	/^c0103a37:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c0103a3e	obj/kernel.asm	/^c0103a3e:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0103a41	obj/kernel.asm	/^c0103a41:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0103a44	obj/kernel.asm	/^c0103a44:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0103a47	obj/kernel.asm	/^c0103a47:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0103a4a	obj/kernel.asm	/^c0103a4a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a4d	obj/kernel.asm	/^c0103a4d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0103a50	obj/kernel.asm	/^c0103a50:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0103a53	obj/kernel.asm	/^c0103a53:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103a56	obj/kernel.asm	/^c0103a56:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0103a59	obj/kernel.asm	/^c0103a59:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103a5c	obj/kernel.asm	/^c0103a5c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0103a5f	obj/kernel.asm	/^c0103a5f:	89 d0                	mov    %edx,%eax$/;"	l
c0103a61	obj/kernel.asm	/^c0103a61:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0103a64	obj/kernel.asm	/^c0103a64:	01 d0                	add    %edx,%eax$/;"	l
c0103a66	obj/kernel.asm	/^c0103a66:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a69	obj/kernel.asm	/^c0103a69:	89 c2                	mov    %eax,%edx$/;"	l
c0103a6b	obj/kernel.asm	/^c0103a6b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a6e	obj/kernel.asm	/^c0103a6e:	01 d0                	add    %edx,%eax$/;"	l
c0103a70	obj/kernel.asm	/^c0103a70:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0103a73	obj/kernel.asm	/^c0103a73:	75 1e                	jne    c0103a93 <default_free_pages+0x1b8>$/;"	l
c0103a75	obj/kernel.asm	/^c0103a75:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a78	obj/kernel.asm	/^c0103a78:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103a7b	obj/kernel.asm	/^c0103a7b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103a7e	obj/kernel.asm	/^c0103a7e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0103a81	obj/kernel.asm	/^c0103a81:	01 c2                	add    %eax,%edx$/;"	l
c0103a83	obj/kernel.asm	/^c0103a83:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a86	obj/kernel.asm	/^c0103a86:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0103a89	obj/kernel.asm	/^c0103a89:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103a8c	obj/kernel.asm	/^c0103a8c:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0103a93	obj/kernel.asm	/^c0103a93:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a96	obj/kernel.asm	/^c0103a96:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103a99	obj/kernel.asm	/^c0103a99:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0103a9c	obj/kernel.asm	/^c0103a9c:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0103a9f	obj/kernel.asm	/^c0103a9f:	8b 00                	mov    (%eax),%eax$/;"	l
c0103aa1	obj/kernel.asm	/^c0103aa1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103aa4	obj/kernel.asm	/^c0103aa4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103aa7	obj/kernel.asm	/^c0103aa7:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0103aaa	obj/kernel.asm	/^c0103aaa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103aad	obj/kernel.asm	/^c0103aad:	81 7d f4 14 40 15 c0 	cmpl   $0xc0154014,-0xc(%ebp)$/;"	l
c0103ab4	obj/kernel.asm	/^c0103ab4:	74 57                	je     c0103b0d <default_free_pages+0x232>$/;"	l
c0103ab6	obj/kernel.asm	/^c0103ab6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103ab9	obj/kernel.asm	/^c0103ab9:	83 e8 24             	sub    $0x24,%eax$/;"	l
c0103abc	obj/kernel.asm	/^c0103abc:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0103abf	obj/kernel.asm	/^c0103abf:	75 4c                	jne    c0103b0d <default_free_pages+0x232>$/;"	l
c0103ac1	obj/kernel.asm	/^c0103ac1:	eb 41                	jmp    c0103b04 <default_free_pages+0x229>$/;"	l
c0103ac3	obj/kernel.asm	/^c0103ac3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103ac6	obj/kernel.asm	/^c0103ac6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0103ac9	obj/kernel.asm	/^c0103ac9:	85 c0                	test   %eax,%eax$/;"	l
c0103acb	obj/kernel.asm	/^c0103acb:	74 20                	je     c0103aed <default_free_pages+0x212>$/;"	l
c0103acd	obj/kernel.asm	/^c0103acd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103ad0	obj/kernel.asm	/^c0103ad0:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103ad3	obj/kernel.asm	/^c0103ad3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103ad6	obj/kernel.asm	/^c0103ad6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0103ad9	obj/kernel.asm	/^c0103ad9:	01 c2                	add    %eax,%edx$/;"	l
c0103adb	obj/kernel.asm	/^c0103adb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103ade	obj/kernel.asm	/^c0103ade:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0103ae1	obj/kernel.asm	/^c0103ae1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103ae4	obj/kernel.asm	/^c0103ae4:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0103aeb	obj/kernel.asm	/^c0103aeb:	eb 20                	jmp    c0103b0d <default_free_pages+0x232>$/;"	l
c0103aed	obj/kernel.asm	/^c0103aed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103af0	obj/kernel.asm	/^c0103af0:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0103af3	obj/kernel.asm	/^c0103af3:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0103af6	obj/kernel.asm	/^c0103af6:	8b 00                	mov    (%eax),%eax$/;"	l
c0103af8	obj/kernel.asm	/^c0103af8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103afb	obj/kernel.asm	/^c0103afb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103afe	obj/kernel.asm	/^c0103afe:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0103b01	obj/kernel.asm	/^c0103b01:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103b04	obj/kernel.asm	/^c0103b04:	81 7d f4 14 40 15 c0 	cmpl   $0xc0154014,-0xc(%ebp)$/;"	l
c0103b0b	obj/kernel.asm	/^c0103b0b:	75 b6                	jne    c0103ac3 <default_free_pages+0x1e8>$/;"	l
c0103b0d	obj/kernel.asm	/^c0103b0d:	8b 15 1c 40 15 c0    	mov    0xc015401c,%edx$/;"	l
c0103b13	obj/kernel.asm	/^c0103b13:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103b16	obj/kernel.asm	/^c0103b16:	01 d0                	add    %edx,%eax$/;"	l
c0103b18	obj/kernel.asm	/^c0103b18:	a3 1c 40 15 c0       	mov    %eax,0xc015401c$/;"	l
c0103b1d	obj/kernel.asm	/^c0103b1d:	90                   	nop$/;"	l
c0103b1e	obj/kernel.asm	/^c0103b1e:	c9                   	leave  $/;"	l
c0103b1f	obj/kernel.asm	/^c0103b1f:	c3                   	ret    $/;"	l
c0103b20	obj/kernel.asm	/^c0103b20 <default_nr_free_pages>:$/;"	l
c0103b20	obj/kernel.asm	/^c0103b20:	55                   	push   %ebp$/;"	l
c0103b21	obj/kernel.asm	/^c0103b21:	89 e5                	mov    %esp,%ebp$/;"	l
c0103b23	obj/kernel.asm	/^c0103b23:	a1 1c 40 15 c0       	mov    0xc015401c,%eax$/;"	l
c0103b28	obj/kernel.asm	/^c0103b28:	5d                   	pop    %ebp$/;"	l
c0103b29	obj/kernel.asm	/^c0103b29:	c3                   	ret    $/;"	l
c0103b2a	obj/kernel.asm	/^c0103b2a <basic_check>:$/;"	l
c0103b2a	obj/kernel.asm	/^c0103b2a:	55                   	push   %ebp$/;"	l
c0103b2b	obj/kernel.asm	/^c0103b2b:	89 e5                	mov    %esp,%ebp$/;"	l
c0103b2d	obj/kernel.asm	/^c0103b2d:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0103b30	obj/kernel.asm	/^c0103b30:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0103b37	obj/kernel.asm	/^c0103b37:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103b3a	obj/kernel.asm	/^c0103b3a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103b3d	obj/kernel.asm	/^c0103b3d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103b40	obj/kernel.asm	/^c0103b40:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103b43	obj/kernel.asm	/^c0103b43:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103b4a	obj/kernel.asm	/^c0103b4a:	e8 15 16 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0103b4f	obj/kernel.asm	/^c0103b4f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103b52	obj/kernel.asm	/^c0103b52:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0103b56	obj/kernel.asm	/^c0103b56:	75 24                	jne    c0103b7c <basic_check+0x52>$/;"	l
c0103b58	obj/kernel.asm	/^c0103b58:	c7 44 24 0c 64 60 11 	movl   $0xc0116064,0xc(%esp)$/;"	l
c0103b5f	obj/kernel.asm	/^c0103b5f:	c0 $/;"	l
c0103b60	obj/kernel.asm	/^c0103b60:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103b67	obj/kernel.asm	/^c0103b67:	c0 $/;"	l
c0103b68	obj/kernel.asm	/^c0103b68:	c7 44 24 04 ad 00 00 	movl   $0xad,0x4(%esp)$/;"	l
c0103b6f	obj/kernel.asm	/^c0103b6f:	00 $/;"	l
c0103b70	obj/kernel.asm	/^c0103b70:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103b77	obj/kernel.asm	/^c0103b77:	e8 4c d3 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103b7c	obj/kernel.asm	/^c0103b7c:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103b83	obj/kernel.asm	/^c0103b83:	e8 dc 15 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0103b88	obj/kernel.asm	/^c0103b88:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103b8b	obj/kernel.asm	/^c0103b8b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0103b8f	obj/kernel.asm	/^c0103b8f:	75 24                	jne    c0103bb5 <basic_check+0x8b>$/;"	l
c0103b91	obj/kernel.asm	/^c0103b91:	c7 44 24 0c 80 60 11 	movl   $0xc0116080,0xc(%esp)$/;"	l
c0103b98	obj/kernel.asm	/^c0103b98:	c0 $/;"	l
c0103b99	obj/kernel.asm	/^c0103b99:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103ba0	obj/kernel.asm	/^c0103ba0:	c0 $/;"	l
c0103ba1	obj/kernel.asm	/^c0103ba1:	c7 44 24 04 ae 00 00 	movl   $0xae,0x4(%esp)$/;"	l
c0103ba8	obj/kernel.asm	/^c0103ba8:	00 $/;"	l
c0103ba9	obj/kernel.asm	/^c0103ba9:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103bb0	obj/kernel.asm	/^c0103bb0:	e8 13 d3 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103bb5	obj/kernel.asm	/^c0103bb5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103bbc	obj/kernel.asm	/^c0103bbc:	e8 a3 15 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0103bc1	obj/kernel.asm	/^c0103bc1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103bc4	obj/kernel.asm	/^c0103bc4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103bc8	obj/kernel.asm	/^c0103bc8:	75 24                	jne    c0103bee <basic_check+0xc4>$/;"	l
c0103bca	obj/kernel.asm	/^c0103bca:	c7 44 24 0c 9c 60 11 	movl   $0xc011609c,0xc(%esp)$/;"	l
c0103bd1	obj/kernel.asm	/^c0103bd1:	c0 $/;"	l
c0103bd2	obj/kernel.asm	/^c0103bd2:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103bd9	obj/kernel.asm	/^c0103bd9:	c0 $/;"	l
c0103bda	obj/kernel.asm	/^c0103bda:	c7 44 24 04 af 00 00 	movl   $0xaf,0x4(%esp)$/;"	l
c0103be1	obj/kernel.asm	/^c0103be1:	00 $/;"	l
c0103be2	obj/kernel.asm	/^c0103be2:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103be9	obj/kernel.asm	/^c0103be9:	e8 da d2 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103bee	obj/kernel.asm	/^c0103bee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103bf1	obj/kernel.asm	/^c0103bf1:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0103bf4	obj/kernel.asm	/^c0103bf4:	74 10                	je     c0103c06 <basic_check+0xdc>$/;"	l
c0103bf6	obj/kernel.asm	/^c0103bf6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103bf9	obj/kernel.asm	/^c0103bf9:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0103bfc	obj/kernel.asm	/^c0103bfc:	74 08                	je     c0103c06 <basic_check+0xdc>$/;"	l
c0103bfe	obj/kernel.asm	/^c0103bfe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103c01	obj/kernel.asm	/^c0103c01:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0103c04	obj/kernel.asm	/^c0103c04:	75 24                	jne    c0103c2a <basic_check+0x100>$/;"	l
c0103c06	obj/kernel.asm	/^c0103c06:	c7 44 24 0c b8 60 11 	movl   $0xc01160b8,0xc(%esp)$/;"	l
c0103c0d	obj/kernel.asm	/^c0103c0d:	c0 $/;"	l
c0103c0e	obj/kernel.asm	/^c0103c0e:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103c15	obj/kernel.asm	/^c0103c15:	c0 $/;"	l
c0103c16	obj/kernel.asm	/^c0103c16:	c7 44 24 04 b1 00 00 	movl   $0xb1,0x4(%esp)$/;"	l
c0103c1d	obj/kernel.asm	/^c0103c1d:	00 $/;"	l
c0103c1e	obj/kernel.asm	/^c0103c1e:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103c25	obj/kernel.asm	/^c0103c25:	e8 9e d2 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103c2a	obj/kernel.asm	/^c0103c2a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103c2d	obj/kernel.asm	/^c0103c2d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103c30	obj/kernel.asm	/^c0103c30:	e8 96 f9 ff ff       	call   c01035cb <page_ref>$/;"	l
c0103c35	obj/kernel.asm	/^c0103c35:	85 c0                	test   %eax,%eax$/;"	l
c0103c37	obj/kernel.asm	/^c0103c37:	75 1e                	jne    c0103c57 <basic_check+0x12d>$/;"	l
c0103c39	obj/kernel.asm	/^c0103c39:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103c3c	obj/kernel.asm	/^c0103c3c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103c3f	obj/kernel.asm	/^c0103c3f:	e8 87 f9 ff ff       	call   c01035cb <page_ref>$/;"	l
c0103c44	obj/kernel.asm	/^c0103c44:	85 c0                	test   %eax,%eax$/;"	l
c0103c46	obj/kernel.asm	/^c0103c46:	75 0f                	jne    c0103c57 <basic_check+0x12d>$/;"	l
c0103c48	obj/kernel.asm	/^c0103c48:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103c4b	obj/kernel.asm	/^c0103c4b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103c4e	obj/kernel.asm	/^c0103c4e:	e8 78 f9 ff ff       	call   c01035cb <page_ref>$/;"	l
c0103c53	obj/kernel.asm	/^c0103c53:	85 c0                	test   %eax,%eax$/;"	l
c0103c55	obj/kernel.asm	/^c0103c55:	74 24                	je     c0103c7b <basic_check+0x151>$/;"	l
c0103c57	obj/kernel.asm	/^c0103c57:	c7 44 24 0c dc 60 11 	movl   $0xc01160dc,0xc(%esp)$/;"	l
c0103c5e	obj/kernel.asm	/^c0103c5e:	c0 $/;"	l
c0103c5f	obj/kernel.asm	/^c0103c5f:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103c66	obj/kernel.asm	/^c0103c66:	c0 $/;"	l
c0103c67	obj/kernel.asm	/^c0103c67:	c7 44 24 04 b2 00 00 	movl   $0xb2,0x4(%esp)$/;"	l
c0103c6e	obj/kernel.asm	/^c0103c6e:	00 $/;"	l
c0103c6f	obj/kernel.asm	/^c0103c6f:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103c76	obj/kernel.asm	/^c0103c76:	e8 4d d2 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103c7b	obj/kernel.asm	/^c0103c7b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103c7e	obj/kernel.asm	/^c0103c7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103c81	obj/kernel.asm	/^c0103c81:	e8 2f f9 ff ff       	call   c01035b5 <page2pa>$/;"	l
c0103c86	obj/kernel.asm	/^c0103c86:	8b 15 80 0e 15 c0    	mov    0xc0150e80,%edx$/;"	l
c0103c8c	obj/kernel.asm	/^c0103c8c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0103c8f	obj/kernel.asm	/^c0103c8f:	39 d0                	cmp    %edx,%eax$/;"	l
c0103c91	obj/kernel.asm	/^c0103c91:	72 24                	jb     c0103cb7 <basic_check+0x18d>$/;"	l
c0103c93	obj/kernel.asm	/^c0103c93:	c7 44 24 0c 18 61 11 	movl   $0xc0116118,0xc(%esp)$/;"	l
c0103c9a	obj/kernel.asm	/^c0103c9a:	c0 $/;"	l
c0103c9b	obj/kernel.asm	/^c0103c9b:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103ca2	obj/kernel.asm	/^c0103ca2:	c0 $/;"	l
c0103ca3	obj/kernel.asm	/^c0103ca3:	c7 44 24 04 b4 00 00 	movl   $0xb4,0x4(%esp)$/;"	l
c0103caa	obj/kernel.asm	/^c0103caa:	00 $/;"	l
c0103cab	obj/kernel.asm	/^c0103cab:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103cb2	obj/kernel.asm	/^c0103cb2:	e8 11 d2 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103cb7	obj/kernel.asm	/^c0103cb7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103cba	obj/kernel.asm	/^c0103cba:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103cbd	obj/kernel.asm	/^c0103cbd:	e8 f3 f8 ff ff       	call   c01035b5 <page2pa>$/;"	l
c0103cc2	obj/kernel.asm	/^c0103cc2:	8b 15 80 0e 15 c0    	mov    0xc0150e80,%edx$/;"	l
c0103cc8	obj/kernel.asm	/^c0103cc8:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0103ccb	obj/kernel.asm	/^c0103ccb:	39 d0                	cmp    %edx,%eax$/;"	l
c0103ccd	obj/kernel.asm	/^c0103ccd:	72 24                	jb     c0103cf3 <basic_check+0x1c9>$/;"	l
c0103ccf	obj/kernel.asm	/^c0103ccf:	c7 44 24 0c 35 61 11 	movl   $0xc0116135,0xc(%esp)$/;"	l
c0103cd6	obj/kernel.asm	/^c0103cd6:	c0 $/;"	l
c0103cd7	obj/kernel.asm	/^c0103cd7:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103cde	obj/kernel.asm	/^c0103cde:	c0 $/;"	l
c0103cdf	obj/kernel.asm	/^c0103cdf:	c7 44 24 04 b5 00 00 	movl   $0xb5,0x4(%esp)$/;"	l
c0103ce6	obj/kernel.asm	/^c0103ce6:	00 $/;"	l
c0103ce7	obj/kernel.asm	/^c0103ce7:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103cee	obj/kernel.asm	/^c0103cee:	e8 d5 d1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103cf3	obj/kernel.asm	/^c0103cf3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103cf6	obj/kernel.asm	/^c0103cf6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103cf9	obj/kernel.asm	/^c0103cf9:	e8 b7 f8 ff ff       	call   c01035b5 <page2pa>$/;"	l
c0103cfe	obj/kernel.asm	/^c0103cfe:	8b 15 80 0e 15 c0    	mov    0xc0150e80,%edx$/;"	l
c0103d04	obj/kernel.asm	/^c0103d04:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0103d07	obj/kernel.asm	/^c0103d07:	39 d0                	cmp    %edx,%eax$/;"	l
c0103d09	obj/kernel.asm	/^c0103d09:	72 24                	jb     c0103d2f <basic_check+0x205>$/;"	l
c0103d0b	obj/kernel.asm	/^c0103d0b:	c7 44 24 0c 52 61 11 	movl   $0xc0116152,0xc(%esp)$/;"	l
c0103d12	obj/kernel.asm	/^c0103d12:	c0 $/;"	l
c0103d13	obj/kernel.asm	/^c0103d13:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103d1a	obj/kernel.asm	/^c0103d1a:	c0 $/;"	l
c0103d1b	obj/kernel.asm	/^c0103d1b:	c7 44 24 04 b6 00 00 	movl   $0xb6,0x4(%esp)$/;"	l
c0103d22	obj/kernel.asm	/^c0103d22:	00 $/;"	l
c0103d23	obj/kernel.asm	/^c0103d23:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103d2a	obj/kernel.asm	/^c0103d2a:	e8 99 d1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103d2f	obj/kernel.asm	/^c0103d2f:	a1 14 40 15 c0       	mov    0xc0154014,%eax$/;"	l
c0103d34	obj/kernel.asm	/^c0103d34:	8b 15 18 40 15 c0    	mov    0xc0154018,%edx$/;"	l
c0103d3a	obj/kernel.asm	/^c0103d3a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103d3d	obj/kernel.asm	/^c0103d3d:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103d40	obj/kernel.asm	/^c0103d40:	c7 45 e0 14 40 15 c0 	movl   $0xc0154014,-0x20(%ebp)$/;"	l
c0103d47	obj/kernel.asm	/^c0103d47:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103d4a	obj/kernel.asm	/^c0103d4a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0103d4d	obj/kernel.asm	/^c0103d4d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0103d50	obj/kernel.asm	/^c0103d50:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103d53	obj/kernel.asm	/^c0103d53:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0103d56	obj/kernel.asm	/^c0103d56:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103d59	obj/kernel.asm	/^c0103d59:	89 10                	mov    %edx,(%eax)$/;"	l
c0103d5b	obj/kernel.asm	/^c0103d5b:	c7 45 dc 14 40 15 c0 	movl   $0xc0154014,-0x24(%ebp)$/;"	l
c0103d62	obj/kernel.asm	/^c0103d62:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0103d65	obj/kernel.asm	/^c0103d65:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103d68	obj/kernel.asm	/^c0103d68:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c0103d6b	obj/kernel.asm	/^c0103d6b:	0f 94 c0             	sete   %al$/;"	l
c0103d6e	obj/kernel.asm	/^c0103d6e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0103d71	obj/kernel.asm	/^c0103d71:	85 c0                	test   %eax,%eax$/;"	l
c0103d73	obj/kernel.asm	/^c0103d73:	75 24                	jne    c0103d99 <basic_check+0x26f>$/;"	l
c0103d75	obj/kernel.asm	/^c0103d75:	c7 44 24 0c 6f 61 11 	movl   $0xc011616f,0xc(%esp)$/;"	l
c0103d7c	obj/kernel.asm	/^c0103d7c:	c0 $/;"	l
c0103d7d	obj/kernel.asm	/^c0103d7d:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103d84	obj/kernel.asm	/^c0103d84:	c0 $/;"	l
c0103d85	obj/kernel.asm	/^c0103d85:	c7 44 24 04 ba 00 00 	movl   $0xba,0x4(%esp)$/;"	l
c0103d8c	obj/kernel.asm	/^c0103d8c:	00 $/;"	l
c0103d8d	obj/kernel.asm	/^c0103d8d:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103d94	obj/kernel.asm	/^c0103d94:	e8 2f d1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103d99	obj/kernel.asm	/^c0103d99:	a1 1c 40 15 c0       	mov    0xc015401c,%eax$/;"	l
c0103d9e	obj/kernel.asm	/^c0103d9e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103da1	obj/kernel.asm	/^c0103da1:	c7 05 1c 40 15 c0 00 	movl   $0x0,0xc015401c$/;"	l
c0103da8	obj/kernel.asm	/^c0103da8:	00 00 00 $/;"	l
c0103dab	obj/kernel.asm	/^c0103dab:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103db2	obj/kernel.asm	/^c0103db2:	e8 ad 13 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0103db7	obj/kernel.asm	/^c0103db7:	85 c0                	test   %eax,%eax$/;"	l
c0103db9	obj/kernel.asm	/^c0103db9:	74 24                	je     c0103ddf <basic_check+0x2b5>$/;"	l
c0103dbb	obj/kernel.asm	/^c0103dbb:	c7 44 24 0c 86 61 11 	movl   $0xc0116186,0xc(%esp)$/;"	l
c0103dc2	obj/kernel.asm	/^c0103dc2:	c0 $/;"	l
c0103dc3	obj/kernel.asm	/^c0103dc3:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103dca	obj/kernel.asm	/^c0103dca:	c0 $/;"	l
c0103dcb	obj/kernel.asm	/^c0103dcb:	c7 44 24 04 bf 00 00 	movl   $0xbf,0x4(%esp)$/;"	l
c0103dd2	obj/kernel.asm	/^c0103dd2:	00 $/;"	l
c0103dd3	obj/kernel.asm	/^c0103dd3:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103dda	obj/kernel.asm	/^c0103dda:	e8 e9 d0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103ddf	obj/kernel.asm	/^c0103ddf:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103de6	obj/kernel.asm	/^c0103de6:	00 $/;"	l
c0103de7	obj/kernel.asm	/^c0103de7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103dea	obj/kernel.asm	/^c0103dea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103ded	obj/kernel.asm	/^c0103ded:	e8 dd 13 00 00       	call   c01051cf <free_pages>$/;"	l
c0103df2	obj/kernel.asm	/^c0103df2:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103df9	obj/kernel.asm	/^c0103df9:	00 $/;"	l
c0103dfa	obj/kernel.asm	/^c0103dfa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103dfd	obj/kernel.asm	/^c0103dfd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103e00	obj/kernel.asm	/^c0103e00:	e8 ca 13 00 00       	call   c01051cf <free_pages>$/;"	l
c0103e05	obj/kernel.asm	/^c0103e05:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103e0c	obj/kernel.asm	/^c0103e0c:	00 $/;"	l
c0103e0d	obj/kernel.asm	/^c0103e0d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103e10	obj/kernel.asm	/^c0103e10:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103e13	obj/kernel.asm	/^c0103e13:	e8 b7 13 00 00       	call   c01051cf <free_pages>$/;"	l
c0103e18	obj/kernel.asm	/^c0103e18:	a1 1c 40 15 c0       	mov    0xc015401c,%eax$/;"	l
c0103e1d	obj/kernel.asm	/^c0103e1d:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0103e20	obj/kernel.asm	/^c0103e20:	74 24                	je     c0103e46 <basic_check+0x31c>$/;"	l
c0103e22	obj/kernel.asm	/^c0103e22:	c7 44 24 0c 9b 61 11 	movl   $0xc011619b,0xc(%esp)$/;"	l
c0103e29	obj/kernel.asm	/^c0103e29:	c0 $/;"	l
c0103e2a	obj/kernel.asm	/^c0103e2a:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103e31	obj/kernel.asm	/^c0103e31:	c0 $/;"	l
c0103e32	obj/kernel.asm	/^c0103e32:	c7 44 24 04 c4 00 00 	movl   $0xc4,0x4(%esp)$/;"	l
c0103e39	obj/kernel.asm	/^c0103e39:	00 $/;"	l
c0103e3a	obj/kernel.asm	/^c0103e3a:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103e41	obj/kernel.asm	/^c0103e41:	e8 82 d0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103e46	obj/kernel.asm	/^c0103e46:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103e4d	obj/kernel.asm	/^c0103e4d:	e8 12 13 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0103e52	obj/kernel.asm	/^c0103e52:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103e55	obj/kernel.asm	/^c0103e55:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0103e59	obj/kernel.asm	/^c0103e59:	75 24                	jne    c0103e7f <basic_check+0x355>$/;"	l
c0103e5b	obj/kernel.asm	/^c0103e5b:	c7 44 24 0c 64 60 11 	movl   $0xc0116064,0xc(%esp)$/;"	l
c0103e62	obj/kernel.asm	/^c0103e62:	c0 $/;"	l
c0103e63	obj/kernel.asm	/^c0103e63:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103e6a	obj/kernel.asm	/^c0103e6a:	c0 $/;"	l
c0103e6b	obj/kernel.asm	/^c0103e6b:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
c0103e72	obj/kernel.asm	/^c0103e72:	00 $/;"	l
c0103e73	obj/kernel.asm	/^c0103e73:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103e7a	obj/kernel.asm	/^c0103e7a:	e8 49 d0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103e7f	obj/kernel.asm	/^c0103e7f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103e86	obj/kernel.asm	/^c0103e86:	e8 d9 12 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0103e8b	obj/kernel.asm	/^c0103e8b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103e8e	obj/kernel.asm	/^c0103e8e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0103e92	obj/kernel.asm	/^c0103e92:	75 24                	jne    c0103eb8 <basic_check+0x38e>$/;"	l
c0103e94	obj/kernel.asm	/^c0103e94:	c7 44 24 0c 80 60 11 	movl   $0xc0116080,0xc(%esp)$/;"	l
c0103e9b	obj/kernel.asm	/^c0103e9b:	c0 $/;"	l
c0103e9c	obj/kernel.asm	/^c0103e9c:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103ea3	obj/kernel.asm	/^c0103ea3:	c0 $/;"	l
c0103ea4	obj/kernel.asm	/^c0103ea4:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)$/;"	l
c0103eab	obj/kernel.asm	/^c0103eab:	00 $/;"	l
c0103eac	obj/kernel.asm	/^c0103eac:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103eb3	obj/kernel.asm	/^c0103eb3:	e8 10 d0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103eb8	obj/kernel.asm	/^c0103eb8:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103ebf	obj/kernel.asm	/^c0103ebf:	e8 a0 12 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0103ec4	obj/kernel.asm	/^c0103ec4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103ec7	obj/kernel.asm	/^c0103ec7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103ecb	obj/kernel.asm	/^c0103ecb:	75 24                	jne    c0103ef1 <basic_check+0x3c7>$/;"	l
c0103ecd	obj/kernel.asm	/^c0103ecd:	c7 44 24 0c 9c 60 11 	movl   $0xc011609c,0xc(%esp)$/;"	l
c0103ed4	obj/kernel.asm	/^c0103ed4:	c0 $/;"	l
c0103ed5	obj/kernel.asm	/^c0103ed5:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103edc	obj/kernel.asm	/^c0103edc:	c0 $/;"	l
c0103edd	obj/kernel.asm	/^c0103edd:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)$/;"	l
c0103ee4	obj/kernel.asm	/^c0103ee4:	00 $/;"	l
c0103ee5	obj/kernel.asm	/^c0103ee5:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103eec	obj/kernel.asm	/^c0103eec:	e8 d7 cf ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103ef1	obj/kernel.asm	/^c0103ef1:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103ef8	obj/kernel.asm	/^c0103ef8:	e8 67 12 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0103efd	obj/kernel.asm	/^c0103efd:	85 c0                	test   %eax,%eax$/;"	l
c0103eff	obj/kernel.asm	/^c0103eff:	74 24                	je     c0103f25 <basic_check+0x3fb>$/;"	l
c0103f01	obj/kernel.asm	/^c0103f01:	c7 44 24 0c 86 61 11 	movl   $0xc0116186,0xc(%esp)$/;"	l
c0103f08	obj/kernel.asm	/^c0103f08:	c0 $/;"	l
c0103f09	obj/kernel.asm	/^c0103f09:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103f10	obj/kernel.asm	/^c0103f10:	c0 $/;"	l
c0103f11	obj/kernel.asm	/^c0103f11:	c7 44 24 04 ca 00 00 	movl   $0xca,0x4(%esp)$/;"	l
c0103f18	obj/kernel.asm	/^c0103f18:	00 $/;"	l
c0103f19	obj/kernel.asm	/^c0103f19:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103f20	obj/kernel.asm	/^c0103f20:	e8 a3 cf ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103f25	obj/kernel.asm	/^c0103f25:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103f2c	obj/kernel.asm	/^c0103f2c:	00 $/;"	l
c0103f2d	obj/kernel.asm	/^c0103f2d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103f30	obj/kernel.asm	/^c0103f30:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103f33	obj/kernel.asm	/^c0103f33:	e8 97 12 00 00       	call   c01051cf <free_pages>$/;"	l
c0103f38	obj/kernel.asm	/^c0103f38:	c7 45 d8 14 40 15 c0 	movl   $0xc0154014,-0x28(%ebp)$/;"	l
c0103f3f	obj/kernel.asm	/^c0103f3f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0103f42	obj/kernel.asm	/^c0103f42:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103f45	obj/kernel.asm	/^c0103f45:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
c0103f48	obj/kernel.asm	/^c0103f48:	0f 94 c0             	sete   %al$/;"	l
c0103f4b	obj/kernel.asm	/^c0103f4b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0103f4e	obj/kernel.asm	/^c0103f4e:	85 c0                	test   %eax,%eax$/;"	l
c0103f50	obj/kernel.asm	/^c0103f50:	74 24                	je     c0103f76 <basic_check+0x44c>$/;"	l
c0103f52	obj/kernel.asm	/^c0103f52:	c7 44 24 0c a8 61 11 	movl   $0xc01161a8,0xc(%esp)$/;"	l
c0103f59	obj/kernel.asm	/^c0103f59:	c0 $/;"	l
c0103f5a	obj/kernel.asm	/^c0103f5a:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103f61	obj/kernel.asm	/^c0103f61:	c0 $/;"	l
c0103f62	obj/kernel.asm	/^c0103f62:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
c0103f69	obj/kernel.asm	/^c0103f69:	00 $/;"	l
c0103f6a	obj/kernel.asm	/^c0103f6a:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103f71	obj/kernel.asm	/^c0103f71:	e8 52 cf ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103f76	obj/kernel.asm	/^c0103f76:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103f7d	obj/kernel.asm	/^c0103f7d:	e8 e2 11 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0103f82	obj/kernel.asm	/^c0103f82:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0103f85	obj/kernel.asm	/^c0103f85:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0103f88	obj/kernel.asm	/^c0103f88:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0103f8b	obj/kernel.asm	/^c0103f8b:	74 24                	je     c0103fb1 <basic_check+0x487>$/;"	l
c0103f8d	obj/kernel.asm	/^c0103f8d:	c7 44 24 0c c0 61 11 	movl   $0xc01161c0,0xc(%esp)$/;"	l
c0103f94	obj/kernel.asm	/^c0103f94:	c0 $/;"	l
c0103f95	obj/kernel.asm	/^c0103f95:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103f9c	obj/kernel.asm	/^c0103f9c:	c0 $/;"	l
c0103f9d	obj/kernel.asm	/^c0103f9d:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)$/;"	l
c0103fa4	obj/kernel.asm	/^c0103fa4:	00 $/;"	l
c0103fa5	obj/kernel.asm	/^c0103fa5:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103fac	obj/kernel.asm	/^c0103fac:	e8 17 cf ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103fb1	obj/kernel.asm	/^c0103fb1:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103fb8	obj/kernel.asm	/^c0103fb8:	e8 a7 11 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0103fbd	obj/kernel.asm	/^c0103fbd:	85 c0                	test   %eax,%eax$/;"	l
c0103fbf	obj/kernel.asm	/^c0103fbf:	74 24                	je     c0103fe5 <basic_check+0x4bb>$/;"	l
c0103fc1	obj/kernel.asm	/^c0103fc1:	c7 44 24 0c 86 61 11 	movl   $0xc0116186,0xc(%esp)$/;"	l
c0103fc8	obj/kernel.asm	/^c0103fc8:	c0 $/;"	l
c0103fc9	obj/kernel.asm	/^c0103fc9:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103fd0	obj/kernel.asm	/^c0103fd0:	c0 $/;"	l
c0103fd1	obj/kernel.asm	/^c0103fd1:	c7 44 24 04 d1 00 00 	movl   $0xd1,0x4(%esp)$/;"	l
c0103fd8	obj/kernel.asm	/^c0103fd8:	00 $/;"	l
c0103fd9	obj/kernel.asm	/^c0103fd9:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0103fe0	obj/kernel.asm	/^c0103fe0:	e8 e3 ce ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103fe5	obj/kernel.asm	/^c0103fe5:	a1 1c 40 15 c0       	mov    0xc015401c,%eax$/;"	l
c0103fea	obj/kernel.asm	/^c0103fea:	85 c0                	test   %eax,%eax$/;"	l
c0103fec	obj/kernel.asm	/^c0103fec:	74 24                	je     c0104012 <basic_check+0x4e8>$/;"	l
c0103fee	obj/kernel.asm	/^c0103fee:	c7 44 24 0c d9 61 11 	movl   $0xc01161d9,0xc(%esp)$/;"	l
c0103ff5	obj/kernel.asm	/^c0103ff5:	c0 $/;"	l
c0103ff6	obj/kernel.asm	/^c0103ff6:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0103ffd	obj/kernel.asm	/^c0103ffd:	c0 $/;"	l
c0103ffe	obj/kernel.asm	/^c0103ffe:	c7 44 24 04 d3 00 00 	movl   $0xd3,0x4(%esp)$/;"	l
c0104005	obj/kernel.asm	/^c0104005:	00 $/;"	l
c0104006	obj/kernel.asm	/^c0104006:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c010400d	obj/kernel.asm	/^c010400d:	e8 b6 ce ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104012	obj/kernel.asm	/^c0104012:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0104015	obj/kernel.asm	/^c0104015:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0104018	obj/kernel.asm	/^c0104018:	a3 14 40 15 c0       	mov    %eax,0xc0154014$/;"	l
c010401d	obj/kernel.asm	/^c010401d:	89 15 18 40 15 c0    	mov    %edx,0xc0154018$/;"	l
c0104023	obj/kernel.asm	/^c0104023:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104026	obj/kernel.asm	/^c0104026:	a3 1c 40 15 c0       	mov    %eax,0xc015401c$/;"	l
c010402b	obj/kernel.asm	/^c010402b:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0104032	obj/kernel.asm	/^c0104032:	00 $/;"	l
c0104033	obj/kernel.asm	/^c0104033:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104036	obj/kernel.asm	/^c0104036:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104039	obj/kernel.asm	/^c0104039:	e8 91 11 00 00       	call   c01051cf <free_pages>$/;"	l
c010403e	obj/kernel.asm	/^c010403e:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0104045	obj/kernel.asm	/^c0104045:	00 $/;"	l
c0104046	obj/kernel.asm	/^c0104046:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104049	obj/kernel.asm	/^c0104049:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010404c	obj/kernel.asm	/^c010404c:	e8 7e 11 00 00       	call   c01051cf <free_pages>$/;"	l
c0104051	obj/kernel.asm	/^c0104051:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0104058	obj/kernel.asm	/^c0104058:	00 $/;"	l
c0104059	obj/kernel.asm	/^c0104059:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010405c	obj/kernel.asm	/^c010405c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010405f	obj/kernel.asm	/^c010405f:	e8 6b 11 00 00       	call   c01051cf <free_pages>$/;"	l
c0104064	obj/kernel.asm	/^c0104064:	c9                   	leave  $/;"	l
c0104065	obj/kernel.asm	/^c0104065:	c3                   	ret    $/;"	l
c0104066	obj/kernel.asm	/^c0104066 <default_check>:$/;"	l
c0104066	obj/kernel.asm	/^c0104066:	55                   	push   %ebp$/;"	l
c0104067	obj/kernel.asm	/^c0104067:	89 e5                	mov    %esp,%ebp$/;"	l
c0104069	obj/kernel.asm	/^c0104069:	53                   	push   %ebx$/;"	l
c010406a	obj/kernel.asm	/^c010406a:	81 ec 94 00 00 00    	sub    $0x94,%esp$/;"	l
c0104070	obj/kernel.asm	/^c0104070:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0104077	obj/kernel.asm	/^c0104077:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010407e	obj/kernel.asm	/^c010407e:	c7 45 ec 14 40 15 c0 	movl   $0xc0154014,-0x14(%ebp)$/;"	l
c0104085	obj/kernel.asm	/^c0104085:	eb 6b                	jmp    c01040f2 <default_check+0x8c>$/;"	l
c0104087	obj/kernel.asm	/^c0104087:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010408a	obj/kernel.asm	/^c010408a:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010408d	obj/kernel.asm	/^c010408d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104090	obj/kernel.asm	/^c0104090:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104093	obj/kernel.asm	/^c0104093:	83 c0 04             	add    $0x4,%eax$/;"	l
c0104096	obj/kernel.asm	/^c0104096:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)$/;"	l
c010409d	obj/kernel.asm	/^c010409d:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01040a0	obj/kernel.asm	/^c01040a0:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01040a3	obj/kernel.asm	/^c01040a3:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01040a6	obj/kernel.asm	/^c01040a6:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01040a9	obj/kernel.asm	/^c01040a9:	19 c0                	sbb    %eax,%eax$/;"	l
c01040ab	obj/kernel.asm	/^c01040ab:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01040ae	obj/kernel.asm	/^c01040ae:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c01040b2	obj/kernel.asm	/^c01040b2:	0f 95 c0             	setne  %al$/;"	l
c01040b5	obj/kernel.asm	/^c01040b5:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01040b8	obj/kernel.asm	/^c01040b8:	85 c0                	test   %eax,%eax$/;"	l
c01040ba	obj/kernel.asm	/^c01040ba:	75 24                	jne    c01040e0 <default_check+0x7a>$/;"	l
c01040bc	obj/kernel.asm	/^c01040bc:	c7 44 24 0c e6 61 11 	movl   $0xc01161e6,0xc(%esp)$/;"	l
c01040c3	obj/kernel.asm	/^c01040c3:	c0 $/;"	l
c01040c4	obj/kernel.asm	/^c01040c4:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c01040cb	obj/kernel.asm	/^c01040cb:	c0 $/;"	l
c01040cc	obj/kernel.asm	/^c01040cc:	c7 44 24 04 e4 00 00 	movl   $0xe4,0x4(%esp)$/;"	l
c01040d3	obj/kernel.asm	/^c01040d3:	00 $/;"	l
c01040d4	obj/kernel.asm	/^c01040d4:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c01040db	obj/kernel.asm	/^c01040db:	e8 e8 cd ff ff       	call   c0100ec8 <__panic>$/;"	l
c01040e0	obj/kernel.asm	/^c01040e0:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01040e4	obj/kernel.asm	/^c01040e4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01040e7	obj/kernel.asm	/^c01040e7:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01040ea	obj/kernel.asm	/^c01040ea:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01040ed	obj/kernel.asm	/^c01040ed:	01 d0                	add    %edx,%eax$/;"	l
c01040ef	obj/kernel.asm	/^c01040ef:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01040f2	obj/kernel.asm	/^c01040f2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01040f5	obj/kernel.asm	/^c01040f5:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c01040f8	obj/kernel.asm	/^c01040f8:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c01040fb	obj/kernel.asm	/^c01040fb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01040fe	obj/kernel.asm	/^c01040fe:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104101	obj/kernel.asm	/^c0104101:	81 7d ec 14 40 15 c0 	cmpl   $0xc0154014,-0x14(%ebp)$/;"	l
c0104108	obj/kernel.asm	/^c0104108:	0f 85 79 ff ff ff    	jne    c0104087 <default_check+0x21>$/;"	l
c010410e	obj/kernel.asm	/^c010410e:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c0104111	obj/kernel.asm	/^c0104111:	e8 eb 10 00 00       	call   c0105201 <nr_free_pages>$/;"	l
c0104116	obj/kernel.asm	/^c0104116:	39 c3                	cmp    %eax,%ebx$/;"	l
c0104118	obj/kernel.asm	/^c0104118:	74 24                	je     c010413e <default_check+0xd8>$/;"	l
c010411a	obj/kernel.asm	/^c010411a:	c7 44 24 0c f6 61 11 	movl   $0xc01161f6,0xc(%esp)$/;"	l
c0104121	obj/kernel.asm	/^c0104121:	c0 $/;"	l
c0104122	obj/kernel.asm	/^c0104122:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0104129	obj/kernel.asm	/^c0104129:	c0 $/;"	l
c010412a	obj/kernel.asm	/^c010412a:	c7 44 24 04 e7 00 00 	movl   $0xe7,0x4(%esp)$/;"	l
c0104131	obj/kernel.asm	/^c0104131:	00 $/;"	l
c0104132	obj/kernel.asm	/^c0104132:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0104139	obj/kernel.asm	/^c0104139:	e8 8a cd ff ff       	call   c0100ec8 <__panic>$/;"	l
c010413e	obj/kernel.asm	/^c010413e:	e8 e7 f9 ff ff       	call   c0103b2a <basic_check>$/;"	l
c0104143	obj/kernel.asm	/^c0104143:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
c010414a	obj/kernel.asm	/^c010414a:	e8 15 10 00 00       	call   c0105164 <alloc_pages>$/;"	l
c010414f	obj/kernel.asm	/^c010414f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104152	obj/kernel.asm	/^c0104152:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0104156	obj/kernel.asm	/^c0104156:	75 24                	jne    c010417c <default_check+0x116>$/;"	l
c0104158	obj/kernel.asm	/^c0104158:	c7 44 24 0c 0f 62 11 	movl   $0xc011620f,0xc(%esp)$/;"	l
c010415f	obj/kernel.asm	/^c010415f:	c0 $/;"	l
c0104160	obj/kernel.asm	/^c0104160:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0104167	obj/kernel.asm	/^c0104167:	c0 $/;"	l
c0104168	obj/kernel.asm	/^c0104168:	c7 44 24 04 ec 00 00 	movl   $0xec,0x4(%esp)$/;"	l
c010416f	obj/kernel.asm	/^c010416f:	00 $/;"	l
c0104170	obj/kernel.asm	/^c0104170:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0104177	obj/kernel.asm	/^c0104177:	e8 4c cd ff ff       	call   c0100ec8 <__panic>$/;"	l
c010417c	obj/kernel.asm	/^c010417c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010417f	obj/kernel.asm	/^c010417f:	83 c0 04             	add    $0x4,%eax$/;"	l
c0104182	obj/kernel.asm	/^c0104182:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c0104189	obj/kernel.asm	/^c0104189:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010418c	obj/kernel.asm	/^c010418c:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c010418f	obj/kernel.asm	/^c010418f:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0104192	obj/kernel.asm	/^c0104192:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0104195	obj/kernel.asm	/^c0104195:	19 c0                	sbb    %eax,%eax$/;"	l
c0104197	obj/kernel.asm	/^c0104197:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c010419a	obj/kernel.asm	/^c010419a:	83 7d b8 00          	cmpl   $0x0,-0x48(%ebp)$/;"	l
c010419e	obj/kernel.asm	/^c010419e:	0f 95 c0             	setne  %al$/;"	l
c01041a1	obj/kernel.asm	/^c01041a1:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01041a4	obj/kernel.asm	/^c01041a4:	85 c0                	test   %eax,%eax$/;"	l
c01041a6	obj/kernel.asm	/^c01041a6:	74 24                	je     c01041cc <default_check+0x166>$/;"	l
c01041a8	obj/kernel.asm	/^c01041a8:	c7 44 24 0c 1a 62 11 	movl   $0xc011621a,0xc(%esp)$/;"	l
c01041af	obj/kernel.asm	/^c01041af:	c0 $/;"	l
c01041b0	obj/kernel.asm	/^c01041b0:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c01041b7	obj/kernel.asm	/^c01041b7:	c0 $/;"	l
c01041b8	obj/kernel.asm	/^c01041b8:	c7 44 24 04 ed 00 00 	movl   $0xed,0x4(%esp)$/;"	l
c01041bf	obj/kernel.asm	/^c01041bf:	00 $/;"	l
c01041c0	obj/kernel.asm	/^c01041c0:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c01041c7	obj/kernel.asm	/^c01041c7:	e8 fc cc ff ff       	call   c0100ec8 <__panic>$/;"	l
c01041cc	obj/kernel.asm	/^c01041cc:	a1 14 40 15 c0       	mov    0xc0154014,%eax$/;"	l
c01041d1	obj/kernel.asm	/^c01041d1:	8b 15 18 40 15 c0    	mov    0xc0154018,%edx$/;"	l
c01041d7	obj/kernel.asm	/^c01041d7:	89 45 80             	mov    %eax,-0x80(%ebp)$/;"	l
c01041da	obj/kernel.asm	/^c01041da:	89 55 84             	mov    %edx,-0x7c(%ebp)$/;"	l
c01041dd	obj/kernel.asm	/^c01041dd:	c7 45 b4 14 40 15 c0 	movl   $0xc0154014,-0x4c(%ebp)$/;"	l
c01041e4	obj/kernel.asm	/^c01041e4:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c01041e7	obj/kernel.asm	/^c01041e7:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c01041ea	obj/kernel.asm	/^c01041ea:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01041ed	obj/kernel.asm	/^c01041ed:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c01041f0	obj/kernel.asm	/^c01041f0:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01041f3	obj/kernel.asm	/^c01041f3:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c01041f6	obj/kernel.asm	/^c01041f6:	89 10                	mov    %edx,(%eax)$/;"	l
c01041f8	obj/kernel.asm	/^c01041f8:	c7 45 b0 14 40 15 c0 	movl   $0xc0154014,-0x50(%ebp)$/;"	l
c01041ff	obj/kernel.asm	/^c01041ff:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0104202	obj/kernel.asm	/^c0104202:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104205	obj/kernel.asm	/^c0104205:	39 45 b0             	cmp    %eax,-0x50(%ebp)$/;"	l
c0104208	obj/kernel.asm	/^c0104208:	0f 94 c0             	sete   %al$/;"	l
c010420b	obj/kernel.asm	/^c010420b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010420e	obj/kernel.asm	/^c010420e:	85 c0                	test   %eax,%eax$/;"	l
c0104210	obj/kernel.asm	/^c0104210:	75 24                	jne    c0104236 <default_check+0x1d0>$/;"	l
c0104212	obj/kernel.asm	/^c0104212:	c7 44 24 0c 6f 61 11 	movl   $0xc011616f,0xc(%esp)$/;"	l
c0104219	obj/kernel.asm	/^c0104219:	c0 $/;"	l
c010421a	obj/kernel.asm	/^c010421a:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0104221	obj/kernel.asm	/^c0104221:	c0 $/;"	l
c0104222	obj/kernel.asm	/^c0104222:	c7 44 24 04 f1 00 00 	movl   $0xf1,0x4(%esp)$/;"	l
c0104229	obj/kernel.asm	/^c0104229:	00 $/;"	l
c010422a	obj/kernel.asm	/^c010422a:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0104231	obj/kernel.asm	/^c0104231:	e8 92 cc ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104236	obj/kernel.asm	/^c0104236:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010423d	obj/kernel.asm	/^c010423d:	e8 22 0f 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0104242	obj/kernel.asm	/^c0104242:	85 c0                	test   %eax,%eax$/;"	l
c0104244	obj/kernel.asm	/^c0104244:	74 24                	je     c010426a <default_check+0x204>$/;"	l
c0104246	obj/kernel.asm	/^c0104246:	c7 44 24 0c 86 61 11 	movl   $0xc0116186,0xc(%esp)$/;"	l
c010424d	obj/kernel.asm	/^c010424d:	c0 $/;"	l
c010424e	obj/kernel.asm	/^c010424e:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0104255	obj/kernel.asm	/^c0104255:	c0 $/;"	l
c0104256	obj/kernel.asm	/^c0104256:	c7 44 24 04 f2 00 00 	movl   $0xf2,0x4(%esp)$/;"	l
c010425d	obj/kernel.asm	/^c010425d:	00 $/;"	l
c010425e	obj/kernel.asm	/^c010425e:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0104265	obj/kernel.asm	/^c0104265:	e8 5e cc ff ff       	call   c0100ec8 <__panic>$/;"	l
c010426a	obj/kernel.asm	/^c010426a:	a1 1c 40 15 c0       	mov    0xc015401c,%eax$/;"	l
c010426f	obj/kernel.asm	/^c010426f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0104272	obj/kernel.asm	/^c0104272:	c7 05 1c 40 15 c0 00 	movl   $0x0,0xc015401c$/;"	l
c0104279	obj/kernel.asm	/^c0104279:	00 00 00 $/;"	l
c010427c	obj/kernel.asm	/^c010427c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010427f	obj/kernel.asm	/^c010427f:	83 c0 48             	add    $0x48,%eax$/;"	l
c0104282	obj/kernel.asm	/^c0104282:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
c0104289	obj/kernel.asm	/^c0104289:	00 $/;"	l
c010428a	obj/kernel.asm	/^c010428a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010428d	obj/kernel.asm	/^c010428d:	e8 3d 0f 00 00       	call   c01051cf <free_pages>$/;"	l
c0104292	obj/kernel.asm	/^c0104292:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)$/;"	l
c0104299	obj/kernel.asm	/^c0104299:	e8 c6 0e 00 00       	call   c0105164 <alloc_pages>$/;"	l
c010429e	obj/kernel.asm	/^c010429e:	85 c0                	test   %eax,%eax$/;"	l
c01042a0	obj/kernel.asm	/^c01042a0:	74 24                	je     c01042c6 <default_check+0x260>$/;"	l
c01042a2	obj/kernel.asm	/^c01042a2:	c7 44 24 0c 2c 62 11 	movl   $0xc011622c,0xc(%esp)$/;"	l
c01042a9	obj/kernel.asm	/^c01042a9:	c0 $/;"	l
c01042aa	obj/kernel.asm	/^c01042aa:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c01042b1	obj/kernel.asm	/^c01042b1:	c0 $/;"	l
c01042b2	obj/kernel.asm	/^c01042b2:	c7 44 24 04 f8 00 00 	movl   $0xf8,0x4(%esp)$/;"	l
c01042b9	obj/kernel.asm	/^c01042b9:	00 $/;"	l
c01042ba	obj/kernel.asm	/^c01042ba:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c01042c1	obj/kernel.asm	/^c01042c1:	e8 02 cc ff ff       	call   c0100ec8 <__panic>$/;"	l
c01042c6	obj/kernel.asm	/^c01042c6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01042c9	obj/kernel.asm	/^c01042c9:	83 c0 48             	add    $0x48,%eax$/;"	l
c01042cc	obj/kernel.asm	/^c01042cc:	83 c0 04             	add    $0x4,%eax$/;"	l
c01042cf	obj/kernel.asm	/^c01042cf:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)$/;"	l
c01042d6	obj/kernel.asm	/^c01042d6:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c01042d9	obj/kernel.asm	/^c01042d9:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c01042dc	obj/kernel.asm	/^c01042dc:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c01042df	obj/kernel.asm	/^c01042df:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01042e2	obj/kernel.asm	/^c01042e2:	19 c0                	sbb    %eax,%eax$/;"	l
c01042e4	obj/kernel.asm	/^c01042e4:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c01042e7	obj/kernel.asm	/^c01042e7:	83 7d a4 00          	cmpl   $0x0,-0x5c(%ebp)$/;"	l
c01042eb	obj/kernel.asm	/^c01042eb:	0f 95 c0             	setne  %al$/;"	l
c01042ee	obj/kernel.asm	/^c01042ee:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01042f1	obj/kernel.asm	/^c01042f1:	85 c0                	test   %eax,%eax$/;"	l
c01042f3	obj/kernel.asm	/^c01042f3:	74 0e                	je     c0104303 <default_check+0x29d>$/;"	l
c01042f5	obj/kernel.asm	/^c01042f5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01042f8	obj/kernel.asm	/^c01042f8:	83 c0 48             	add    $0x48,%eax$/;"	l
c01042fb	obj/kernel.asm	/^c01042fb:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01042fe	obj/kernel.asm	/^c01042fe:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0104301	obj/kernel.asm	/^c0104301:	74 24                	je     c0104327 <default_check+0x2c1>$/;"	l
c0104303	obj/kernel.asm	/^c0104303:	c7 44 24 0c 44 62 11 	movl   $0xc0116244,0xc(%esp)$/;"	l
c010430a	obj/kernel.asm	/^c010430a:	c0 $/;"	l
c010430b	obj/kernel.asm	/^c010430b:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0104312	obj/kernel.asm	/^c0104312:	c0 $/;"	l
c0104313	obj/kernel.asm	/^c0104313:	c7 44 24 04 f9 00 00 	movl   $0xf9,0x4(%esp)$/;"	l
c010431a	obj/kernel.asm	/^c010431a:	00 $/;"	l
c010431b	obj/kernel.asm	/^c010431b:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0104322	obj/kernel.asm	/^c0104322:	e8 a1 cb ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104327	obj/kernel.asm	/^c0104327:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)$/;"	l
c010432e	obj/kernel.asm	/^c010432e:	e8 31 0e 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0104333	obj/kernel.asm	/^c0104333:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0104336	obj/kernel.asm	/^c0104336:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010433a	obj/kernel.asm	/^c010433a:	75 24                	jne    c0104360 <default_check+0x2fa>$/;"	l
c010433c	obj/kernel.asm	/^c010433c:	c7 44 24 0c 70 62 11 	movl   $0xc0116270,0xc(%esp)$/;"	l
c0104343	obj/kernel.asm	/^c0104343:	c0 $/;"	l
c0104344	obj/kernel.asm	/^c0104344:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c010434b	obj/kernel.asm	/^c010434b:	c0 $/;"	l
c010434c	obj/kernel.asm	/^c010434c:	c7 44 24 04 fa 00 00 	movl   $0xfa,0x4(%esp)$/;"	l
c0104353	obj/kernel.asm	/^c0104353:	00 $/;"	l
c0104354	obj/kernel.asm	/^c0104354:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c010435b	obj/kernel.asm	/^c010435b:	e8 68 cb ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104360	obj/kernel.asm	/^c0104360:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0104367	obj/kernel.asm	/^c0104367:	e8 f8 0d 00 00       	call   c0105164 <alloc_pages>$/;"	l
c010436c	obj/kernel.asm	/^c010436c:	85 c0                	test   %eax,%eax$/;"	l
c010436e	obj/kernel.asm	/^c010436e:	74 24                	je     c0104394 <default_check+0x32e>$/;"	l
c0104370	obj/kernel.asm	/^c0104370:	c7 44 24 0c 86 61 11 	movl   $0xc0116186,0xc(%esp)$/;"	l
c0104377	obj/kernel.asm	/^c0104377:	c0 $/;"	l
c0104378	obj/kernel.asm	/^c0104378:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c010437f	obj/kernel.asm	/^c010437f:	c0 $/;"	l
c0104380	obj/kernel.asm	/^c0104380:	c7 44 24 04 fb 00 00 	movl   $0xfb,0x4(%esp)$/;"	l
c0104387	obj/kernel.asm	/^c0104387:	00 $/;"	l
c0104388	obj/kernel.asm	/^c0104388:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c010438f	obj/kernel.asm	/^c010438f:	e8 34 cb ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104394	obj/kernel.asm	/^c0104394:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104397	obj/kernel.asm	/^c0104397:	83 c0 48             	add    $0x48,%eax$/;"	l
c010439a	obj/kernel.asm	/^c010439a:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c010439d	obj/kernel.asm	/^c010439d:	74 24                	je     c01043c3 <default_check+0x35d>$/;"	l
c010439f	obj/kernel.asm	/^c010439f:	c7 44 24 0c 8e 62 11 	movl   $0xc011628e,0xc(%esp)$/;"	l
c01043a6	obj/kernel.asm	/^c01043a6:	c0 $/;"	l
c01043a7	obj/kernel.asm	/^c01043a7:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c01043ae	obj/kernel.asm	/^c01043ae:	c0 $/;"	l
c01043af	obj/kernel.asm	/^c01043af:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
c01043b6	obj/kernel.asm	/^c01043b6:	00 $/;"	l
c01043b7	obj/kernel.asm	/^c01043b7:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c01043be	obj/kernel.asm	/^c01043be:	e8 05 cb ff ff       	call   c0100ec8 <__panic>$/;"	l
c01043c3	obj/kernel.asm	/^c01043c3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01043c6	obj/kernel.asm	/^c01043c6:	83 c0 24             	add    $0x24,%eax$/;"	l
c01043c9	obj/kernel.asm	/^c01043c9:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01043cc	obj/kernel.asm	/^c01043cc:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01043d3	obj/kernel.asm	/^c01043d3:	00 $/;"	l
c01043d4	obj/kernel.asm	/^c01043d4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01043d7	obj/kernel.asm	/^c01043d7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01043da	obj/kernel.asm	/^c01043da:	e8 f0 0d 00 00       	call   c01051cf <free_pages>$/;"	l
c01043df	obj/kernel.asm	/^c01043df:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
c01043e6	obj/kernel.asm	/^c01043e6:	00 $/;"	l
c01043e7	obj/kernel.asm	/^c01043e7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01043ea	obj/kernel.asm	/^c01043ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01043ed	obj/kernel.asm	/^c01043ed:	e8 dd 0d 00 00       	call   c01051cf <free_pages>$/;"	l
c01043f2	obj/kernel.asm	/^c01043f2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01043f5	obj/kernel.asm	/^c01043f5:	83 c0 04             	add    $0x4,%eax$/;"	l
c01043f8	obj/kernel.asm	/^c01043f8:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)$/;"	l
c01043ff	obj/kernel.asm	/^c01043ff:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c0104402	obj/kernel.asm	/^c0104402:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0104405	obj/kernel.asm	/^c0104405:	8b 55 a0             	mov    -0x60(%ebp),%edx$/;"	l
c0104408	obj/kernel.asm	/^c0104408:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010440b	obj/kernel.asm	/^c010440b:	19 c0                	sbb    %eax,%eax$/;"	l
c010440d	obj/kernel.asm	/^c010440d:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0104410	obj/kernel.asm	/^c0104410:	83 7d 98 00          	cmpl   $0x0,-0x68(%ebp)$/;"	l
c0104414	obj/kernel.asm	/^c0104414:	0f 95 c0             	setne  %al$/;"	l
c0104417	obj/kernel.asm	/^c0104417:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010441a	obj/kernel.asm	/^c010441a:	85 c0                	test   %eax,%eax$/;"	l
c010441c	obj/kernel.asm	/^c010441c:	74 0b                	je     c0104429 <default_check+0x3c3>$/;"	l
c010441e	obj/kernel.asm	/^c010441e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104421	obj/kernel.asm	/^c0104421:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104424	obj/kernel.asm	/^c0104424:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104427	obj/kernel.asm	/^c0104427:	74 24                	je     c010444d <default_check+0x3e7>$/;"	l
c0104429	obj/kernel.asm	/^c0104429:	c7 44 24 0c 9c 62 11 	movl   $0xc011629c,0xc(%esp)$/;"	l
c0104430	obj/kernel.asm	/^c0104430:	c0 $/;"	l
c0104431	obj/kernel.asm	/^c0104431:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0104438	obj/kernel.asm	/^c0104438:	c0 $/;"	l
c0104439	obj/kernel.asm	/^c0104439:	c7 44 24 04 01 01 00 	movl   $0x101,0x4(%esp)$/;"	l
c0104440	obj/kernel.asm	/^c0104440:	00 $/;"	l
c0104441	obj/kernel.asm	/^c0104441:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0104448	obj/kernel.asm	/^c0104448:	e8 7b ca ff ff       	call   c0100ec8 <__panic>$/;"	l
c010444d	obj/kernel.asm	/^c010444d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0104450	obj/kernel.asm	/^c0104450:	83 c0 04             	add    $0x4,%eax$/;"	l
c0104453	obj/kernel.asm	/^c0104453:	c7 45 94 01 00 00 00 	movl   $0x1,-0x6c(%ebp)$/;"	l
c010445a	obj/kernel.asm	/^c010445a:	89 45 90             	mov    %eax,-0x70(%ebp)$/;"	l
c010445d	obj/kernel.asm	/^c010445d:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
c0104460	obj/kernel.asm	/^c0104460:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
c0104463	obj/kernel.asm	/^c0104463:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0104466	obj/kernel.asm	/^c0104466:	19 c0                	sbb    %eax,%eax$/;"	l
c0104468	obj/kernel.asm	/^c0104468:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c010446b	obj/kernel.asm	/^c010446b:	83 7d 8c 00          	cmpl   $0x0,-0x74(%ebp)$/;"	l
c010446f	obj/kernel.asm	/^c010446f:	0f 95 c0             	setne  %al$/;"	l
c0104472	obj/kernel.asm	/^c0104472:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0104475	obj/kernel.asm	/^c0104475:	85 c0                	test   %eax,%eax$/;"	l
c0104477	obj/kernel.asm	/^c0104477:	74 0b                	je     c0104484 <default_check+0x41e>$/;"	l
c0104479	obj/kernel.asm	/^c0104479:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010447c	obj/kernel.asm	/^c010447c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010447f	obj/kernel.asm	/^c010447f:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0104482	obj/kernel.asm	/^c0104482:	74 24                	je     c01044a8 <default_check+0x442>$/;"	l
c0104484	obj/kernel.asm	/^c0104484:	c7 44 24 0c c4 62 11 	movl   $0xc01162c4,0xc(%esp)$/;"	l
c010448b	obj/kernel.asm	/^c010448b:	c0 $/;"	l
c010448c	obj/kernel.asm	/^c010448c:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0104493	obj/kernel.asm	/^c0104493:	c0 $/;"	l
c0104494	obj/kernel.asm	/^c0104494:	c7 44 24 04 02 01 00 	movl   $0x102,0x4(%esp)$/;"	l
c010449b	obj/kernel.asm	/^c010449b:	00 $/;"	l
c010449c	obj/kernel.asm	/^c010449c:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c01044a3	obj/kernel.asm	/^c01044a3:	e8 20 ca ff ff       	call   c0100ec8 <__panic>$/;"	l
c01044a8	obj/kernel.asm	/^c01044a8:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01044af	obj/kernel.asm	/^c01044af:	e8 b0 0c 00 00       	call   c0105164 <alloc_pages>$/;"	l
c01044b4	obj/kernel.asm	/^c01044b4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01044b7	obj/kernel.asm	/^c01044b7:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01044ba	obj/kernel.asm	/^c01044ba:	83 e8 24             	sub    $0x24,%eax$/;"	l
c01044bd	obj/kernel.asm	/^c01044bd:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c01044c0	obj/kernel.asm	/^c01044c0:	74 24                	je     c01044e6 <default_check+0x480>$/;"	l
c01044c2	obj/kernel.asm	/^c01044c2:	c7 44 24 0c ea 62 11 	movl   $0xc01162ea,0xc(%esp)$/;"	l
c01044c9	obj/kernel.asm	/^c01044c9:	c0 $/;"	l
c01044ca	obj/kernel.asm	/^c01044ca:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c01044d1	obj/kernel.asm	/^c01044d1:	c0 $/;"	l
c01044d2	obj/kernel.asm	/^c01044d2:	c7 44 24 04 04 01 00 	movl   $0x104,0x4(%esp)$/;"	l
c01044d9	obj/kernel.asm	/^c01044d9:	00 $/;"	l
c01044da	obj/kernel.asm	/^c01044da:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c01044e1	obj/kernel.asm	/^c01044e1:	e8 e2 c9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01044e6	obj/kernel.asm	/^c01044e6:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01044ed	obj/kernel.asm	/^c01044ed:	00 $/;"	l
c01044ee	obj/kernel.asm	/^c01044ee:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01044f1	obj/kernel.asm	/^c01044f1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01044f4	obj/kernel.asm	/^c01044f4:	e8 d6 0c 00 00       	call   c01051cf <free_pages>$/;"	l
c01044f9	obj/kernel.asm	/^c01044f9:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c0104500	obj/kernel.asm	/^c0104500:	e8 5f 0c 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0104505	obj/kernel.asm	/^c0104505:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104508	obj/kernel.asm	/^c0104508:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010450b	obj/kernel.asm	/^c010450b:	83 c0 24             	add    $0x24,%eax$/;"	l
c010450e	obj/kernel.asm	/^c010450e:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c0104511	obj/kernel.asm	/^c0104511:	74 24                	je     c0104537 <default_check+0x4d1>$/;"	l
c0104513	obj/kernel.asm	/^c0104513:	c7 44 24 0c 08 63 11 	movl   $0xc0116308,0xc(%esp)$/;"	l
c010451a	obj/kernel.asm	/^c010451a:	c0 $/;"	l
c010451b	obj/kernel.asm	/^c010451b:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0104522	obj/kernel.asm	/^c0104522:	c0 $/;"	l
c0104523	obj/kernel.asm	/^c0104523:	c7 44 24 04 06 01 00 	movl   $0x106,0x4(%esp)$/;"	l
c010452a	obj/kernel.asm	/^c010452a:	00 $/;"	l
c010452b	obj/kernel.asm	/^c010452b:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0104532	obj/kernel.asm	/^c0104532:	e8 91 c9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104537	obj/kernel.asm	/^c0104537:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
c010453e	obj/kernel.asm	/^c010453e:	00 $/;"	l
c010453f	obj/kernel.asm	/^c010453f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104542	obj/kernel.asm	/^c0104542:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104545	obj/kernel.asm	/^c0104545:	e8 85 0c 00 00       	call   c01051cf <free_pages>$/;"	l
c010454a	obj/kernel.asm	/^c010454a:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0104551	obj/kernel.asm	/^c0104551:	00 $/;"	l
c0104552	obj/kernel.asm	/^c0104552:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0104555	obj/kernel.asm	/^c0104555:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104558	obj/kernel.asm	/^c0104558:	e8 72 0c 00 00       	call   c01051cf <free_pages>$/;"	l
c010455d	obj/kernel.asm	/^c010455d:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
c0104564	obj/kernel.asm	/^c0104564:	e8 fb 0b 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0104569	obj/kernel.asm	/^c0104569:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010456c	obj/kernel.asm	/^c010456c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0104570	obj/kernel.asm	/^c0104570:	75 24                	jne    c0104596 <default_check+0x530>$/;"	l
c0104572	obj/kernel.asm	/^c0104572:	c7 44 24 0c 28 63 11 	movl   $0xc0116328,0xc(%esp)$/;"	l
c0104579	obj/kernel.asm	/^c0104579:	c0 $/;"	l
c010457a	obj/kernel.asm	/^c010457a:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0104581	obj/kernel.asm	/^c0104581:	c0 $/;"	l
c0104582	obj/kernel.asm	/^c0104582:	c7 44 24 04 0b 01 00 	movl   $0x10b,0x4(%esp)$/;"	l
c0104589	obj/kernel.asm	/^c0104589:	00 $/;"	l
c010458a	obj/kernel.asm	/^c010458a:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0104591	obj/kernel.asm	/^c0104591:	e8 32 c9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104596	obj/kernel.asm	/^c0104596:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010459d	obj/kernel.asm	/^c010459d:	e8 c2 0b 00 00       	call   c0105164 <alloc_pages>$/;"	l
c01045a2	obj/kernel.asm	/^c01045a2:	85 c0                	test   %eax,%eax$/;"	l
c01045a4	obj/kernel.asm	/^c01045a4:	74 24                	je     c01045ca <default_check+0x564>$/;"	l
c01045a6	obj/kernel.asm	/^c01045a6:	c7 44 24 0c 86 61 11 	movl   $0xc0116186,0xc(%esp)$/;"	l
c01045ad	obj/kernel.asm	/^c01045ad:	c0 $/;"	l
c01045ae	obj/kernel.asm	/^c01045ae:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c01045b5	obj/kernel.asm	/^c01045b5:	c0 $/;"	l
c01045b6	obj/kernel.asm	/^c01045b6:	c7 44 24 04 0c 01 00 	movl   $0x10c,0x4(%esp)$/;"	l
c01045bd	obj/kernel.asm	/^c01045bd:	00 $/;"	l
c01045be	obj/kernel.asm	/^c01045be:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c01045c5	obj/kernel.asm	/^c01045c5:	e8 fe c8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01045ca	obj/kernel.asm	/^c01045ca:	a1 1c 40 15 c0       	mov    0xc015401c,%eax$/;"	l
c01045cf	obj/kernel.asm	/^c01045cf:	85 c0                	test   %eax,%eax$/;"	l
c01045d1	obj/kernel.asm	/^c01045d1:	74 24                	je     c01045f7 <default_check+0x591>$/;"	l
c01045d3	obj/kernel.asm	/^c01045d3:	c7 44 24 0c d9 61 11 	movl   $0xc01161d9,0xc(%esp)$/;"	l
c01045da	obj/kernel.asm	/^c01045da:	c0 $/;"	l
c01045db	obj/kernel.asm	/^c01045db:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c01045e2	obj/kernel.asm	/^c01045e2:	c0 $/;"	l
c01045e3	obj/kernel.asm	/^c01045e3:	c7 44 24 04 0e 01 00 	movl   $0x10e,0x4(%esp)$/;"	l
c01045ea	obj/kernel.asm	/^c01045ea:	00 $/;"	l
c01045eb	obj/kernel.asm	/^c01045eb:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c01045f2	obj/kernel.asm	/^c01045f2:	e8 d1 c8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01045f7	obj/kernel.asm	/^c01045f7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01045fa	obj/kernel.asm	/^c01045fa:	a3 1c 40 15 c0       	mov    %eax,0xc015401c$/;"	l
c01045ff	obj/kernel.asm	/^c01045ff:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c0104602	obj/kernel.asm	/^c0104602:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c0104605	obj/kernel.asm	/^c0104605:	a3 14 40 15 c0       	mov    %eax,0xc0154014$/;"	l
c010460a	obj/kernel.asm	/^c010460a:	89 15 18 40 15 c0    	mov    %edx,0xc0154018$/;"	l
c0104610	obj/kernel.asm	/^c0104610:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
c0104617	obj/kernel.asm	/^c0104617:	00 $/;"	l
c0104618	obj/kernel.asm	/^c0104618:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010461b	obj/kernel.asm	/^c010461b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010461e	obj/kernel.asm	/^c010461e:	e8 ac 0b 00 00       	call   c01051cf <free_pages>$/;"	l
c0104623	obj/kernel.asm	/^c0104623:	c7 45 ec 14 40 15 c0 	movl   $0xc0154014,-0x14(%ebp)$/;"	l
c010462a	obj/kernel.asm	/^c010462a:	eb 1d                	jmp    c0104649 <default_check+0x5e3>$/;"	l
c010462c	obj/kernel.asm	/^c010462c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010462f	obj/kernel.asm	/^c010462f:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0104632	obj/kernel.asm	/^c0104632:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0104635	obj/kernel.asm	/^c0104635:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0104639	obj/kernel.asm	/^c0104639:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010463c	obj/kernel.asm	/^c010463c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010463f	obj/kernel.asm	/^c010463f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104642	obj/kernel.asm	/^c0104642:	29 c2                	sub    %eax,%edx$/;"	l
c0104644	obj/kernel.asm	/^c0104644:	89 d0                	mov    %edx,%eax$/;"	l
c0104646	obj/kernel.asm	/^c0104646:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104649	obj/kernel.asm	/^c0104649:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010464c	obj/kernel.asm	/^c010464c:	89 45 88             	mov    %eax,-0x78(%ebp)$/;"	l
c010464f	obj/kernel.asm	/^c010464f:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c0104652	obj/kernel.asm	/^c0104652:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104655	obj/kernel.asm	/^c0104655:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104658	obj/kernel.asm	/^c0104658:	81 7d ec 14 40 15 c0 	cmpl   $0xc0154014,-0x14(%ebp)$/;"	l
c010465f	obj/kernel.asm	/^c010465f:	75 cb                	jne    c010462c <default_check+0x5c6>$/;"	l
c0104661	obj/kernel.asm	/^c0104661:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104665	obj/kernel.asm	/^c0104665:	74 24                	je     c010468b <default_check+0x625>$/;"	l
c0104667	obj/kernel.asm	/^c0104667:	c7 44 24 0c 46 63 11 	movl   $0xc0116346,0xc(%esp)$/;"	l
c010466e	obj/kernel.asm	/^c010466e:	c0 $/;"	l
c010466f	obj/kernel.asm	/^c010466f:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c0104676	obj/kernel.asm	/^c0104676:	c0 $/;"	l
c0104677	obj/kernel.asm	/^c0104677:	c7 44 24 04 19 01 00 	movl   $0x119,0x4(%esp)$/;"	l
c010467e	obj/kernel.asm	/^c010467e:	00 $/;"	l
c010467f	obj/kernel.asm	/^c010467f:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c0104686	obj/kernel.asm	/^c0104686:	e8 3d c8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010468b	obj/kernel.asm	/^c010468b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010468f	obj/kernel.asm	/^c010468f:	74 24                	je     c01046b5 <default_check+0x64f>$/;"	l
c0104691	obj/kernel.asm	/^c0104691:	c7 44 24 0c 51 63 11 	movl   $0xc0116351,0xc(%esp)$/;"	l
c0104698	obj/kernel.asm	/^c0104698:	c0 $/;"	l
c0104699	obj/kernel.asm	/^c0104699:	c7 44 24 08 16 60 11 	movl   $0xc0116016,0x8(%esp)$/;"	l
c01046a0	obj/kernel.asm	/^c01046a0:	c0 $/;"	l
c01046a1	obj/kernel.asm	/^c01046a1:	c7 44 24 04 1a 01 00 	movl   $0x11a,0x4(%esp)$/;"	l
c01046a8	obj/kernel.asm	/^c01046a8:	00 $/;"	l
c01046a9	obj/kernel.asm	/^c01046a9:	c7 04 24 2b 60 11 c0 	movl   $0xc011602b,(%esp)$/;"	l
c01046b0	obj/kernel.asm	/^c01046b0:	e8 13 c8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01046b5	obj/kernel.asm	/^c01046b5:	81 c4 94 00 00 00    	add    $0x94,%esp$/;"	l
c01046bb	obj/kernel.asm	/^c01046bb:	5b                   	pop    %ebx$/;"	l
c01046bc	obj/kernel.asm	/^c01046bc:	5d                   	pop    %ebp$/;"	l
c01046bd	obj/kernel.asm	/^c01046bd:	c3                   	ret    $/;"	l
c01046be	obj/kernel.asm	/^c01046be <__intr_save>:$/;"	l
c01046be	obj/kernel.asm	/^c01046be:	55                   	push   %ebp$/;"	l
c01046bf	obj/kernel.asm	/^c01046bf:	89 e5                	mov    %esp,%ebp$/;"	l
c01046c1	obj/kernel.asm	/^c01046c1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01046c4	obj/kernel.asm	/^c01046c4:	9c                   	pushf  $/;"	l
c01046c5	obj/kernel.asm	/^c01046c5:	58                   	pop    %eax$/;"	l
c01046c6	obj/kernel.asm	/^c01046c6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01046c9	obj/kernel.asm	/^c01046c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01046cc	obj/kernel.asm	/^c01046cc:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c01046d1	obj/kernel.asm	/^c01046d1:	85 c0                	test   %eax,%eax$/;"	l
c01046d3	obj/kernel.asm	/^c01046d3:	74 0c                	je     c01046e1 <__intr_save+0x23>$/;"	l
c01046d5	obj/kernel.asm	/^c01046d5:	e8 50 da ff ff       	call   c010212a <intr_disable>$/;"	l
c01046da	obj/kernel.asm	/^c01046da:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01046df	obj/kernel.asm	/^c01046df:	eb 05                	jmp    c01046e6 <__intr_save+0x28>$/;"	l
c01046e1	obj/kernel.asm	/^c01046e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01046e6	obj/kernel.asm	/^c01046e6:	c9                   	leave  $/;"	l
c01046e7	obj/kernel.asm	/^c01046e7:	c3                   	ret    $/;"	l
c01046e8	obj/kernel.asm	/^c01046e8 <__intr_restore>:$/;"	l
c01046e8	obj/kernel.asm	/^c01046e8:	55                   	push   %ebp$/;"	l
c01046e9	obj/kernel.asm	/^c01046e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01046eb	obj/kernel.asm	/^c01046eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01046ee	obj/kernel.asm	/^c01046ee:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01046f2	obj/kernel.asm	/^c01046f2:	74 05                	je     c01046f9 <__intr_restore+0x11>$/;"	l
c01046f4	obj/kernel.asm	/^c01046f4:	e8 2b da ff ff       	call   c0102124 <intr_enable>$/;"	l
c01046f9	obj/kernel.asm	/^c01046f9:	c9                   	leave  $/;"	l
c01046fa	obj/kernel.asm	/^c01046fa:	c3                   	ret    $/;"	l
c01046fb	obj/kernel.asm	/^c01046fb <page2ppn>:$/;"	l
c01046fb	obj/kernel.asm	/^c01046fb:	55                   	push   %ebp$/;"	l
c01046fc	obj/kernel.asm	/^c01046fc:	89 e5                	mov    %esp,%ebp$/;"	l
c01046fe	obj/kernel.asm	/^c01046fe:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0104701	obj/kernel.asm	/^c0104701:	a1 28 40 15 c0       	mov    0xc0154028,%eax$/;"	l
c0104706	obj/kernel.asm	/^c0104706:	29 c2                	sub    %eax,%edx$/;"	l
c0104708	obj/kernel.asm	/^c0104708:	89 d0                	mov    %edx,%eax$/;"	l
c010470a	obj/kernel.asm	/^c010470a:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c010470d	obj/kernel.asm	/^c010470d:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c0104713	obj/kernel.asm	/^c0104713:	5d                   	pop    %ebp$/;"	l
c0104714	obj/kernel.asm	/^c0104714:	c3                   	ret    $/;"	l
c0104715	obj/kernel.asm	/^c0104715 <page2pa>:$/;"	l
c0104715	obj/kernel.asm	/^c0104715:	55                   	push   %ebp$/;"	l
c0104716	obj/kernel.asm	/^c0104716:	89 e5                	mov    %esp,%ebp$/;"	l
c0104718	obj/kernel.asm	/^c0104718:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010471b	obj/kernel.asm	/^c010471b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010471e	obj/kernel.asm	/^c010471e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104721	obj/kernel.asm	/^c0104721:	e8 d5 ff ff ff       	call   c01046fb <page2ppn>$/;"	l
c0104726	obj/kernel.asm	/^c0104726:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0104729	obj/kernel.asm	/^c0104729:	c9                   	leave  $/;"	l
c010472a	obj/kernel.asm	/^c010472a:	c3                   	ret    $/;"	l
c010472b	obj/kernel.asm	/^c010472b <pa2page>:$/;"	l
c010472b	obj/kernel.asm	/^c010472b:	55                   	push   %ebp$/;"	l
c010472c	obj/kernel.asm	/^c010472c:	89 e5                	mov    %esp,%ebp$/;"	l
c010472e	obj/kernel.asm	/^c010472e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104731	obj/kernel.asm	/^c0104731:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104734	obj/kernel.asm	/^c0104734:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104737	obj/kernel.asm	/^c0104737:	89 c2                	mov    %eax,%edx$/;"	l
c0104739	obj/kernel.asm	/^c0104739:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c010473e	obj/kernel.asm	/^c010473e:	39 c2                	cmp    %eax,%edx$/;"	l
c0104740	obj/kernel.asm	/^c0104740:	72 1c                	jb     c010475e <pa2page+0x33>$/;"	l
c0104742	obj/kernel.asm	/^c0104742:	c7 44 24 08 8c 63 11 	movl   $0xc011638c,0x8(%esp)$/;"	l
c0104749	obj/kernel.asm	/^c0104749:	c0 $/;"	l
c010474a	obj/kernel.asm	/^c010474a:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0104751	obj/kernel.asm	/^c0104751:	00 $/;"	l
c0104752	obj/kernel.asm	/^c0104752:	c7 04 24 ab 63 11 c0 	movl   $0xc01163ab,(%esp)$/;"	l
c0104759	obj/kernel.asm	/^c0104759:	e8 6a c7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010475e	obj/kernel.asm	/^c010475e:	8b 0d 28 40 15 c0    	mov    0xc0154028,%ecx$/;"	l
c0104764	obj/kernel.asm	/^c0104764:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104767	obj/kernel.asm	/^c0104767:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010476a	obj/kernel.asm	/^c010476a:	89 c2                	mov    %eax,%edx$/;"	l
c010476c	obj/kernel.asm	/^c010476c:	89 d0                	mov    %edx,%eax$/;"	l
c010476e	obj/kernel.asm	/^c010476e:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0104771	obj/kernel.asm	/^c0104771:	01 d0                	add    %edx,%eax$/;"	l
c0104773	obj/kernel.asm	/^c0104773:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0104776	obj/kernel.asm	/^c0104776:	01 c8                	add    %ecx,%eax$/;"	l
c0104778	obj/kernel.asm	/^c0104778:	c9                   	leave  $/;"	l
c0104779	obj/kernel.asm	/^c0104779:	c3                   	ret    $/;"	l
c010477a	obj/kernel.asm	/^c010477a <page2kva>:$/;"	l
c010477a	obj/kernel.asm	/^c010477a:	55                   	push   %ebp$/;"	l
c010477b	obj/kernel.asm	/^c010477b:	89 e5                	mov    %esp,%ebp$/;"	l
c010477d	obj/kernel.asm	/^c010477d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104780	obj/kernel.asm	/^c0104780:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104783	obj/kernel.asm	/^c0104783:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104786	obj/kernel.asm	/^c0104786:	e8 8a ff ff ff       	call   c0104715 <page2pa>$/;"	l
c010478b	obj/kernel.asm	/^c010478b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010478e	obj/kernel.asm	/^c010478e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104791	obj/kernel.asm	/^c0104791:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104794	obj/kernel.asm	/^c0104794:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104797	obj/kernel.asm	/^c0104797:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c010479c	obj/kernel.asm	/^c010479c:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010479f	obj/kernel.asm	/^c010479f:	72 23                	jb     c01047c4 <page2kva+0x4a>$/;"	l
c01047a1	obj/kernel.asm	/^c01047a1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01047a4	obj/kernel.asm	/^c01047a4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01047a8	obj/kernel.asm	/^c01047a8:	c7 44 24 08 bc 63 11 	movl   $0xc01163bc,0x8(%esp)$/;"	l
c01047af	obj/kernel.asm	/^c01047af:	c0 $/;"	l
c01047b0	obj/kernel.asm	/^c01047b0:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c01047b7	obj/kernel.asm	/^c01047b7:	00 $/;"	l
c01047b8	obj/kernel.asm	/^c01047b8:	c7 04 24 ab 63 11 c0 	movl   $0xc01163ab,(%esp)$/;"	l
c01047bf	obj/kernel.asm	/^c01047bf:	e8 04 c7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01047c4	obj/kernel.asm	/^c01047c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01047c7	obj/kernel.asm	/^c01047c7:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01047cc	obj/kernel.asm	/^c01047cc:	c9                   	leave  $/;"	l
c01047cd	obj/kernel.asm	/^c01047cd:	c3                   	ret    $/;"	l
c01047ce	obj/kernel.asm	/^c01047ce <kva2page>:$/;"	l
c01047ce	obj/kernel.asm	/^c01047ce:	55                   	push   %ebp$/;"	l
c01047cf	obj/kernel.asm	/^c01047cf:	89 e5                	mov    %esp,%ebp$/;"	l
c01047d1	obj/kernel.asm	/^c01047d1:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01047d4	obj/kernel.asm	/^c01047d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01047d7	obj/kernel.asm	/^c01047d7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01047da	obj/kernel.asm	/^c01047da:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c01047e1	obj/kernel.asm	/^c01047e1:	77 23                	ja     c0104806 <kva2page+0x38>$/;"	l
c01047e3	obj/kernel.asm	/^c01047e3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01047e6	obj/kernel.asm	/^c01047e6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01047ea	obj/kernel.asm	/^c01047ea:	c7 44 24 08 e0 63 11 	movl   $0xc01163e0,0x8(%esp)$/;"	l
c01047f1	obj/kernel.asm	/^c01047f1:	c0 $/;"	l
c01047f2	obj/kernel.asm	/^c01047f2:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c01047f9	obj/kernel.asm	/^c01047f9:	00 $/;"	l
c01047fa	obj/kernel.asm	/^c01047fa:	c7 04 24 ab 63 11 c0 	movl   $0xc01163ab,(%esp)$/;"	l
c0104801	obj/kernel.asm	/^c0104801:	e8 c2 c6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104806	obj/kernel.asm	/^c0104806:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104809	obj/kernel.asm	/^c0104809:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010480e	obj/kernel.asm	/^c010480e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104811	obj/kernel.asm	/^c0104811:	e8 15 ff ff ff       	call   c010472b <pa2page>$/;"	l
c0104816	obj/kernel.asm	/^c0104816:	c9                   	leave  $/;"	l
c0104817	obj/kernel.asm	/^c0104817:	c3                   	ret    $/;"	l
c0104818	obj/kernel.asm	/^c0104818 <__slob_get_free_pages>:$/;"	l
c0104818	obj/kernel.asm	/^c0104818:	55                   	push   %ebp$/;"	l
c0104819	obj/kernel.asm	/^c0104819:	89 e5                	mov    %esp,%ebp$/;"	l
c010481b	obj/kernel.asm	/^c010481b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010481e	obj/kernel.asm	/^c010481e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104821	obj/kernel.asm	/^c0104821:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0104826	obj/kernel.asm	/^c0104826:	89 c1                	mov    %eax,%ecx$/;"	l
c0104828	obj/kernel.asm	/^c0104828:	d3 e2                	shl    %cl,%edx$/;"	d
c010482a	obj/kernel.asm	/^c010482a:	89 d0                	mov    %edx,%eax$/;"	l
c010482c	obj/kernel.asm	/^c010482c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010482f	obj/kernel.asm	/^c010482f:	e8 30 09 00 00       	call   c0105164 <alloc_pages>$/;"	l
c0104834	obj/kernel.asm	/^c0104834:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104837	obj/kernel.asm	/^c0104837:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010483b	obj/kernel.asm	/^c010483b:	75 07                	jne    c0104844 <__slob_get_free_pages+0x2c>$/;"	l
c010483d	obj/kernel.asm	/^c010483d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104842	obj/kernel.asm	/^c0104842:	eb 0b                	jmp    c010484f <__slob_get_free_pages+0x37>$/;"	l
c0104844	obj/kernel.asm	/^c0104844:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104847	obj/kernel.asm	/^c0104847:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010484a	obj/kernel.asm	/^c010484a:	e8 2b ff ff ff       	call   c010477a <page2kva>$/;"	l
c010484f	obj/kernel.asm	/^c010484f:	c9                   	leave  $/;"	l
c0104850	obj/kernel.asm	/^c0104850:	c3                   	ret    $/;"	l
c0104851	obj/kernel.asm	/^c0104851 <__slob_free_pages>:$/;"	l
c0104851	obj/kernel.asm	/^c0104851:	55                   	push   %ebp$/;"	l
c0104852	obj/kernel.asm	/^c0104852:	89 e5                	mov    %esp,%ebp$/;"	l
c0104854	obj/kernel.asm	/^c0104854:	53                   	push   %ebx$/;"	l
c0104855	obj/kernel.asm	/^c0104855:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0104858	obj/kernel.asm	/^c0104858:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010485b	obj/kernel.asm	/^c010485b:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0104860	obj/kernel.asm	/^c0104860:	89 c1                	mov    %eax,%ecx$/;"	l
c0104862	obj/kernel.asm	/^c0104862:	d3 e2                	shl    %cl,%edx$/;"	d
c0104864	obj/kernel.asm	/^c0104864:	89 d0                	mov    %edx,%eax$/;"	l
c0104866	obj/kernel.asm	/^c0104866:	89 c3                	mov    %eax,%ebx$/;"	l
c0104868	obj/kernel.asm	/^c0104868:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010486b	obj/kernel.asm	/^c010486b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010486e	obj/kernel.asm	/^c010486e:	e8 5b ff ff ff       	call   c01047ce <kva2page>$/;"	l
c0104873	obj/kernel.asm	/^c0104873:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c0104877	obj/kernel.asm	/^c0104877:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010487a	obj/kernel.asm	/^c010487a:	e8 50 09 00 00       	call   c01051cf <free_pages>$/;"	l
c010487f	obj/kernel.asm	/^c010487f:	83 c4 14             	add    $0x14,%esp$/;"	l
c0104882	obj/kernel.asm	/^c0104882:	5b                   	pop    %ebx$/;"	l
c0104883	obj/kernel.asm	/^c0104883:	5d                   	pop    %ebp$/;"	l
c0104884	obj/kernel.asm	/^c0104884:	c3                   	ret    $/;"	l
c0104885	obj/kernel.asm	/^c0104885 <slob_alloc>:$/;"	l
c0104885	obj/kernel.asm	/^c0104885:	55                   	push   %ebp$/;"	l
c0104886	obj/kernel.asm	/^c0104886:	89 e5                	mov    %esp,%ebp$/;"	l
c0104888	obj/kernel.asm	/^c0104888:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010488b	obj/kernel.asm	/^c010488b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010488e	obj/kernel.asm	/^c010488e:	83 c0 08             	add    $0x8,%eax$/;"	l
c0104891	obj/kernel.asm	/^c0104891:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c0104896	obj/kernel.asm	/^c0104896:	76 24                	jbe    c01048bc <slob_alloc+0x37>$/;"	l
c0104898	obj/kernel.asm	/^c0104898:	c7 44 24 0c 04 64 11 	movl   $0xc0116404,0xc(%esp)$/;"	l
c010489f	obj/kernel.asm	/^c010489f:	c0 $/;"	l
c01048a0	obj/kernel.asm	/^c01048a0:	c7 44 24 08 23 64 11 	movl   $0xc0116423,0x8(%esp)$/;"	l
c01048a7	obj/kernel.asm	/^c01048a7:	c0 $/;"	l
c01048a8	obj/kernel.asm	/^c01048a8:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c01048af	obj/kernel.asm	/^c01048af:	00 $/;"	l
c01048b0	obj/kernel.asm	/^c01048b0:	c7 04 24 38 64 11 c0 	movl   $0xc0116438,(%esp)$/;"	l
c01048b7	obj/kernel.asm	/^c01048b7:	e8 0c c6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01048bc	obj/kernel.asm	/^c01048bc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c01048c3	obj/kernel.asm	/^c01048c3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c01048ca	obj/kernel.asm	/^c01048ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01048cd	obj/kernel.asm	/^c01048cd:	83 c0 07             	add    $0x7,%eax$/;"	l
c01048d0	obj/kernel.asm	/^c01048d0:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c01048d3	obj/kernel.asm	/^c01048d3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01048d6	obj/kernel.asm	/^c01048d6:	e8 e3 fd ff ff       	call   c01046be <__intr_save>$/;"	l
c01048db	obj/kernel.asm	/^c01048db:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01048de	obj/kernel.asm	/^c01048de:	a1 08 fa 14 c0       	mov    0xc014fa08,%eax$/;"	l
c01048e3	obj/kernel.asm	/^c01048e3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01048e6	obj/kernel.asm	/^c01048e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01048e9	obj/kernel.asm	/^c01048e9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01048ec	obj/kernel.asm	/^c01048ec:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01048ef	obj/kernel.asm	/^c01048ef:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01048f3	obj/kernel.asm	/^c01048f3:	74 25                	je     c010491a <slob_alloc+0x95>$/;"	l
c01048f5	obj/kernel.asm	/^c01048f5:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01048f8	obj/kernel.asm	/^c01048f8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01048fb	obj/kernel.asm	/^c01048fb:	01 d0                	add    %edx,%eax$/;"	l
c01048fd	obj/kernel.asm	/^c01048fd:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0104900	obj/kernel.asm	/^c0104900:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104903	obj/kernel.asm	/^c0104903:	f7 d8                	neg    %eax$/;"	l
c0104905	obj/kernel.asm	/^c0104905:	21 d0                	and    %edx,%eax$/;"	l
c0104907	obj/kernel.asm	/^c0104907:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010490a	obj/kernel.asm	/^c010490a:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010490d	obj/kernel.asm	/^c010490d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104910	obj/kernel.asm	/^c0104910:	29 c2                	sub    %eax,%edx$/;"	l
c0104912	obj/kernel.asm	/^c0104912:	89 d0                	mov    %edx,%eax$/;"	l
c0104914	obj/kernel.asm	/^c0104914:	c1 f8 03             	sar    $0x3,%eax$/;"	l
c0104917	obj/kernel.asm	/^c0104917:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010491a	obj/kernel.asm	/^c010491a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010491d	obj/kernel.asm	/^c010491d:	8b 00                	mov    (%eax),%eax$/;"	l
c010491f	obj/kernel.asm	/^c010491f:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0104922	obj/kernel.asm	/^c0104922:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0104925	obj/kernel.asm	/^c0104925:	01 ca                	add    %ecx,%edx$/;"	l
c0104927	obj/kernel.asm	/^c0104927:	39 d0                	cmp    %edx,%eax$/;"	l
c0104929	obj/kernel.asm	/^c0104929:	0f 8c aa 00 00 00    	jl     c01049d9 <slob_alloc+0x154>$/;"	l
c010492f	obj/kernel.asm	/^c010492f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0104933	obj/kernel.asm	/^c0104933:	74 38                	je     c010496d <slob_alloc+0xe8>$/;"	l
c0104935	obj/kernel.asm	/^c0104935:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104938	obj/kernel.asm	/^c0104938:	8b 00                	mov    (%eax),%eax$/;"	l
c010493a	obj/kernel.asm	/^c010493a:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c010493d	obj/kernel.asm	/^c010493d:	89 c2                	mov    %eax,%edx$/;"	l
c010493f	obj/kernel.asm	/^c010493f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104942	obj/kernel.asm	/^c0104942:	89 10                	mov    %edx,(%eax)$/;"	l
c0104944	obj/kernel.asm	/^c0104944:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104947	obj/kernel.asm	/^c0104947:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010494a	obj/kernel.asm	/^c010494a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010494d	obj/kernel.asm	/^c010494d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104950	obj/kernel.asm	/^c0104950:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104953	obj/kernel.asm	/^c0104953:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0104956	obj/kernel.asm	/^c0104956:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104959	obj/kernel.asm	/^c0104959:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010495c	obj/kernel.asm	/^c010495c:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010495f	obj/kernel.asm	/^c010495f:	89 10                	mov    %edx,(%eax)$/;"	l
c0104961	obj/kernel.asm	/^c0104961:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104964	obj/kernel.asm	/^c0104964:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104967	obj/kernel.asm	/^c0104967:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010496a	obj/kernel.asm	/^c010496a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010496d	obj/kernel.asm	/^c010496d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104970	obj/kernel.asm	/^c0104970:	8b 00                	mov    (%eax),%eax$/;"	l
c0104972	obj/kernel.asm	/^c0104972:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0104975	obj/kernel.asm	/^c0104975:	75 0e                	jne    c0104985 <slob_alloc+0x100>$/;"	l
c0104977	obj/kernel.asm	/^c0104977:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010497a	obj/kernel.asm	/^c010497a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010497d	obj/kernel.asm	/^c010497d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104980	obj/kernel.asm	/^c0104980:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104983	obj/kernel.asm	/^c0104983:	eb 3c                	jmp    c01049c1 <slob_alloc+0x13c>$/;"	l
c0104985	obj/kernel.asm	/^c0104985:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0104988	obj/kernel.asm	/^c0104988:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010498f	obj/kernel.asm	/^c010498f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104992	obj/kernel.asm	/^c0104992:	01 c2                	add    %eax,%edx$/;"	l
c0104994	obj/kernel.asm	/^c0104994:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104997	obj/kernel.asm	/^c0104997:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010499a	obj/kernel.asm	/^c010499a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010499d	obj/kernel.asm	/^c010499d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01049a0	obj/kernel.asm	/^c01049a0:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01049a3	obj/kernel.asm	/^c01049a3:	8b 12                	mov    (%edx),%edx$/;"	l
c01049a5	obj/kernel.asm	/^c01049a5:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
c01049a8	obj/kernel.asm	/^c01049a8:	89 10                	mov    %edx,(%eax)$/;"	l
c01049aa	obj/kernel.asm	/^c01049aa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01049ad	obj/kernel.asm	/^c01049ad:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01049b0	obj/kernel.asm	/^c01049b0:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01049b3	obj/kernel.asm	/^c01049b3:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
c01049b6	obj/kernel.asm	/^c01049b6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01049b9	obj/kernel.asm	/^c01049b9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049bc	obj/kernel.asm	/^c01049bc:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01049bf	obj/kernel.asm	/^c01049bf:	89 10                	mov    %edx,(%eax)$/;"	l
c01049c1	obj/kernel.asm	/^c01049c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01049c4	obj/kernel.asm	/^c01049c4:	a3 08 fa 14 c0       	mov    %eax,0xc014fa08$/;"	l
c01049c9	obj/kernel.asm	/^c01049c9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01049cc	obj/kernel.asm	/^c01049cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01049cf	obj/kernel.asm	/^c01049cf:	e8 14 fd ff ff       	call   c01046e8 <__intr_restore>$/;"	l
c01049d4	obj/kernel.asm	/^c01049d4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049d7	obj/kernel.asm	/^c01049d7:	eb 7f                	jmp    c0104a58 <slob_alloc+0x1d3>$/;"	l
c01049d9	obj/kernel.asm	/^c01049d9:	a1 08 fa 14 c0       	mov    0xc014fa08,%eax$/;"	l
c01049de	obj/kernel.asm	/^c01049de:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01049e1	obj/kernel.asm	/^c01049e1:	75 61                	jne    c0104a44 <slob_alloc+0x1bf>$/;"	l
c01049e3	obj/kernel.asm	/^c01049e3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01049e6	obj/kernel.asm	/^c01049e6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01049e9	obj/kernel.asm	/^c01049e9:	e8 fa fc ff ff       	call   c01046e8 <__intr_restore>$/;"	l
c01049ee	obj/kernel.asm	/^c01049ee:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c01049f5	obj/kernel.asm	/^c01049f5:	75 07                	jne    c01049fe <slob_alloc+0x179>$/;"	l
c01049f7	obj/kernel.asm	/^c01049f7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01049fc	obj/kernel.asm	/^c01049fc:	eb 5a                	jmp    c0104a58 <slob_alloc+0x1d3>$/;"	l
c01049fe	obj/kernel.asm	/^c01049fe:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0104a05	obj/kernel.asm	/^c0104a05:	00 $/;"	l
c0104a06	obj/kernel.asm	/^c0104a06:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104a09	obj/kernel.asm	/^c0104a09:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104a0c	obj/kernel.asm	/^c0104a0c:	e8 07 fe ff ff       	call   c0104818 <__slob_get_free_pages>$/;"	l
c0104a11	obj/kernel.asm	/^c0104a11:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104a14	obj/kernel.asm	/^c0104a14:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104a18	obj/kernel.asm	/^c0104a18:	75 07                	jne    c0104a21 <slob_alloc+0x19c>$/;"	l
c0104a1a	obj/kernel.asm	/^c0104a1a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104a1f	obj/kernel.asm	/^c0104a1f:	eb 37                	jmp    c0104a58 <slob_alloc+0x1d3>$/;"	l
c0104a21	obj/kernel.asm	/^c0104a21:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0104a28	obj/kernel.asm	/^c0104a28:	00 $/;"	l
c0104a29	obj/kernel.asm	/^c0104a29:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a2c	obj/kernel.asm	/^c0104a2c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104a2f	obj/kernel.asm	/^c0104a2f:	e8 26 00 00 00       	call   c0104a5a <slob_free>$/;"	l
c0104a34	obj/kernel.asm	/^c0104a34:	e8 85 fc ff ff       	call   c01046be <__intr_save>$/;"	l
c0104a39	obj/kernel.asm	/^c0104a39:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104a3c	obj/kernel.asm	/^c0104a3c:	a1 08 fa 14 c0       	mov    0xc014fa08,%eax$/;"	l
c0104a41	obj/kernel.asm	/^c0104a41:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104a44	obj/kernel.asm	/^c0104a44:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a47	obj/kernel.asm	/^c0104a47:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104a4a	obj/kernel.asm	/^c0104a4a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a4d	obj/kernel.asm	/^c0104a4d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a50	obj/kernel.asm	/^c0104a50:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104a53	obj/kernel.asm	/^c0104a53:	e9 97 fe ff ff       	jmp    c01048ef <slob_alloc+0x6a>$/;"	l
c0104a58	obj/kernel.asm	/^c0104a58:	c9                   	leave  $/;"	l
c0104a59	obj/kernel.asm	/^c0104a59:	c3                   	ret    $/;"	l
c0104a5a	obj/kernel.asm	/^c0104a5a <slob_free>:$/;"	l
c0104a5a	obj/kernel.asm	/^c0104a5a:	55                   	push   %ebp$/;"	l
c0104a5b	obj/kernel.asm	/^c0104a5b:	89 e5                	mov    %esp,%ebp$/;"	l
c0104a5d	obj/kernel.asm	/^c0104a5d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104a60	obj/kernel.asm	/^c0104a60:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104a63	obj/kernel.asm	/^c0104a63:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104a66	obj/kernel.asm	/^c0104a66:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104a6a	obj/kernel.asm	/^c0104a6a:	75 05                	jne    c0104a71 <slob_free+0x17>$/;"	l
c0104a6c	obj/kernel.asm	/^c0104a6c:	e9 ff 00 00 00       	jmp    c0104b70 <slob_free+0x116>$/;"	l
c0104a71	obj/kernel.asm	/^c0104a71:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0104a75	obj/kernel.asm	/^c0104a75:	74 10                	je     c0104a87 <slob_free+0x2d>$/;"	l
c0104a77	obj/kernel.asm	/^c0104a77:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104a7a	obj/kernel.asm	/^c0104a7a:	83 c0 07             	add    $0x7,%eax$/;"	l
c0104a7d	obj/kernel.asm	/^c0104a7d:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0104a80	obj/kernel.asm	/^c0104a80:	89 c2                	mov    %eax,%edx$/;"	l
c0104a82	obj/kernel.asm	/^c0104a82:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a85	obj/kernel.asm	/^c0104a85:	89 10                	mov    %edx,(%eax)$/;"	l
c0104a87	obj/kernel.asm	/^c0104a87:	e8 32 fc ff ff       	call   c01046be <__intr_save>$/;"	l
c0104a8c	obj/kernel.asm	/^c0104a8c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104a8f	obj/kernel.asm	/^c0104a8f:	a1 08 fa 14 c0       	mov    0xc014fa08,%eax$/;"	l
c0104a94	obj/kernel.asm	/^c0104a94:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104a97	obj/kernel.asm	/^c0104a97:	eb 27                	jmp    c0104ac0 <slob_free+0x66>$/;"	l
c0104a99	obj/kernel.asm	/^c0104a99:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a9c	obj/kernel.asm	/^c0104a9c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a9f	obj/kernel.asm	/^c0104a9f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0104aa2	obj/kernel.asm	/^c0104aa2:	77 13                	ja     c0104ab7 <slob_free+0x5d>$/;"	l
c0104aa4	obj/kernel.asm	/^c0104aa4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104aa7	obj/kernel.asm	/^c0104aa7:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0104aaa	obj/kernel.asm	/^c0104aaa:	77 27                	ja     c0104ad3 <slob_free+0x79>$/;"	l
c0104aac	obj/kernel.asm	/^c0104aac:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104aaf	obj/kernel.asm	/^c0104aaf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104ab2	obj/kernel.asm	/^c0104ab2:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0104ab5	obj/kernel.asm	/^c0104ab5:	77 1c                	ja     c0104ad3 <slob_free+0x79>$/;"	l
c0104ab7	obj/kernel.asm	/^c0104ab7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104aba	obj/kernel.asm	/^c0104aba:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104abd	obj/kernel.asm	/^c0104abd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104ac0	obj/kernel.asm	/^c0104ac0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104ac3	obj/kernel.asm	/^c0104ac3:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0104ac6	obj/kernel.asm	/^c0104ac6:	76 d1                	jbe    c0104a99 <slob_free+0x3f>$/;"	l
c0104ac8	obj/kernel.asm	/^c0104ac8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104acb	obj/kernel.asm	/^c0104acb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104ace	obj/kernel.asm	/^c0104ace:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0104ad1	obj/kernel.asm	/^c0104ad1:	76 c6                	jbe    c0104a99 <slob_free+0x3f>$/;"	l
c0104ad3	obj/kernel.asm	/^c0104ad3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104ad6	obj/kernel.asm	/^c0104ad6:	8b 00                	mov    (%eax),%eax$/;"	l
c0104ad8	obj/kernel.asm	/^c0104ad8:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0104adf	obj/kernel.asm	/^c0104adf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104ae2	obj/kernel.asm	/^c0104ae2:	01 c2                	add    %eax,%edx$/;"	l
c0104ae4	obj/kernel.asm	/^c0104ae4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104ae7	obj/kernel.asm	/^c0104ae7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104aea	obj/kernel.asm	/^c0104aea:	39 c2                	cmp    %eax,%edx$/;"	l
c0104aec	obj/kernel.asm	/^c0104aec:	75 25                	jne    c0104b13 <slob_free+0xb9>$/;"	l
c0104aee	obj/kernel.asm	/^c0104aee:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104af1	obj/kernel.asm	/^c0104af1:	8b 10                	mov    (%eax),%edx$/;"	l
c0104af3	obj/kernel.asm	/^c0104af3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104af6	obj/kernel.asm	/^c0104af6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104af9	obj/kernel.asm	/^c0104af9:	8b 00                	mov    (%eax),%eax$/;"	l
c0104afb	obj/kernel.asm	/^c0104afb:	01 c2                	add    %eax,%edx$/;"	l
c0104afd	obj/kernel.asm	/^c0104afd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b00	obj/kernel.asm	/^c0104b00:	89 10                	mov    %edx,(%eax)$/;"	l
c0104b02	obj/kernel.asm	/^c0104b02:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b05	obj/kernel.asm	/^c0104b05:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104b08	obj/kernel.asm	/^c0104b08:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104b0b	obj/kernel.asm	/^c0104b0b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b0e	obj/kernel.asm	/^c0104b0e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104b11	obj/kernel.asm	/^c0104b11:	eb 0c                	jmp    c0104b1f <slob_free+0xc5>$/;"	l
c0104b13	obj/kernel.asm	/^c0104b13:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b16	obj/kernel.asm	/^c0104b16:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104b19	obj/kernel.asm	/^c0104b19:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b1c	obj/kernel.asm	/^c0104b1c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104b1f	obj/kernel.asm	/^c0104b1f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b22	obj/kernel.asm	/^c0104b22:	8b 00                	mov    (%eax),%eax$/;"	l
c0104b24	obj/kernel.asm	/^c0104b24:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0104b2b	obj/kernel.asm	/^c0104b2b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b2e	obj/kernel.asm	/^c0104b2e:	01 d0                	add    %edx,%eax$/;"	l
c0104b30	obj/kernel.asm	/^c0104b30:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0104b33	obj/kernel.asm	/^c0104b33:	75 1f                	jne    c0104b54 <slob_free+0xfa>$/;"	l
c0104b35	obj/kernel.asm	/^c0104b35:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b38	obj/kernel.asm	/^c0104b38:	8b 10                	mov    (%eax),%edx$/;"	l
c0104b3a	obj/kernel.asm	/^c0104b3a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b3d	obj/kernel.asm	/^c0104b3d:	8b 00                	mov    (%eax),%eax$/;"	l
c0104b3f	obj/kernel.asm	/^c0104b3f:	01 c2                	add    %eax,%edx$/;"	l
c0104b41	obj/kernel.asm	/^c0104b41:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b44	obj/kernel.asm	/^c0104b44:	89 10                	mov    %edx,(%eax)$/;"	l
c0104b46	obj/kernel.asm	/^c0104b46:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b49	obj/kernel.asm	/^c0104b49:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104b4c	obj/kernel.asm	/^c0104b4c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b4f	obj/kernel.asm	/^c0104b4f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104b52	obj/kernel.asm	/^c0104b52:	eb 09                	jmp    c0104b5d <slob_free+0x103>$/;"	l
c0104b54	obj/kernel.asm	/^c0104b54:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b57	obj/kernel.asm	/^c0104b57:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104b5a	obj/kernel.asm	/^c0104b5a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104b5d	obj/kernel.asm	/^c0104b5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b60	obj/kernel.asm	/^c0104b60:	a3 08 fa 14 c0       	mov    %eax,0xc014fa08$/;"	l
c0104b65	obj/kernel.asm	/^c0104b65:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104b68	obj/kernel.asm	/^c0104b68:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104b6b	obj/kernel.asm	/^c0104b6b:	e8 78 fb ff ff       	call   c01046e8 <__intr_restore>$/;"	l
c0104b70	obj/kernel.asm	/^c0104b70:	c9                   	leave  $/;"	l
c0104b71	obj/kernel.asm	/^c0104b71:	c3                   	ret    $/;"	l
c0104b72	obj/kernel.asm	/^c0104b72 <check_slab>:$/;"	l
c0104b72	obj/kernel.asm	/^c0104b72:	55                   	push   %ebp$/;"	l
c0104b73	obj/kernel.asm	/^c0104b73:	89 e5                	mov    %esp,%ebp$/;"	l
c0104b75	obj/kernel.asm	/^c0104b75:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104b78	obj/kernel.asm	/^c0104b78:	c7 04 24 4a 64 11 c0 	movl   $0xc011644a,(%esp)$/;"	l
c0104b7f	obj/kernel.asm	/^c0104b7f:	e8 e1 b7 ff ff       	call   c0100365 <cprintf>$/;"	l
c0104b84	obj/kernel.asm	/^c0104b84:	c9                   	leave  $/;"	l
c0104b85	obj/kernel.asm	/^c0104b85:	c3                   	ret    $/;"	l
c0104b86	obj/kernel.asm	/^c0104b86 <slab_init>:$/;"	l
c0104b86	obj/kernel.asm	/^c0104b86:	55                   	push   %ebp$/;"	l
c0104b87	obj/kernel.asm	/^c0104b87:	89 e5                	mov    %esp,%ebp$/;"	l
c0104b89	obj/kernel.asm	/^c0104b89:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104b8c	obj/kernel.asm	/^c0104b8c:	c7 04 24 60 64 11 c0 	movl   $0xc0116460,(%esp)$/;"	l
c0104b93	obj/kernel.asm	/^c0104b93:	e8 cd b7 ff ff       	call   c0100365 <cprintf>$/;"	l
c0104b98	obj/kernel.asm	/^c0104b98:	e8 d5 ff ff ff       	call   c0104b72 <check_slab>$/;"	l
c0104b9d	obj/kernel.asm	/^c0104b9d:	c9                   	leave  $/;"	l
c0104b9e	obj/kernel.asm	/^c0104b9e:	c3                   	ret    $/;"	l
c0104b9f	obj/kernel.asm	/^c0104b9f <kmalloc_init>:$/;"	l
c0104b9f	obj/kernel.asm	/^c0104b9f:	55                   	push   %ebp$/;"	l
c0104ba0	obj/kernel.asm	/^c0104ba0:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ba2	obj/kernel.asm	/^c0104ba2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104ba5	obj/kernel.asm	/^c0104ba5:	e8 dc ff ff ff       	call   c0104b86 <slab_init>$/;"	l
c0104baa	obj/kernel.asm	/^c0104baa:	c7 04 24 74 64 11 c0 	movl   $0xc0116474,(%esp)$/;"	l
c0104bb1	obj/kernel.asm	/^c0104bb1:	e8 af b7 ff ff       	call   c0100365 <cprintf>$/;"	l
c0104bb6	obj/kernel.asm	/^c0104bb6:	c9                   	leave  $/;"	l
c0104bb7	obj/kernel.asm	/^c0104bb7:	c3                   	ret    $/;"	l
c0104bb8	obj/kernel.asm	/^c0104bb8 <slab_allocated>:$/;"	l
c0104bb8	obj/kernel.asm	/^c0104bb8:	55                   	push   %ebp$/;"	l
c0104bb9	obj/kernel.asm	/^c0104bb9:	89 e5                	mov    %esp,%ebp$/;"	l
c0104bbb	obj/kernel.asm	/^c0104bbb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104bc0	obj/kernel.asm	/^c0104bc0:	5d                   	pop    %ebp$/;"	l
c0104bc1	obj/kernel.asm	/^c0104bc1:	c3                   	ret    $/;"	l
c0104bc2	obj/kernel.asm	/^c0104bc2 <kallocated>:$/;"	l
c0104bc2	obj/kernel.asm	/^c0104bc2:	55                   	push   %ebp$/;"	l
c0104bc3	obj/kernel.asm	/^c0104bc3:	89 e5                	mov    %esp,%ebp$/;"	l
c0104bc5	obj/kernel.asm	/^c0104bc5:	e8 ee ff ff ff       	call   c0104bb8 <slab_allocated>$/;"	l
c0104bca	obj/kernel.asm	/^c0104bca:	5d                   	pop    %ebp$/;"	l
c0104bcb	obj/kernel.asm	/^c0104bcb:	c3                   	ret    $/;"	l
c0104bcc	obj/kernel.asm	/^c0104bcc <find_order>:$/;"	l
c0104bcc	obj/kernel.asm	/^c0104bcc:	55                   	push   %ebp$/;"	l
c0104bcd	obj/kernel.asm	/^c0104bcd:	89 e5                	mov    %esp,%ebp$/;"	l
c0104bcf	obj/kernel.asm	/^c0104bcf:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0104bd2	obj/kernel.asm	/^c0104bd2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0104bd9	obj/kernel.asm	/^c0104bd9:	eb 07                	jmp    c0104be2 <find_order+0x16>$/;"	l
c0104bdb	obj/kernel.asm	/^c0104bdb:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0104bdf	obj/kernel.asm	/^c0104bdf:	d1 7d 08             	sarl   0x8(%ebp)$/;"	d
c0104be2	obj/kernel.asm	/^c0104be2:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c0104be9	obj/kernel.asm	/^c0104be9:	7f f0                	jg     c0104bdb <find_order+0xf>$/;"	l
c0104beb	obj/kernel.asm	/^c0104beb:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0104bee	obj/kernel.asm	/^c0104bee:	c9                   	leave  $/;"	l
c0104bef	obj/kernel.asm	/^c0104bef:	c3                   	ret    $/;"	l
c0104bf0	obj/kernel.asm	/^c0104bf0 <__kmalloc>:$/;"	l
c0104bf0	obj/kernel.asm	/^c0104bf0:	55                   	push   %ebp$/;"	l
c0104bf1	obj/kernel.asm	/^c0104bf1:	89 e5                	mov    %esp,%ebp$/;"	l
c0104bf3	obj/kernel.asm	/^c0104bf3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104bf6	obj/kernel.asm	/^c0104bf6:	81 7d 08 f7 0f 00 00 	cmpl   $0xff7,0x8(%ebp)$/;"	l
c0104bfd	obj/kernel.asm	/^c0104bfd:	77 38                	ja     c0104c37 <__kmalloc+0x47>$/;"	l
c0104bff	obj/kernel.asm	/^c0104bff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104c02	obj/kernel.asm	/^c0104c02:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
c0104c05	obj/kernel.asm	/^c0104c05:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0104c0c	obj/kernel.asm	/^c0104c0c:	00 $/;"	l
c0104c0d	obj/kernel.asm	/^c0104c0d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104c10	obj/kernel.asm	/^c0104c10:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104c14	obj/kernel.asm	/^c0104c14:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0104c17	obj/kernel.asm	/^c0104c17:	e8 69 fc ff ff       	call   c0104885 <slob_alloc>$/;"	l
c0104c1c	obj/kernel.asm	/^c0104c1c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104c1f	obj/kernel.asm	/^c0104c1f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104c23	obj/kernel.asm	/^c0104c23:	74 08                	je     c0104c2d <__kmalloc+0x3d>$/;"	l
c0104c25	obj/kernel.asm	/^c0104c25:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104c28	obj/kernel.asm	/^c0104c28:	83 c0 08             	add    $0x8,%eax$/;"	l
c0104c2b	obj/kernel.asm	/^c0104c2b:	eb 05                	jmp    c0104c32 <__kmalloc+0x42>$/;"	l
c0104c2d	obj/kernel.asm	/^c0104c2d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104c32	obj/kernel.asm	/^c0104c32:	e9 a6 00 00 00       	jmp    c0104cdd <__kmalloc+0xed>$/;"	l
c0104c37	obj/kernel.asm	/^c0104c37:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0104c3e	obj/kernel.asm	/^c0104c3e:	00 $/;"	l
c0104c3f	obj/kernel.asm	/^c0104c3f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104c42	obj/kernel.asm	/^c0104c42:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104c46	obj/kernel.asm	/^c0104c46:	c7 04 24 0c 00 00 00 	movl   $0xc,(%esp)$/;"	l
c0104c4d	obj/kernel.asm	/^c0104c4d:	e8 33 fc ff ff       	call   c0104885 <slob_alloc>$/;"	l
c0104c52	obj/kernel.asm	/^c0104c52:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104c55	obj/kernel.asm	/^c0104c55:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104c59	obj/kernel.asm	/^c0104c59:	75 07                	jne    c0104c62 <__kmalloc+0x72>$/;"	l
c0104c5b	obj/kernel.asm	/^c0104c5b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104c60	obj/kernel.asm	/^c0104c60:	eb 7b                	jmp    c0104cdd <__kmalloc+0xed>$/;"	l
c0104c62	obj/kernel.asm	/^c0104c62:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104c65	obj/kernel.asm	/^c0104c65:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c68	obj/kernel.asm	/^c0104c68:	e8 5f ff ff ff       	call   c0104bcc <find_order>$/;"	l
c0104c6d	obj/kernel.asm	/^c0104c6d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104c70	obj/kernel.asm	/^c0104c70:	89 02                	mov    %eax,(%edx)$/;"	l
c0104c72	obj/kernel.asm	/^c0104c72:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104c75	obj/kernel.asm	/^c0104c75:	8b 00                	mov    (%eax),%eax$/;"	l
c0104c77	obj/kernel.asm	/^c0104c77:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104c7b	obj/kernel.asm	/^c0104c7b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104c7e	obj/kernel.asm	/^c0104c7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c81	obj/kernel.asm	/^c0104c81:	e8 92 fb ff ff       	call   c0104818 <__slob_get_free_pages>$/;"	l
c0104c86	obj/kernel.asm	/^c0104c86:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104c89	obj/kernel.asm	/^c0104c89:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c0104c8c	obj/kernel.asm	/^c0104c8c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104c8f	obj/kernel.asm	/^c0104c8f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104c92	obj/kernel.asm	/^c0104c92:	85 c0                	test   %eax,%eax$/;"	l
c0104c94	obj/kernel.asm	/^c0104c94:	74 2f                	je     c0104cc5 <__kmalloc+0xd5>$/;"	l
c0104c96	obj/kernel.asm	/^c0104c96:	e8 23 fa ff ff       	call   c01046be <__intr_save>$/;"	l
c0104c9b	obj/kernel.asm	/^c0104c9b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104c9e	obj/kernel.asm	/^c0104c9e:	8b 15 64 0e 15 c0    	mov    0xc0150e64,%edx$/;"	l
c0104ca4	obj/kernel.asm	/^c0104ca4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104ca7	obj/kernel.asm	/^c0104ca7:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0104caa	obj/kernel.asm	/^c0104caa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104cad	obj/kernel.asm	/^c0104cad:	a3 64 0e 15 c0       	mov    %eax,0xc0150e64$/;"	l
c0104cb2	obj/kernel.asm	/^c0104cb2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104cb5	obj/kernel.asm	/^c0104cb5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104cb8	obj/kernel.asm	/^c0104cb8:	e8 2b fa ff ff       	call   c01046e8 <__intr_restore>$/;"	l
c0104cbd	obj/kernel.asm	/^c0104cbd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104cc0	obj/kernel.asm	/^c0104cc0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104cc3	obj/kernel.asm	/^c0104cc3:	eb 18                	jmp    c0104cdd <__kmalloc+0xed>$/;"	l
c0104cc5	obj/kernel.asm	/^c0104cc5:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%esp)$/;"	l
c0104ccc	obj/kernel.asm	/^c0104ccc:	00 $/;"	l
c0104ccd	obj/kernel.asm	/^c0104ccd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104cd0	obj/kernel.asm	/^c0104cd0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104cd3	obj/kernel.asm	/^c0104cd3:	e8 82 fd ff ff       	call   c0104a5a <slob_free>$/;"	l
c0104cd8	obj/kernel.asm	/^c0104cd8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104cdd	obj/kernel.asm	/^c0104cdd:	c9                   	leave  $/;"	l
c0104cde	obj/kernel.asm	/^c0104cde:	c3                   	ret    $/;"	l
c0104cdf	obj/kernel.asm	/^c0104cdf <kmalloc>:$/;"	l
c0104cdf	obj/kernel.asm	/^c0104cdf:	55                   	push   %ebp$/;"	l
c0104ce0	obj/kernel.asm	/^c0104ce0:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ce2	obj/kernel.asm	/^c0104ce2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104ce5	obj/kernel.asm	/^c0104ce5:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0104cec	obj/kernel.asm	/^c0104cec:	00 $/;"	l
c0104ced	obj/kernel.asm	/^c0104ced:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104cf0	obj/kernel.asm	/^c0104cf0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104cf3	obj/kernel.asm	/^c0104cf3:	e8 f8 fe ff ff       	call   c0104bf0 <__kmalloc>$/;"	l
c0104cf8	obj/kernel.asm	/^c0104cf8:	c9                   	leave  $/;"	l
c0104cf9	obj/kernel.asm	/^c0104cf9:	c3                   	ret    $/;"	l
c0104cfa	obj/kernel.asm	/^c0104cfa <kfree>:$/;"	l
c0104cfa	obj/kernel.asm	/^c0104cfa:	55                   	push   %ebp$/;"	l
c0104cfb	obj/kernel.asm	/^c0104cfb:	89 e5                	mov    %esp,%ebp$/;"	l
c0104cfd	obj/kernel.asm	/^c0104cfd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104d00	obj/kernel.asm	/^c0104d00:	c7 45 f0 64 0e 15 c0 	movl   $0xc0150e64,-0x10(%ebp)$/;"	l
c0104d07	obj/kernel.asm	/^c0104d07:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104d0b	obj/kernel.asm	/^c0104d0b:	75 05                	jne    c0104d12 <kfree+0x18>$/;"	l
c0104d0d	obj/kernel.asm	/^c0104d0d:	e9 a2 00 00 00       	jmp    c0104db4 <kfree+0xba>$/;"	l
c0104d12	obj/kernel.asm	/^c0104d12:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104d15	obj/kernel.asm	/^c0104d15:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0104d1a	obj/kernel.asm	/^c0104d1a:	85 c0                	test   %eax,%eax$/;"	l
c0104d1c	obj/kernel.asm	/^c0104d1c:	75 7f                	jne    c0104d9d <kfree+0xa3>$/;"	l
c0104d1e	obj/kernel.asm	/^c0104d1e:	e8 9b f9 ff ff       	call   c01046be <__intr_save>$/;"	l
c0104d23	obj/kernel.asm	/^c0104d23:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104d26	obj/kernel.asm	/^c0104d26:	a1 64 0e 15 c0       	mov    0xc0150e64,%eax$/;"	l
c0104d2b	obj/kernel.asm	/^c0104d2b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104d2e	obj/kernel.asm	/^c0104d2e:	eb 5c                	jmp    c0104d8c <kfree+0x92>$/;"	l
c0104d30	obj/kernel.asm	/^c0104d30:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d33	obj/kernel.asm	/^c0104d33:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104d36	obj/kernel.asm	/^c0104d36:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0104d39	obj/kernel.asm	/^c0104d39:	75 3f                	jne    c0104d7a <kfree+0x80>$/;"	l
c0104d3b	obj/kernel.asm	/^c0104d3b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d3e	obj/kernel.asm	/^c0104d3e:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0104d41	obj/kernel.asm	/^c0104d41:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104d44	obj/kernel.asm	/^c0104d44:	89 10                	mov    %edx,(%eax)$/;"	l
c0104d46	obj/kernel.asm	/^c0104d46:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104d49	obj/kernel.asm	/^c0104d49:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104d4c	obj/kernel.asm	/^c0104d4c:	e8 97 f9 ff ff       	call   c01046e8 <__intr_restore>$/;"	l
c0104d51	obj/kernel.asm	/^c0104d51:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d54	obj/kernel.asm	/^c0104d54:	8b 10                	mov    (%eax),%edx$/;"	l
c0104d56	obj/kernel.asm	/^c0104d56:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104d59	obj/kernel.asm	/^c0104d59:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0104d5d	obj/kernel.asm	/^c0104d5d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104d60	obj/kernel.asm	/^c0104d60:	e8 ec fa ff ff       	call   c0104851 <__slob_free_pages>$/;"	l
c0104d65	obj/kernel.asm	/^c0104d65:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%esp)$/;"	l
c0104d6c	obj/kernel.asm	/^c0104d6c:	00 $/;"	l
c0104d6d	obj/kernel.asm	/^c0104d6d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d70	obj/kernel.asm	/^c0104d70:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104d73	obj/kernel.asm	/^c0104d73:	e8 e2 fc ff ff       	call   c0104a5a <slob_free>$/;"	l
c0104d78	obj/kernel.asm	/^c0104d78:	eb 3a                	jmp    c0104db4 <kfree+0xba>$/;"	l
c0104d7a	obj/kernel.asm	/^c0104d7a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d7d	obj/kernel.asm	/^c0104d7d:	83 c0 08             	add    $0x8,%eax$/;"	l
c0104d80	obj/kernel.asm	/^c0104d80:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104d83	obj/kernel.asm	/^c0104d83:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d86	obj/kernel.asm	/^c0104d86:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104d89	obj/kernel.asm	/^c0104d89:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104d8c	obj/kernel.asm	/^c0104d8c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104d90	obj/kernel.asm	/^c0104d90:	75 9e                	jne    c0104d30 <kfree+0x36>$/;"	l
c0104d92	obj/kernel.asm	/^c0104d92:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104d95	obj/kernel.asm	/^c0104d95:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104d98	obj/kernel.asm	/^c0104d98:	e8 4b f9 ff ff       	call   c01046e8 <__intr_restore>$/;"	l
c0104d9d	obj/kernel.asm	/^c0104d9d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104da0	obj/kernel.asm	/^c0104da0:	83 e8 08             	sub    $0x8,%eax$/;"	l
c0104da3	obj/kernel.asm	/^c0104da3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0104daa	obj/kernel.asm	/^c0104daa:	00 $/;"	l
c0104dab	obj/kernel.asm	/^c0104dab:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104dae	obj/kernel.asm	/^c0104dae:	e8 a7 fc ff ff       	call   c0104a5a <slob_free>$/;"	l
c0104db3	obj/kernel.asm	/^c0104db3:	90                   	nop$/;"	l
c0104db4	obj/kernel.asm	/^c0104db4:	c9                   	leave  $/;"	l
c0104db5	obj/kernel.asm	/^c0104db5:	c3                   	ret    $/;"	l
c0104db6	obj/kernel.asm	/^c0104db6 <ksize>:$/;"	l
c0104db6	obj/kernel.asm	/^c0104db6:	55                   	push   %ebp$/;"	l
c0104db7	obj/kernel.asm	/^c0104db7:	89 e5                	mov    %esp,%ebp$/;"	l
c0104db9	obj/kernel.asm	/^c0104db9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104dbc	obj/kernel.asm	/^c0104dbc:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104dc0	obj/kernel.asm	/^c0104dc0:	75 07                	jne    c0104dc9 <ksize+0x13>$/;"	l
c0104dc2	obj/kernel.asm	/^c0104dc2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104dc7	obj/kernel.asm	/^c0104dc7:	eb 6b                	jmp    c0104e34 <ksize+0x7e>$/;"	l
c0104dc9	obj/kernel.asm	/^c0104dc9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104dcc	obj/kernel.asm	/^c0104dcc:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0104dd1	obj/kernel.asm	/^c0104dd1:	85 c0                	test   %eax,%eax$/;"	l
c0104dd3	obj/kernel.asm	/^c0104dd3:	75 54                	jne    c0104e29 <ksize+0x73>$/;"	l
c0104dd5	obj/kernel.asm	/^c0104dd5:	e8 e4 f8 ff ff       	call   c01046be <__intr_save>$/;"	l
c0104dda	obj/kernel.asm	/^c0104dda:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104ddd	obj/kernel.asm	/^c0104ddd:	a1 64 0e 15 c0       	mov    0xc0150e64,%eax$/;"	l
c0104de2	obj/kernel.asm	/^c0104de2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104de5	obj/kernel.asm	/^c0104de5:	eb 31                	jmp    c0104e18 <ksize+0x62>$/;"	l
c0104de7	obj/kernel.asm	/^c0104de7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104dea	obj/kernel.asm	/^c0104dea:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104ded	obj/kernel.asm	/^c0104ded:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0104df0	obj/kernel.asm	/^c0104df0:	75 1d                	jne    c0104e0f <ksize+0x59>$/;"	l
c0104df2	obj/kernel.asm	/^c0104df2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104df5	obj/kernel.asm	/^c0104df5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104df8	obj/kernel.asm	/^c0104df8:	e8 eb f8 ff ff       	call   c01046e8 <__intr_restore>$/;"	l
c0104dfd	obj/kernel.asm	/^c0104dfd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104e00	obj/kernel.asm	/^c0104e00:	8b 00                	mov    (%eax),%eax$/;"	l
c0104e02	obj/kernel.asm	/^c0104e02:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
c0104e07	obj/kernel.asm	/^c0104e07:	89 c1                	mov    %eax,%ecx$/;"	l
c0104e09	obj/kernel.asm	/^c0104e09:	d3 e2                	shl    %cl,%edx$/;"	d
c0104e0b	obj/kernel.asm	/^c0104e0b:	89 d0                	mov    %edx,%eax$/;"	l
c0104e0d	obj/kernel.asm	/^c0104e0d:	eb 25                	jmp    c0104e34 <ksize+0x7e>$/;"	l
c0104e0f	obj/kernel.asm	/^c0104e0f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104e12	obj/kernel.asm	/^c0104e12:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104e15	obj/kernel.asm	/^c0104e15:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104e18	obj/kernel.asm	/^c0104e18:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104e1c	obj/kernel.asm	/^c0104e1c:	75 c9                	jne    c0104de7 <ksize+0x31>$/;"	l
c0104e1e	obj/kernel.asm	/^c0104e1e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104e21	obj/kernel.asm	/^c0104e21:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104e24	obj/kernel.asm	/^c0104e24:	e8 bf f8 ff ff       	call   c01046e8 <__intr_restore>$/;"	l
c0104e29	obj/kernel.asm	/^c0104e29:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e2c	obj/kernel.asm	/^c0104e2c:	83 e8 08             	sub    $0x8,%eax$/;"	l
c0104e2f	obj/kernel.asm	/^c0104e2f:	8b 00                	mov    (%eax),%eax$/;"	l
c0104e31	obj/kernel.asm	/^c0104e31:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0104e34	obj/kernel.asm	/^c0104e34:	c9                   	leave  $/;"	l
c0104e35	obj/kernel.asm	/^c0104e35:	c3                   	ret    $/;"	l
c0104e36	obj/kernel.asm	/^c0104e36 <page2ppn>:$/;"	l
c0104e36	obj/kernel.asm	/^c0104e36:	55                   	push   %ebp$/;"	l
c0104e37	obj/kernel.asm	/^c0104e37:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e39	obj/kernel.asm	/^c0104e39:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0104e3c	obj/kernel.asm	/^c0104e3c:	a1 28 40 15 c0       	mov    0xc0154028,%eax$/;"	l
c0104e41	obj/kernel.asm	/^c0104e41:	29 c2                	sub    %eax,%edx$/;"	l
c0104e43	obj/kernel.asm	/^c0104e43:	89 d0                	mov    %edx,%eax$/;"	l
c0104e45	obj/kernel.asm	/^c0104e45:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c0104e48	obj/kernel.asm	/^c0104e48:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c0104e4e	obj/kernel.asm	/^c0104e4e:	5d                   	pop    %ebp$/;"	l
c0104e4f	obj/kernel.asm	/^c0104e4f:	c3                   	ret    $/;"	l
c0104e50	obj/kernel.asm	/^c0104e50 <page2pa>:$/;"	l
c0104e50	obj/kernel.asm	/^c0104e50:	55                   	push   %ebp$/;"	l
c0104e51	obj/kernel.asm	/^c0104e51:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e53	obj/kernel.asm	/^c0104e53:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104e56	obj/kernel.asm	/^c0104e56:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e59	obj/kernel.asm	/^c0104e59:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104e5c	obj/kernel.asm	/^c0104e5c:	e8 d5 ff ff ff       	call   c0104e36 <page2ppn>$/;"	l
c0104e61	obj/kernel.asm	/^c0104e61:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0104e64	obj/kernel.asm	/^c0104e64:	c9                   	leave  $/;"	l
c0104e65	obj/kernel.asm	/^c0104e65:	c3                   	ret    $/;"	l
c0104e66	obj/kernel.asm	/^c0104e66 <pa2page>:$/;"	l
c0104e66	obj/kernel.asm	/^c0104e66:	55                   	push   %ebp$/;"	l
c0104e67	obj/kernel.asm	/^c0104e67:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e69	obj/kernel.asm	/^c0104e69:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104e6c	obj/kernel.asm	/^c0104e6c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e6f	obj/kernel.asm	/^c0104e6f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104e72	obj/kernel.asm	/^c0104e72:	89 c2                	mov    %eax,%edx$/;"	l
c0104e74	obj/kernel.asm	/^c0104e74:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c0104e79	obj/kernel.asm	/^c0104e79:	39 c2                	cmp    %eax,%edx$/;"	l
c0104e7b	obj/kernel.asm	/^c0104e7b:	72 1c                	jb     c0104e99 <pa2page+0x33>$/;"	l
c0104e7d	obj/kernel.asm	/^c0104e7d:	c7 44 24 08 90 64 11 	movl   $0xc0116490,0x8(%esp)$/;"	l
c0104e84	obj/kernel.asm	/^c0104e84:	c0 $/;"	l
c0104e85	obj/kernel.asm	/^c0104e85:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0104e8c	obj/kernel.asm	/^c0104e8c:	00 $/;"	l
c0104e8d	obj/kernel.asm	/^c0104e8d:	c7 04 24 af 64 11 c0 	movl   $0xc01164af,(%esp)$/;"	l
c0104e94	obj/kernel.asm	/^c0104e94:	e8 2f c0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104e99	obj/kernel.asm	/^c0104e99:	8b 0d 28 40 15 c0    	mov    0xc0154028,%ecx$/;"	l
c0104e9f	obj/kernel.asm	/^c0104e9f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104ea2	obj/kernel.asm	/^c0104ea2:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104ea5	obj/kernel.asm	/^c0104ea5:	89 c2                	mov    %eax,%edx$/;"	l
c0104ea7	obj/kernel.asm	/^c0104ea7:	89 d0                	mov    %edx,%eax$/;"	l
c0104ea9	obj/kernel.asm	/^c0104ea9:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0104eac	obj/kernel.asm	/^c0104eac:	01 d0                	add    %edx,%eax$/;"	l
c0104eae	obj/kernel.asm	/^c0104eae:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0104eb1	obj/kernel.asm	/^c0104eb1:	01 c8                	add    %ecx,%eax$/;"	l
c0104eb3	obj/kernel.asm	/^c0104eb3:	c9                   	leave  $/;"	l
c0104eb4	obj/kernel.asm	/^c0104eb4:	c3                   	ret    $/;"	l
c0104eb5	obj/kernel.asm	/^c0104eb5 <page2kva>:$/;"	l
c0104eb5	obj/kernel.asm	/^c0104eb5:	55                   	push   %ebp$/;"	l
c0104eb6	obj/kernel.asm	/^c0104eb6:	89 e5                	mov    %esp,%ebp$/;"	l
c0104eb8	obj/kernel.asm	/^c0104eb8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104ebb	obj/kernel.asm	/^c0104ebb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104ebe	obj/kernel.asm	/^c0104ebe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104ec1	obj/kernel.asm	/^c0104ec1:	e8 8a ff ff ff       	call   c0104e50 <page2pa>$/;"	l
c0104ec6	obj/kernel.asm	/^c0104ec6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104ec9	obj/kernel.asm	/^c0104ec9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104ecc	obj/kernel.asm	/^c0104ecc:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104ecf	obj/kernel.asm	/^c0104ecf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104ed2	obj/kernel.asm	/^c0104ed2:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c0104ed7	obj/kernel.asm	/^c0104ed7:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0104eda	obj/kernel.asm	/^c0104eda:	72 23                	jb     c0104eff <page2kva+0x4a>$/;"	l
c0104edc	obj/kernel.asm	/^c0104edc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104edf	obj/kernel.asm	/^c0104edf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0104ee3	obj/kernel.asm	/^c0104ee3:	c7 44 24 08 c0 64 11 	movl   $0xc01164c0,0x8(%esp)$/;"	l
c0104eea	obj/kernel.asm	/^c0104eea:	c0 $/;"	l
c0104eeb	obj/kernel.asm	/^c0104eeb:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c0104ef2	obj/kernel.asm	/^c0104ef2:	00 $/;"	l
c0104ef3	obj/kernel.asm	/^c0104ef3:	c7 04 24 af 64 11 c0 	movl   $0xc01164af,(%esp)$/;"	l
c0104efa	obj/kernel.asm	/^c0104efa:	e8 c9 bf ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104eff	obj/kernel.asm	/^c0104eff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104f02	obj/kernel.asm	/^c0104f02:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104f07	obj/kernel.asm	/^c0104f07:	c9                   	leave  $/;"	l
c0104f08	obj/kernel.asm	/^c0104f08:	c3                   	ret    $/;"	l
c0104f09	obj/kernel.asm	/^c0104f09 <pte2page>:$/;"	l
c0104f09	obj/kernel.asm	/^c0104f09:	55                   	push   %ebp$/;"	l
c0104f0a	obj/kernel.asm	/^c0104f0a:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f0c	obj/kernel.asm	/^c0104f0c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104f0f	obj/kernel.asm	/^c0104f0f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f12	obj/kernel.asm	/^c0104f12:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104f15	obj/kernel.asm	/^c0104f15:	85 c0                	test   %eax,%eax$/;"	l
c0104f17	obj/kernel.asm	/^c0104f17:	75 1c                	jne    c0104f35 <pte2page+0x2c>$/;"	l
c0104f19	obj/kernel.asm	/^c0104f19:	c7 44 24 08 e4 64 11 	movl   $0xc01164e4,0x8(%esp)$/;"	l
c0104f20	obj/kernel.asm	/^c0104f20:	c0 $/;"	l
c0104f21	obj/kernel.asm	/^c0104f21:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c0104f28	obj/kernel.asm	/^c0104f28:	00 $/;"	l
c0104f29	obj/kernel.asm	/^c0104f29:	c7 04 24 af 64 11 c0 	movl   $0xc01164af,(%esp)$/;"	l
c0104f30	obj/kernel.asm	/^c0104f30:	e8 93 bf ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104f35	obj/kernel.asm	/^c0104f35:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f38	obj/kernel.asm	/^c0104f38:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104f3d	obj/kernel.asm	/^c0104f3d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104f40	obj/kernel.asm	/^c0104f40:	e8 21 ff ff ff       	call   c0104e66 <pa2page>$/;"	l
c0104f45	obj/kernel.asm	/^c0104f45:	c9                   	leave  $/;"	l
c0104f46	obj/kernel.asm	/^c0104f46:	c3                   	ret    $/;"	l
c0104f47	obj/kernel.asm	/^c0104f47 <pde2page>:$/;"	l
c0104f47	obj/kernel.asm	/^c0104f47:	55                   	push   %ebp$/;"	l
c0104f48	obj/kernel.asm	/^c0104f48:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f4a	obj/kernel.asm	/^c0104f4a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104f4d	obj/kernel.asm	/^c0104f4d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f50	obj/kernel.asm	/^c0104f50:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104f55	obj/kernel.asm	/^c0104f55:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104f58	obj/kernel.asm	/^c0104f58:	e8 09 ff ff ff       	call   c0104e66 <pa2page>$/;"	l
c0104f5d	obj/kernel.asm	/^c0104f5d:	c9                   	leave  $/;"	l
c0104f5e	obj/kernel.asm	/^c0104f5e:	c3                   	ret    $/;"	l
c0104f5f	obj/kernel.asm	/^c0104f5f <page_ref>:$/;"	l
c0104f5f	obj/kernel.asm	/^c0104f5f:	55                   	push   %ebp$/;"	l
c0104f60	obj/kernel.asm	/^c0104f60:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f62	obj/kernel.asm	/^c0104f62:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f65	obj/kernel.asm	/^c0104f65:	8b 00                	mov    (%eax),%eax$/;"	l
c0104f67	obj/kernel.asm	/^c0104f67:	5d                   	pop    %ebp$/;"	l
c0104f68	obj/kernel.asm	/^c0104f68:	c3                   	ret    $/;"	l
c0104f69	obj/kernel.asm	/^c0104f69 <set_page_ref>:$/;"	l
c0104f69	obj/kernel.asm	/^c0104f69:	55                   	push   %ebp$/;"	l
c0104f6a	obj/kernel.asm	/^c0104f6a:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f6c	obj/kernel.asm	/^c0104f6c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f6f	obj/kernel.asm	/^c0104f6f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0104f72	obj/kernel.asm	/^c0104f72:	89 10                	mov    %edx,(%eax)$/;"	l
c0104f74	obj/kernel.asm	/^c0104f74:	5d                   	pop    %ebp$/;"	l
c0104f75	obj/kernel.asm	/^c0104f75:	c3                   	ret    $/;"	l
c0104f76	obj/kernel.asm	/^c0104f76 <page_ref_inc>:$/;"	l
c0104f76	obj/kernel.asm	/^c0104f76:	55                   	push   %ebp$/;"	l
c0104f77	obj/kernel.asm	/^c0104f77:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f79	obj/kernel.asm	/^c0104f79:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f7c	obj/kernel.asm	/^c0104f7c:	8b 00                	mov    (%eax),%eax$/;"	l
c0104f7e	obj/kernel.asm	/^c0104f7e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0104f81	obj/kernel.asm	/^c0104f81:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f84	obj/kernel.asm	/^c0104f84:	89 10                	mov    %edx,(%eax)$/;"	l
c0104f86	obj/kernel.asm	/^c0104f86:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f89	obj/kernel.asm	/^c0104f89:	8b 00                	mov    (%eax),%eax$/;"	l
c0104f8b	obj/kernel.asm	/^c0104f8b:	5d                   	pop    %ebp$/;"	l
c0104f8c	obj/kernel.asm	/^c0104f8c:	c3                   	ret    $/;"	l
c0104f8d	obj/kernel.asm	/^c0104f8d <page_ref_dec>:$/;"	l
c0104f8d	obj/kernel.asm	/^c0104f8d:	55                   	push   %ebp$/;"	l
c0104f8e	obj/kernel.asm	/^c0104f8e:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f90	obj/kernel.asm	/^c0104f90:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f93	obj/kernel.asm	/^c0104f93:	8b 00                	mov    (%eax),%eax$/;"	l
c0104f95	obj/kernel.asm	/^c0104f95:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0104f98	obj/kernel.asm	/^c0104f98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f9b	obj/kernel.asm	/^c0104f9b:	89 10                	mov    %edx,(%eax)$/;"	l
c0104f9d	obj/kernel.asm	/^c0104f9d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104fa0	obj/kernel.asm	/^c0104fa0:	8b 00                	mov    (%eax),%eax$/;"	l
c0104fa2	obj/kernel.asm	/^c0104fa2:	5d                   	pop    %ebp$/;"	l
c0104fa3	obj/kernel.asm	/^c0104fa3:	c3                   	ret    $/;"	l
c0104fa4	obj/kernel.asm	/^c0104fa4 <__intr_save>:$/;"	l
c0104fa4	obj/kernel.asm	/^c0104fa4:	55                   	push   %ebp$/;"	l
c0104fa5	obj/kernel.asm	/^c0104fa5:	89 e5                	mov    %esp,%ebp$/;"	l
c0104fa7	obj/kernel.asm	/^c0104fa7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104faa	obj/kernel.asm	/^c0104faa:	9c                   	pushf  $/;"	l
c0104fab	obj/kernel.asm	/^c0104fab:	58                   	pop    %eax$/;"	l
c0104fac	obj/kernel.asm	/^c0104fac:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104faf	obj/kernel.asm	/^c0104faf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104fb2	obj/kernel.asm	/^c0104fb2:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0104fb7	obj/kernel.asm	/^c0104fb7:	85 c0                	test   %eax,%eax$/;"	l
c0104fb9	obj/kernel.asm	/^c0104fb9:	74 0c                	je     c0104fc7 <__intr_save+0x23>$/;"	l
c0104fbb	obj/kernel.asm	/^c0104fbb:	e8 6a d1 ff ff       	call   c010212a <intr_disable>$/;"	l
c0104fc0	obj/kernel.asm	/^c0104fc0:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0104fc5	obj/kernel.asm	/^c0104fc5:	eb 05                	jmp    c0104fcc <__intr_save+0x28>$/;"	l
c0104fc7	obj/kernel.asm	/^c0104fc7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104fcc	obj/kernel.asm	/^c0104fcc:	c9                   	leave  $/;"	l
c0104fcd	obj/kernel.asm	/^c0104fcd:	c3                   	ret    $/;"	l
c0104fce	obj/kernel.asm	/^c0104fce <__intr_restore>:$/;"	l
c0104fce	obj/kernel.asm	/^c0104fce:	55                   	push   %ebp$/;"	l
c0104fcf	obj/kernel.asm	/^c0104fcf:	89 e5                	mov    %esp,%ebp$/;"	l
c0104fd1	obj/kernel.asm	/^c0104fd1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104fd4	obj/kernel.asm	/^c0104fd4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104fd8	obj/kernel.asm	/^c0104fd8:	74 05                	je     c0104fdf <__intr_restore+0x11>$/;"	l
c0104fda	obj/kernel.asm	/^c0104fda:	e8 45 d1 ff ff       	call   c0102124 <intr_enable>$/;"	l
c0104fdf	obj/kernel.asm	/^c0104fdf:	c9                   	leave  $/;"	l
c0104fe0	obj/kernel.asm	/^c0104fe0:	c3                   	ret    $/;"	l
c0104fe1	obj/kernel.asm	/^c0104fe1 <lgdt>:$/;"	l
c0104fe1	obj/kernel.asm	/^c0104fe1:	55                   	push   %ebp$/;"	l
c0104fe2	obj/kernel.asm	/^c0104fe2:	89 e5                	mov    %esp,%ebp$/;"	l
c0104fe4	obj/kernel.asm	/^c0104fe4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104fe7	obj/kernel.asm	/^c0104fe7:	0f 01 10             	lgdtl  (%eax)$/;"	l
c0104fea	obj/kernel.asm	/^c0104fea:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c0104fef	obj/kernel.asm	/^c0104fef:	8e e8                	mov    %eax,%gs$/;"	l
c0104ff1	obj/kernel.asm	/^c0104ff1:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c0104ff6	obj/kernel.asm	/^c0104ff6:	8e e0                	mov    %eax,%fs$/;"	l
c0104ff8	obj/kernel.asm	/^c0104ff8:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0104ffd	obj/kernel.asm	/^c0104ffd:	8e c0                	mov    %eax,%es$/;"	l
c0104fff	obj/kernel.asm	/^c0104fff:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0105004	obj/kernel.asm	/^c0105004:	8e d8                	mov    %eax,%ds$/;"	l
c0105006	obj/kernel.asm	/^c0105006:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c010500b	obj/kernel.asm	/^c010500b:	8e d0                	mov    %eax,%ss$/;"	l
c010500d	obj/kernel.asm	/^c010500d:	ea 14 50 10 c0 08 00 	ljmp   $0x8,$0xc0105014$/;"	l
c0105014	obj/kernel.asm	/^c0105014:	5d                   	pop    %ebp$/;"	l
c0105015	obj/kernel.asm	/^c0105015:	c3                   	ret    $/;"	l
c0105016	obj/kernel.asm	/^c0105016 <load_esp0>:$/;"	l
c0105016	obj/kernel.asm	/^c0105016:	55                   	push   %ebp$/;"	l
c0105017	obj/kernel.asm	/^c0105017:	89 e5                	mov    %esp,%ebp$/;"	l
c0105019	obj/kernel.asm	/^c0105019:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010501c	obj/kernel.asm	/^c010501c:	a3 a4 0e 15 c0       	mov    %eax,0xc0150ea4$/;"	l
c0105021	obj/kernel.asm	/^c0105021:	5d                   	pop    %ebp$/;"	l
c0105022	obj/kernel.asm	/^c0105022:	c3                   	ret    $/;"	l
c0105023	obj/kernel.asm	/^c0105023 <gdt_init>:$/;"	l
c0105023	obj/kernel.asm	/^c0105023:	55                   	push   %ebp$/;"	l
c0105024	obj/kernel.asm	/^c0105024:	89 e5                	mov    %esp,%ebp$/;"	l
c0105026	obj/kernel.asm	/^c0105026:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0105029	obj/kernel.asm	/^c0105029:	b8 00 f0 14 c0       	mov    $0xc014f000,%eax$/;"	l
c010502e	obj/kernel.asm	/^c010502e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105031	obj/kernel.asm	/^c0105031:	e8 e0 ff ff ff       	call   c0105016 <load_esp0>$/;"	l
c0105036	obj/kernel.asm	/^c0105036:	66 c7 05 a8 0e 15 c0 	movw   $0x10,0xc0150ea8$/;"	l
c010503d	obj/kernel.asm	/^c010503d:	10 00 $/;"	l
c010503f	obj/kernel.asm	/^c010503f:	66 c7 05 48 fa 14 c0 	movw   $0x68,0xc014fa48$/;"	l
c0105046	obj/kernel.asm	/^c0105046:	68 00 $/;"	l
c0105048	obj/kernel.asm	/^c0105048:	b8 a0 0e 15 c0       	mov    $0xc0150ea0,%eax$/;"	l
c010504d	obj/kernel.asm	/^c010504d:	66 a3 4a fa 14 c0    	mov    %ax,0xc014fa4a$/;"	l
c0105053	obj/kernel.asm	/^c0105053:	b8 a0 0e 15 c0       	mov    $0xc0150ea0,%eax$/;"	l
c0105058	obj/kernel.asm	/^c0105058:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010505b	obj/kernel.asm	/^c010505b:	a2 4c fa 14 c0       	mov    %al,0xc014fa4c$/;"	l
c0105060	obj/kernel.asm	/^c0105060:	0f b6 05 4d fa 14 c0 	movzbl 0xc014fa4d,%eax$/;"	l
c0105067	obj/kernel.asm	/^c0105067:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c010506a	obj/kernel.asm	/^c010506a:	83 c8 09             	or     $0x9,%eax$/;"	l
c010506d	obj/kernel.asm	/^c010506d:	a2 4d fa 14 c0       	mov    %al,0xc014fa4d$/;"	l
c0105072	obj/kernel.asm	/^c0105072:	0f b6 05 4d fa 14 c0 	movzbl 0xc014fa4d,%eax$/;"	l
c0105079	obj/kernel.asm	/^c0105079:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c010507c	obj/kernel.asm	/^c010507c:	a2 4d fa 14 c0       	mov    %al,0xc014fa4d$/;"	l
c0105081	obj/kernel.asm	/^c0105081:	0f b6 05 4d fa 14 c0 	movzbl 0xc014fa4d,%eax$/;"	l
c0105088	obj/kernel.asm	/^c0105088:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
c010508b	obj/kernel.asm	/^c010508b:	a2 4d fa 14 c0       	mov    %al,0xc014fa4d$/;"	l
c0105090	obj/kernel.asm	/^c0105090:	0f b6 05 4d fa 14 c0 	movzbl 0xc014fa4d,%eax$/;"	l
c0105097	obj/kernel.asm	/^c0105097:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c010509a	obj/kernel.asm	/^c010509a:	a2 4d fa 14 c0       	mov    %al,0xc014fa4d$/;"	l
c010509f	obj/kernel.asm	/^c010509f:	0f b6 05 4e fa 14 c0 	movzbl 0xc014fa4e,%eax$/;"	l
c01050a6	obj/kernel.asm	/^c01050a6:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c01050a9	obj/kernel.asm	/^c01050a9:	a2 4e fa 14 c0       	mov    %al,0xc014fa4e$/;"	l
c01050ae	obj/kernel.asm	/^c01050ae:	0f b6 05 4e fa 14 c0 	movzbl 0xc014fa4e,%eax$/;"	l
c01050b5	obj/kernel.asm	/^c01050b5:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c01050b8	obj/kernel.asm	/^c01050b8:	a2 4e fa 14 c0       	mov    %al,0xc014fa4e$/;"	l
c01050bd	obj/kernel.asm	/^c01050bd:	0f b6 05 4e fa 14 c0 	movzbl 0xc014fa4e,%eax$/;"	l
c01050c4	obj/kernel.asm	/^c01050c4:	83 e0 df             	and    $0xffffffdf,%eax$/;"	l
c01050c7	obj/kernel.asm	/^c01050c7:	a2 4e fa 14 c0       	mov    %al,0xc014fa4e$/;"	l
c01050cc	obj/kernel.asm	/^c01050cc:	0f b6 05 4e fa 14 c0 	movzbl 0xc014fa4e,%eax$/;"	l
c01050d3	obj/kernel.asm	/^c01050d3:	83 c8 40             	or     $0x40,%eax$/;"	l
c01050d6	obj/kernel.asm	/^c01050d6:	a2 4e fa 14 c0       	mov    %al,0xc014fa4e$/;"	l
c01050db	obj/kernel.asm	/^c01050db:	0f b6 05 4e fa 14 c0 	movzbl 0xc014fa4e,%eax$/;"	l
c01050e2	obj/kernel.asm	/^c01050e2:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c01050e5	obj/kernel.asm	/^c01050e5:	a2 4e fa 14 c0       	mov    %al,0xc014fa4e$/;"	l
c01050ea	obj/kernel.asm	/^c01050ea:	b8 a0 0e 15 c0       	mov    $0xc0150ea0,%eax$/;"	l
c01050ef	obj/kernel.asm	/^c01050ef:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01050f2	obj/kernel.asm	/^c01050f2:	a2 4f fa 14 c0       	mov    %al,0xc014fa4f$/;"	l
c01050f7	obj/kernel.asm	/^c01050f7:	c7 04 24 50 fa 14 c0 	movl   $0xc014fa50,(%esp)$/;"	l
c01050fe	obj/kernel.asm	/^c01050fe:	e8 de fe ff ff       	call   c0104fe1 <lgdt>$/;"	l
c0105103	obj/kernel.asm	/^c0105103:	66 c7 45 fe 28 00    	movw   $0x28,-0x2(%ebp)$/;"	l
c0105109	obj/kernel.asm	/^c0105109:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c010510d	obj/kernel.asm	/^c010510d:	0f 00 d8             	ltr    %ax$/;"	l
c0105110	obj/kernel.asm	/^c0105110:	c9                   	leave  $/;"	l
c0105111	obj/kernel.asm	/^c0105111:	c3                   	ret    $/;"	l
c0105112	obj/kernel.asm	/^c0105112 <init_pmm_manager>:$/;"	l
c0105112	obj/kernel.asm	/^c0105112:	55                   	push   %ebp$/;"	l
c0105113	obj/kernel.asm	/^c0105113:	89 e5                	mov    %esp,%ebp$/;"	l
c0105115	obj/kernel.asm	/^c0105115:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0105118	obj/kernel.asm	/^c0105118:	c7 05 20 40 15 c0 70 	movl   $0xc0116370,0xc0154020$/;"	l
c010511f	obj/kernel.asm	/^c010511f:	63 11 c0 $/;"	l
c0105122	obj/kernel.asm	/^c0105122:	a1 20 40 15 c0       	mov    0xc0154020,%eax$/;"	l
c0105127	obj/kernel.asm	/^c0105127:	8b 00                	mov    (%eax),%eax$/;"	l
c0105129	obj/kernel.asm	/^c0105129:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010512d	obj/kernel.asm	/^c010512d:	c7 04 24 10 65 11 c0 	movl   $0xc0116510,(%esp)$/;"	l
c0105134	obj/kernel.asm	/^c0105134:	e8 2c b2 ff ff       	call   c0100365 <cprintf>$/;"	l
c0105139	obj/kernel.asm	/^c0105139:	a1 20 40 15 c0       	mov    0xc0154020,%eax$/;"	l
c010513e	obj/kernel.asm	/^c010513e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105141	obj/kernel.asm	/^c0105141:	ff d0                	call   *%eax$/;"	l
c0105143	obj/kernel.asm	/^c0105143:	c9                   	leave  $/;"	l
c0105144	obj/kernel.asm	/^c0105144:	c3                   	ret    $/;"	l
c0105145	obj/kernel.asm	/^c0105145 <init_memmap>:$/;"	l
c0105145	obj/kernel.asm	/^c0105145:	55                   	push   %ebp$/;"	l
c0105146	obj/kernel.asm	/^c0105146:	89 e5                	mov    %esp,%ebp$/;"	l
c0105148	obj/kernel.asm	/^c0105148:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010514b	obj/kernel.asm	/^c010514b:	a1 20 40 15 c0       	mov    0xc0154020,%eax$/;"	l
c0105150	obj/kernel.asm	/^c0105150:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105153	obj/kernel.asm	/^c0105153:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105156	obj/kernel.asm	/^c0105156:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010515a	obj/kernel.asm	/^c010515a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010515d	obj/kernel.asm	/^c010515d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0105160	obj/kernel.asm	/^c0105160:	ff d0                	call   *%eax$/;"	l
c0105162	obj/kernel.asm	/^c0105162:	c9                   	leave  $/;"	l
c0105163	obj/kernel.asm	/^c0105163:	c3                   	ret    $/;"	l
c0105164	obj/kernel.asm	/^c0105164 <alloc_pages>:$/;"	l
c0105164	obj/kernel.asm	/^c0105164:	55                   	push   %ebp$/;"	l
c0105165	obj/kernel.asm	/^c0105165:	89 e5                	mov    %esp,%ebp$/;"	l
c0105167	obj/kernel.asm	/^c0105167:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010516a	obj/kernel.asm	/^c010516a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105171	obj/kernel.asm	/^c0105171:	e8 2e fe ff ff       	call   c0104fa4 <__intr_save>$/;"	l
c0105176	obj/kernel.asm	/^c0105176:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105179	obj/kernel.asm	/^c0105179:	a1 20 40 15 c0       	mov    0xc0154020,%eax$/;"	l
c010517e	obj/kernel.asm	/^c010517e:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0105181	obj/kernel.asm	/^c0105181:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105184	obj/kernel.asm	/^c0105184:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0105187	obj/kernel.asm	/^c0105187:	ff d0                	call   *%eax$/;"	l
c0105189	obj/kernel.asm	/^c0105189:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010518c	obj/kernel.asm	/^c010518c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010518f	obj/kernel.asm	/^c010518f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105192	obj/kernel.asm	/^c0105192:	e8 37 fe ff ff       	call   c0104fce <__intr_restore>$/;"	l
c0105197	obj/kernel.asm	/^c0105197:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010519b	obj/kernel.asm	/^c010519b:	75 2d                	jne    c01051ca <alloc_pages+0x66>$/;"	l
c010519d	obj/kernel.asm	/^c010519d:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
c01051a1	obj/kernel.asm	/^c01051a1:	77 27                	ja     c01051ca <alloc_pages+0x66>$/;"	l
c01051a3	obj/kernel.asm	/^c01051a3:	a1 0c 0f 15 c0       	mov    0xc0150f0c,%eax$/;"	l
c01051a8	obj/kernel.asm	/^c01051a8:	85 c0                	test   %eax,%eax$/;"	l
c01051aa	obj/kernel.asm	/^c01051aa:	74 1e                	je     c01051ca <alloc_pages+0x66>$/;"	l
c01051ac	obj/kernel.asm	/^c01051ac:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01051af	obj/kernel.asm	/^c01051af:	a1 0c 41 15 c0       	mov    0xc015410c,%eax$/;"	l
c01051b4	obj/kernel.asm	/^c01051b4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01051bb	obj/kernel.asm	/^c01051bb:	00 $/;"	l
c01051bc	obj/kernel.asm	/^c01051bc:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01051c0	obj/kernel.asm	/^c01051c0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01051c3	obj/kernel.asm	/^c01051c3:	e8 b6 1d 00 00       	call   c0106f7e <swap_out>$/;"	l
c01051c8	obj/kernel.asm	/^c01051c8:	eb a7                	jmp    c0105171 <alloc_pages+0xd>$/;"	l
c01051ca	obj/kernel.asm	/^c01051ca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01051cd	obj/kernel.asm	/^c01051cd:	c9                   	leave  $/;"	l
c01051ce	obj/kernel.asm	/^c01051ce:	c3                   	ret    $/;"	l
c01051cf	obj/kernel.asm	/^c01051cf <free_pages>:$/;"	l
c01051cf	obj/kernel.asm	/^c01051cf:	55                   	push   %ebp$/;"	l
c01051d0	obj/kernel.asm	/^c01051d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01051d2	obj/kernel.asm	/^c01051d2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01051d5	obj/kernel.asm	/^c01051d5:	e8 ca fd ff ff       	call   c0104fa4 <__intr_save>$/;"	l
c01051da	obj/kernel.asm	/^c01051da:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01051dd	obj/kernel.asm	/^c01051dd:	a1 20 40 15 c0       	mov    0xc0154020,%eax$/;"	l
c01051e2	obj/kernel.asm	/^c01051e2:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01051e5	obj/kernel.asm	/^c01051e5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01051e8	obj/kernel.asm	/^c01051e8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01051ec	obj/kernel.asm	/^c01051ec:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01051ef	obj/kernel.asm	/^c01051ef:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01051f2	obj/kernel.asm	/^c01051f2:	ff d0                	call   *%eax$/;"	l
c01051f4	obj/kernel.asm	/^c01051f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01051f7	obj/kernel.asm	/^c01051f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01051fa	obj/kernel.asm	/^c01051fa:	e8 cf fd ff ff       	call   c0104fce <__intr_restore>$/;"	l
c01051ff	obj/kernel.asm	/^c01051ff:	c9                   	leave  $/;"	l
c0105200	obj/kernel.asm	/^c0105200:	c3                   	ret    $/;"	l
c0105201	obj/kernel.asm	/^c0105201 <nr_free_pages>:$/;"	l
c0105201	obj/kernel.asm	/^c0105201:	55                   	push   %ebp$/;"	l
c0105202	obj/kernel.asm	/^c0105202:	89 e5                	mov    %esp,%ebp$/;"	l
c0105204	obj/kernel.asm	/^c0105204:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105207	obj/kernel.asm	/^c0105207:	e8 98 fd ff ff       	call   c0104fa4 <__intr_save>$/;"	l
c010520c	obj/kernel.asm	/^c010520c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010520f	obj/kernel.asm	/^c010520f:	a1 20 40 15 c0       	mov    0xc0154020,%eax$/;"	l
c0105214	obj/kernel.asm	/^c0105214:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0105217	obj/kernel.asm	/^c0105217:	ff d0                	call   *%eax$/;"	l
c0105219	obj/kernel.asm	/^c0105219:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010521c	obj/kernel.asm	/^c010521c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010521f	obj/kernel.asm	/^c010521f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105222	obj/kernel.asm	/^c0105222:	e8 a7 fd ff ff       	call   c0104fce <__intr_restore>$/;"	l
c0105227	obj/kernel.asm	/^c0105227:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010522a	obj/kernel.asm	/^c010522a:	c9                   	leave  $/;"	l
c010522b	obj/kernel.asm	/^c010522b:	c3                   	ret    $/;"	l
c010522c	obj/kernel.asm	/^c010522c <page_init>:$/;"	l
c010522c	obj/kernel.asm	/^c010522c:	55                   	push   %ebp$/;"	l
c010522d	obj/kernel.asm	/^c010522d:	89 e5                	mov    %esp,%ebp$/;"	l
c010522f	obj/kernel.asm	/^c010522f:	57                   	push   %edi$/;"	l
c0105230	obj/kernel.asm	/^c0105230:	56                   	push   %esi$/;"	l
c0105231	obj/kernel.asm	/^c0105231:	53                   	push   %ebx$/;"	l
c0105232	obj/kernel.asm	/^c0105232:	81 ec 9c 00 00 00    	sub    $0x9c,%esp$/;"	l
c0105238	obj/kernel.asm	/^c0105238:	c7 45 c4 00 80 00 c0 	movl   $0xc0008000,-0x3c(%ebp)$/;"	l
c010523f	obj/kernel.asm	/^c010523f:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c0105246	obj/kernel.asm	/^c0105246:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c010524d	obj/kernel.asm	/^c010524d:	c7 04 24 27 65 11 c0 	movl   $0xc0116527,(%esp)$/;"	l
c0105254	obj/kernel.asm	/^c0105254:	e8 0c b1 ff ff       	call   c0100365 <cprintf>$/;"	l
c0105259	obj/kernel.asm	/^c0105259:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0105260	obj/kernel.asm	/^c0105260:	e9 15 01 00 00       	jmp    c010537a <page_init+0x14e>$/;"	l
c0105265	obj/kernel.asm	/^c0105265:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0105268	obj/kernel.asm	/^c0105268:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010526b	obj/kernel.asm	/^c010526b:	89 d0                	mov    %edx,%eax$/;"	l
c010526d	obj/kernel.asm	/^c010526d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105270	obj/kernel.asm	/^c0105270:	01 d0                	add    %edx,%eax$/;"	l
c0105272	obj/kernel.asm	/^c0105272:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105275	obj/kernel.asm	/^c0105275:	01 c8                	add    %ecx,%eax$/;"	l
c0105277	obj/kernel.asm	/^c0105277:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010527a	obj/kernel.asm	/^c010527a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010527d	obj/kernel.asm	/^c010527d:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0105280	obj/kernel.asm	/^c0105280:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
c0105283	obj/kernel.asm	/^c0105283:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0105286	obj/kernel.asm	/^c0105286:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105289	obj/kernel.asm	/^c0105289:	89 d0                	mov    %edx,%eax$/;"	l
c010528b	obj/kernel.asm	/^c010528b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010528e	obj/kernel.asm	/^c010528e:	01 d0                	add    %edx,%eax$/;"	l
c0105290	obj/kernel.asm	/^c0105290:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105293	obj/kernel.asm	/^c0105293:	01 c8                	add    %ecx,%eax$/;"	l
c0105295	obj/kernel.asm	/^c0105295:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0105298	obj/kernel.asm	/^c0105298:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c010529b	obj/kernel.asm	/^c010529b:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c010529e	obj/kernel.asm	/^c010529e:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c01052a1	obj/kernel.asm	/^c01052a1:	01 c8                	add    %ecx,%eax$/;"	l
c01052a3	obj/kernel.asm	/^c01052a3:	11 da                	adc    %ebx,%edx$/;"	l
c01052a5	obj/kernel.asm	/^c01052a5:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c01052a8	obj/kernel.asm	/^c01052a8:	89 55 b4             	mov    %edx,-0x4c(%ebp)$/;"	l
c01052ab	obj/kernel.asm	/^c01052ab:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01052ae	obj/kernel.asm	/^c01052ae:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01052b1	obj/kernel.asm	/^c01052b1:	89 d0                	mov    %edx,%eax$/;"	l
c01052b3	obj/kernel.asm	/^c01052b3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01052b6	obj/kernel.asm	/^c01052b6:	01 d0                	add    %edx,%eax$/;"	l
c01052b8	obj/kernel.asm	/^c01052b8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01052bb	obj/kernel.asm	/^c01052bb:	01 c8                	add    %ecx,%eax$/;"	l
c01052bd	obj/kernel.asm	/^c01052bd:	83 c0 14             	add    $0x14,%eax$/;"	l
c01052c0	obj/kernel.asm	/^c01052c0:	8b 00                	mov    (%eax),%eax$/;"	l
c01052c2	obj/kernel.asm	/^c01052c2:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)$/;"	l
c01052c8	obj/kernel.asm	/^c01052c8:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c01052cb	obj/kernel.asm	/^c01052cb:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c01052ce	obj/kernel.asm	/^c01052ce:	83 c0 ff             	add    $0xffffffff,%eax$/;"	l
c01052d1	obj/kernel.asm	/^c01052d1:	83 d2 ff             	adc    $0xffffffff,%edx$/;"	l
c01052d4	obj/kernel.asm	/^c01052d4:	89 c6                	mov    %eax,%esi$/;"	l
c01052d6	obj/kernel.asm	/^c01052d6:	89 d7                	mov    %edx,%edi$/;"	l
c01052d8	obj/kernel.asm	/^c01052d8:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01052db	obj/kernel.asm	/^c01052db:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01052de	obj/kernel.asm	/^c01052de:	89 d0                	mov    %edx,%eax$/;"	l
c01052e0	obj/kernel.asm	/^c01052e0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01052e3	obj/kernel.asm	/^c01052e3:	01 d0                	add    %edx,%eax$/;"	l
c01052e5	obj/kernel.asm	/^c01052e5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01052e8	obj/kernel.asm	/^c01052e8:	01 c8                	add    %ecx,%eax$/;"	l
c01052ea	obj/kernel.asm	/^c01052ea:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c01052ed	obj/kernel.asm	/^c01052ed:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c01052f0	obj/kernel.asm	/^c01052f0:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax$/;"	l
c01052f6	obj/kernel.asm	/^c01052f6:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
c01052fa	obj/kernel.asm	/^c01052fa:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
c01052fe	obj/kernel.asm	/^c01052fe:	89 7c 24 18          	mov    %edi,0x18(%esp)$/;"	l
c0105302	obj/kernel.asm	/^c0105302:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0105305	obj/kernel.asm	/^c0105305:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0105308	obj/kernel.asm	/^c0105308:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010530c	obj/kernel.asm	/^c010530c:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0105310	obj/kernel.asm	/^c0105310:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0105314	obj/kernel.asm	/^c0105314:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
c0105318	obj/kernel.asm	/^c0105318:	c7 04 24 34 65 11 c0 	movl   $0xc0116534,(%esp)$/;"	l
c010531f	obj/kernel.asm	/^c010531f:	e8 41 b0 ff ff       	call   c0100365 <cprintf>$/;"	l
c0105324	obj/kernel.asm	/^c0105324:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0105327	obj/kernel.asm	/^c0105327:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010532a	obj/kernel.asm	/^c010532a:	89 d0                	mov    %edx,%eax$/;"	l
c010532c	obj/kernel.asm	/^c010532c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010532f	obj/kernel.asm	/^c010532f:	01 d0                	add    %edx,%eax$/;"	l
c0105331	obj/kernel.asm	/^c0105331:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105334	obj/kernel.asm	/^c0105334:	01 c8                	add    %ecx,%eax$/;"	l
c0105336	obj/kernel.asm	/^c0105336:	83 c0 14             	add    $0x14,%eax$/;"	l
c0105339	obj/kernel.asm	/^c0105339:	8b 00                	mov    (%eax),%eax$/;"	l
c010533b	obj/kernel.asm	/^c010533b:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010533e	obj/kernel.asm	/^c010533e:	75 36                	jne    c0105376 <page_init+0x14a>$/;"	l
c0105340	obj/kernel.asm	/^c0105340:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105343	obj/kernel.asm	/^c0105343:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0105346	obj/kernel.asm	/^c0105346:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c0105349	obj/kernel.asm	/^c0105349:	77 2b                	ja     c0105376 <page_init+0x14a>$/;"	l
c010534b	obj/kernel.asm	/^c010534b:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c010534e	obj/kernel.asm	/^c010534e:	72 05                	jb     c0105355 <page_init+0x129>$/;"	l
c0105350	obj/kernel.asm	/^c0105350:	3b 45 b0             	cmp    -0x50(%ebp),%eax$/;"	l
c0105353	obj/kernel.asm	/^c0105353:	73 21                	jae    c0105376 <page_init+0x14a>$/;"	l
c0105355	obj/kernel.asm	/^c0105355:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0105359	obj/kernel.asm	/^c0105359:	77 1b                	ja     c0105376 <page_init+0x14a>$/;"	l
c010535b	obj/kernel.asm	/^c010535b:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c010535f	obj/kernel.asm	/^c010535f:	72 09                	jb     c010536a <page_init+0x13e>$/;"	l
c0105361	obj/kernel.asm	/^c0105361:	81 7d b8 ff ff ff 37 	cmpl   $0x37ffffff,-0x48(%ebp)$/;"	l
c0105368	obj/kernel.asm	/^c0105368:	77 0c                	ja     c0105376 <page_init+0x14a>$/;"	l
c010536a	obj/kernel.asm	/^c010536a:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010536d	obj/kernel.asm	/^c010536d:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0105370	obj/kernel.asm	/^c0105370:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105373	obj/kernel.asm	/^c0105373:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0105376	obj/kernel.asm	/^c0105376:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c010537a	obj/kernel.asm	/^c010537a:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010537d	obj/kernel.asm	/^c010537d:	8b 00                	mov    (%eax),%eax$/;"	l
c010537f	obj/kernel.asm	/^c010537f:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0105382	obj/kernel.asm	/^c0105382:	0f 8f dd fe ff ff    	jg     c0105265 <page_init+0x39>$/;"	l
c0105388	obj/kernel.asm	/^c0105388:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010538c	obj/kernel.asm	/^c010538c:	72 1d                	jb     c01053ab <page_init+0x17f>$/;"	l
c010538e	obj/kernel.asm	/^c010538e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0105392	obj/kernel.asm	/^c0105392:	77 09                	ja     c010539d <page_init+0x171>$/;"	l
c0105394	obj/kernel.asm	/^c0105394:	81 7d e0 00 00 00 38 	cmpl   $0x38000000,-0x20(%ebp)$/;"	l
c010539b	obj/kernel.asm	/^c010539b:	76 0e                	jbe    c01053ab <page_init+0x17f>$/;"	l
c010539d	obj/kernel.asm	/^c010539d:	c7 45 e0 00 00 00 38 	movl   $0x38000000,-0x20(%ebp)$/;"	l
c01053a4	obj/kernel.asm	/^c01053a4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c01053ab	obj/kernel.asm	/^c01053ab:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01053ae	obj/kernel.asm	/^c01053ae:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01053b1	obj/kernel.asm	/^c01053b1:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c01053b5	obj/kernel.asm	/^c01053b5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01053b8	obj/kernel.asm	/^c01053b8:	a3 80 0e 15 c0       	mov    %eax,0xc0150e80$/;"	l
c01053bd	obj/kernel.asm	/^c01053bd:	c7 45 ac 00 10 00 00 	movl   $0x1000,-0x54(%ebp)$/;"	l
c01053c4	obj/kernel.asm	/^c01053c4:	b8 04 42 15 c0       	mov    $0xc0154204,%eax$/;"	l
c01053c9	obj/kernel.asm	/^c01053c9:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01053cc	obj/kernel.asm	/^c01053cc:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c01053cf	obj/kernel.asm	/^c01053cf:	01 d0                	add    %edx,%eax$/;"	l
c01053d1	obj/kernel.asm	/^c01053d1:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c01053d4	obj/kernel.asm	/^c01053d4:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c01053d7	obj/kernel.asm	/^c01053d7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01053dc	obj/kernel.asm	/^c01053dc:	f7 75 ac             	divl   -0x54(%ebp)$/;"	l
c01053df	obj/kernel.asm	/^c01053df:	89 d0                	mov    %edx,%eax$/;"	l
c01053e1	obj/kernel.asm	/^c01053e1:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c01053e4	obj/kernel.asm	/^c01053e4:	29 c2                	sub    %eax,%edx$/;"	l
c01053e6	obj/kernel.asm	/^c01053e6:	89 d0                	mov    %edx,%eax$/;"	l
c01053e8	obj/kernel.asm	/^c01053e8:	a3 28 40 15 c0       	mov    %eax,0xc0154028$/;"	l
c01053ed	obj/kernel.asm	/^c01053ed:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01053f4	obj/kernel.asm	/^c01053f4:	eb 2f                	jmp    c0105425 <page_init+0x1f9>$/;"	l
c01053f6	obj/kernel.asm	/^c01053f6:	8b 0d 28 40 15 c0    	mov    0xc0154028,%ecx$/;"	l
c01053fc	obj/kernel.asm	/^c01053fc:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01053ff	obj/kernel.asm	/^c01053ff:	89 d0                	mov    %edx,%eax$/;"	l
c0105401	obj/kernel.asm	/^c0105401:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0105404	obj/kernel.asm	/^c0105404:	01 d0                	add    %edx,%eax$/;"	l
c0105406	obj/kernel.asm	/^c0105406:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105409	obj/kernel.asm	/^c0105409:	01 c8                	add    %ecx,%eax$/;"	l
c010540b	obj/kernel.asm	/^c010540b:	83 c0 04             	add    $0x4,%eax$/;"	l
c010540e	obj/kernel.asm	/^c010540e:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)$/;"	l
c0105415	obj/kernel.asm	/^c0105415:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0105418	obj/kernel.asm	/^c0105418:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
c010541b	obj/kernel.asm	/^c010541b:	8b 55 90             	mov    -0x70(%ebp),%edx$/;"	l
c010541e	obj/kernel.asm	/^c010541e:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0105421	obj/kernel.asm	/^c0105421:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0105425	obj/kernel.asm	/^c0105425:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105428	obj/kernel.asm	/^c0105428:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c010542d	obj/kernel.asm	/^c010542d:	39 c2                	cmp    %eax,%edx$/;"	l
c010542f	obj/kernel.asm	/^c010542f:	72 c5                	jb     c01053f6 <page_init+0x1ca>$/;"	l
c0105431	obj/kernel.asm	/^c0105431:	8b 15 80 0e 15 c0    	mov    0xc0150e80,%edx$/;"	l
c0105437	obj/kernel.asm	/^c0105437:	89 d0                	mov    %edx,%eax$/;"	l
c0105439	obj/kernel.asm	/^c0105439:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010543c	obj/kernel.asm	/^c010543c:	01 d0                	add    %edx,%eax$/;"	l
c010543e	obj/kernel.asm	/^c010543e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105441	obj/kernel.asm	/^c0105441:	89 c2                	mov    %eax,%edx$/;"	l
c0105443	obj/kernel.asm	/^c0105443:	a1 28 40 15 c0       	mov    0xc0154028,%eax$/;"	l
c0105448	obj/kernel.asm	/^c0105448:	01 d0                	add    %edx,%eax$/;"	l
c010544a	obj/kernel.asm	/^c010544a:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c010544d	obj/kernel.asm	/^c010544d:	81 7d a4 ff ff ff bf 	cmpl   $0xbfffffff,-0x5c(%ebp)$/;"	l
c0105454	obj/kernel.asm	/^c0105454:	77 23                	ja     c0105479 <page_init+0x24d>$/;"	l
c0105456	obj/kernel.asm	/^c0105456:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0105459	obj/kernel.asm	/^c0105459:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010545d	obj/kernel.asm	/^c010545d:	c7 44 24 08 64 65 11 	movl   $0xc0116564,0x8(%esp)$/;"	l
c0105464	obj/kernel.asm	/^c0105464:	c0 $/;"	l
c0105465	obj/kernel.asm	/^c0105465:	c7 44 24 04 e9 00 00 	movl   $0xe9,0x4(%esp)$/;"	l
c010546c	obj/kernel.asm	/^c010546c:	00 $/;"	l
c010546d	obj/kernel.asm	/^c010546d:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105474	obj/kernel.asm	/^c0105474:	e8 4f ba ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105479	obj/kernel.asm	/^c0105479:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c010547c	obj/kernel.asm	/^c010547c:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0105481	obj/kernel.asm	/^c0105481:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0105484	obj/kernel.asm	/^c0105484:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c010548b	obj/kernel.asm	/^c010548b:	e9 74 01 00 00       	jmp    c0105604 <page_init+0x3d8>$/;"	l
c0105490	obj/kernel.asm	/^c0105490:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0105493	obj/kernel.asm	/^c0105493:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105496	obj/kernel.asm	/^c0105496:	89 d0                	mov    %edx,%eax$/;"	l
c0105498	obj/kernel.asm	/^c0105498:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010549b	obj/kernel.asm	/^c010549b:	01 d0                	add    %edx,%eax$/;"	l
c010549d	obj/kernel.asm	/^c010549d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01054a0	obj/kernel.asm	/^c01054a0:	01 c8                	add    %ecx,%eax$/;"	l
c01054a2	obj/kernel.asm	/^c01054a2:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01054a5	obj/kernel.asm	/^c01054a5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01054a8	obj/kernel.asm	/^c01054a8:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01054ab	obj/kernel.asm	/^c01054ab:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01054ae	obj/kernel.asm	/^c01054ae:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01054b1	obj/kernel.asm	/^c01054b1:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01054b4	obj/kernel.asm	/^c01054b4:	89 d0                	mov    %edx,%eax$/;"	l
c01054b6	obj/kernel.asm	/^c01054b6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01054b9	obj/kernel.asm	/^c01054b9:	01 d0                	add    %edx,%eax$/;"	l
c01054bb	obj/kernel.asm	/^c01054bb:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01054be	obj/kernel.asm	/^c01054be:	01 c8                	add    %ecx,%eax$/;"	l
c01054c0	obj/kernel.asm	/^c01054c0:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c01054c3	obj/kernel.asm	/^c01054c3:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c01054c6	obj/kernel.asm	/^c01054c6:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01054c9	obj/kernel.asm	/^c01054c9:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01054cc	obj/kernel.asm	/^c01054cc:	01 c8                	add    %ecx,%eax$/;"	l
c01054ce	obj/kernel.asm	/^c01054ce:	11 da                	adc    %ebx,%edx$/;"	l
c01054d0	obj/kernel.asm	/^c01054d0:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01054d3	obj/kernel.asm	/^c01054d3:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c01054d6	obj/kernel.asm	/^c01054d6:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01054d9	obj/kernel.asm	/^c01054d9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01054dc	obj/kernel.asm	/^c01054dc:	89 d0                	mov    %edx,%eax$/;"	l
c01054de	obj/kernel.asm	/^c01054de:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01054e1	obj/kernel.asm	/^c01054e1:	01 d0                	add    %edx,%eax$/;"	l
c01054e3	obj/kernel.asm	/^c01054e3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01054e6	obj/kernel.asm	/^c01054e6:	01 c8                	add    %ecx,%eax$/;"	l
c01054e8	obj/kernel.asm	/^c01054e8:	83 c0 14             	add    $0x14,%eax$/;"	l
c01054eb	obj/kernel.asm	/^c01054eb:	8b 00                	mov    (%eax),%eax$/;"	l
c01054ed	obj/kernel.asm	/^c01054ed:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01054f0	obj/kernel.asm	/^c01054f0:	0f 85 0a 01 00 00    	jne    c0105600 <page_init+0x3d4>$/;"	l
c01054f6	obj/kernel.asm	/^c01054f6:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c01054f9	obj/kernel.asm	/^c01054f9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01054fe	obj/kernel.asm	/^c01054fe:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0105501	obj/kernel.asm	/^c0105501:	72 17                	jb     c010551a <page_init+0x2ee>$/;"	l
c0105503	obj/kernel.asm	/^c0105503:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0105506	obj/kernel.asm	/^c0105506:	77 05                	ja     c010550d <page_init+0x2e1>$/;"	l
c0105508	obj/kernel.asm	/^c0105508:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c010550b	obj/kernel.asm	/^c010550b:	76 0d                	jbe    c010551a <page_init+0x2ee>$/;"	l
c010550d	obj/kernel.asm	/^c010550d:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0105510	obj/kernel.asm	/^c0105510:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0105513	obj/kernel.asm	/^c0105513:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c010551a	obj/kernel.asm	/^c010551a:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c010551e	obj/kernel.asm	/^c010551e:	72 1d                	jb     c010553d <page_init+0x311>$/;"	l
c0105520	obj/kernel.asm	/^c0105520:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0105524	obj/kernel.asm	/^c0105524:	77 09                	ja     c010552f <page_init+0x303>$/;"	l
c0105526	obj/kernel.asm	/^c0105526:	81 7d c8 00 00 00 38 	cmpl   $0x38000000,-0x38(%ebp)$/;"	l
c010552d	obj/kernel.asm	/^c010552d:	76 0e                	jbe    c010553d <page_init+0x311>$/;"	l
c010552f	obj/kernel.asm	/^c010552f:	c7 45 c8 00 00 00 38 	movl   $0x38000000,-0x38(%ebp)$/;"	l
c0105536	obj/kernel.asm	/^c0105536:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c010553d	obj/kernel.asm	/^c010553d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105540	obj/kernel.asm	/^c0105540:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0105543	obj/kernel.asm	/^c0105543:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0105546	obj/kernel.asm	/^c0105546:	0f 87 b4 00 00 00    	ja     c0105600 <page_init+0x3d4>$/;"	l
c010554c	obj/kernel.asm	/^c010554c:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c010554f	obj/kernel.asm	/^c010554f:	72 09                	jb     c010555a <page_init+0x32e>$/;"	l
c0105551	obj/kernel.asm	/^c0105551:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0105554	obj/kernel.asm	/^c0105554:	0f 83 a6 00 00 00    	jae    c0105600 <page_init+0x3d4>$/;"	l
c010555a	obj/kernel.asm	/^c010555a:	c7 45 9c 00 10 00 00 	movl   $0x1000,-0x64(%ebp)$/;"	l
c0105561	obj/kernel.asm	/^c0105561:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0105564	obj/kernel.asm	/^c0105564:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0105567	obj/kernel.asm	/^c0105567:	01 d0                	add    %edx,%eax$/;"	l
c0105569	obj/kernel.asm	/^c0105569:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010556c	obj/kernel.asm	/^c010556c:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c010556f	obj/kernel.asm	/^c010556f:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0105572	obj/kernel.asm	/^c0105572:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0105577	obj/kernel.asm	/^c0105577:	f7 75 9c             	divl   -0x64(%ebp)$/;"	l
c010557a	obj/kernel.asm	/^c010557a:	89 d0                	mov    %edx,%eax$/;"	l
c010557c	obj/kernel.asm	/^c010557c:	8b 55 98             	mov    -0x68(%ebp),%edx$/;"	l
c010557f	obj/kernel.asm	/^c010557f:	29 c2                	sub    %eax,%edx$/;"	l
c0105581	obj/kernel.asm	/^c0105581:	89 d0                	mov    %edx,%eax$/;"	l
c0105583	obj/kernel.asm	/^c0105583:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0105588	obj/kernel.asm	/^c0105588:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010558b	obj/kernel.asm	/^c010558b:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010558e	obj/kernel.asm	/^c010558e:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0105591	obj/kernel.asm	/^c0105591:	89 45 94             	mov    %eax,-0x6c(%ebp)$/;"	l
c0105594	obj/kernel.asm	/^c0105594:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
c0105597	obj/kernel.asm	/^c0105597:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010559c	obj/kernel.asm	/^c010559c:	89 c7                	mov    %eax,%edi$/;"	l
c010559e	obj/kernel.asm	/^c010559e:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
c01055a4	obj/kernel.asm	/^c01055a4:	89 7d 80             	mov    %edi,-0x80(%ebp)$/;"	l
c01055a7	obj/kernel.asm	/^c01055a7:	89 d0                	mov    %edx,%eax$/;"	l
c01055a9	obj/kernel.asm	/^c01055a9:	83 e0 00             	and    $0x0,%eax$/;"	l
c01055ac	obj/kernel.asm	/^c01055ac:	89 45 84             	mov    %eax,-0x7c(%ebp)$/;"	l
c01055af	obj/kernel.asm	/^c01055af:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c01055b2	obj/kernel.asm	/^c01055b2:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c01055b5	obj/kernel.asm	/^c01055b5:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01055b8	obj/kernel.asm	/^c01055b8:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c01055bb	obj/kernel.asm	/^c01055bb:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01055be	obj/kernel.asm	/^c01055be:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01055c1	obj/kernel.asm	/^c01055c1:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c01055c4	obj/kernel.asm	/^c01055c4:	77 3a                	ja     c0105600 <page_init+0x3d4>$/;"	l
c01055c6	obj/kernel.asm	/^c01055c6:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c01055c9	obj/kernel.asm	/^c01055c9:	72 05                	jb     c01055d0 <page_init+0x3a4>$/;"	l
c01055cb	obj/kernel.asm	/^c01055cb:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c01055ce	obj/kernel.asm	/^c01055ce:	73 30                	jae    c0105600 <page_init+0x3d4>$/;"	l
c01055d0	obj/kernel.asm	/^c01055d0:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
c01055d3	obj/kernel.asm	/^c01055d3:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
c01055d6	obj/kernel.asm	/^c01055d6:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01055d9	obj/kernel.asm	/^c01055d9:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01055dc	obj/kernel.asm	/^c01055dc:	29 c8                	sub    %ecx,%eax$/;"	l
c01055de	obj/kernel.asm	/^c01055de:	19 da                	sbb    %ebx,%edx$/;"	l
c01055e0	obj/kernel.asm	/^c01055e0:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c01055e4	obj/kernel.asm	/^c01055e4:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01055e7	obj/kernel.asm	/^c01055e7:	89 c3                	mov    %eax,%ebx$/;"	l
c01055e9	obj/kernel.asm	/^c01055e9:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01055ec	obj/kernel.asm	/^c01055ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01055ef	obj/kernel.asm	/^c01055ef:	e8 72 f8 ff ff       	call   c0104e66 <pa2page>$/;"	l
c01055f4	obj/kernel.asm	/^c01055f4:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c01055f8	obj/kernel.asm	/^c01055f8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01055fb	obj/kernel.asm	/^c01055fb:	e8 45 fb ff ff       	call   c0105145 <init_memmap>$/;"	l
c0105600	obj/kernel.asm	/^c0105600:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0105604	obj/kernel.asm	/^c0105604:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0105607	obj/kernel.asm	/^c0105607:	8b 00                	mov    (%eax),%eax$/;"	l
c0105609	obj/kernel.asm	/^c0105609:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c010560c	obj/kernel.asm	/^c010560c:	0f 8f 7e fe ff ff    	jg     c0105490 <page_init+0x264>$/;"	l
c0105612	obj/kernel.asm	/^c0105612:	81 c4 9c 00 00 00    	add    $0x9c,%esp$/;"	l
c0105618	obj/kernel.asm	/^c0105618:	5b                   	pop    %ebx$/;"	l
c0105619	obj/kernel.asm	/^c0105619:	5e                   	pop    %esi$/;"	l
c010561a	obj/kernel.asm	/^c010561a:	5f                   	pop    %edi$/;"	l
c010561b	obj/kernel.asm	/^c010561b:	5d                   	pop    %ebp$/;"	l
c010561c	obj/kernel.asm	/^c010561c:	c3                   	ret    $/;"	l
c010561d	obj/kernel.asm	/^c010561d <enable_paging>:$/;"	l
c010561d	obj/kernel.asm	/^c010561d:	55                   	push   %ebp$/;"	l
c010561e	obj/kernel.asm	/^c010561e:	89 e5                	mov    %esp,%ebp$/;"	l
c0105620	obj/kernel.asm	/^c0105620:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0105623	obj/kernel.asm	/^c0105623:	a1 24 40 15 c0       	mov    0xc0154024,%eax$/;"	l
c0105628	obj/kernel.asm	/^c0105628:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010562b	obj/kernel.asm	/^c010562b:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010562e	obj/kernel.asm	/^c010562e:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0105631	obj/kernel.asm	/^c0105631:	0f 20 c0             	mov    %cr0,%eax$/;"	l
c0105634	obj/kernel.asm	/^c0105634:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105637	obj/kernel.asm	/^c0105637:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010563a	obj/kernel.asm	/^c010563a:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010563d	obj/kernel.asm	/^c010563d:	81 4d fc 2f 00 05 80 	orl    $0x8005002f,-0x4(%ebp)$/;"	l
c0105644	obj/kernel.asm	/^c0105644:	83 65 fc f3          	andl   $0xfffffff3,-0x4(%ebp)$/;"	l
c0105648	obj/kernel.asm	/^c0105648:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010564b	obj/kernel.asm	/^c010564b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010564e	obj/kernel.asm	/^c010564e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105651	obj/kernel.asm	/^c0105651:	0f 22 c0             	mov    %eax,%cr0$/;"	l
c0105654	obj/kernel.asm	/^c0105654:	c9                   	leave  $/;"	l
c0105655	obj/kernel.asm	/^c0105655:	c3                   	ret    $/;"	l
c0105656	obj/kernel.asm	/^c0105656 <boot_map_segment>:$/;"	l
c0105656	obj/kernel.asm	/^c0105656:	55                   	push   %ebp$/;"	l
c0105657	obj/kernel.asm	/^c0105657:	89 e5                	mov    %esp,%ebp$/;"	l
c0105659	obj/kernel.asm	/^c0105659:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010565c	obj/kernel.asm	/^c010565c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010565f	obj/kernel.asm	/^c010565f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105662	obj/kernel.asm	/^c0105662:	31 d0                	xor    %edx,%eax$/;"	l
c0105664	obj/kernel.asm	/^c0105664:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105669	obj/kernel.asm	/^c0105669:	85 c0                	test   %eax,%eax$/;"	l
c010566b	obj/kernel.asm	/^c010566b:	74 24                	je     c0105691 <boot_map_segment+0x3b>$/;"	l
c010566d	obj/kernel.asm	/^c010566d:	c7 44 24 0c 96 65 11 	movl   $0xc0116596,0xc(%esp)$/;"	l
c0105674	obj/kernel.asm	/^c0105674:	c0 $/;"	l
c0105675	obj/kernel.asm	/^c0105675:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c010567c	obj/kernel.asm	/^c010567c:	c0 $/;"	l
c010567d	obj/kernel.asm	/^c010567d:	c7 44 24 04 12 01 00 	movl   $0x112,0x4(%esp)$/;"	l
c0105684	obj/kernel.asm	/^c0105684:	00 $/;"	l
c0105685	obj/kernel.asm	/^c0105685:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c010568c	obj/kernel.asm	/^c010568c:	e8 37 b8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105691	obj/kernel.asm	/^c0105691:	c7 45 f0 00 10 00 00 	movl   $0x1000,-0x10(%ebp)$/;"	l
c0105698	obj/kernel.asm	/^c0105698:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010569b	obj/kernel.asm	/^c010569b:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01056a0	obj/kernel.asm	/^c01056a0:	89 c2                	mov    %eax,%edx$/;"	l
c01056a2	obj/kernel.asm	/^c01056a2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01056a5	obj/kernel.asm	/^c01056a5:	01 c2                	add    %eax,%edx$/;"	l
c01056a7	obj/kernel.asm	/^c01056a7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01056aa	obj/kernel.asm	/^c01056aa:	01 d0                	add    %edx,%eax$/;"	l
c01056ac	obj/kernel.asm	/^c01056ac:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01056af	obj/kernel.asm	/^c01056af:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01056b2	obj/kernel.asm	/^c01056b2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01056b5	obj/kernel.asm	/^c01056b5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01056ba	obj/kernel.asm	/^c01056ba:	f7 75 f0             	divl   -0x10(%ebp)$/;"	l
c01056bd	obj/kernel.asm	/^c01056bd:	89 d0                	mov    %edx,%eax$/;"	l
c01056bf	obj/kernel.asm	/^c01056bf:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01056c2	obj/kernel.asm	/^c01056c2:	29 c2                	sub    %eax,%edx$/;"	l
c01056c4	obj/kernel.asm	/^c01056c4:	89 d0                	mov    %edx,%eax$/;"	l
c01056c6	obj/kernel.asm	/^c01056c6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01056c9	obj/kernel.asm	/^c01056c9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01056cc	obj/kernel.asm	/^c01056cc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01056cf	obj/kernel.asm	/^c01056cf:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01056d2	obj/kernel.asm	/^c01056d2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01056d5	obj/kernel.asm	/^c01056d5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01056da	obj/kernel.asm	/^c01056da:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c01056dd	obj/kernel.asm	/^c01056dd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01056e0	obj/kernel.asm	/^c01056e0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01056e3	obj/kernel.asm	/^c01056e3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01056e6	obj/kernel.asm	/^c01056e6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01056eb	obj/kernel.asm	/^c01056eb:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
c01056ee	obj/kernel.asm	/^c01056ee:	eb 6b                	jmp    c010575b <boot_map_segment+0x105>$/;"	l
c01056f0	obj/kernel.asm	/^c01056f0:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c01056f7	obj/kernel.asm	/^c01056f7:	00 $/;"	l
c01056f8	obj/kernel.asm	/^c01056f8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01056fb	obj/kernel.asm	/^c01056fb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01056ff	obj/kernel.asm	/^c01056ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105702	obj/kernel.asm	/^c0105702:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105705	obj/kernel.asm	/^c0105705:	e8 d1 01 00 00       	call   c01058db <get_pte>$/;"	l
c010570a	obj/kernel.asm	/^c010570a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010570d	obj/kernel.asm	/^c010570d:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0105711	obj/kernel.asm	/^c0105711:	75 24                	jne    c0105737 <boot_map_segment+0xe1>$/;"	l
c0105713	obj/kernel.asm	/^c0105713:	c7 44 24 0c c2 65 11 	movl   $0xc01165c2,0xc(%esp)$/;"	l
c010571a	obj/kernel.asm	/^c010571a:	c0 $/;"	l
c010571b	obj/kernel.asm	/^c010571b:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0105722	obj/kernel.asm	/^c0105722:	c0 $/;"	l
c0105723	obj/kernel.asm	/^c0105723:	c7 44 24 04 18 01 00 	movl   $0x118,0x4(%esp)$/;"	l
c010572a	obj/kernel.asm	/^c010572a:	00 $/;"	l
c010572b	obj/kernel.asm	/^c010572b:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105732	obj/kernel.asm	/^c0105732:	e8 91 b7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105737	obj/kernel.asm	/^c0105737:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010573a	obj/kernel.asm	/^c010573a:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010573d	obj/kernel.asm	/^c010573d:	09 d0                	or     %edx,%eax$/;"	l
c010573f	obj/kernel.asm	/^c010573f:	83 c8 01             	or     $0x1,%eax$/;"	l
c0105742	obj/kernel.asm	/^c0105742:	89 c2                	mov    %eax,%edx$/;"	l
c0105744	obj/kernel.asm	/^c0105744:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105747	obj/kernel.asm	/^c0105747:	89 10                	mov    %edx,(%eax)$/;"	l
c0105749	obj/kernel.asm	/^c0105749:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c010574d	obj/kernel.asm	/^c010574d:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0105754	obj/kernel.asm	/^c0105754:	81 45 14 00 10 00 00 	addl   $0x1000,0x14(%ebp)$/;"	l
c010575b	obj/kernel.asm	/^c010575b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010575f	obj/kernel.asm	/^c010575f:	75 8f                	jne    c01056f0 <boot_map_segment+0x9a>$/;"	l
c0105761	obj/kernel.asm	/^c0105761:	c9                   	leave  $/;"	l
c0105762	obj/kernel.asm	/^c0105762:	c3                   	ret    $/;"	l
c0105763	obj/kernel.asm	/^c0105763 <boot_alloc_page>:$/;"	l
c0105763	obj/kernel.asm	/^c0105763:	55                   	push   %ebp$/;"	l
c0105764	obj/kernel.asm	/^c0105764:	89 e5                	mov    %esp,%ebp$/;"	l
c0105766	obj/kernel.asm	/^c0105766:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105769	obj/kernel.asm	/^c0105769:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0105770	obj/kernel.asm	/^c0105770:	e8 ef f9 ff ff       	call   c0105164 <alloc_pages>$/;"	l
c0105775	obj/kernel.asm	/^c0105775:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105778	obj/kernel.asm	/^c0105778:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010577c	obj/kernel.asm	/^c010577c:	75 1c                	jne    c010579a <boot_alloc_page+0x37>$/;"	l
c010577e	obj/kernel.asm	/^c010577e:	c7 44 24 08 cf 65 11 	movl   $0xc01165cf,0x8(%esp)$/;"	l
c0105785	obj/kernel.asm	/^c0105785:	c0 $/;"	l
c0105786	obj/kernel.asm	/^c0105786:	c7 44 24 04 24 01 00 	movl   $0x124,0x4(%esp)$/;"	l
c010578d	obj/kernel.asm	/^c010578d:	00 $/;"	l
c010578e	obj/kernel.asm	/^c010578e:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105795	obj/kernel.asm	/^c0105795:	e8 2e b7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010579a	obj/kernel.asm	/^c010579a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010579d	obj/kernel.asm	/^c010579d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01057a0	obj/kernel.asm	/^c01057a0:	e8 10 f7 ff ff       	call   c0104eb5 <page2kva>$/;"	l
c01057a5	obj/kernel.asm	/^c01057a5:	c9                   	leave  $/;"	l
c01057a6	obj/kernel.asm	/^c01057a6:	c3                   	ret    $/;"	l
c01057a7	obj/kernel.asm	/^c01057a7 <pmm_init>:$/;"	l
c01057a7	obj/kernel.asm	/^c01057a7:	55                   	push   %ebp$/;"	l
c01057a8	obj/kernel.asm	/^c01057a8:	89 e5                	mov    %esp,%ebp$/;"	l
c01057aa	obj/kernel.asm	/^c01057aa:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01057ad	obj/kernel.asm	/^c01057ad:	e8 60 f9 ff ff       	call   c0105112 <init_pmm_manager>$/;"	l
c01057b2	obj/kernel.asm	/^c01057b2:	e8 75 fa ff ff       	call   c010522c <page_init>$/;"	l
c01057b7	obj/kernel.asm	/^c01057b7:	e8 5d 09 00 00       	call   c0106119 <check_alloc_page>$/;"	l
c01057bc	obj/kernel.asm	/^c01057bc:	e8 a2 ff ff ff       	call   c0105763 <boot_alloc_page>$/;"	l
c01057c1	obj/kernel.asm	/^c01057c1:	a3 84 0e 15 c0       	mov    %eax,0xc0150e84$/;"	l
c01057c6	obj/kernel.asm	/^c01057c6:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c01057cb	obj/kernel.asm	/^c01057cb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c01057d2	obj/kernel.asm	/^c01057d2:	00 $/;"	l
c01057d3	obj/kernel.asm	/^c01057d3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01057da	obj/kernel.asm	/^c01057da:	00 $/;"	l
c01057db	obj/kernel.asm	/^c01057db:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01057de	obj/kernel.asm	/^c01057de:	e8 8d fd 00 00       	call   c0115570 <memset>$/;"	l
c01057e3	obj/kernel.asm	/^c01057e3:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c01057e8	obj/kernel.asm	/^c01057e8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01057eb	obj/kernel.asm	/^c01057eb:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c01057f2	obj/kernel.asm	/^c01057f2:	77 23                	ja     c0105817 <pmm_init+0x70>$/;"	l
c01057f4	obj/kernel.asm	/^c01057f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01057f7	obj/kernel.asm	/^c01057f7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01057fb	obj/kernel.asm	/^c01057fb:	c7 44 24 08 64 65 11 	movl   $0xc0116564,0x8(%esp)$/;"	l
c0105802	obj/kernel.asm	/^c0105802:	c0 $/;"	l
c0105803	obj/kernel.asm	/^c0105803:	c7 44 24 04 3e 01 00 	movl   $0x13e,0x4(%esp)$/;"	l
c010580a	obj/kernel.asm	/^c010580a:	00 $/;"	l
c010580b	obj/kernel.asm	/^c010580b:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105812	obj/kernel.asm	/^c0105812:	e8 b1 b6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105817	obj/kernel.asm	/^c0105817:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010581a	obj/kernel.asm	/^c010581a:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010581f	obj/kernel.asm	/^c010581f:	a3 24 40 15 c0       	mov    %eax,0xc0154024$/;"	l
c0105824	obj/kernel.asm	/^c0105824:	e8 0e 09 00 00       	call   c0106137 <check_pgdir>$/;"	l
c0105829	obj/kernel.asm	/^c0105829:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c010582e	obj/kernel.asm	/^c010582e:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c0105834	obj/kernel.asm	/^c0105834:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c0105839	obj/kernel.asm	/^c0105839:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010583c	obj/kernel.asm	/^c010583c:	81 7d f0 ff ff ff bf 	cmpl   $0xbfffffff,-0x10(%ebp)$/;"	l
c0105843	obj/kernel.asm	/^c0105843:	77 23                	ja     c0105868 <pmm_init+0xc1>$/;"	l
c0105845	obj/kernel.asm	/^c0105845:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105848	obj/kernel.asm	/^c0105848:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010584c	obj/kernel.asm	/^c010584c:	c7 44 24 08 64 65 11 	movl   $0xc0116564,0x8(%esp)$/;"	l
c0105853	obj/kernel.asm	/^c0105853:	c0 $/;"	l
c0105854	obj/kernel.asm	/^c0105854:	c7 44 24 04 46 01 00 	movl   $0x146,0x4(%esp)$/;"	l
c010585b	obj/kernel.asm	/^c010585b:	00 $/;"	l
c010585c	obj/kernel.asm	/^c010585c:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105863	obj/kernel.asm	/^c0105863:	e8 60 b6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105868	obj/kernel.asm	/^c0105868:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010586b	obj/kernel.asm	/^c010586b:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0105870	obj/kernel.asm	/^c0105870:	83 c8 03             	or     $0x3,%eax$/;"	l
c0105873	obj/kernel.asm	/^c0105873:	89 02                	mov    %eax,(%edx)$/;"	l
c0105875	obj/kernel.asm	/^c0105875:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c010587a	obj/kernel.asm	/^c010587a:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%esp)$/;"	l
c0105881	obj/kernel.asm	/^c0105881:	00 $/;"	l
c0105882	obj/kernel.asm	/^c0105882:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0105889	obj/kernel.asm	/^c0105889:	00 $/;"	l
c010588a	obj/kernel.asm	/^c010588a:	c7 44 24 08 00 00 00 	movl   $0x38000000,0x8(%esp)$/;"	l
c0105891	obj/kernel.asm	/^c0105891:	38 $/;"	l
c0105892	obj/kernel.asm	/^c0105892:	c7 44 24 04 00 00 00 	movl   $0xc0000000,0x4(%esp)$/;"	l
c0105899	obj/kernel.asm	/^c0105899:	c0 $/;"	l
c010589a	obj/kernel.asm	/^c010589a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010589d	obj/kernel.asm	/^c010589d:	e8 b4 fd ff ff       	call   c0105656 <boot_map_segment>$/;"	l
c01058a2	obj/kernel.asm	/^c01058a2:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c01058a7	obj/kernel.asm	/^c01058a7:	8b 15 84 0e 15 c0    	mov    0xc0150e84,%edx$/;"	l
c01058ad	obj/kernel.asm	/^c01058ad:	8b 92 00 0c 00 00    	mov    0xc00(%edx),%edx$/;"	l
c01058b3	obj/kernel.asm	/^c01058b3:	89 10                	mov    %edx,(%eax)$/;"	l
c01058b5	obj/kernel.asm	/^c01058b5:	e8 63 fd ff ff       	call   c010561d <enable_paging>$/;"	l
c01058ba	obj/kernel.asm	/^c01058ba:	e8 64 f7 ff ff       	call   c0105023 <gdt_init>$/;"	l
c01058bf	obj/kernel.asm	/^c01058bf:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c01058c4	obj/kernel.asm	/^c01058c4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01058ca	obj/kernel.asm	/^c01058ca:	e8 03 0f 00 00       	call   c01067d2 <check_boot_pgdir>$/;"	l
c01058cf	obj/kernel.asm	/^c01058cf:	e8 8b 13 00 00       	call   c0106c5f <print_pgdir>$/;"	l
c01058d4	obj/kernel.asm	/^c01058d4:	e8 c6 f2 ff ff       	call   c0104b9f <kmalloc_init>$/;"	l
c01058d9	obj/kernel.asm	/^c01058d9:	c9                   	leave  $/;"	l
c01058da	obj/kernel.asm	/^c01058da:	c3                   	ret    $/;"	l
c01058db	obj/kernel.asm	/^c01058db <get_pte>:$/;"	l
c01058db	obj/kernel.asm	/^c01058db:	55                   	push   %ebp$/;"	l
c01058dc	obj/kernel.asm	/^c01058dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01058de	obj/kernel.asm	/^c01058de:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01058e1	obj/kernel.asm	/^c01058e1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01058e4	obj/kernel.asm	/^c01058e4:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c01058e7	obj/kernel.asm	/^c01058e7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01058ee	obj/kernel.asm	/^c01058ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01058f1	obj/kernel.asm	/^c01058f1:	01 d0                	add    %edx,%eax$/;"	l
c01058f3	obj/kernel.asm	/^c01058f3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01058f6	obj/kernel.asm	/^c01058f6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058f9	obj/kernel.asm	/^c01058f9:	8b 00                	mov    (%eax),%eax$/;"	l
c01058fb	obj/kernel.asm	/^c01058fb:	83 e0 01             	and    $0x1,%eax$/;"	l
c01058fe	obj/kernel.asm	/^c01058fe:	85 c0                	test   %eax,%eax$/;"	l
c0105900	obj/kernel.asm	/^c0105900:	0f 85 af 00 00 00    	jne    c01059b5 <get_pte+0xda>$/;"	l
c0105906	obj/kernel.asm	/^c0105906:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010590a	obj/kernel.asm	/^c010590a:	74 15                	je     c0105921 <get_pte+0x46>$/;"	l
c010590c	obj/kernel.asm	/^c010590c:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0105913	obj/kernel.asm	/^c0105913:	e8 4c f8 ff ff       	call   c0105164 <alloc_pages>$/;"	l
c0105918	obj/kernel.asm	/^c0105918:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010591b	obj/kernel.asm	/^c010591b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010591f	obj/kernel.asm	/^c010591f:	75 0a                	jne    c010592b <get_pte+0x50>$/;"	l
c0105921	obj/kernel.asm	/^c0105921:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105926	obj/kernel.asm	/^c0105926:	e9 e6 00 00 00       	jmp    c0105a11 <get_pte+0x136>$/;"	l
c010592b	obj/kernel.asm	/^c010592b:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105932	obj/kernel.asm	/^c0105932:	00 $/;"	l
c0105933	obj/kernel.asm	/^c0105933:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105936	obj/kernel.asm	/^c0105936:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105939	obj/kernel.asm	/^c0105939:	e8 2b f6 ff ff       	call   c0104f69 <set_page_ref>$/;"	l
c010593e	obj/kernel.asm	/^c010593e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105941	obj/kernel.asm	/^c0105941:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105944	obj/kernel.asm	/^c0105944:	e8 07 f5 ff ff       	call   c0104e50 <page2pa>$/;"	l
c0105949	obj/kernel.asm	/^c0105949:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010594c	obj/kernel.asm	/^c010594c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010594f	obj/kernel.asm	/^c010594f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105952	obj/kernel.asm	/^c0105952:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105955	obj/kernel.asm	/^c0105955:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0105958	obj/kernel.asm	/^c0105958:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010595b	obj/kernel.asm	/^c010595b:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c0105960	obj/kernel.asm	/^c0105960:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c0105963	obj/kernel.asm	/^c0105963:	72 23                	jb     c0105988 <get_pte+0xad>$/;"	l
c0105965	obj/kernel.asm	/^c0105965:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105968	obj/kernel.asm	/^c0105968:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010596c	obj/kernel.asm	/^c010596c:	c7 44 24 08 c0 64 11 	movl   $0xc01164c0,0x8(%esp)$/;"	l
c0105973	obj/kernel.asm	/^c0105973:	c0 $/;"	l
c0105974	obj/kernel.asm	/^c0105974:	c7 44 24 04 97 01 00 	movl   $0x197,0x4(%esp)$/;"	l
c010597b	obj/kernel.asm	/^c010597b:	00 $/;"	l
c010597c	obj/kernel.asm	/^c010597c:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105983	obj/kernel.asm	/^c0105983:	e8 40 b5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105988	obj/kernel.asm	/^c0105988:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010598b	obj/kernel.asm	/^c010598b:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0105990	obj/kernel.asm	/^c0105990:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0105997	obj/kernel.asm	/^c0105997:	00 $/;"	l
c0105998	obj/kernel.asm	/^c0105998:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010599f	obj/kernel.asm	/^c010599f:	00 $/;"	l
c01059a0	obj/kernel.asm	/^c01059a0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01059a3	obj/kernel.asm	/^c01059a3:	e8 c8 fb 00 00       	call   c0115570 <memset>$/;"	l
c01059a8	obj/kernel.asm	/^c01059a8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01059ab	obj/kernel.asm	/^c01059ab:	83 c8 07             	or     $0x7,%eax$/;"	l
c01059ae	obj/kernel.asm	/^c01059ae:	89 c2                	mov    %eax,%edx$/;"	l
c01059b0	obj/kernel.asm	/^c01059b0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01059b3	obj/kernel.asm	/^c01059b3:	89 10                	mov    %edx,(%eax)$/;"	l
c01059b5	obj/kernel.asm	/^c01059b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01059b8	obj/kernel.asm	/^c01059b8:	8b 00                	mov    (%eax),%eax$/;"	l
c01059ba	obj/kernel.asm	/^c01059ba:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01059bf	obj/kernel.asm	/^c01059bf:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01059c2	obj/kernel.asm	/^c01059c2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01059c5	obj/kernel.asm	/^c01059c5:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01059c8	obj/kernel.asm	/^c01059c8:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01059cb	obj/kernel.asm	/^c01059cb:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c01059d0	obj/kernel.asm	/^c01059d0:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c01059d3	obj/kernel.asm	/^c01059d3:	72 23                	jb     c01059f8 <get_pte+0x11d>$/;"	l
c01059d5	obj/kernel.asm	/^c01059d5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01059d8	obj/kernel.asm	/^c01059d8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01059dc	obj/kernel.asm	/^c01059dc:	c7 44 24 08 c0 64 11 	movl   $0xc01164c0,0x8(%esp)$/;"	l
c01059e3	obj/kernel.asm	/^c01059e3:	c0 $/;"	l
c01059e4	obj/kernel.asm	/^c01059e4:	c7 44 24 04 9a 01 00 	movl   $0x19a,0x4(%esp)$/;"	l
c01059eb	obj/kernel.asm	/^c01059eb:	00 $/;"	l
c01059ec	obj/kernel.asm	/^c01059ec:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01059f3	obj/kernel.asm	/^c01059f3:	e8 d0 b4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01059f8	obj/kernel.asm	/^c01059f8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01059fb	obj/kernel.asm	/^c01059fb:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0105a00	obj/kernel.asm	/^c0105a00:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105a03	obj/kernel.asm	/^c0105a03:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0105a06	obj/kernel.asm	/^c0105a06:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
c0105a0c	obj/kernel.asm	/^c0105a0c:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0105a0f	obj/kernel.asm	/^c0105a0f:	01 d0                	add    %edx,%eax$/;"	l
c0105a11	obj/kernel.asm	/^c0105a11:	c9                   	leave  $/;"	l
c0105a12	obj/kernel.asm	/^c0105a12:	c3                   	ret    $/;"	l
c0105a13	obj/kernel.asm	/^c0105a13 <get_page>:$/;"	l
c0105a13	obj/kernel.asm	/^c0105a13:	55                   	push   %ebp$/;"	l
c0105a14	obj/kernel.asm	/^c0105a14:	89 e5                	mov    %esp,%ebp$/;"	l
c0105a16	obj/kernel.asm	/^c0105a16:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105a19	obj/kernel.asm	/^c0105a19:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105a20	obj/kernel.asm	/^c0105a20:	00 $/;"	l
c0105a21	obj/kernel.asm	/^c0105a21:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105a24	obj/kernel.asm	/^c0105a24:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105a28	obj/kernel.asm	/^c0105a28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105a2b	obj/kernel.asm	/^c0105a2b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105a2e	obj/kernel.asm	/^c0105a2e:	e8 a8 fe ff ff       	call   c01058db <get_pte>$/;"	l
c0105a33	obj/kernel.asm	/^c0105a33:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105a36	obj/kernel.asm	/^c0105a36:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0105a3a	obj/kernel.asm	/^c0105a3a:	74 08                	je     c0105a44 <get_page+0x31>$/;"	l
c0105a3c	obj/kernel.asm	/^c0105a3c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105a3f	obj/kernel.asm	/^c0105a3f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a42	obj/kernel.asm	/^c0105a42:	89 10                	mov    %edx,(%eax)$/;"	l
c0105a44	obj/kernel.asm	/^c0105a44:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105a48	obj/kernel.asm	/^c0105a48:	74 1b                	je     c0105a65 <get_page+0x52>$/;"	l
c0105a4a	obj/kernel.asm	/^c0105a4a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105a4d	obj/kernel.asm	/^c0105a4d:	8b 00                	mov    (%eax),%eax$/;"	l
c0105a4f	obj/kernel.asm	/^c0105a4f:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105a52	obj/kernel.asm	/^c0105a52:	85 c0                	test   %eax,%eax$/;"	l
c0105a54	obj/kernel.asm	/^c0105a54:	74 0f                	je     c0105a65 <get_page+0x52>$/;"	l
c0105a56	obj/kernel.asm	/^c0105a56:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105a59	obj/kernel.asm	/^c0105a59:	8b 00                	mov    (%eax),%eax$/;"	l
c0105a5b	obj/kernel.asm	/^c0105a5b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105a5e	obj/kernel.asm	/^c0105a5e:	e8 a6 f4 ff ff       	call   c0104f09 <pte2page>$/;"	l
c0105a63	obj/kernel.asm	/^c0105a63:	eb 05                	jmp    c0105a6a <get_page+0x57>$/;"	l
c0105a65	obj/kernel.asm	/^c0105a65:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105a6a	obj/kernel.asm	/^c0105a6a:	c9                   	leave  $/;"	l
c0105a6b	obj/kernel.asm	/^c0105a6b:	c3                   	ret    $/;"	l
c0105a6c	obj/kernel.asm	/^c0105a6c <page_remove_pte>:$/;"	l
c0105a6c	obj/kernel.asm	/^c0105a6c:	55                   	push   %ebp$/;"	l
c0105a6d	obj/kernel.asm	/^c0105a6d:	89 e5                	mov    %esp,%ebp$/;"	l
c0105a6f	obj/kernel.asm	/^c0105a6f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105a72	obj/kernel.asm	/^c0105a72:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105a75	obj/kernel.asm	/^c0105a75:	8b 00                	mov    (%eax),%eax$/;"	l
c0105a77	obj/kernel.asm	/^c0105a77:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105a7a	obj/kernel.asm	/^c0105a7a:	85 c0                	test   %eax,%eax$/;"	l
c0105a7c	obj/kernel.asm	/^c0105a7c:	74 4d                	je     c0105acb <page_remove_pte+0x5f>$/;"	l
c0105a7e	obj/kernel.asm	/^c0105a7e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105a81	obj/kernel.asm	/^c0105a81:	8b 00                	mov    (%eax),%eax$/;"	l
c0105a83	obj/kernel.asm	/^c0105a83:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105a86	obj/kernel.asm	/^c0105a86:	e8 7e f4 ff ff       	call   c0104f09 <pte2page>$/;"	l
c0105a8b	obj/kernel.asm	/^c0105a8b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105a8e	obj/kernel.asm	/^c0105a8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105a91	obj/kernel.asm	/^c0105a91:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105a94	obj/kernel.asm	/^c0105a94:	e8 f4 f4 ff ff       	call   c0104f8d <page_ref_dec>$/;"	l
c0105a99	obj/kernel.asm	/^c0105a99:	85 c0                	test   %eax,%eax$/;"	l
c0105a9b	obj/kernel.asm	/^c0105a9b:	75 13                	jne    c0105ab0 <page_remove_pte+0x44>$/;"	l
c0105a9d	obj/kernel.asm	/^c0105a9d:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105aa4	obj/kernel.asm	/^c0105aa4:	00 $/;"	l
c0105aa5	obj/kernel.asm	/^c0105aa5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105aa8	obj/kernel.asm	/^c0105aa8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105aab	obj/kernel.asm	/^c0105aab:	e8 1f f7 ff ff       	call   c01051cf <free_pages>$/;"	l
c0105ab0	obj/kernel.asm	/^c0105ab0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105ab3	obj/kernel.asm	/^c0105ab3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105ab9	obj/kernel.asm	/^c0105ab9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105abc	obj/kernel.asm	/^c0105abc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105ac0	obj/kernel.asm	/^c0105ac0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105ac3	obj/kernel.asm	/^c0105ac3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105ac6	obj/kernel.asm	/^c0105ac6:	e8 1d 05 00 00       	call   c0105fe8 <tlb_invalidate>$/;"	l
c0105acb	obj/kernel.asm	/^c0105acb:	c9                   	leave  $/;"	l
c0105acc	obj/kernel.asm	/^c0105acc:	c3                   	ret    $/;"	l
c0105acd	obj/kernel.asm	/^c0105acd <unmap_range>:$/;"	l
c0105acd	obj/kernel.asm	/^c0105acd:	55                   	push   %ebp$/;"	l
c0105ace	obj/kernel.asm	/^c0105ace:	89 e5                	mov    %esp,%ebp$/;"	l
c0105ad0	obj/kernel.asm	/^c0105ad0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105ad3	obj/kernel.asm	/^c0105ad3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105ad6	obj/kernel.asm	/^c0105ad6:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105adb	obj/kernel.asm	/^c0105adb:	85 c0                	test   %eax,%eax$/;"	l
c0105add	obj/kernel.asm	/^c0105add:	75 0c                	jne    c0105aeb <unmap_range+0x1e>$/;"	l
c0105adf	obj/kernel.asm	/^c0105adf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105ae2	obj/kernel.asm	/^c0105ae2:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105ae7	obj/kernel.asm	/^c0105ae7:	85 c0                	test   %eax,%eax$/;"	l
c0105ae9	obj/kernel.asm	/^c0105ae9:	74 24                	je     c0105b0f <unmap_range+0x42>$/;"	l
c0105aeb	obj/kernel.asm	/^c0105aeb:	c7 44 24 0c e8 65 11 	movl   $0xc01165e8,0xc(%esp)$/;"	l
c0105af2	obj/kernel.asm	/^c0105af2:	c0 $/;"	l
c0105af3	obj/kernel.asm	/^c0105af3:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0105afa	obj/kernel.asm	/^c0105afa:	c0 $/;"	l
c0105afb	obj/kernel.asm	/^c0105afb:	c7 44 24 04 d4 01 00 	movl   $0x1d4,0x4(%esp)$/;"	l
c0105b02	obj/kernel.asm	/^c0105b02:	00 $/;"	l
c0105b03	obj/kernel.asm	/^c0105b03:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105b0a	obj/kernel.asm	/^c0105b0a:	e8 b9 b3 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105b0f	obj/kernel.asm	/^c0105b0f:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0105b16	obj/kernel.asm	/^c0105b16:	76 11                	jbe    c0105b29 <unmap_range+0x5c>$/;"	l
c0105b18	obj/kernel.asm	/^c0105b18:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105b1b	obj/kernel.asm	/^c0105b1b:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105b1e	obj/kernel.asm	/^c0105b1e:	73 09                	jae    c0105b29 <unmap_range+0x5c>$/;"	l
c0105b20	obj/kernel.asm	/^c0105b20:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c0105b27	obj/kernel.asm	/^c0105b27:	76 24                	jbe    c0105b4d <unmap_range+0x80>$/;"	l
c0105b29	obj/kernel.asm	/^c0105b29:	c7 44 24 0c 11 66 11 	movl   $0xc0116611,0xc(%esp)$/;"	l
c0105b30	obj/kernel.asm	/^c0105b30:	c0 $/;"	l
c0105b31	obj/kernel.asm	/^c0105b31:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0105b38	obj/kernel.asm	/^c0105b38:	c0 $/;"	l
c0105b39	obj/kernel.asm	/^c0105b39:	c7 44 24 04 d5 01 00 	movl   $0x1d5,0x4(%esp)$/;"	l
c0105b40	obj/kernel.asm	/^c0105b40:	00 $/;"	l
c0105b41	obj/kernel.asm	/^c0105b41:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105b48	obj/kernel.asm	/^c0105b48:	e8 7b b3 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105b4d	obj/kernel.asm	/^c0105b4d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105b54	obj/kernel.asm	/^c0105b54:	00 $/;"	l
c0105b55	obj/kernel.asm	/^c0105b55:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105b58	obj/kernel.asm	/^c0105b58:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105b5c	obj/kernel.asm	/^c0105b5c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105b5f	obj/kernel.asm	/^c0105b5f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105b62	obj/kernel.asm	/^c0105b62:	e8 74 fd ff ff       	call   c01058db <get_pte>$/;"	l
c0105b67	obj/kernel.asm	/^c0105b67:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105b6a	obj/kernel.asm	/^c0105b6a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105b6e	obj/kernel.asm	/^c0105b6e:	75 18                	jne    c0105b88 <unmap_range+0xbb>$/;"	l
c0105b70	obj/kernel.asm	/^c0105b70:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105b73	obj/kernel.asm	/^c0105b73:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0105b78	obj/kernel.asm	/^c0105b78:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105b7b	obj/kernel.asm	/^c0105b7b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105b7e	obj/kernel.asm	/^c0105b7e:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0105b83	obj/kernel.asm	/^c0105b83:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0105b86	obj/kernel.asm	/^c0105b86:	eb 29                	jmp    c0105bb1 <unmap_range+0xe4>$/;"	l
c0105b88	obj/kernel.asm	/^c0105b88:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b8b	obj/kernel.asm	/^c0105b8b:	8b 00                	mov    (%eax),%eax$/;"	l
c0105b8d	obj/kernel.asm	/^c0105b8d:	85 c0                	test   %eax,%eax$/;"	l
c0105b8f	obj/kernel.asm	/^c0105b8f:	74 19                	je     c0105baa <unmap_range+0xdd>$/;"	l
c0105b91	obj/kernel.asm	/^c0105b91:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b94	obj/kernel.asm	/^c0105b94:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105b98	obj/kernel.asm	/^c0105b98:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105b9b	obj/kernel.asm	/^c0105b9b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105b9f	obj/kernel.asm	/^c0105b9f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105ba2	obj/kernel.asm	/^c0105ba2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105ba5	obj/kernel.asm	/^c0105ba5:	e8 c2 fe ff ff       	call   c0105a6c <page_remove_pte>$/;"	l
c0105baa	obj/kernel.asm	/^c0105baa:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0105bb1	obj/kernel.asm	/^c0105bb1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0105bb5	obj/kernel.asm	/^c0105bb5:	74 08                	je     c0105bbf <unmap_range+0xf2>$/;"	l
c0105bb7	obj/kernel.asm	/^c0105bb7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105bba	obj/kernel.asm	/^c0105bba:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105bbd	obj/kernel.asm	/^c0105bbd:	72 8e                	jb     c0105b4d <unmap_range+0x80>$/;"	l
c0105bbf	obj/kernel.asm	/^c0105bbf:	c9                   	leave  $/;"	l
c0105bc0	obj/kernel.asm	/^c0105bc0:	c3                   	ret    $/;"	l
c0105bc1	obj/kernel.asm	/^c0105bc1 <exit_range>:$/;"	l
c0105bc1	obj/kernel.asm	/^c0105bc1:	55                   	push   %ebp$/;"	l
c0105bc2	obj/kernel.asm	/^c0105bc2:	89 e5                	mov    %esp,%ebp$/;"	l
c0105bc4	obj/kernel.asm	/^c0105bc4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105bc7	obj/kernel.asm	/^c0105bc7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105bca	obj/kernel.asm	/^c0105bca:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105bcf	obj/kernel.asm	/^c0105bcf:	85 c0                	test   %eax,%eax$/;"	l
c0105bd1	obj/kernel.asm	/^c0105bd1:	75 0c                	jne    c0105bdf <exit_range+0x1e>$/;"	l
c0105bd3	obj/kernel.asm	/^c0105bd3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105bd6	obj/kernel.asm	/^c0105bd6:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105bdb	obj/kernel.asm	/^c0105bdb:	85 c0                	test   %eax,%eax$/;"	l
c0105bdd	obj/kernel.asm	/^c0105bdd:	74 24                	je     c0105c03 <exit_range+0x42>$/;"	l
c0105bdf	obj/kernel.asm	/^c0105bdf:	c7 44 24 0c e8 65 11 	movl   $0xc01165e8,0xc(%esp)$/;"	l
c0105be6	obj/kernel.asm	/^c0105be6:	c0 $/;"	l
c0105be7	obj/kernel.asm	/^c0105be7:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0105bee	obj/kernel.asm	/^c0105bee:	c0 $/;"	l
c0105bef	obj/kernel.asm	/^c0105bef:	c7 44 24 04 e6 01 00 	movl   $0x1e6,0x4(%esp)$/;"	l
c0105bf6	obj/kernel.asm	/^c0105bf6:	00 $/;"	l
c0105bf7	obj/kernel.asm	/^c0105bf7:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105bfe	obj/kernel.asm	/^c0105bfe:	e8 c5 b2 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105c03	obj/kernel.asm	/^c0105c03:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0105c0a	obj/kernel.asm	/^c0105c0a:	76 11                	jbe    c0105c1d <exit_range+0x5c>$/;"	l
c0105c0c	obj/kernel.asm	/^c0105c0c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105c0f	obj/kernel.asm	/^c0105c0f:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105c12	obj/kernel.asm	/^c0105c12:	73 09                	jae    c0105c1d <exit_range+0x5c>$/;"	l
c0105c14	obj/kernel.asm	/^c0105c14:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c0105c1b	obj/kernel.asm	/^c0105c1b:	76 24                	jbe    c0105c41 <exit_range+0x80>$/;"	l
c0105c1d	obj/kernel.asm	/^c0105c1d:	c7 44 24 0c 11 66 11 	movl   $0xc0116611,0xc(%esp)$/;"	l
c0105c24	obj/kernel.asm	/^c0105c24:	c0 $/;"	l
c0105c25	obj/kernel.asm	/^c0105c25:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0105c2c	obj/kernel.asm	/^c0105c2c:	c0 $/;"	l
c0105c2d	obj/kernel.asm	/^c0105c2d:	c7 44 24 04 e7 01 00 	movl   $0x1e7,0x4(%esp)$/;"	l
c0105c34	obj/kernel.asm	/^c0105c34:	00 $/;"	l
c0105c35	obj/kernel.asm	/^c0105c35:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105c3c	obj/kernel.asm	/^c0105c3c:	e8 87 b2 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105c41	obj/kernel.asm	/^c0105c41:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105c44	obj/kernel.asm	/^c0105c44:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105c47	obj/kernel.asm	/^c0105c47:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c4a	obj/kernel.asm	/^c0105c4a:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0105c4f	obj/kernel.asm	/^c0105c4f:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0105c52	obj/kernel.asm	/^c0105c52:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105c55	obj/kernel.asm	/^c0105c55:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0105c58	obj/kernel.asm	/^c0105c58:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105c5b	obj/kernel.asm	/^c0105c5b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105c5e	obj/kernel.asm	/^c0105c5e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105c65	obj/kernel.asm	/^c0105c65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105c68	obj/kernel.asm	/^c0105c68:	01 d0                	add    %edx,%eax$/;"	l
c0105c6a	obj/kernel.asm	/^c0105c6a:	8b 00                	mov    (%eax),%eax$/;"	l
c0105c6c	obj/kernel.asm	/^c0105c6c:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105c6f	obj/kernel.asm	/^c0105c6f:	85 c0                	test   %eax,%eax$/;"	l
c0105c71	obj/kernel.asm	/^c0105c71:	74 3e                	je     c0105cb1 <exit_range+0xf0>$/;"	l
c0105c73	obj/kernel.asm	/^c0105c73:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105c76	obj/kernel.asm	/^c0105c76:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105c7d	obj/kernel.asm	/^c0105c7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105c80	obj/kernel.asm	/^c0105c80:	01 d0                	add    %edx,%eax$/;"	l
c0105c82	obj/kernel.asm	/^c0105c82:	8b 00                	mov    (%eax),%eax$/;"	l
c0105c84	obj/kernel.asm	/^c0105c84:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105c87	obj/kernel.asm	/^c0105c87:	e8 bb f2 ff ff       	call   c0104f47 <pde2page>$/;"	l
c0105c8c	obj/kernel.asm	/^c0105c8c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105c93	obj/kernel.asm	/^c0105c93:	00 $/;"	l
c0105c94	obj/kernel.asm	/^c0105c94:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105c97	obj/kernel.asm	/^c0105c97:	e8 33 f5 ff ff       	call   c01051cf <free_pages>$/;"	l
c0105c9c	obj/kernel.asm	/^c0105c9c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105c9f	obj/kernel.asm	/^c0105c9f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105ca6	obj/kernel.asm	/^c0105ca6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105ca9	obj/kernel.asm	/^c0105ca9:	01 d0                	add    %edx,%eax$/;"	l
c0105cab	obj/kernel.asm	/^c0105cab:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105cb1	obj/kernel.asm	/^c0105cb1:	81 45 0c 00 00 40 00 	addl   $0x400000,0xc(%ebp)$/;"	l
c0105cb8	obj/kernel.asm	/^c0105cb8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0105cbc	obj/kernel.asm	/^c0105cbc:	74 08                	je     c0105cc6 <exit_range+0x105>$/;"	l
c0105cbe	obj/kernel.asm	/^c0105cbe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105cc1	obj/kernel.asm	/^c0105cc1:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105cc4	obj/kernel.asm	/^c0105cc4:	72 8c                	jb     c0105c52 <exit_range+0x91>$/;"	l
c0105cc6	obj/kernel.asm	/^c0105cc6:	c9                   	leave  $/;"	l
c0105cc7	obj/kernel.asm	/^c0105cc7:	c3                   	ret    $/;"	l
c0105cc8	obj/kernel.asm	/^c0105cc8 <copy_range>:$/;"	l
c0105cc8	obj/kernel.asm	/^c0105cc8:	55                   	push   %ebp$/;"	l
c0105cc9	obj/kernel.asm	/^c0105cc9:	89 e5                	mov    %esp,%ebp$/;"	l
c0105ccb	obj/kernel.asm	/^c0105ccb:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0105cce	obj/kernel.asm	/^c0105cce:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105cd1	obj/kernel.asm	/^c0105cd1:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105cd6	obj/kernel.asm	/^c0105cd6:	85 c0                	test   %eax,%eax$/;"	l
c0105cd8	obj/kernel.asm	/^c0105cd8:	75 0c                	jne    c0105ce6 <copy_range+0x1e>$/;"	l
c0105cda	obj/kernel.asm	/^c0105cda:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0105cdd	obj/kernel.asm	/^c0105cdd:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105ce2	obj/kernel.asm	/^c0105ce2:	85 c0                	test   %eax,%eax$/;"	l
c0105ce4	obj/kernel.asm	/^c0105ce4:	74 24                	je     c0105d0a <copy_range+0x42>$/;"	l
c0105ce6	obj/kernel.asm	/^c0105ce6:	c7 44 24 0c e8 65 11 	movl   $0xc01165e8,0xc(%esp)$/;"	l
c0105ced	obj/kernel.asm	/^c0105ced:	c0 $/;"	l
c0105cee	obj/kernel.asm	/^c0105cee:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0105cf5	obj/kernel.asm	/^c0105cf5:	c0 $/;"	l
c0105cf6	obj/kernel.asm	/^c0105cf6:	c7 44 24 04 fc 01 00 	movl   $0x1fc,0x4(%esp)$/;"	l
c0105cfd	obj/kernel.asm	/^c0105cfd:	00 $/;"	l
c0105cfe	obj/kernel.asm	/^c0105cfe:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105d05	obj/kernel.asm	/^c0105d05:	e8 be b1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105d0a	obj/kernel.asm	/^c0105d0a:	81 7d 10 ff ff 1f 00 	cmpl   $0x1fffff,0x10(%ebp)$/;"	l
c0105d11	obj/kernel.asm	/^c0105d11:	76 11                	jbe    c0105d24 <copy_range+0x5c>$/;"	l
c0105d13	obj/kernel.asm	/^c0105d13:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105d16	obj/kernel.asm	/^c0105d16:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0105d19	obj/kernel.asm	/^c0105d19:	73 09                	jae    c0105d24 <copy_range+0x5c>$/;"	l
c0105d1b	obj/kernel.asm	/^c0105d1b:	81 7d 14 00 00 00 b0 	cmpl   $0xb0000000,0x14(%ebp)$/;"	l
c0105d22	obj/kernel.asm	/^c0105d22:	76 24                	jbe    c0105d48 <copy_range+0x80>$/;"	l
c0105d24	obj/kernel.asm	/^c0105d24:	c7 44 24 0c 11 66 11 	movl   $0xc0116611,0xc(%esp)$/;"	l
c0105d2b	obj/kernel.asm	/^c0105d2b:	c0 $/;"	l
c0105d2c	obj/kernel.asm	/^c0105d2c:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0105d33	obj/kernel.asm	/^c0105d33:	c0 $/;"	l
c0105d34	obj/kernel.asm	/^c0105d34:	c7 44 24 04 fd 01 00 	movl   $0x1fd,0x4(%esp)$/;"	l
c0105d3b	obj/kernel.asm	/^c0105d3b:	00 $/;"	l
c0105d3c	obj/kernel.asm	/^c0105d3c:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105d43	obj/kernel.asm	/^c0105d43:	e8 80 b1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105d48	obj/kernel.asm	/^c0105d48:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105d4f	obj/kernel.asm	/^c0105d4f:	00 $/;"	l
c0105d50	obj/kernel.asm	/^c0105d50:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105d53	obj/kernel.asm	/^c0105d53:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105d57	obj/kernel.asm	/^c0105d57:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105d5a	obj/kernel.asm	/^c0105d5a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105d5d	obj/kernel.asm	/^c0105d5d:	e8 79 fb ff ff       	call   c01058db <get_pte>$/;"	l
c0105d62	obj/kernel.asm	/^c0105d62:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105d65	obj/kernel.asm	/^c0105d65:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105d69	obj/kernel.asm	/^c0105d69:	75 1b                	jne    c0105d86 <copy_range+0xbe>$/;"	l
c0105d6b	obj/kernel.asm	/^c0105d6b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105d6e	obj/kernel.asm	/^c0105d6e:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0105d73	obj/kernel.asm	/^c0105d73:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105d76	obj/kernel.asm	/^c0105d76:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105d79	obj/kernel.asm	/^c0105d79:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0105d7e	obj/kernel.asm	/^c0105d7e:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0105d81	obj/kernel.asm	/^c0105d81:	e9 4c 01 00 00       	jmp    c0105ed2 <copy_range+0x20a>$/;"	l
c0105d86	obj/kernel.asm	/^c0105d86:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105d89	obj/kernel.asm	/^c0105d89:	8b 00                	mov    (%eax),%eax$/;"	l
c0105d8b	obj/kernel.asm	/^c0105d8b:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105d8e	obj/kernel.asm	/^c0105d8e:	85 c0                	test   %eax,%eax$/;"	l
c0105d90	obj/kernel.asm	/^c0105d90:	0f 84 35 01 00 00    	je     c0105ecb <copy_range+0x203>$/;"	l
c0105d96	obj/kernel.asm	/^c0105d96:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0105d9d	obj/kernel.asm	/^c0105d9d:	00 $/;"	l
c0105d9e	obj/kernel.asm	/^c0105d9e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105da1	obj/kernel.asm	/^c0105da1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105da5	obj/kernel.asm	/^c0105da5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105da8	obj/kernel.asm	/^c0105da8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105dab	obj/kernel.asm	/^c0105dab:	e8 2b fb ff ff       	call   c01058db <get_pte>$/;"	l
c0105db0	obj/kernel.asm	/^c0105db0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105db3	obj/kernel.asm	/^c0105db3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0105db7	obj/kernel.asm	/^c0105db7:	75 0a                	jne    c0105dc3 <copy_range+0xfb>$/;"	l
c0105db9	obj/kernel.asm	/^c0105db9:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0105dbe	obj/kernel.asm	/^c0105dbe:	e9 26 01 00 00       	jmp    c0105ee9 <copy_range+0x221>$/;"	l
c0105dc3	obj/kernel.asm	/^c0105dc3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105dc6	obj/kernel.asm	/^c0105dc6:	8b 00                	mov    (%eax),%eax$/;"	l
c0105dc8	obj/kernel.asm	/^c0105dc8:	83 e0 07             	and    $0x7,%eax$/;"	l
c0105dcb	obj/kernel.asm	/^c0105dcb:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105dce	obj/kernel.asm	/^c0105dce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105dd1	obj/kernel.asm	/^c0105dd1:	8b 00                	mov    (%eax),%eax$/;"	l
c0105dd3	obj/kernel.asm	/^c0105dd3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105dd6	obj/kernel.asm	/^c0105dd6:	e8 2e f1 ff ff       	call   c0104f09 <pte2page>$/;"	l
c0105ddb	obj/kernel.asm	/^c0105ddb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105dde	obj/kernel.asm	/^c0105dde:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0105de5	obj/kernel.asm	/^c0105de5:	e8 7a f3 ff ff       	call   c0105164 <alloc_pages>$/;"	l
c0105dea	obj/kernel.asm	/^c0105dea:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105ded	obj/kernel.asm	/^c0105ded:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0105df1	obj/kernel.asm	/^c0105df1:	75 24                	jne    c0105e17 <copy_range+0x14f>$/;"	l
c0105df3	obj/kernel.asm	/^c0105df3:	c7 44 24 0c 29 66 11 	movl   $0xc0116629,0xc(%esp)$/;"	l
c0105dfa	obj/kernel.asm	/^c0105dfa:	c0 $/;"	l
c0105dfb	obj/kernel.asm	/^c0105dfb:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0105e02	obj/kernel.asm	/^c0105e02:	c0 $/;"	l
c0105e03	obj/kernel.asm	/^c0105e03:	c7 44 24 04 10 02 00 	movl   $0x210,0x4(%esp)$/;"	l
c0105e0a	obj/kernel.asm	/^c0105e0a:	00 $/;"	l
c0105e0b	obj/kernel.asm	/^c0105e0b:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105e12	obj/kernel.asm	/^c0105e12:	e8 b1 b0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105e17	obj/kernel.asm	/^c0105e17:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0105e1b	obj/kernel.asm	/^c0105e1b:	75 24                	jne    c0105e41 <copy_range+0x179>$/;"	l
c0105e1d	obj/kernel.asm	/^c0105e1d:	c7 44 24 0c 34 66 11 	movl   $0xc0116634,0xc(%esp)$/;"	l
c0105e24	obj/kernel.asm	/^c0105e24:	c0 $/;"	l
c0105e25	obj/kernel.asm	/^c0105e25:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0105e2c	obj/kernel.asm	/^c0105e2c:	c0 $/;"	l
c0105e2d	obj/kernel.asm	/^c0105e2d:	c7 44 24 04 11 02 00 	movl   $0x211,0x4(%esp)$/;"	l
c0105e34	obj/kernel.asm	/^c0105e34:	00 $/;"	l
c0105e35	obj/kernel.asm	/^c0105e35:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105e3c	obj/kernel.asm	/^c0105e3c:	e8 87 b0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105e41	obj/kernel.asm	/^c0105e41:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0105e48	obj/kernel.asm	/^c0105e48:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105e4b	obj/kernel.asm	/^c0105e4b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e4e	obj/kernel.asm	/^c0105e4e:	e8 62 f0 ff ff       	call   c0104eb5 <page2kva>$/;"	l
c0105e53	obj/kernel.asm	/^c0105e53:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105e56	obj/kernel.asm	/^c0105e56:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105e59	obj/kernel.asm	/^c0105e59:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e5c	obj/kernel.asm	/^c0105e5c:	e8 54 f0 ff ff       	call   c0104eb5 <page2kva>$/;"	l
c0105e61	obj/kernel.asm	/^c0105e61:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0105e64	obj/kernel.asm	/^c0105e64:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0105e6b	obj/kernel.asm	/^c0105e6b:	00 $/;"	l
c0105e6c	obj/kernel.asm	/^c0105e6c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0105e6f	obj/kernel.asm	/^c0105e6f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105e73	obj/kernel.asm	/^c0105e73:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105e76	obj/kernel.asm	/^c0105e76:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e79	obj/kernel.asm	/^c0105e79:	e8 d4 f7 00 00       	call   c0115652 <memcpy>$/;"	l
c0105e7e	obj/kernel.asm	/^c0105e7e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105e81	obj/kernel.asm	/^c0105e81:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105e85	obj/kernel.asm	/^c0105e85:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105e88	obj/kernel.asm	/^c0105e88:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105e8c	obj/kernel.asm	/^c0105e8c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105e8f	obj/kernel.asm	/^c0105e8f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105e93	obj/kernel.asm	/^c0105e93:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105e96	obj/kernel.asm	/^c0105e96:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e99	obj/kernel.asm	/^c0105e99:	e8 91 00 00 00       	call   c0105f2f <page_insert>$/;"	l
c0105e9e	obj/kernel.asm	/^c0105e9e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105ea1	obj/kernel.asm	/^c0105ea1:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105ea5	obj/kernel.asm	/^c0105ea5:	74 24                	je     c0105ecb <copy_range+0x203>$/;"	l
c0105ea7	obj/kernel.asm	/^c0105ea7:	c7 44 24 0c 40 66 11 	movl   $0xc0116640,0xc(%esp)$/;"	l
c0105eae	obj/kernel.asm	/^c0105eae:	c0 $/;"	l
c0105eaf	obj/kernel.asm	/^c0105eaf:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0105eb6	obj/kernel.asm	/^c0105eb6:	c0 $/;"	l
c0105eb7	obj/kernel.asm	/^c0105eb7:	c7 44 24 04 27 02 00 	movl   $0x227,0x4(%esp)$/;"	l
c0105ebe	obj/kernel.asm	/^c0105ebe:	00 $/;"	l
c0105ebf	obj/kernel.asm	/^c0105ebf:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0105ec6	obj/kernel.asm	/^c0105ec6:	e8 fd af ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105ecb	obj/kernel.asm	/^c0105ecb:	81 45 10 00 10 00 00 	addl   $0x1000,0x10(%ebp)$/;"	l
c0105ed2	obj/kernel.asm	/^c0105ed2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0105ed6	obj/kernel.asm	/^c0105ed6:	74 0c                	je     c0105ee4 <copy_range+0x21c>$/;"	l
c0105ed8	obj/kernel.asm	/^c0105ed8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105edb	obj/kernel.asm	/^c0105edb:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0105ede	obj/kernel.asm	/^c0105ede:	0f 82 64 fe ff ff    	jb     c0105d48 <copy_range+0x80>$/;"	l
c0105ee4	obj/kernel.asm	/^c0105ee4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105ee9	obj/kernel.asm	/^c0105ee9:	c9                   	leave  $/;"	l
c0105eea	obj/kernel.asm	/^c0105eea:	c3                   	ret    $/;"	l
c0105eeb	obj/kernel.asm	/^c0105eeb <page_remove>:$/;"	l
c0105eeb	obj/kernel.asm	/^c0105eeb:	55                   	push   %ebp$/;"	l
c0105eec	obj/kernel.asm	/^c0105eec:	89 e5                	mov    %esp,%ebp$/;"	l
c0105eee	obj/kernel.asm	/^c0105eee:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105ef1	obj/kernel.asm	/^c0105ef1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105ef8	obj/kernel.asm	/^c0105ef8:	00 $/;"	l
c0105ef9	obj/kernel.asm	/^c0105ef9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105efc	obj/kernel.asm	/^c0105efc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105f00	obj/kernel.asm	/^c0105f00:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105f03	obj/kernel.asm	/^c0105f03:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f06	obj/kernel.asm	/^c0105f06:	e8 d0 f9 ff ff       	call   c01058db <get_pte>$/;"	l
c0105f0b	obj/kernel.asm	/^c0105f0b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105f0e	obj/kernel.asm	/^c0105f0e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105f12	obj/kernel.asm	/^c0105f12:	74 19                	je     c0105f2d <page_remove+0x42>$/;"	l
c0105f14	obj/kernel.asm	/^c0105f14:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105f17	obj/kernel.asm	/^c0105f17:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105f1b	obj/kernel.asm	/^c0105f1b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105f1e	obj/kernel.asm	/^c0105f1e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105f22	obj/kernel.asm	/^c0105f22:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105f25	obj/kernel.asm	/^c0105f25:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f28	obj/kernel.asm	/^c0105f28:	e8 3f fb ff ff       	call   c0105a6c <page_remove_pte>$/;"	l
c0105f2d	obj/kernel.asm	/^c0105f2d:	c9                   	leave  $/;"	l
c0105f2e	obj/kernel.asm	/^c0105f2e:	c3                   	ret    $/;"	l
c0105f2f	obj/kernel.asm	/^c0105f2f <page_insert>:$/;"	l
c0105f2f	obj/kernel.asm	/^c0105f2f:	55                   	push   %ebp$/;"	l
c0105f30	obj/kernel.asm	/^c0105f30:	89 e5                	mov    %esp,%ebp$/;"	l
c0105f32	obj/kernel.asm	/^c0105f32:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105f35	obj/kernel.asm	/^c0105f35:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0105f3c	obj/kernel.asm	/^c0105f3c:	00 $/;"	l
c0105f3d	obj/kernel.asm	/^c0105f3d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105f40	obj/kernel.asm	/^c0105f40:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105f44	obj/kernel.asm	/^c0105f44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105f47	obj/kernel.asm	/^c0105f47:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f4a	obj/kernel.asm	/^c0105f4a:	e8 8c f9 ff ff       	call   c01058db <get_pte>$/;"	l
c0105f4f	obj/kernel.asm	/^c0105f4f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105f52	obj/kernel.asm	/^c0105f52:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105f56	obj/kernel.asm	/^c0105f56:	75 0a                	jne    c0105f62 <page_insert+0x33>$/;"	l
c0105f58	obj/kernel.asm	/^c0105f58:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0105f5d	obj/kernel.asm	/^c0105f5d:	e9 84 00 00 00       	jmp    c0105fe6 <page_insert+0xb7>$/;"	l
c0105f62	obj/kernel.asm	/^c0105f62:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105f65	obj/kernel.asm	/^c0105f65:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f68	obj/kernel.asm	/^c0105f68:	e8 09 f0 ff ff       	call   c0104f76 <page_ref_inc>$/;"	l
c0105f6d	obj/kernel.asm	/^c0105f6d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105f70	obj/kernel.asm	/^c0105f70:	8b 00                	mov    (%eax),%eax$/;"	l
c0105f72	obj/kernel.asm	/^c0105f72:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105f75	obj/kernel.asm	/^c0105f75:	85 c0                	test   %eax,%eax$/;"	l
c0105f77	obj/kernel.asm	/^c0105f77:	74 3e                	je     c0105fb7 <page_insert+0x88>$/;"	l
c0105f79	obj/kernel.asm	/^c0105f79:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105f7c	obj/kernel.asm	/^c0105f7c:	8b 00                	mov    (%eax),%eax$/;"	l
c0105f7e	obj/kernel.asm	/^c0105f7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f81	obj/kernel.asm	/^c0105f81:	e8 83 ef ff ff       	call   c0104f09 <pte2page>$/;"	l
c0105f86	obj/kernel.asm	/^c0105f86:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105f89	obj/kernel.asm	/^c0105f89:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105f8c	obj/kernel.asm	/^c0105f8c:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105f8f	obj/kernel.asm	/^c0105f8f:	75 0d                	jne    c0105f9e <page_insert+0x6f>$/;"	l
c0105f91	obj/kernel.asm	/^c0105f91:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105f94	obj/kernel.asm	/^c0105f94:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f97	obj/kernel.asm	/^c0105f97:	e8 f1 ef ff ff       	call   c0104f8d <page_ref_dec>$/;"	l
c0105f9c	obj/kernel.asm	/^c0105f9c:	eb 19                	jmp    c0105fb7 <page_insert+0x88>$/;"	l
c0105f9e	obj/kernel.asm	/^c0105f9e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105fa1	obj/kernel.asm	/^c0105fa1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105fa5	obj/kernel.asm	/^c0105fa5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105fa8	obj/kernel.asm	/^c0105fa8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105fac	obj/kernel.asm	/^c0105fac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105faf	obj/kernel.asm	/^c0105faf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105fb2	obj/kernel.asm	/^c0105fb2:	e8 b5 fa ff ff       	call   c0105a6c <page_remove_pte>$/;"	l
c0105fb7	obj/kernel.asm	/^c0105fb7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105fba	obj/kernel.asm	/^c0105fba:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105fbd	obj/kernel.asm	/^c0105fbd:	e8 8e ee ff ff       	call   c0104e50 <page2pa>$/;"	l
c0105fc2	obj/kernel.asm	/^c0105fc2:	0b 45 14             	or     0x14(%ebp),%eax$/;"	l
c0105fc5	obj/kernel.asm	/^c0105fc5:	83 c8 01             	or     $0x1,%eax$/;"	l
c0105fc8	obj/kernel.asm	/^c0105fc8:	89 c2                	mov    %eax,%edx$/;"	l
c0105fca	obj/kernel.asm	/^c0105fca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105fcd	obj/kernel.asm	/^c0105fcd:	89 10                	mov    %edx,(%eax)$/;"	l
c0105fcf	obj/kernel.asm	/^c0105fcf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105fd2	obj/kernel.asm	/^c0105fd2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105fd6	obj/kernel.asm	/^c0105fd6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105fd9	obj/kernel.asm	/^c0105fd9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105fdc	obj/kernel.asm	/^c0105fdc:	e8 07 00 00 00       	call   c0105fe8 <tlb_invalidate>$/;"	l
c0105fe1	obj/kernel.asm	/^c0105fe1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105fe6	obj/kernel.asm	/^c0105fe6:	c9                   	leave  $/;"	l
c0105fe7	obj/kernel.asm	/^c0105fe7:	c3                   	ret    $/;"	l
c0105fe8	obj/kernel.asm	/^c0105fe8 <tlb_invalidate>:$/;"	l
c0105fe8	obj/kernel.asm	/^c0105fe8:	55                   	push   %ebp$/;"	l
c0105fe9	obj/kernel.asm	/^c0105fe9:	89 e5                	mov    %esp,%ebp$/;"	l
c0105feb	obj/kernel.asm	/^c0105feb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105fee	obj/kernel.asm	/^c0105fee:	0f 20 d8             	mov    %cr3,%eax$/;"	l
c0105ff1	obj/kernel.asm	/^c0105ff1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105ff4	obj/kernel.asm	/^c0105ff4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105ff7	obj/kernel.asm	/^c0105ff7:	89 c2                	mov    %eax,%edx$/;"	l
c0105ff9	obj/kernel.asm	/^c0105ff9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105ffc	obj/kernel.asm	/^c0105ffc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105fff	obj/kernel.asm	/^c0105fff:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0106006	obj/kernel.asm	/^c0106006:	77 23                	ja     c010602b <tlb_invalidate+0x43>$/;"	l
c0106008	obj/kernel.asm	/^c0106008:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010600b	obj/kernel.asm	/^c010600b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010600f	obj/kernel.asm	/^c010600f:	c7 44 24 08 64 65 11 	movl   $0xc0116564,0x8(%esp)$/;"	l
c0106016	obj/kernel.asm	/^c0106016:	c0 $/;"	l
c0106017	obj/kernel.asm	/^c0106017:	c7 44 24 04 58 02 00 	movl   $0x258,0x4(%esp)$/;"	l
c010601e	obj/kernel.asm	/^c010601e:	00 $/;"	l
c010601f	obj/kernel.asm	/^c010601f:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106026	obj/kernel.asm	/^c0106026:	e8 9d ae ff ff       	call   c0100ec8 <__panic>$/;"	l
c010602b	obj/kernel.asm	/^c010602b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010602e	obj/kernel.asm	/^c010602e:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0106033	obj/kernel.asm	/^c0106033:	39 c2                	cmp    %eax,%edx$/;"	l
c0106035	obj/kernel.asm	/^c0106035:	75 0c                	jne    c0106043 <tlb_invalidate+0x5b>$/;"	l
c0106037	obj/kernel.asm	/^c0106037:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010603a	obj/kernel.asm	/^c010603a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010603d	obj/kernel.asm	/^c010603d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106040	obj/kernel.asm	/^c0106040:	0f 01 38             	invlpg (%eax)$/;"	l
c0106043	obj/kernel.asm	/^c0106043:	c9                   	leave  $/;"	l
c0106044	obj/kernel.asm	/^c0106044:	c3                   	ret    $/;"	l
c0106045	obj/kernel.asm	/^c0106045 <pgdir_alloc_page>:$/;"	l
c0106045	obj/kernel.asm	/^c0106045:	55                   	push   %ebp$/;"	l
c0106046	obj/kernel.asm	/^c0106046:	89 e5                	mov    %esp,%ebp$/;"	l
c0106048	obj/kernel.asm	/^c0106048:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010604b	obj/kernel.asm	/^c010604b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0106052	obj/kernel.asm	/^c0106052:	e8 0d f1 ff ff       	call   c0105164 <alloc_pages>$/;"	l
c0106057	obj/kernel.asm	/^c0106057:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010605a	obj/kernel.asm	/^c010605a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010605e	obj/kernel.asm	/^c010605e:	0f 84 b0 00 00 00    	je     c0106114 <pgdir_alloc_page+0xcf>$/;"	l
c0106064	obj/kernel.asm	/^c0106064:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106067	obj/kernel.asm	/^c0106067:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010606b	obj/kernel.asm	/^c010606b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010606e	obj/kernel.asm	/^c010606e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106072	obj/kernel.asm	/^c0106072:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106075	obj/kernel.asm	/^c0106075:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106079	obj/kernel.asm	/^c0106079:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010607c	obj/kernel.asm	/^c010607c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010607f	obj/kernel.asm	/^c010607f:	e8 ab fe ff ff       	call   c0105f2f <page_insert>$/;"	l
c0106084	obj/kernel.asm	/^c0106084:	85 c0                	test   %eax,%eax$/;"	l
c0106086	obj/kernel.asm	/^c0106086:	74 1a                	je     c01060a2 <pgdir_alloc_page+0x5d>$/;"	l
c0106088	obj/kernel.asm	/^c0106088:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010608f	obj/kernel.asm	/^c010608f:	00 $/;"	l
c0106090	obj/kernel.asm	/^c0106090:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106093	obj/kernel.asm	/^c0106093:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106096	obj/kernel.asm	/^c0106096:	e8 34 f1 ff ff       	call   c01051cf <free_pages>$/;"	l
c010609b	obj/kernel.asm	/^c010609b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01060a0	obj/kernel.asm	/^c01060a0:	eb 75                	jmp    c0106117 <pgdir_alloc_page+0xd2>$/;"	l
c01060a2	obj/kernel.asm	/^c01060a2:	a1 0c 0f 15 c0       	mov    0xc0150f0c,%eax$/;"	l
c01060a7	obj/kernel.asm	/^c01060a7:	85 c0                	test   %eax,%eax$/;"	l
c01060a9	obj/kernel.asm	/^c01060a9:	74 69                	je     c0106114 <pgdir_alloc_page+0xcf>$/;"	l
c01060ab	obj/kernel.asm	/^c01060ab:	a1 0c 41 15 c0       	mov    0xc015410c,%eax$/;"	l
c01060b0	obj/kernel.asm	/^c01060b0:	85 c0                	test   %eax,%eax$/;"	l
c01060b2	obj/kernel.asm	/^c01060b2:	74 60                	je     c0106114 <pgdir_alloc_page+0xcf>$/;"	l
c01060b4	obj/kernel.asm	/^c01060b4:	a1 0c 41 15 c0       	mov    0xc015410c,%eax$/;"	l
c01060b9	obj/kernel.asm	/^c01060b9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01060c0	obj/kernel.asm	/^c01060c0:	00 $/;"	l
c01060c1	obj/kernel.asm	/^c01060c1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01060c4	obj/kernel.asm	/^c01060c4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01060c8	obj/kernel.asm	/^c01060c8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01060cb	obj/kernel.asm	/^c01060cb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01060cf	obj/kernel.asm	/^c01060cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01060d2	obj/kernel.asm	/^c01060d2:	e8 5b 0e 00 00       	call   c0106f32 <swap_map_swappable>$/;"	l
c01060d7	obj/kernel.asm	/^c01060d7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01060da	obj/kernel.asm	/^c01060da:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01060dd	obj/kernel.asm	/^c01060dd:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
c01060e0	obj/kernel.asm	/^c01060e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01060e3	obj/kernel.asm	/^c01060e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01060e6	obj/kernel.asm	/^c01060e6:	e8 74 ee ff ff       	call   c0104f5f <page_ref>$/;"	l
c01060eb	obj/kernel.asm	/^c01060eb:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01060ee	obj/kernel.asm	/^c01060ee:	74 24                	je     c0106114 <pgdir_alloc_page+0xcf>$/;"	l
c01060f0	obj/kernel.asm	/^c01060f0:	c7 44 24 0c 49 66 11 	movl   $0xc0116649,0xc(%esp)$/;"	l
c01060f7	obj/kernel.asm	/^c01060f7:	c0 $/;"	l
c01060f8	obj/kernel.asm	/^c01060f8:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c01060ff	obj/kernel.asm	/^c01060ff:	c0 $/;"	l
c0106100	obj/kernel.asm	/^c0106100:	c7 44 24 04 6c 02 00 	movl   $0x26c,0x4(%esp)$/;"	l
c0106107	obj/kernel.asm	/^c0106107:	00 $/;"	l
c0106108	obj/kernel.asm	/^c0106108:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c010610f	obj/kernel.asm	/^c010610f:	e8 b4 ad ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106114	obj/kernel.asm	/^c0106114:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106117	obj/kernel.asm	/^c0106117:	c9                   	leave  $/;"	l
c0106118	obj/kernel.asm	/^c0106118:	c3                   	ret    $/;"	l
c0106119	obj/kernel.asm	/^c0106119 <check_alloc_page>:$/;"	l
c0106119	obj/kernel.asm	/^c0106119:	55                   	push   %ebp$/;"	l
c010611a	obj/kernel.asm	/^c010611a:	89 e5                	mov    %esp,%ebp$/;"	l
c010611c	obj/kernel.asm	/^c010611c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010611f	obj/kernel.asm	/^c010611f:	a1 20 40 15 c0       	mov    0xc0154020,%eax$/;"	l
c0106124	obj/kernel.asm	/^c0106124:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0106127	obj/kernel.asm	/^c0106127:	ff d0                	call   *%eax$/;"	l
c0106129	obj/kernel.asm	/^c0106129:	c7 04 24 60 66 11 c0 	movl   $0xc0116660,(%esp)$/;"	l
c0106130	obj/kernel.asm	/^c0106130:	e8 30 a2 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106135	obj/kernel.asm	/^c0106135:	c9                   	leave  $/;"	l
c0106136	obj/kernel.asm	/^c0106136:	c3                   	ret    $/;"	l
c0106137	obj/kernel.asm	/^c0106137 <check_pgdir>:$/;"	l
c0106137	obj/kernel.asm	/^c0106137:	55                   	push   %ebp$/;"	l
c0106138	obj/kernel.asm	/^c0106138:	89 e5                	mov    %esp,%ebp$/;"	l
c010613a	obj/kernel.asm	/^c010613a:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010613d	obj/kernel.asm	/^c010613d:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c0106142	obj/kernel.asm	/^c0106142:	3d 00 80 03 00       	cmp    $0x38000,%eax$/;"	l
c0106147	obj/kernel.asm	/^c0106147:	76 24                	jbe    c010616d <check_pgdir+0x36>$/;"	l
c0106149	obj/kernel.asm	/^c0106149:	c7 44 24 0c 7f 66 11 	movl   $0xc011667f,0xc(%esp)$/;"	l
c0106150	obj/kernel.asm	/^c0106150:	c0 $/;"	l
c0106151	obj/kernel.asm	/^c0106151:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106158	obj/kernel.asm	/^c0106158:	c0 $/;"	l
c0106159	obj/kernel.asm	/^c0106159:	c7 44 24 04 84 02 00 	movl   $0x284,0x4(%esp)$/;"	l
c0106160	obj/kernel.asm	/^c0106160:	00 $/;"	l
c0106161	obj/kernel.asm	/^c0106161:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106168	obj/kernel.asm	/^c0106168:	e8 5b ad ff ff       	call   c0100ec8 <__panic>$/;"	l
c010616d	obj/kernel.asm	/^c010616d:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c0106172	obj/kernel.asm	/^c0106172:	85 c0                	test   %eax,%eax$/;"	l
c0106174	obj/kernel.asm	/^c0106174:	74 0e                	je     c0106184 <check_pgdir+0x4d>$/;"	l
c0106176	obj/kernel.asm	/^c0106176:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c010617b	obj/kernel.asm	/^c010617b:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0106180	obj/kernel.asm	/^c0106180:	85 c0                	test   %eax,%eax$/;"	l
c0106182	obj/kernel.asm	/^c0106182:	74 24                	je     c01061a8 <check_pgdir+0x71>$/;"	l
c0106184	obj/kernel.asm	/^c0106184:	c7 44 24 0c 9c 66 11 	movl   $0xc011669c,0xc(%esp)$/;"	l
c010618b	obj/kernel.asm	/^c010618b:	c0 $/;"	l
c010618c	obj/kernel.asm	/^c010618c:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106193	obj/kernel.asm	/^c0106193:	c0 $/;"	l
c0106194	obj/kernel.asm	/^c0106194:	c7 44 24 04 85 02 00 	movl   $0x285,0x4(%esp)$/;"	l
c010619b	obj/kernel.asm	/^c010619b:	00 $/;"	l
c010619c	obj/kernel.asm	/^c010619c:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01061a3	obj/kernel.asm	/^c01061a3:	e8 20 ad ff ff       	call   c0100ec8 <__panic>$/;"	l
c01061a8	obj/kernel.asm	/^c01061a8:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c01061ad	obj/kernel.asm	/^c01061ad:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01061b4	obj/kernel.asm	/^c01061b4:	00 $/;"	l
c01061b5	obj/kernel.asm	/^c01061b5:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01061bc	obj/kernel.asm	/^c01061bc:	00 $/;"	l
c01061bd	obj/kernel.asm	/^c01061bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01061c0	obj/kernel.asm	/^c01061c0:	e8 4e f8 ff ff       	call   c0105a13 <get_page>$/;"	l
c01061c5	obj/kernel.asm	/^c01061c5:	85 c0                	test   %eax,%eax$/;"	l
c01061c7	obj/kernel.asm	/^c01061c7:	74 24                	je     c01061ed <check_pgdir+0xb6>$/;"	l
c01061c9	obj/kernel.asm	/^c01061c9:	c7 44 24 0c d4 66 11 	movl   $0xc01166d4,0xc(%esp)$/;"	l
c01061d0	obj/kernel.asm	/^c01061d0:	c0 $/;"	l
c01061d1	obj/kernel.asm	/^c01061d1:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c01061d8	obj/kernel.asm	/^c01061d8:	c0 $/;"	l
c01061d9	obj/kernel.asm	/^c01061d9:	c7 44 24 04 86 02 00 	movl   $0x286,0x4(%esp)$/;"	l
c01061e0	obj/kernel.asm	/^c01061e0:	00 $/;"	l
c01061e1	obj/kernel.asm	/^c01061e1:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01061e8	obj/kernel.asm	/^c01061e8:	e8 db ac ff ff       	call   c0100ec8 <__panic>$/;"	l
c01061ed	obj/kernel.asm	/^c01061ed:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01061f4	obj/kernel.asm	/^c01061f4:	e8 6b ef ff ff       	call   c0105164 <alloc_pages>$/;"	l
c01061f9	obj/kernel.asm	/^c01061f9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01061fc	obj/kernel.asm	/^c01061fc:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c0106201	obj/kernel.asm	/^c0106201:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0106208	obj/kernel.asm	/^c0106208:	00 $/;"	l
c0106209	obj/kernel.asm	/^c0106209:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106210	obj/kernel.asm	/^c0106210:	00 $/;"	l
c0106211	obj/kernel.asm	/^c0106211:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0106214	obj/kernel.asm	/^c0106214:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106218	obj/kernel.asm	/^c0106218:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010621b	obj/kernel.asm	/^c010621b:	e8 0f fd ff ff       	call   c0105f2f <page_insert>$/;"	l
c0106220	obj/kernel.asm	/^c0106220:	85 c0                	test   %eax,%eax$/;"	l
c0106222	obj/kernel.asm	/^c0106222:	74 24                	je     c0106248 <check_pgdir+0x111>$/;"	l
c0106224	obj/kernel.asm	/^c0106224:	c7 44 24 0c fc 66 11 	movl   $0xc01166fc,0xc(%esp)$/;"	l
c010622b	obj/kernel.asm	/^c010622b:	c0 $/;"	l
c010622c	obj/kernel.asm	/^c010622c:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106233	obj/kernel.asm	/^c0106233:	c0 $/;"	l
c0106234	obj/kernel.asm	/^c0106234:	c7 44 24 04 8a 02 00 	movl   $0x28a,0x4(%esp)$/;"	l
c010623b	obj/kernel.asm	/^c010623b:	00 $/;"	l
c010623c	obj/kernel.asm	/^c010623c:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106243	obj/kernel.asm	/^c0106243:	e8 80 ac ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106248	obj/kernel.asm	/^c0106248:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c010624d	obj/kernel.asm	/^c010624d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106254	obj/kernel.asm	/^c0106254:	00 $/;"	l
c0106255	obj/kernel.asm	/^c0106255:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010625c	obj/kernel.asm	/^c010625c:	00 $/;"	l
c010625d	obj/kernel.asm	/^c010625d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106260	obj/kernel.asm	/^c0106260:	e8 76 f6 ff ff       	call   c01058db <get_pte>$/;"	l
c0106265	obj/kernel.asm	/^c0106265:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106268	obj/kernel.asm	/^c0106268:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010626c	obj/kernel.asm	/^c010626c:	75 24                	jne    c0106292 <check_pgdir+0x15b>$/;"	l
c010626e	obj/kernel.asm	/^c010626e:	c7 44 24 0c 28 67 11 	movl   $0xc0116728,0xc(%esp)$/;"	l
c0106275	obj/kernel.asm	/^c0106275:	c0 $/;"	l
c0106276	obj/kernel.asm	/^c0106276:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c010627d	obj/kernel.asm	/^c010627d:	c0 $/;"	l
c010627e	obj/kernel.asm	/^c010627e:	c7 44 24 04 8d 02 00 	movl   $0x28d,0x4(%esp)$/;"	l
c0106285	obj/kernel.asm	/^c0106285:	00 $/;"	l
c0106286	obj/kernel.asm	/^c0106286:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c010628d	obj/kernel.asm	/^c010628d:	e8 36 ac ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106292	obj/kernel.asm	/^c0106292:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106295	obj/kernel.asm	/^c0106295:	8b 00                	mov    (%eax),%eax$/;"	l
c0106297	obj/kernel.asm	/^c0106297:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010629a	obj/kernel.asm	/^c010629a:	e8 6a ec ff ff       	call   c0104f09 <pte2page>$/;"	l
c010629f	obj/kernel.asm	/^c010629f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01062a2	obj/kernel.asm	/^c01062a2:	74 24                	je     c01062c8 <check_pgdir+0x191>$/;"	l
c01062a4	obj/kernel.asm	/^c01062a4:	c7 44 24 0c 55 67 11 	movl   $0xc0116755,0xc(%esp)$/;"	l
c01062ab	obj/kernel.asm	/^c01062ab:	c0 $/;"	l
c01062ac	obj/kernel.asm	/^c01062ac:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c01062b3	obj/kernel.asm	/^c01062b3:	c0 $/;"	l
c01062b4	obj/kernel.asm	/^c01062b4:	c7 44 24 04 8e 02 00 	movl   $0x28e,0x4(%esp)$/;"	l
c01062bb	obj/kernel.asm	/^c01062bb:	00 $/;"	l
c01062bc	obj/kernel.asm	/^c01062bc:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01062c3	obj/kernel.asm	/^c01062c3:	e8 00 ac ff ff       	call   c0100ec8 <__panic>$/;"	l
c01062c8	obj/kernel.asm	/^c01062c8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062cb	obj/kernel.asm	/^c01062cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01062ce	obj/kernel.asm	/^c01062ce:	e8 8c ec ff ff       	call   c0104f5f <page_ref>$/;"	l
c01062d3	obj/kernel.asm	/^c01062d3:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01062d6	obj/kernel.asm	/^c01062d6:	74 24                	je     c01062fc <check_pgdir+0x1c5>$/;"	l
c01062d8	obj/kernel.asm	/^c01062d8:	c7 44 24 0c 6b 67 11 	movl   $0xc011676b,0xc(%esp)$/;"	l
c01062df	obj/kernel.asm	/^c01062df:	c0 $/;"	l
c01062e0	obj/kernel.asm	/^c01062e0:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c01062e7	obj/kernel.asm	/^c01062e7:	c0 $/;"	l
c01062e8	obj/kernel.asm	/^c01062e8:	c7 44 24 04 8f 02 00 	movl   $0x28f,0x4(%esp)$/;"	l
c01062ef	obj/kernel.asm	/^c01062ef:	00 $/;"	l
c01062f0	obj/kernel.asm	/^c01062f0:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01062f7	obj/kernel.asm	/^c01062f7:	e8 cc ab ff ff       	call   c0100ec8 <__panic>$/;"	l
c01062fc	obj/kernel.asm	/^c01062fc:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c0106301	obj/kernel.asm	/^c0106301:	8b 00                	mov    (%eax),%eax$/;"	l
c0106303	obj/kernel.asm	/^c0106303:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106308	obj/kernel.asm	/^c0106308:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010630b	obj/kernel.asm	/^c010630b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010630e	obj/kernel.asm	/^c010630e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106311	obj/kernel.asm	/^c0106311:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106314	obj/kernel.asm	/^c0106314:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c0106319	obj/kernel.asm	/^c0106319:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010631c	obj/kernel.asm	/^c010631c:	72 23                	jb     c0106341 <check_pgdir+0x20a>$/;"	l
c010631e	obj/kernel.asm	/^c010631e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106321	obj/kernel.asm	/^c0106321:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106325	obj/kernel.asm	/^c0106325:	c7 44 24 08 c0 64 11 	movl   $0xc01164c0,0x8(%esp)$/;"	l
c010632c	obj/kernel.asm	/^c010632c:	c0 $/;"	l
c010632d	obj/kernel.asm	/^c010632d:	c7 44 24 04 91 02 00 	movl   $0x291,0x4(%esp)$/;"	l
c0106334	obj/kernel.asm	/^c0106334:	00 $/;"	l
c0106335	obj/kernel.asm	/^c0106335:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c010633c	obj/kernel.asm	/^c010633c:	e8 87 ab ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106341	obj/kernel.asm	/^c0106341:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106344	obj/kernel.asm	/^c0106344:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0106349	obj/kernel.asm	/^c0106349:	83 c0 04             	add    $0x4,%eax$/;"	l
c010634c	obj/kernel.asm	/^c010634c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010634f	obj/kernel.asm	/^c010634f:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c0106354	obj/kernel.asm	/^c0106354:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010635b	obj/kernel.asm	/^c010635b:	00 $/;"	l
c010635c	obj/kernel.asm	/^c010635c:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0106363	obj/kernel.asm	/^c0106363:	00 $/;"	l
c0106364	obj/kernel.asm	/^c0106364:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106367	obj/kernel.asm	/^c0106367:	e8 6f f5 ff ff       	call   c01058db <get_pte>$/;"	l
c010636c	obj/kernel.asm	/^c010636c:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010636f	obj/kernel.asm	/^c010636f:	74 24                	je     c0106395 <check_pgdir+0x25e>$/;"	l
c0106371	obj/kernel.asm	/^c0106371:	c7 44 24 0c 80 67 11 	movl   $0xc0116780,0xc(%esp)$/;"	l
c0106378	obj/kernel.asm	/^c0106378:	c0 $/;"	l
c0106379	obj/kernel.asm	/^c0106379:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106380	obj/kernel.asm	/^c0106380:	c0 $/;"	l
c0106381	obj/kernel.asm	/^c0106381:	c7 44 24 04 92 02 00 	movl   $0x292,0x4(%esp)$/;"	l
c0106388	obj/kernel.asm	/^c0106388:	00 $/;"	l
c0106389	obj/kernel.asm	/^c0106389:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106390	obj/kernel.asm	/^c0106390:	e8 33 ab ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106395	obj/kernel.asm	/^c0106395:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010639c	obj/kernel.asm	/^c010639c:	e8 c3 ed ff ff       	call   c0105164 <alloc_pages>$/;"	l
c01063a1	obj/kernel.asm	/^c01063a1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01063a4	obj/kernel.asm	/^c01063a4:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c01063a9	obj/kernel.asm	/^c01063a9:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
c01063b0	obj/kernel.asm	/^c01063b0:	00 $/;"	l
c01063b1	obj/kernel.asm	/^c01063b1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c01063b8	obj/kernel.asm	/^c01063b8:	00 $/;"	l
c01063b9	obj/kernel.asm	/^c01063b9:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01063bc	obj/kernel.asm	/^c01063bc:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01063c0	obj/kernel.asm	/^c01063c0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01063c3	obj/kernel.asm	/^c01063c3:	e8 67 fb ff ff       	call   c0105f2f <page_insert>$/;"	l
c01063c8	obj/kernel.asm	/^c01063c8:	85 c0                	test   %eax,%eax$/;"	l
c01063ca	obj/kernel.asm	/^c01063ca:	74 24                	je     c01063f0 <check_pgdir+0x2b9>$/;"	l
c01063cc	obj/kernel.asm	/^c01063cc:	c7 44 24 0c a8 67 11 	movl   $0xc01167a8,0xc(%esp)$/;"	l
c01063d3	obj/kernel.asm	/^c01063d3:	c0 $/;"	l
c01063d4	obj/kernel.asm	/^c01063d4:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c01063db	obj/kernel.asm	/^c01063db:	c0 $/;"	l
c01063dc	obj/kernel.asm	/^c01063dc:	c7 44 24 04 95 02 00 	movl   $0x295,0x4(%esp)$/;"	l
c01063e3	obj/kernel.asm	/^c01063e3:	00 $/;"	l
c01063e4	obj/kernel.asm	/^c01063e4:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01063eb	obj/kernel.asm	/^c01063eb:	e8 d8 aa ff ff       	call   c0100ec8 <__panic>$/;"	l
c01063f0	obj/kernel.asm	/^c01063f0:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c01063f5	obj/kernel.asm	/^c01063f5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01063fc	obj/kernel.asm	/^c01063fc:	00 $/;"	l
c01063fd	obj/kernel.asm	/^c01063fd:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0106404	obj/kernel.asm	/^c0106404:	00 $/;"	l
c0106405	obj/kernel.asm	/^c0106405:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106408	obj/kernel.asm	/^c0106408:	e8 ce f4 ff ff       	call   c01058db <get_pte>$/;"	l
c010640d	obj/kernel.asm	/^c010640d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106410	obj/kernel.asm	/^c0106410:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0106414	obj/kernel.asm	/^c0106414:	75 24                	jne    c010643a <check_pgdir+0x303>$/;"	l
c0106416	obj/kernel.asm	/^c0106416:	c7 44 24 0c e0 67 11 	movl   $0xc01167e0,0xc(%esp)$/;"	l
c010641d	obj/kernel.asm	/^c010641d:	c0 $/;"	l
c010641e	obj/kernel.asm	/^c010641e:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106425	obj/kernel.asm	/^c0106425:	c0 $/;"	l
c0106426	obj/kernel.asm	/^c0106426:	c7 44 24 04 96 02 00 	movl   $0x296,0x4(%esp)$/;"	l
c010642d	obj/kernel.asm	/^c010642d:	00 $/;"	l
c010642e	obj/kernel.asm	/^c010642e:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106435	obj/kernel.asm	/^c0106435:	e8 8e aa ff ff       	call   c0100ec8 <__panic>$/;"	l
c010643a	obj/kernel.asm	/^c010643a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010643d	obj/kernel.asm	/^c010643d:	8b 00                	mov    (%eax),%eax$/;"	l
c010643f	obj/kernel.asm	/^c010643f:	83 e0 04             	and    $0x4,%eax$/;"	l
c0106442	obj/kernel.asm	/^c0106442:	85 c0                	test   %eax,%eax$/;"	l
c0106444	obj/kernel.asm	/^c0106444:	75 24                	jne    c010646a <check_pgdir+0x333>$/;"	l
c0106446	obj/kernel.asm	/^c0106446:	c7 44 24 0c 10 68 11 	movl   $0xc0116810,0xc(%esp)$/;"	l
c010644d	obj/kernel.asm	/^c010644d:	c0 $/;"	l
c010644e	obj/kernel.asm	/^c010644e:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106455	obj/kernel.asm	/^c0106455:	c0 $/;"	l
c0106456	obj/kernel.asm	/^c0106456:	c7 44 24 04 97 02 00 	movl   $0x297,0x4(%esp)$/;"	l
c010645d	obj/kernel.asm	/^c010645d:	00 $/;"	l
c010645e	obj/kernel.asm	/^c010645e:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106465	obj/kernel.asm	/^c0106465:	e8 5e aa ff ff       	call   c0100ec8 <__panic>$/;"	l
c010646a	obj/kernel.asm	/^c010646a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010646d	obj/kernel.asm	/^c010646d:	8b 00                	mov    (%eax),%eax$/;"	l
c010646f	obj/kernel.asm	/^c010646f:	83 e0 02             	and    $0x2,%eax$/;"	l
c0106472	obj/kernel.asm	/^c0106472:	85 c0                	test   %eax,%eax$/;"	l
c0106474	obj/kernel.asm	/^c0106474:	75 24                	jne    c010649a <check_pgdir+0x363>$/;"	l
c0106476	obj/kernel.asm	/^c0106476:	c7 44 24 0c 1e 68 11 	movl   $0xc011681e,0xc(%esp)$/;"	l
c010647d	obj/kernel.asm	/^c010647d:	c0 $/;"	l
c010647e	obj/kernel.asm	/^c010647e:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106485	obj/kernel.asm	/^c0106485:	c0 $/;"	l
c0106486	obj/kernel.asm	/^c0106486:	c7 44 24 04 98 02 00 	movl   $0x298,0x4(%esp)$/;"	l
c010648d	obj/kernel.asm	/^c010648d:	00 $/;"	l
c010648e	obj/kernel.asm	/^c010648e:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106495	obj/kernel.asm	/^c0106495:	e8 2e aa ff ff       	call   c0100ec8 <__panic>$/;"	l
c010649a	obj/kernel.asm	/^c010649a:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c010649f	obj/kernel.asm	/^c010649f:	8b 00                	mov    (%eax),%eax$/;"	l
c01064a1	obj/kernel.asm	/^c01064a1:	83 e0 04             	and    $0x4,%eax$/;"	l
c01064a4	obj/kernel.asm	/^c01064a4:	85 c0                	test   %eax,%eax$/;"	l
c01064a6	obj/kernel.asm	/^c01064a6:	75 24                	jne    c01064cc <check_pgdir+0x395>$/;"	l
c01064a8	obj/kernel.asm	/^c01064a8:	c7 44 24 0c 2c 68 11 	movl   $0xc011682c,0xc(%esp)$/;"	l
c01064af	obj/kernel.asm	/^c01064af:	c0 $/;"	l
c01064b0	obj/kernel.asm	/^c01064b0:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c01064b7	obj/kernel.asm	/^c01064b7:	c0 $/;"	l
c01064b8	obj/kernel.asm	/^c01064b8:	c7 44 24 04 99 02 00 	movl   $0x299,0x4(%esp)$/;"	l
c01064bf	obj/kernel.asm	/^c01064bf:	00 $/;"	l
c01064c0	obj/kernel.asm	/^c01064c0:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01064c7	obj/kernel.asm	/^c01064c7:	e8 fc a9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01064cc	obj/kernel.asm	/^c01064cc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01064cf	obj/kernel.asm	/^c01064cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01064d2	obj/kernel.asm	/^c01064d2:	e8 88 ea ff ff       	call   c0104f5f <page_ref>$/;"	l
c01064d7	obj/kernel.asm	/^c01064d7:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01064da	obj/kernel.asm	/^c01064da:	74 24                	je     c0106500 <check_pgdir+0x3c9>$/;"	l
c01064dc	obj/kernel.asm	/^c01064dc:	c7 44 24 0c 42 68 11 	movl   $0xc0116842,0xc(%esp)$/;"	l
c01064e3	obj/kernel.asm	/^c01064e3:	c0 $/;"	l
c01064e4	obj/kernel.asm	/^c01064e4:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c01064eb	obj/kernel.asm	/^c01064eb:	c0 $/;"	l
c01064ec	obj/kernel.asm	/^c01064ec:	c7 44 24 04 9a 02 00 	movl   $0x29a,0x4(%esp)$/;"	l
c01064f3	obj/kernel.asm	/^c01064f3:	00 $/;"	l
c01064f4	obj/kernel.asm	/^c01064f4:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01064fb	obj/kernel.asm	/^c01064fb:	e8 c8 a9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106500	obj/kernel.asm	/^c0106500:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c0106505	obj/kernel.asm	/^c0106505:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010650c	obj/kernel.asm	/^c010650c:	00 $/;"	l
c010650d	obj/kernel.asm	/^c010650d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0106514	obj/kernel.asm	/^c0106514:	00 $/;"	l
c0106515	obj/kernel.asm	/^c0106515:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0106518	obj/kernel.asm	/^c0106518:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010651c	obj/kernel.asm	/^c010651c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010651f	obj/kernel.asm	/^c010651f:	e8 0b fa ff ff       	call   c0105f2f <page_insert>$/;"	l
c0106524	obj/kernel.asm	/^c0106524:	85 c0                	test   %eax,%eax$/;"	l
c0106526	obj/kernel.asm	/^c0106526:	74 24                	je     c010654c <check_pgdir+0x415>$/;"	l
c0106528	obj/kernel.asm	/^c0106528:	c7 44 24 0c 54 68 11 	movl   $0xc0116854,0xc(%esp)$/;"	l
c010652f	obj/kernel.asm	/^c010652f:	c0 $/;"	l
c0106530	obj/kernel.asm	/^c0106530:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106537	obj/kernel.asm	/^c0106537:	c0 $/;"	l
c0106538	obj/kernel.asm	/^c0106538:	c7 44 24 04 9c 02 00 	movl   $0x29c,0x4(%esp)$/;"	l
c010653f	obj/kernel.asm	/^c010653f:	00 $/;"	l
c0106540	obj/kernel.asm	/^c0106540:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106547	obj/kernel.asm	/^c0106547:	e8 7c a9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010654c	obj/kernel.asm	/^c010654c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010654f	obj/kernel.asm	/^c010654f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106552	obj/kernel.asm	/^c0106552:	e8 08 ea ff ff       	call   c0104f5f <page_ref>$/;"	l
c0106557	obj/kernel.asm	/^c0106557:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010655a	obj/kernel.asm	/^c010655a:	74 24                	je     c0106580 <check_pgdir+0x449>$/;"	l
c010655c	obj/kernel.asm	/^c010655c:	c7 44 24 0c 80 68 11 	movl   $0xc0116880,0xc(%esp)$/;"	l
c0106563	obj/kernel.asm	/^c0106563:	c0 $/;"	l
c0106564	obj/kernel.asm	/^c0106564:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c010656b	obj/kernel.asm	/^c010656b:	c0 $/;"	l
c010656c	obj/kernel.asm	/^c010656c:	c7 44 24 04 9d 02 00 	movl   $0x29d,0x4(%esp)$/;"	l
c0106573	obj/kernel.asm	/^c0106573:	00 $/;"	l
c0106574	obj/kernel.asm	/^c0106574:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c010657b	obj/kernel.asm	/^c010657b:	e8 48 a9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106580	obj/kernel.asm	/^c0106580:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106583	obj/kernel.asm	/^c0106583:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106586	obj/kernel.asm	/^c0106586:	e8 d4 e9 ff ff       	call   c0104f5f <page_ref>$/;"	l
c010658b	obj/kernel.asm	/^c010658b:	85 c0                	test   %eax,%eax$/;"	l
c010658d	obj/kernel.asm	/^c010658d:	74 24                	je     c01065b3 <check_pgdir+0x47c>$/;"	l
c010658f	obj/kernel.asm	/^c010658f:	c7 44 24 0c 92 68 11 	movl   $0xc0116892,0xc(%esp)$/;"	l
c0106596	obj/kernel.asm	/^c0106596:	c0 $/;"	l
c0106597	obj/kernel.asm	/^c0106597:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c010659e	obj/kernel.asm	/^c010659e:	c0 $/;"	l
c010659f	obj/kernel.asm	/^c010659f:	c7 44 24 04 9e 02 00 	movl   $0x29e,0x4(%esp)$/;"	l
c01065a6	obj/kernel.asm	/^c01065a6:	00 $/;"	l
c01065a7	obj/kernel.asm	/^c01065a7:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01065ae	obj/kernel.asm	/^c01065ae:	e8 15 a9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01065b3	obj/kernel.asm	/^c01065b3:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c01065b8	obj/kernel.asm	/^c01065b8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01065bf	obj/kernel.asm	/^c01065bf:	00 $/;"	l
c01065c0	obj/kernel.asm	/^c01065c0:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c01065c7	obj/kernel.asm	/^c01065c7:	00 $/;"	l
c01065c8	obj/kernel.asm	/^c01065c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01065cb	obj/kernel.asm	/^c01065cb:	e8 0b f3 ff ff       	call   c01058db <get_pte>$/;"	l
c01065d0	obj/kernel.asm	/^c01065d0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01065d3	obj/kernel.asm	/^c01065d3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01065d7	obj/kernel.asm	/^c01065d7:	75 24                	jne    c01065fd <check_pgdir+0x4c6>$/;"	l
c01065d9	obj/kernel.asm	/^c01065d9:	c7 44 24 0c e0 67 11 	movl   $0xc01167e0,0xc(%esp)$/;"	l
c01065e0	obj/kernel.asm	/^c01065e0:	c0 $/;"	l
c01065e1	obj/kernel.asm	/^c01065e1:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c01065e8	obj/kernel.asm	/^c01065e8:	c0 $/;"	l
c01065e9	obj/kernel.asm	/^c01065e9:	c7 44 24 04 9f 02 00 	movl   $0x29f,0x4(%esp)$/;"	l
c01065f0	obj/kernel.asm	/^c01065f0:	00 $/;"	l
c01065f1	obj/kernel.asm	/^c01065f1:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01065f8	obj/kernel.asm	/^c01065f8:	e8 cb a8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01065fd	obj/kernel.asm	/^c01065fd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106600	obj/kernel.asm	/^c0106600:	8b 00                	mov    (%eax),%eax$/;"	l
c0106602	obj/kernel.asm	/^c0106602:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106605	obj/kernel.asm	/^c0106605:	e8 ff e8 ff ff       	call   c0104f09 <pte2page>$/;"	l
c010660a	obj/kernel.asm	/^c010660a:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010660d	obj/kernel.asm	/^c010660d:	74 24                	je     c0106633 <check_pgdir+0x4fc>$/;"	l
c010660f	obj/kernel.asm	/^c010660f:	c7 44 24 0c 55 67 11 	movl   $0xc0116755,0xc(%esp)$/;"	l
c0106616	obj/kernel.asm	/^c0106616:	c0 $/;"	l
c0106617	obj/kernel.asm	/^c0106617:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c010661e	obj/kernel.asm	/^c010661e:	c0 $/;"	l
c010661f	obj/kernel.asm	/^c010661f:	c7 44 24 04 a0 02 00 	movl   $0x2a0,0x4(%esp)$/;"	l
c0106626	obj/kernel.asm	/^c0106626:	00 $/;"	l
c0106627	obj/kernel.asm	/^c0106627:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c010662e	obj/kernel.asm	/^c010662e:	e8 95 a8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106633	obj/kernel.asm	/^c0106633:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106636	obj/kernel.asm	/^c0106636:	8b 00                	mov    (%eax),%eax$/;"	l
c0106638	obj/kernel.asm	/^c0106638:	83 e0 04             	and    $0x4,%eax$/;"	l
c010663b	obj/kernel.asm	/^c010663b:	85 c0                	test   %eax,%eax$/;"	l
c010663d	obj/kernel.asm	/^c010663d:	74 24                	je     c0106663 <check_pgdir+0x52c>$/;"	l
c010663f	obj/kernel.asm	/^c010663f:	c7 44 24 0c a4 68 11 	movl   $0xc01168a4,0xc(%esp)$/;"	l
c0106646	obj/kernel.asm	/^c0106646:	c0 $/;"	l
c0106647	obj/kernel.asm	/^c0106647:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c010664e	obj/kernel.asm	/^c010664e:	c0 $/;"	l
c010664f	obj/kernel.asm	/^c010664f:	c7 44 24 04 a1 02 00 	movl   $0x2a1,0x4(%esp)$/;"	l
c0106656	obj/kernel.asm	/^c0106656:	00 $/;"	l
c0106657	obj/kernel.asm	/^c0106657:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c010665e	obj/kernel.asm	/^c010665e:	e8 65 a8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106663	obj/kernel.asm	/^c0106663:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c0106668	obj/kernel.asm	/^c0106668:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010666f	obj/kernel.asm	/^c010666f:	00 $/;"	l
c0106670	obj/kernel.asm	/^c0106670:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106673	obj/kernel.asm	/^c0106673:	e8 73 f8 ff ff       	call   c0105eeb <page_remove>$/;"	l
c0106678	obj/kernel.asm	/^c0106678:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010667b	obj/kernel.asm	/^c010667b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010667e	obj/kernel.asm	/^c010667e:	e8 dc e8 ff ff       	call   c0104f5f <page_ref>$/;"	l
c0106683	obj/kernel.asm	/^c0106683:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106686	obj/kernel.asm	/^c0106686:	74 24                	je     c01066ac <check_pgdir+0x575>$/;"	l
c0106688	obj/kernel.asm	/^c0106688:	c7 44 24 0c 6b 67 11 	movl   $0xc011676b,0xc(%esp)$/;"	l
c010668f	obj/kernel.asm	/^c010668f:	c0 $/;"	l
c0106690	obj/kernel.asm	/^c0106690:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106697	obj/kernel.asm	/^c0106697:	c0 $/;"	l
c0106698	obj/kernel.asm	/^c0106698:	c7 44 24 04 a4 02 00 	movl   $0x2a4,0x4(%esp)$/;"	l
c010669f	obj/kernel.asm	/^c010669f:	00 $/;"	l
c01066a0	obj/kernel.asm	/^c01066a0:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01066a7	obj/kernel.asm	/^c01066a7:	e8 1c a8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01066ac	obj/kernel.asm	/^c01066ac:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01066af	obj/kernel.asm	/^c01066af:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01066b2	obj/kernel.asm	/^c01066b2:	e8 a8 e8 ff ff       	call   c0104f5f <page_ref>$/;"	l
c01066b7	obj/kernel.asm	/^c01066b7:	85 c0                	test   %eax,%eax$/;"	l
c01066b9	obj/kernel.asm	/^c01066b9:	74 24                	je     c01066df <check_pgdir+0x5a8>$/;"	l
c01066bb	obj/kernel.asm	/^c01066bb:	c7 44 24 0c 92 68 11 	movl   $0xc0116892,0xc(%esp)$/;"	l
c01066c2	obj/kernel.asm	/^c01066c2:	c0 $/;"	l
c01066c3	obj/kernel.asm	/^c01066c3:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c01066ca	obj/kernel.asm	/^c01066ca:	c0 $/;"	l
c01066cb	obj/kernel.asm	/^c01066cb:	c7 44 24 04 a5 02 00 	movl   $0x2a5,0x4(%esp)$/;"	l
c01066d2	obj/kernel.asm	/^c01066d2:	00 $/;"	l
c01066d3	obj/kernel.asm	/^c01066d3:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01066da	obj/kernel.asm	/^c01066da:	e8 e9 a7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01066df	obj/kernel.asm	/^c01066df:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c01066e4	obj/kernel.asm	/^c01066e4:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c01066eb	obj/kernel.asm	/^c01066eb:	00 $/;"	l
c01066ec	obj/kernel.asm	/^c01066ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01066ef	obj/kernel.asm	/^c01066ef:	e8 f7 f7 ff ff       	call   c0105eeb <page_remove>$/;"	l
c01066f4	obj/kernel.asm	/^c01066f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01066f7	obj/kernel.asm	/^c01066f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01066fa	obj/kernel.asm	/^c01066fa:	e8 60 e8 ff ff       	call   c0104f5f <page_ref>$/;"	l
c01066ff	obj/kernel.asm	/^c01066ff:	85 c0                	test   %eax,%eax$/;"	l
c0106701	obj/kernel.asm	/^c0106701:	74 24                	je     c0106727 <check_pgdir+0x5f0>$/;"	l
c0106703	obj/kernel.asm	/^c0106703:	c7 44 24 0c b9 68 11 	movl   $0xc01168b9,0xc(%esp)$/;"	l
c010670a	obj/kernel.asm	/^c010670a:	c0 $/;"	l
c010670b	obj/kernel.asm	/^c010670b:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106712	obj/kernel.asm	/^c0106712:	c0 $/;"	l
c0106713	obj/kernel.asm	/^c0106713:	c7 44 24 04 a8 02 00 	movl   $0x2a8,0x4(%esp)$/;"	l
c010671a	obj/kernel.asm	/^c010671a:	00 $/;"	l
c010671b	obj/kernel.asm	/^c010671b:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106722	obj/kernel.asm	/^c0106722:	e8 a1 a7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106727	obj/kernel.asm	/^c0106727:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010672a	obj/kernel.asm	/^c010672a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010672d	obj/kernel.asm	/^c010672d:	e8 2d e8 ff ff       	call   c0104f5f <page_ref>$/;"	l
c0106732	obj/kernel.asm	/^c0106732:	85 c0                	test   %eax,%eax$/;"	l
c0106734	obj/kernel.asm	/^c0106734:	74 24                	je     c010675a <check_pgdir+0x623>$/;"	l
c0106736	obj/kernel.asm	/^c0106736:	c7 44 24 0c 92 68 11 	movl   $0xc0116892,0xc(%esp)$/;"	l
c010673d	obj/kernel.asm	/^c010673d:	c0 $/;"	l
c010673e	obj/kernel.asm	/^c010673e:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106745	obj/kernel.asm	/^c0106745:	c0 $/;"	l
c0106746	obj/kernel.asm	/^c0106746:	c7 44 24 04 a9 02 00 	movl   $0x2a9,0x4(%esp)$/;"	l
c010674d	obj/kernel.asm	/^c010674d:	00 $/;"	l
c010674e	obj/kernel.asm	/^c010674e:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106755	obj/kernel.asm	/^c0106755:	e8 6e a7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010675a	obj/kernel.asm	/^c010675a:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c010675f	obj/kernel.asm	/^c010675f:	8b 00                	mov    (%eax),%eax$/;"	l
c0106761	obj/kernel.asm	/^c0106761:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106764	obj/kernel.asm	/^c0106764:	e8 de e7 ff ff       	call   c0104f47 <pde2page>$/;"	l
c0106769	obj/kernel.asm	/^c0106769:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010676c	obj/kernel.asm	/^c010676c:	e8 ee e7 ff ff       	call   c0104f5f <page_ref>$/;"	l
c0106771	obj/kernel.asm	/^c0106771:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106774	obj/kernel.asm	/^c0106774:	74 24                	je     c010679a <check_pgdir+0x663>$/;"	l
c0106776	obj/kernel.asm	/^c0106776:	c7 44 24 0c cc 68 11 	movl   $0xc01168cc,0xc(%esp)$/;"	l
c010677d	obj/kernel.asm	/^c010677d:	c0 $/;"	l
c010677e	obj/kernel.asm	/^c010677e:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106785	obj/kernel.asm	/^c0106785:	c0 $/;"	l
c0106786	obj/kernel.asm	/^c0106786:	c7 44 24 04 ab 02 00 	movl   $0x2ab,0x4(%esp)$/;"	l
c010678d	obj/kernel.asm	/^c010678d:	00 $/;"	l
c010678e	obj/kernel.asm	/^c010678e:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106795	obj/kernel.asm	/^c0106795:	e8 2e a7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010679a	obj/kernel.asm	/^c010679a:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c010679f	obj/kernel.asm	/^c010679f:	8b 00                	mov    (%eax),%eax$/;"	l
c01067a1	obj/kernel.asm	/^c01067a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01067a4	obj/kernel.asm	/^c01067a4:	e8 9e e7 ff ff       	call   c0104f47 <pde2page>$/;"	l
c01067a9	obj/kernel.asm	/^c01067a9:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01067b0	obj/kernel.asm	/^c01067b0:	00 $/;"	l
c01067b1	obj/kernel.asm	/^c01067b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01067b4	obj/kernel.asm	/^c01067b4:	e8 16 ea ff ff       	call   c01051cf <free_pages>$/;"	l
c01067b9	obj/kernel.asm	/^c01067b9:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c01067be	obj/kernel.asm	/^c01067be:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01067c4	obj/kernel.asm	/^c01067c4:	c7 04 24 f3 68 11 c0 	movl   $0xc01168f3,(%esp)$/;"	l
c01067cb	obj/kernel.asm	/^c01067cb:	e8 95 9b ff ff       	call   c0100365 <cprintf>$/;"	l
c01067d0	obj/kernel.asm	/^c01067d0:	c9                   	leave  $/;"	l
c01067d1	obj/kernel.asm	/^c01067d1:	c3                   	ret    $/;"	l
c01067d2	obj/kernel.asm	/^c01067d2 <check_boot_pgdir>:$/;"	l
c01067d2	obj/kernel.asm	/^c01067d2:	55                   	push   %ebp$/;"	l
c01067d3	obj/kernel.asm	/^c01067d3:	89 e5                	mov    %esp,%ebp$/;"	l
c01067d5	obj/kernel.asm	/^c01067d5:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01067d8	obj/kernel.asm	/^c01067d8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01067df	obj/kernel.asm	/^c01067df:	e9 ca 00 00 00       	jmp    c01068ae <check_boot_pgdir+0xdc>$/;"	l
c01067e4	obj/kernel.asm	/^c01067e4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01067e7	obj/kernel.asm	/^c01067e7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01067ea	obj/kernel.asm	/^c01067ea:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01067ed	obj/kernel.asm	/^c01067ed:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01067f0	obj/kernel.asm	/^c01067f0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01067f3	obj/kernel.asm	/^c01067f3:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c01067f8	obj/kernel.asm	/^c01067f8:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c01067fb	obj/kernel.asm	/^c01067fb:	72 23                	jb     c0106820 <check_boot_pgdir+0x4e>$/;"	l
c01067fd	obj/kernel.asm	/^c01067fd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106800	obj/kernel.asm	/^c0106800:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106804	obj/kernel.asm	/^c0106804:	c7 44 24 08 c0 64 11 	movl   $0xc01164c0,0x8(%esp)$/;"	l
c010680b	obj/kernel.asm	/^c010680b:	c0 $/;"	l
c010680c	obj/kernel.asm	/^c010680c:	c7 44 24 04 b7 02 00 	movl   $0x2b7,0x4(%esp)$/;"	l
c0106813	obj/kernel.asm	/^c0106813:	00 $/;"	l
c0106814	obj/kernel.asm	/^c0106814:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c010681b	obj/kernel.asm	/^c010681b:	e8 a8 a6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106820	obj/kernel.asm	/^c0106820:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106823	obj/kernel.asm	/^c0106823:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0106828	obj/kernel.asm	/^c0106828:	89 c2                	mov    %eax,%edx$/;"	l
c010682a	obj/kernel.asm	/^c010682a:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c010682f	obj/kernel.asm	/^c010682f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106836	obj/kernel.asm	/^c0106836:	00 $/;"	l
c0106837	obj/kernel.asm	/^c0106837:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010683b	obj/kernel.asm	/^c010683b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010683e	obj/kernel.asm	/^c010683e:	e8 98 f0 ff ff       	call   c01058db <get_pte>$/;"	l
c0106843	obj/kernel.asm	/^c0106843:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106846	obj/kernel.asm	/^c0106846:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010684a	obj/kernel.asm	/^c010684a:	75 24                	jne    c0106870 <check_boot_pgdir+0x9e>$/;"	l
c010684c	obj/kernel.asm	/^c010684c:	c7 44 24 0c 10 69 11 	movl   $0xc0116910,0xc(%esp)$/;"	l
c0106853	obj/kernel.asm	/^c0106853:	c0 $/;"	l
c0106854	obj/kernel.asm	/^c0106854:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c010685b	obj/kernel.asm	/^c010685b:	c0 $/;"	l
c010685c	obj/kernel.asm	/^c010685c:	c7 44 24 04 b7 02 00 	movl   $0x2b7,0x4(%esp)$/;"	l
c0106863	obj/kernel.asm	/^c0106863:	00 $/;"	l
c0106864	obj/kernel.asm	/^c0106864:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c010686b	obj/kernel.asm	/^c010686b:	e8 58 a6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106870	obj/kernel.asm	/^c0106870:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106873	obj/kernel.asm	/^c0106873:	8b 00                	mov    (%eax),%eax$/;"	l
c0106875	obj/kernel.asm	/^c0106875:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010687a	obj/kernel.asm	/^c010687a:	89 c2                	mov    %eax,%edx$/;"	l
c010687c	obj/kernel.asm	/^c010687c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010687f	obj/kernel.asm	/^c010687f:	39 c2                	cmp    %eax,%edx$/;"	l
c0106881	obj/kernel.asm	/^c0106881:	74 24                	je     c01068a7 <check_boot_pgdir+0xd5>$/;"	l
c0106883	obj/kernel.asm	/^c0106883:	c7 44 24 0c 4d 69 11 	movl   $0xc011694d,0xc(%esp)$/;"	l
c010688a	obj/kernel.asm	/^c010688a:	c0 $/;"	l
c010688b	obj/kernel.asm	/^c010688b:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106892	obj/kernel.asm	/^c0106892:	c0 $/;"	l
c0106893	obj/kernel.asm	/^c0106893:	c7 44 24 04 b8 02 00 	movl   $0x2b8,0x4(%esp)$/;"	l
c010689a	obj/kernel.asm	/^c010689a:	00 $/;"	l
c010689b	obj/kernel.asm	/^c010689b:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01068a2	obj/kernel.asm	/^c01068a2:	e8 21 a6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01068a7	obj/kernel.asm	/^c01068a7:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c01068ae	obj/kernel.asm	/^c01068ae:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01068b1	obj/kernel.asm	/^c01068b1:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c01068b6	obj/kernel.asm	/^c01068b6:	39 c2                	cmp    %eax,%edx$/;"	l
c01068b8	obj/kernel.asm	/^c01068b8:	0f 82 26 ff ff ff    	jb     c01067e4 <check_boot_pgdir+0x12>$/;"	l
c01068be	obj/kernel.asm	/^c01068be:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c01068c3	obj/kernel.asm	/^c01068c3:	05 ac 0f 00 00       	add    $0xfac,%eax$/;"	l
c01068c8	obj/kernel.asm	/^c01068c8:	8b 00                	mov    (%eax),%eax$/;"	l
c01068ca	obj/kernel.asm	/^c01068ca:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01068cf	obj/kernel.asm	/^c01068cf:	89 c2                	mov    %eax,%edx$/;"	l
c01068d1	obj/kernel.asm	/^c01068d1:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c01068d6	obj/kernel.asm	/^c01068d6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01068d9	obj/kernel.asm	/^c01068d9:	81 7d e4 ff ff ff bf 	cmpl   $0xbfffffff,-0x1c(%ebp)$/;"	l
c01068e0	obj/kernel.asm	/^c01068e0:	77 23                	ja     c0106905 <check_boot_pgdir+0x133>$/;"	l
c01068e2	obj/kernel.asm	/^c01068e2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01068e5	obj/kernel.asm	/^c01068e5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01068e9	obj/kernel.asm	/^c01068e9:	c7 44 24 08 64 65 11 	movl   $0xc0116564,0x8(%esp)$/;"	l
c01068f0	obj/kernel.asm	/^c01068f0:	c0 $/;"	l
c01068f1	obj/kernel.asm	/^c01068f1:	c7 44 24 04 bb 02 00 	movl   $0x2bb,0x4(%esp)$/;"	l
c01068f8	obj/kernel.asm	/^c01068f8:	00 $/;"	l
c01068f9	obj/kernel.asm	/^c01068f9:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106900	obj/kernel.asm	/^c0106900:	e8 c3 a5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106905	obj/kernel.asm	/^c0106905:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106908	obj/kernel.asm	/^c0106908:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010690d	obj/kernel.asm	/^c010690d:	39 c2                	cmp    %eax,%edx$/;"	l
c010690f	obj/kernel.asm	/^c010690f:	74 24                	je     c0106935 <check_boot_pgdir+0x163>$/;"	l
c0106911	obj/kernel.asm	/^c0106911:	c7 44 24 0c 64 69 11 	movl   $0xc0116964,0xc(%esp)$/;"	l
c0106918	obj/kernel.asm	/^c0106918:	c0 $/;"	l
c0106919	obj/kernel.asm	/^c0106919:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106920	obj/kernel.asm	/^c0106920:	c0 $/;"	l
c0106921	obj/kernel.asm	/^c0106921:	c7 44 24 04 bb 02 00 	movl   $0x2bb,0x4(%esp)$/;"	l
c0106928	obj/kernel.asm	/^c0106928:	00 $/;"	l
c0106929	obj/kernel.asm	/^c0106929:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106930	obj/kernel.asm	/^c0106930:	e8 93 a5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106935	obj/kernel.asm	/^c0106935:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c010693a	obj/kernel.asm	/^c010693a:	8b 00                	mov    (%eax),%eax$/;"	l
c010693c	obj/kernel.asm	/^c010693c:	85 c0                	test   %eax,%eax$/;"	l
c010693e	obj/kernel.asm	/^c010693e:	74 24                	je     c0106964 <check_boot_pgdir+0x192>$/;"	l
c0106940	obj/kernel.asm	/^c0106940:	c7 44 24 0c 98 69 11 	movl   $0xc0116998,0xc(%esp)$/;"	l
c0106947	obj/kernel.asm	/^c0106947:	c0 $/;"	l
c0106948	obj/kernel.asm	/^c0106948:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c010694f	obj/kernel.asm	/^c010694f:	c0 $/;"	l
c0106950	obj/kernel.asm	/^c0106950:	c7 44 24 04 bd 02 00 	movl   $0x2bd,0x4(%esp)$/;"	l
c0106957	obj/kernel.asm	/^c0106957:	00 $/;"	l
c0106958	obj/kernel.asm	/^c0106958:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c010695f	obj/kernel.asm	/^c010695f:	e8 64 a5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106964	obj/kernel.asm	/^c0106964:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010696b	obj/kernel.asm	/^c010696b:	e8 f4 e7 ff ff       	call   c0105164 <alloc_pages>$/;"	l
c0106970	obj/kernel.asm	/^c0106970:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0106973	obj/kernel.asm	/^c0106973:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c0106978	obj/kernel.asm	/^c0106978:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
c010697f	obj/kernel.asm	/^c010697f:	00 $/;"	l
c0106980	obj/kernel.asm	/^c0106980:	c7 44 24 08 00 01 00 	movl   $0x100,0x8(%esp)$/;"	l
c0106987	obj/kernel.asm	/^c0106987:	00 $/;"	l
c0106988	obj/kernel.asm	/^c0106988:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010698b	obj/kernel.asm	/^c010698b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010698f	obj/kernel.asm	/^c010698f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106992	obj/kernel.asm	/^c0106992:	e8 98 f5 ff ff       	call   c0105f2f <page_insert>$/;"	l
c0106997	obj/kernel.asm	/^c0106997:	85 c0                	test   %eax,%eax$/;"	l
c0106999	obj/kernel.asm	/^c0106999:	74 24                	je     c01069bf <check_boot_pgdir+0x1ed>$/;"	l
c010699b	obj/kernel.asm	/^c010699b:	c7 44 24 0c ac 69 11 	movl   $0xc01169ac,0xc(%esp)$/;"	l
c01069a2	obj/kernel.asm	/^c01069a2:	c0 $/;"	l
c01069a3	obj/kernel.asm	/^c01069a3:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c01069aa	obj/kernel.asm	/^c01069aa:	c0 $/;"	l
c01069ab	obj/kernel.asm	/^c01069ab:	c7 44 24 04 c1 02 00 	movl   $0x2c1,0x4(%esp)$/;"	l
c01069b2	obj/kernel.asm	/^c01069b2:	00 $/;"	l
c01069b3	obj/kernel.asm	/^c01069b3:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01069ba	obj/kernel.asm	/^c01069ba:	e8 09 a5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01069bf	obj/kernel.asm	/^c01069bf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01069c2	obj/kernel.asm	/^c01069c2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01069c5	obj/kernel.asm	/^c01069c5:	e8 95 e5 ff ff       	call   c0104f5f <page_ref>$/;"	l
c01069ca	obj/kernel.asm	/^c01069ca:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01069cd	obj/kernel.asm	/^c01069cd:	74 24                	je     c01069f3 <check_boot_pgdir+0x221>$/;"	l
c01069cf	obj/kernel.asm	/^c01069cf:	c7 44 24 0c da 69 11 	movl   $0xc01169da,0xc(%esp)$/;"	l
c01069d6	obj/kernel.asm	/^c01069d6:	c0 $/;"	l
c01069d7	obj/kernel.asm	/^c01069d7:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c01069de	obj/kernel.asm	/^c01069de:	c0 $/;"	l
c01069df	obj/kernel.asm	/^c01069df:	c7 44 24 04 c2 02 00 	movl   $0x2c2,0x4(%esp)$/;"	l
c01069e6	obj/kernel.asm	/^c01069e6:	00 $/;"	l
c01069e7	obj/kernel.asm	/^c01069e7:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c01069ee	obj/kernel.asm	/^c01069ee:	e8 d5 a4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01069f3	obj/kernel.asm	/^c01069f3:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c01069f8	obj/kernel.asm	/^c01069f8:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
c01069ff	obj/kernel.asm	/^c01069ff:	00 $/;"	l
c0106a00	obj/kernel.asm	/^c0106a00:	c7 44 24 08 00 11 00 	movl   $0x1100,0x8(%esp)$/;"	l
c0106a07	obj/kernel.asm	/^c0106a07:	00 $/;"	l
c0106a08	obj/kernel.asm	/^c0106a08:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106a0b	obj/kernel.asm	/^c0106a0b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106a0f	obj/kernel.asm	/^c0106a0f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106a12	obj/kernel.asm	/^c0106a12:	e8 18 f5 ff ff       	call   c0105f2f <page_insert>$/;"	l
c0106a17	obj/kernel.asm	/^c0106a17:	85 c0                	test   %eax,%eax$/;"	l
c0106a19	obj/kernel.asm	/^c0106a19:	74 24                	je     c0106a3f <check_boot_pgdir+0x26d>$/;"	l
c0106a1b	obj/kernel.asm	/^c0106a1b:	c7 44 24 0c ec 69 11 	movl   $0xc01169ec,0xc(%esp)$/;"	l
c0106a22	obj/kernel.asm	/^c0106a22:	c0 $/;"	l
c0106a23	obj/kernel.asm	/^c0106a23:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106a2a	obj/kernel.asm	/^c0106a2a:	c0 $/;"	l
c0106a2b	obj/kernel.asm	/^c0106a2b:	c7 44 24 04 c3 02 00 	movl   $0x2c3,0x4(%esp)$/;"	l
c0106a32	obj/kernel.asm	/^c0106a32:	00 $/;"	l
c0106a33	obj/kernel.asm	/^c0106a33:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106a3a	obj/kernel.asm	/^c0106a3a:	e8 89 a4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106a3f	obj/kernel.asm	/^c0106a3f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106a42	obj/kernel.asm	/^c0106a42:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106a45	obj/kernel.asm	/^c0106a45:	e8 15 e5 ff ff       	call   c0104f5f <page_ref>$/;"	l
c0106a4a	obj/kernel.asm	/^c0106a4a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0106a4d	obj/kernel.asm	/^c0106a4d:	74 24                	je     c0106a73 <check_boot_pgdir+0x2a1>$/;"	l
c0106a4f	obj/kernel.asm	/^c0106a4f:	c7 44 24 0c 23 6a 11 	movl   $0xc0116a23,0xc(%esp)$/;"	l
c0106a56	obj/kernel.asm	/^c0106a56:	c0 $/;"	l
c0106a57	obj/kernel.asm	/^c0106a57:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106a5e	obj/kernel.asm	/^c0106a5e:	c0 $/;"	l
c0106a5f	obj/kernel.asm	/^c0106a5f:	c7 44 24 04 c4 02 00 	movl   $0x2c4,0x4(%esp)$/;"	l
c0106a66	obj/kernel.asm	/^c0106a66:	00 $/;"	l
c0106a67	obj/kernel.asm	/^c0106a67:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106a6e	obj/kernel.asm	/^c0106a6e:	e8 55 a4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106a73	obj/kernel.asm	/^c0106a73:	c7 45 dc 34 6a 11 c0 	movl   $0xc0116a34,-0x24(%ebp)$/;"	l
c0106a7a	obj/kernel.asm	/^c0106a7a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106a7d	obj/kernel.asm	/^c0106a7d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106a81	obj/kernel.asm	/^c0106a81:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c0106a88	obj/kernel.asm	/^c0106a88:	e8 0c e8 00 00       	call   c0115299 <strcpy>$/;"	l
c0106a8d	obj/kernel.asm	/^c0106a8d:	c7 44 24 04 00 11 00 	movl   $0x1100,0x4(%esp)$/;"	l
c0106a94	obj/kernel.asm	/^c0106a94:	00 $/;"	l
c0106a95	obj/kernel.asm	/^c0106a95:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c0106a9c	obj/kernel.asm	/^c0106a9c:	e8 71 e8 00 00       	call   c0115312 <strcmp>$/;"	l
c0106aa1	obj/kernel.asm	/^c0106aa1:	85 c0                	test   %eax,%eax$/;"	l
c0106aa3	obj/kernel.asm	/^c0106aa3:	74 24                	je     c0106ac9 <check_boot_pgdir+0x2f7>$/;"	l
c0106aa5	obj/kernel.asm	/^c0106aa5:	c7 44 24 0c 4c 6a 11 	movl   $0xc0116a4c,0xc(%esp)$/;"	l
c0106aac	obj/kernel.asm	/^c0106aac:	c0 $/;"	l
c0106aad	obj/kernel.asm	/^c0106aad:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106ab4	obj/kernel.asm	/^c0106ab4:	c0 $/;"	l
c0106ab5	obj/kernel.asm	/^c0106ab5:	c7 44 24 04 c8 02 00 	movl   $0x2c8,0x4(%esp)$/;"	l
c0106abc	obj/kernel.asm	/^c0106abc:	00 $/;"	l
c0106abd	obj/kernel.asm	/^c0106abd:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106ac4	obj/kernel.asm	/^c0106ac4:	e8 ff a3 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106ac9	obj/kernel.asm	/^c0106ac9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106acc	obj/kernel.asm	/^c0106acc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106acf	obj/kernel.asm	/^c0106acf:	e8 e1 e3 ff ff       	call   c0104eb5 <page2kva>$/;"	l
c0106ad4	obj/kernel.asm	/^c0106ad4:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
c0106ad9	obj/kernel.asm	/^c0106ad9:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0106adc	obj/kernel.asm	/^c0106adc:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c0106ae3	obj/kernel.asm	/^c0106ae3:	e8 32 e7 00 00       	call   c011521a <strlen>$/;"	l
c0106ae8	obj/kernel.asm	/^c0106ae8:	85 c0                	test   %eax,%eax$/;"	l
c0106aea	obj/kernel.asm	/^c0106aea:	74 24                	je     c0106b10 <check_boot_pgdir+0x33e>$/;"	l
c0106aec	obj/kernel.asm	/^c0106aec:	c7 44 24 0c 84 6a 11 	movl   $0xc0116a84,0xc(%esp)$/;"	l
c0106af3	obj/kernel.asm	/^c0106af3:	c0 $/;"	l
c0106af4	obj/kernel.asm	/^c0106af4:	c7 44 24 08 ad 65 11 	movl   $0xc01165ad,0x8(%esp)$/;"	l
c0106afb	obj/kernel.asm	/^c0106afb:	c0 $/;"	l
c0106afc	obj/kernel.asm	/^c0106afc:	c7 44 24 04 cb 02 00 	movl   $0x2cb,0x4(%esp)$/;"	l
c0106b03	obj/kernel.asm	/^c0106b03:	00 $/;"	l
c0106b04	obj/kernel.asm	/^c0106b04:	c7 04 24 88 65 11 c0 	movl   $0xc0116588,(%esp)$/;"	l
c0106b0b	obj/kernel.asm	/^c0106b0b:	e8 b8 a3 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106b10	obj/kernel.asm	/^c0106b10:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0106b17	obj/kernel.asm	/^c0106b17:	00 $/;"	l
c0106b18	obj/kernel.asm	/^c0106b18:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106b1b	obj/kernel.asm	/^c0106b1b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106b1e	obj/kernel.asm	/^c0106b1e:	e8 ac e6 ff ff       	call   c01051cf <free_pages>$/;"	l
c0106b23	obj/kernel.asm	/^c0106b23:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c0106b28	obj/kernel.asm	/^c0106b28:	8b 00                	mov    (%eax),%eax$/;"	l
c0106b2a	obj/kernel.asm	/^c0106b2a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106b2d	obj/kernel.asm	/^c0106b2d:	e8 15 e4 ff ff       	call   c0104f47 <pde2page>$/;"	l
c0106b32	obj/kernel.asm	/^c0106b32:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0106b39	obj/kernel.asm	/^c0106b39:	00 $/;"	l
c0106b3a	obj/kernel.asm	/^c0106b3a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106b3d	obj/kernel.asm	/^c0106b3d:	e8 8d e6 ff ff       	call   c01051cf <free_pages>$/;"	l
c0106b42	obj/kernel.asm	/^c0106b42:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c0106b47	obj/kernel.asm	/^c0106b47:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0106b4d	obj/kernel.asm	/^c0106b4d:	c7 04 24 a8 6a 11 c0 	movl   $0xc0116aa8,(%esp)$/;"	l
c0106b54	obj/kernel.asm	/^c0106b54:	e8 0c 98 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106b59	obj/kernel.asm	/^c0106b59:	c9                   	leave  $/;"	l
c0106b5a	obj/kernel.asm	/^c0106b5a:	c3                   	ret    $/;"	l
c0106b5b	obj/kernel.asm	/^c0106b5b <perm2str>:$/;"	l
c0106b5b	obj/kernel.asm	/^c0106b5b:	55                   	push   %ebp$/;"	l
c0106b5c	obj/kernel.asm	/^c0106b5c:	89 e5                	mov    %esp,%ebp$/;"	l
c0106b5e	obj/kernel.asm	/^c0106b5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106b61	obj/kernel.asm	/^c0106b61:	83 e0 04             	and    $0x4,%eax$/;"	l
c0106b64	obj/kernel.asm	/^c0106b64:	85 c0                	test   %eax,%eax$/;"	l
c0106b66	obj/kernel.asm	/^c0106b66:	74 07                	je     c0106b6f <perm2str+0x14>$/;"	l
c0106b68	obj/kernel.asm	/^c0106b68:	b8 75 00 00 00       	mov    $0x75,%eax$/;"	l
c0106b6d	obj/kernel.asm	/^c0106b6d:	eb 05                	jmp    c0106b74 <perm2str+0x19>$/;"	l
c0106b6f	obj/kernel.asm	/^c0106b6f:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0106b74	obj/kernel.asm	/^c0106b74:	a2 08 0f 15 c0       	mov    %al,0xc0150f08$/;"	l
c0106b79	obj/kernel.asm	/^c0106b79:	c6 05 09 0f 15 c0 72 	movb   $0x72,0xc0150f09$/;"	l
c0106b80	obj/kernel.asm	/^c0106b80:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106b83	obj/kernel.asm	/^c0106b83:	83 e0 02             	and    $0x2,%eax$/;"	l
c0106b86	obj/kernel.asm	/^c0106b86:	85 c0                	test   %eax,%eax$/;"	l
c0106b88	obj/kernel.asm	/^c0106b88:	74 07                	je     c0106b91 <perm2str+0x36>$/;"	l
c0106b8a	obj/kernel.asm	/^c0106b8a:	b8 77 00 00 00       	mov    $0x77,%eax$/;"	l
c0106b8f	obj/kernel.asm	/^c0106b8f:	eb 05                	jmp    c0106b96 <perm2str+0x3b>$/;"	l
c0106b91	obj/kernel.asm	/^c0106b91:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0106b96	obj/kernel.asm	/^c0106b96:	a2 0a 0f 15 c0       	mov    %al,0xc0150f0a$/;"	l
c0106b9b	obj/kernel.asm	/^c0106b9b:	c6 05 0b 0f 15 c0 00 	movb   $0x0,0xc0150f0b$/;"	l
c0106ba2	obj/kernel.asm	/^c0106ba2:	b8 08 0f 15 c0       	mov    $0xc0150f08,%eax$/;"	l
c0106ba7	obj/kernel.asm	/^c0106ba7:	5d                   	pop    %ebp$/;"	l
c0106ba8	obj/kernel.asm	/^c0106ba8:	c3                   	ret    $/;"	l
c0106ba9	obj/kernel.asm	/^c0106ba9 <get_pgtable_items>:$/;"	l
c0106ba9	obj/kernel.asm	/^c0106ba9:	55                   	push   %ebp$/;"	l
c0106baa	obj/kernel.asm	/^c0106baa:	89 e5                	mov    %esp,%ebp$/;"	l
c0106bac	obj/kernel.asm	/^c0106bac:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0106baf	obj/kernel.asm	/^c0106baf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106bb2	obj/kernel.asm	/^c0106bb2:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106bb5	obj/kernel.asm	/^c0106bb5:	72 0a                	jb     c0106bc1 <get_pgtable_items+0x18>$/;"	l
c0106bb7	obj/kernel.asm	/^c0106bb7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106bbc	obj/kernel.asm	/^c0106bbc:	e9 9c 00 00 00       	jmp    c0106c5d <get_pgtable_items+0xb4>$/;"	l
c0106bc1	obj/kernel.asm	/^c0106bc1:	eb 04                	jmp    c0106bc7 <get_pgtable_items+0x1e>$/;"	l
c0106bc3	obj/kernel.asm	/^c0106bc3:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0106bc7	obj/kernel.asm	/^c0106bc7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106bca	obj/kernel.asm	/^c0106bca:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106bcd	obj/kernel.asm	/^c0106bcd:	73 18                	jae    c0106be7 <get_pgtable_items+0x3e>$/;"	l
c0106bcf	obj/kernel.asm	/^c0106bcf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106bd2	obj/kernel.asm	/^c0106bd2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0106bd9	obj/kernel.asm	/^c0106bd9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106bdc	obj/kernel.asm	/^c0106bdc:	01 d0                	add    %edx,%eax$/;"	l
c0106bde	obj/kernel.asm	/^c0106bde:	8b 00                	mov    (%eax),%eax$/;"	l
c0106be0	obj/kernel.asm	/^c0106be0:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106be3	obj/kernel.asm	/^c0106be3:	85 c0                	test   %eax,%eax$/;"	l
c0106be5	obj/kernel.asm	/^c0106be5:	74 dc                	je     c0106bc3 <get_pgtable_items+0x1a>$/;"	l
c0106be7	obj/kernel.asm	/^c0106be7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106bea	obj/kernel.asm	/^c0106bea:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106bed	obj/kernel.asm	/^c0106bed:	73 69                	jae    c0106c58 <get_pgtable_items+0xaf>$/;"	l
c0106bef	obj/kernel.asm	/^c0106bef:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0106bf3	obj/kernel.asm	/^c0106bf3:	74 08                	je     c0106bfd <get_pgtable_items+0x54>$/;"	l
c0106bf5	obj/kernel.asm	/^c0106bf5:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0106bf8	obj/kernel.asm	/^c0106bf8:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106bfb	obj/kernel.asm	/^c0106bfb:	89 10                	mov    %edx,(%eax)$/;"	l
c0106bfd	obj/kernel.asm	/^c0106bfd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106c00	obj/kernel.asm	/^c0106c00:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0106c03	obj/kernel.asm	/^c0106c03:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c0106c06	obj/kernel.asm	/^c0106c06:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0106c0d	obj/kernel.asm	/^c0106c0d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106c10	obj/kernel.asm	/^c0106c10:	01 d0                	add    %edx,%eax$/;"	l
c0106c12	obj/kernel.asm	/^c0106c12:	8b 00                	mov    (%eax),%eax$/;"	l
c0106c14	obj/kernel.asm	/^c0106c14:	83 e0 07             	and    $0x7,%eax$/;"	l
c0106c17	obj/kernel.asm	/^c0106c17:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0106c1a	obj/kernel.asm	/^c0106c1a:	eb 04                	jmp    c0106c20 <get_pgtable_items+0x77>$/;"	l
c0106c1c	obj/kernel.asm	/^c0106c1c:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0106c20	obj/kernel.asm	/^c0106c20:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106c23	obj/kernel.asm	/^c0106c23:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106c26	obj/kernel.asm	/^c0106c26:	73 1d                	jae    c0106c45 <get_pgtable_items+0x9c>$/;"	l
c0106c28	obj/kernel.asm	/^c0106c28:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106c2b	obj/kernel.asm	/^c0106c2b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0106c32	obj/kernel.asm	/^c0106c32:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106c35	obj/kernel.asm	/^c0106c35:	01 d0                	add    %edx,%eax$/;"	l
c0106c37	obj/kernel.asm	/^c0106c37:	8b 00                	mov    (%eax),%eax$/;"	l
c0106c39	obj/kernel.asm	/^c0106c39:	83 e0 07             	and    $0x7,%eax$/;"	l
c0106c3c	obj/kernel.asm	/^c0106c3c:	89 c2                	mov    %eax,%edx$/;"	l
c0106c3e	obj/kernel.asm	/^c0106c3e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0106c41	obj/kernel.asm	/^c0106c41:	39 c2                	cmp    %eax,%edx$/;"	l
c0106c43	obj/kernel.asm	/^c0106c43:	74 d7                	je     c0106c1c <get_pgtable_items+0x73>$/;"	l
c0106c45	obj/kernel.asm	/^c0106c45:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c0106c49	obj/kernel.asm	/^c0106c49:	74 08                	je     c0106c53 <get_pgtable_items+0xaa>$/;"	l
c0106c4b	obj/kernel.asm	/^c0106c4b:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0106c4e	obj/kernel.asm	/^c0106c4e:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106c51	obj/kernel.asm	/^c0106c51:	89 10                	mov    %edx,(%eax)$/;"	l
c0106c53	obj/kernel.asm	/^c0106c53:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0106c56	obj/kernel.asm	/^c0106c56:	eb 05                	jmp    c0106c5d <get_pgtable_items+0xb4>$/;"	l
c0106c58	obj/kernel.asm	/^c0106c58:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106c5d	obj/kernel.asm	/^c0106c5d:	c9                   	leave  $/;"	l
c0106c5e	obj/kernel.asm	/^c0106c5e:	c3                   	ret    $/;"	l
c0106c5f	obj/kernel.asm	/^c0106c5f <print_pgdir>:$/;"	l
c0106c5f	obj/kernel.asm	/^c0106c5f:	55                   	push   %ebp$/;"	l
c0106c60	obj/kernel.asm	/^c0106c60:	89 e5                	mov    %esp,%ebp$/;"	l
c0106c62	obj/kernel.asm	/^c0106c62:	57                   	push   %edi$/;"	l
c0106c63	obj/kernel.asm	/^c0106c63:	56                   	push   %esi$/;"	l
c0106c64	obj/kernel.asm	/^c0106c64:	53                   	push   %ebx$/;"	l
c0106c65	obj/kernel.asm	/^c0106c65:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
c0106c68	obj/kernel.asm	/^c0106c68:	c7 04 24 c8 6a 11 c0 	movl   $0xc0116ac8,(%esp)$/;"	l
c0106c6f	obj/kernel.asm	/^c0106c6f:	e8 f1 96 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106c74	obj/kernel.asm	/^c0106c74:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0106c7b	obj/kernel.asm	/^c0106c7b:	e9 fa 00 00 00       	jmp    c0106d7a <print_pgdir+0x11b>$/;"	l
c0106c80	obj/kernel.asm	/^c0106c80:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106c83	obj/kernel.asm	/^c0106c83:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106c86	obj/kernel.asm	/^c0106c86:	e8 d0 fe ff ff       	call   c0106b5b <perm2str>$/;"	l
c0106c8b	obj/kernel.asm	/^c0106c8b:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c0106c8e	obj/kernel.asm	/^c0106c8e:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106c91	obj/kernel.asm	/^c0106c91:	29 d1                	sub    %edx,%ecx$/;"	l
c0106c93	obj/kernel.asm	/^c0106c93:	89 ca                	mov    %ecx,%edx$/;"	l
c0106c95	obj/kernel.asm	/^c0106c95:	89 d6                	mov    %edx,%esi$/;"	l
c0106c97	obj/kernel.asm	/^c0106c97:	c1 e6 16             	shl    $0x16,%esi$/;"	l
c0106c9a	obj/kernel.asm	/^c0106c9a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0106c9d	obj/kernel.asm	/^c0106c9d:	89 d3                	mov    %edx,%ebx$/;"	l
c0106c9f	obj/kernel.asm	/^c0106c9f:	c1 e3 16             	shl    $0x16,%ebx$/;"	l
c0106ca2	obj/kernel.asm	/^c0106ca2:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106ca5	obj/kernel.asm	/^c0106ca5:	89 d1                	mov    %edx,%ecx$/;"	l
c0106ca7	obj/kernel.asm	/^c0106ca7:	c1 e1 16             	shl    $0x16,%ecx$/;"	l
c0106caa	obj/kernel.asm	/^c0106caa:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
c0106cad	obj/kernel.asm	/^c0106cad:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106cb0	obj/kernel.asm	/^c0106cb0:	29 d7                	sub    %edx,%edi$/;"	l
c0106cb2	obj/kernel.asm	/^c0106cb2:	89 fa                	mov    %edi,%edx$/;"	l
c0106cb4	obj/kernel.asm	/^c0106cb4:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0106cb8	obj/kernel.asm	/^c0106cb8:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c0106cbc	obj/kernel.asm	/^c0106cbc:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0106cc0	obj/kernel.asm	/^c0106cc0:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0106cc4	obj/kernel.asm	/^c0106cc4:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106cc8	obj/kernel.asm	/^c0106cc8:	c7 04 24 f9 6a 11 c0 	movl   $0xc0116af9,(%esp)$/;"	l
c0106ccf	obj/kernel.asm	/^c0106ccf:	e8 91 96 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106cd4	obj/kernel.asm	/^c0106cd4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106cd7	obj/kernel.asm	/^c0106cd7:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
c0106cda	obj/kernel.asm	/^c0106cda:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0106cdd	obj/kernel.asm	/^c0106cdd:	eb 54                	jmp    c0106d33 <print_pgdir+0xd4>$/;"	l
c0106cdf	obj/kernel.asm	/^c0106cdf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106ce2	obj/kernel.asm	/^c0106ce2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106ce5	obj/kernel.asm	/^c0106ce5:	e8 71 fe ff ff       	call   c0106b5b <perm2str>$/;"	l
c0106cea	obj/kernel.asm	/^c0106cea:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
c0106ced	obj/kernel.asm	/^c0106ced:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0106cf0	obj/kernel.asm	/^c0106cf0:	29 d1                	sub    %edx,%ecx$/;"	l
c0106cf2	obj/kernel.asm	/^c0106cf2:	89 ca                	mov    %ecx,%edx$/;"	l
c0106cf4	obj/kernel.asm	/^c0106cf4:	89 d6                	mov    %edx,%esi$/;"	l
c0106cf6	obj/kernel.asm	/^c0106cf6:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
c0106cf9	obj/kernel.asm	/^c0106cf9:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0106cfc	obj/kernel.asm	/^c0106cfc:	89 d3                	mov    %edx,%ebx$/;"	l
c0106cfe	obj/kernel.asm	/^c0106cfe:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
c0106d01	obj/kernel.asm	/^c0106d01:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0106d04	obj/kernel.asm	/^c0106d04:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0106d07	obj/kernel.asm	/^c0106d07:	89 d1                	mov    %edx,%ecx$/;"	l
c0106d09	obj/kernel.asm	/^c0106d09:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
c0106d0c	obj/kernel.asm	/^c0106d0c:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0106d0f	obj/kernel.asm	/^c0106d0f:	29 d7                	sub    %edx,%edi$/;"	l
c0106d11	obj/kernel.asm	/^c0106d11:	89 fa                	mov    %edi,%edx$/;"	l
c0106d13	obj/kernel.asm	/^c0106d13:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0106d17	obj/kernel.asm	/^c0106d17:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c0106d1b	obj/kernel.asm	/^c0106d1b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0106d1f	obj/kernel.asm	/^c0106d1f:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0106d23	obj/kernel.asm	/^c0106d23:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106d27	obj/kernel.asm	/^c0106d27:	c7 04 24 18 6b 11 c0 	movl   $0xc0116b18,(%esp)$/;"	l
c0106d2e	obj/kernel.asm	/^c0106d2e:	e8 32 96 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106d33	obj/kernel.asm	/^c0106d33:	ba 00 00 c0 fa       	mov    $0xfac00000,%edx$/;"	l
c0106d38	obj/kernel.asm	/^c0106d38:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0106d3b	obj/kernel.asm	/^c0106d3b:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c0106d3e	obj/kernel.asm	/^c0106d3e:	89 ce                	mov    %ecx,%esi$/;"	l
c0106d40	obj/kernel.asm	/^c0106d40:	c1 e6 0a             	shl    $0xa,%esi$/;"	l
c0106d43	obj/kernel.asm	/^c0106d43:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0106d46	obj/kernel.asm	/^c0106d46:	89 cb                	mov    %ecx,%ebx$/;"	l
c0106d48	obj/kernel.asm	/^c0106d48:	c1 e3 0a             	shl    $0xa,%ebx$/;"	l
c0106d4b	obj/kernel.asm	/^c0106d4b:	8d 4d d4             	lea    -0x2c(%ebp),%ecx$/;"	l
c0106d4e	obj/kernel.asm	/^c0106d4e:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
c0106d52	obj/kernel.asm	/^c0106d52:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
c0106d55	obj/kernel.asm	/^c0106d55:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0106d59	obj/kernel.asm	/^c0106d59:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106d5d	obj/kernel.asm	/^c0106d5d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106d61	obj/kernel.asm	/^c0106d61:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
c0106d65	obj/kernel.asm	/^c0106d65:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c0106d68	obj/kernel.asm	/^c0106d68:	e8 3c fe ff ff       	call   c0106ba9 <get_pgtable_items>$/;"	l
c0106d6d	obj/kernel.asm	/^c0106d6d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106d70	obj/kernel.asm	/^c0106d70:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0106d74	obj/kernel.asm	/^c0106d74:	0f 85 65 ff ff ff    	jne    c0106cdf <print_pgdir+0x80>$/;"	l
c0106d7a	obj/kernel.asm	/^c0106d7a:	ba 00 b0 fe fa       	mov    $0xfafeb000,%edx$/;"	l
c0106d7f	obj/kernel.asm	/^c0106d7f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106d82	obj/kernel.asm	/^c0106d82:	8d 4d dc             	lea    -0x24(%ebp),%ecx$/;"	l
c0106d85	obj/kernel.asm	/^c0106d85:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
c0106d89	obj/kernel.asm	/^c0106d89:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
c0106d8c	obj/kernel.asm	/^c0106d8c:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0106d90	obj/kernel.asm	/^c0106d90:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106d94	obj/kernel.asm	/^c0106d94:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106d98	obj/kernel.asm	/^c0106d98:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
c0106d9f	obj/kernel.asm	/^c0106d9f:	00 $/;"	l
c0106da0	obj/kernel.asm	/^c0106da0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0106da7	obj/kernel.asm	/^c0106da7:	e8 fd fd ff ff       	call   c0106ba9 <get_pgtable_items>$/;"	l
c0106dac	obj/kernel.asm	/^c0106dac:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106daf	obj/kernel.asm	/^c0106daf:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0106db3	obj/kernel.asm	/^c0106db3:	0f 85 c7 fe ff ff    	jne    c0106c80 <print_pgdir+0x21>$/;"	l
c0106db9	obj/kernel.asm	/^c0106db9:	c7 04 24 3c 6b 11 c0 	movl   $0xc0116b3c,(%esp)$/;"	l
c0106dc0	obj/kernel.asm	/^c0106dc0:	e8 a0 95 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106dc5	obj/kernel.asm	/^c0106dc5:	83 c4 4c             	add    $0x4c,%esp$/;"	l
c0106dc8	obj/kernel.asm	/^c0106dc8:	5b                   	pop    %ebx$/;"	l
c0106dc9	obj/kernel.asm	/^c0106dc9:	5e                   	pop    %esi$/;"	l
c0106dca	obj/kernel.asm	/^c0106dca:	5f                   	pop    %edi$/;"	l
c0106dcb	obj/kernel.asm	/^c0106dcb:	5d                   	pop    %ebp$/;"	l
c0106dcc	obj/kernel.asm	/^c0106dcc:	c3                   	ret    $/;"	l
c0106dcd	obj/kernel.asm	/^c0106dcd <pa2page>:$/;"	l
c0106dcd	obj/kernel.asm	/^c0106dcd:	55                   	push   %ebp$/;"	l
c0106dce	obj/kernel.asm	/^c0106dce:	89 e5                	mov    %esp,%ebp$/;"	l
c0106dd0	obj/kernel.asm	/^c0106dd0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106dd3	obj/kernel.asm	/^c0106dd3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106dd6	obj/kernel.asm	/^c0106dd6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106dd9	obj/kernel.asm	/^c0106dd9:	89 c2                	mov    %eax,%edx$/;"	l
c0106ddb	obj/kernel.asm	/^c0106ddb:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c0106de0	obj/kernel.asm	/^c0106de0:	39 c2                	cmp    %eax,%edx$/;"	l
c0106de2	obj/kernel.asm	/^c0106de2:	72 1c                	jb     c0106e00 <pa2page+0x33>$/;"	l
c0106de4	obj/kernel.asm	/^c0106de4:	c7 44 24 08 70 6b 11 	movl   $0xc0116b70,0x8(%esp)$/;"	l
c0106deb	obj/kernel.asm	/^c0106deb:	c0 $/;"	l
c0106dec	obj/kernel.asm	/^c0106dec:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0106df3	obj/kernel.asm	/^c0106df3:	00 $/;"	l
c0106df4	obj/kernel.asm	/^c0106df4:	c7 04 24 8f 6b 11 c0 	movl   $0xc0116b8f,(%esp)$/;"	l
c0106dfb	obj/kernel.asm	/^c0106dfb:	e8 c8 a0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106e00	obj/kernel.asm	/^c0106e00:	8b 0d 28 40 15 c0    	mov    0xc0154028,%ecx$/;"	l
c0106e06	obj/kernel.asm	/^c0106e06:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e09	obj/kernel.asm	/^c0106e09:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106e0c	obj/kernel.asm	/^c0106e0c:	89 c2                	mov    %eax,%edx$/;"	l
c0106e0e	obj/kernel.asm	/^c0106e0e:	89 d0                	mov    %edx,%eax$/;"	l
c0106e10	obj/kernel.asm	/^c0106e10:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0106e13	obj/kernel.asm	/^c0106e13:	01 d0                	add    %edx,%eax$/;"	l
c0106e15	obj/kernel.asm	/^c0106e15:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0106e18	obj/kernel.asm	/^c0106e18:	01 c8                	add    %ecx,%eax$/;"	l
c0106e1a	obj/kernel.asm	/^c0106e1a:	c9                   	leave  $/;"	l
c0106e1b	obj/kernel.asm	/^c0106e1b:	c3                   	ret    $/;"	l
c0106e1c	obj/kernel.asm	/^c0106e1c <pte2page>:$/;"	l
c0106e1c	obj/kernel.asm	/^c0106e1c:	55                   	push   %ebp$/;"	l
c0106e1d	obj/kernel.asm	/^c0106e1d:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e1f	obj/kernel.asm	/^c0106e1f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106e22	obj/kernel.asm	/^c0106e22:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e25	obj/kernel.asm	/^c0106e25:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106e28	obj/kernel.asm	/^c0106e28:	85 c0                	test   %eax,%eax$/;"	l
c0106e2a	obj/kernel.asm	/^c0106e2a:	75 1c                	jne    c0106e48 <pte2page+0x2c>$/;"	l
c0106e2c	obj/kernel.asm	/^c0106e2c:	c7 44 24 08 a0 6b 11 	movl   $0xc0116ba0,0x8(%esp)$/;"	l
c0106e33	obj/kernel.asm	/^c0106e33:	c0 $/;"	l
c0106e34	obj/kernel.asm	/^c0106e34:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c0106e3b	obj/kernel.asm	/^c0106e3b:	00 $/;"	l
c0106e3c	obj/kernel.asm	/^c0106e3c:	c7 04 24 8f 6b 11 c0 	movl   $0xc0116b8f,(%esp)$/;"	l
c0106e43	obj/kernel.asm	/^c0106e43:	e8 80 a0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106e48	obj/kernel.asm	/^c0106e48:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e4b	obj/kernel.asm	/^c0106e4b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106e50	obj/kernel.asm	/^c0106e50:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106e53	obj/kernel.asm	/^c0106e53:	e8 75 ff ff ff       	call   c0106dcd <pa2page>$/;"	l
c0106e58	obj/kernel.asm	/^c0106e58:	c9                   	leave  $/;"	l
c0106e59	obj/kernel.asm	/^c0106e59:	c3                   	ret    $/;"	l
c0106e5a	obj/kernel.asm	/^c0106e5a <pde2page>:$/;"	l
c0106e5a	obj/kernel.asm	/^c0106e5a:	55                   	push   %ebp$/;"	l
c0106e5b	obj/kernel.asm	/^c0106e5b:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e5d	obj/kernel.asm	/^c0106e5d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106e60	obj/kernel.asm	/^c0106e60:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e63	obj/kernel.asm	/^c0106e63:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106e68	obj/kernel.asm	/^c0106e68:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106e6b	obj/kernel.asm	/^c0106e6b:	e8 5d ff ff ff       	call   c0106dcd <pa2page>$/;"	l
c0106e70	obj/kernel.asm	/^c0106e70:	c9                   	leave  $/;"	l
c0106e71	obj/kernel.asm	/^c0106e71:	c3                   	ret    $/;"	l
c0106e72	obj/kernel.asm	/^c0106e72 <swap_init>:$/;"	l
c0106e72	obj/kernel.asm	/^c0106e72:	55                   	push   %ebp$/;"	l
c0106e73	obj/kernel.asm	/^c0106e73:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e75	obj/kernel.asm	/^c0106e75:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0106e78	obj/kernel.asm	/^c0106e78:	e8 76 80 00 00       	call   c010eef3 <swapfs_init>$/;"	l
c0106e7d	obj/kernel.asm	/^c0106e7d:	a1 dc 40 15 c0       	mov    0xc01540dc,%eax$/;"	l
c0106e82	obj/kernel.asm	/^c0106e82:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
c0106e87	obj/kernel.asm	/^c0106e87:	76 0c                	jbe    c0106e95 <swap_init+0x23>$/;"	l
c0106e89	obj/kernel.asm	/^c0106e89:	a1 dc 40 15 c0       	mov    0xc01540dc,%eax$/;"	l
c0106e8e	obj/kernel.asm	/^c0106e8e:	3d ff ff ff 00       	cmp    $0xffffff,%eax$/;"	l
c0106e93	obj/kernel.asm	/^c0106e93:	76 25                	jbe    c0106eba <swap_init+0x48>$/;"	l
c0106e95	obj/kernel.asm	/^c0106e95:	a1 dc 40 15 c0       	mov    0xc01540dc,%eax$/;"	l
c0106e9a	obj/kernel.asm	/^c0106e9a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106e9e	obj/kernel.asm	/^c0106e9e:	c7 44 24 08 c1 6b 11 	movl   $0xc0116bc1,0x8(%esp)$/;"	l
c0106ea5	obj/kernel.asm	/^c0106ea5:	c0 $/;"	l
c0106ea6	obj/kernel.asm	/^c0106ea6:	c7 44 24 04 27 00 00 	movl   $0x27,0x4(%esp)$/;"	l
c0106ead	obj/kernel.asm	/^c0106ead:	00 $/;"	l
c0106eae	obj/kernel.asm	/^c0106eae:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c0106eb5	obj/kernel.asm	/^c0106eb5:	e8 0e a0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106eba	obj/kernel.asm	/^c0106eba:	c7 05 14 0f 15 c0 60 	movl   $0xc014fa60,0xc0150f14$/;"	l
c0106ec1	obj/kernel.asm	/^c0106ec1:	fa 14 c0 $/;"	l
c0106ec4	obj/kernel.asm	/^c0106ec4:	a1 14 0f 15 c0       	mov    0xc0150f14,%eax$/;"	l
c0106ec9	obj/kernel.asm	/^c0106ec9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106ecc	obj/kernel.asm	/^c0106ecc:	ff d0                	call   *%eax$/;"	l
c0106ece	obj/kernel.asm	/^c0106ece:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106ed1	obj/kernel.asm	/^c0106ed1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0106ed5	obj/kernel.asm	/^c0106ed5:	75 26                	jne    c0106efd <swap_init+0x8b>$/;"	l
c0106ed7	obj/kernel.asm	/^c0106ed7:	c7 05 0c 0f 15 c0 01 	movl   $0x1,0xc0150f0c$/;"	l
c0106ede	obj/kernel.asm	/^c0106ede:	00 00 00 $/;"	l
c0106ee1	obj/kernel.asm	/^c0106ee1:	a1 14 0f 15 c0       	mov    0xc0150f14,%eax$/;"	l
c0106ee6	obj/kernel.asm	/^c0106ee6:	8b 00                	mov    (%eax),%eax$/;"	l
c0106ee8	obj/kernel.asm	/^c0106ee8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106eec	obj/kernel.asm	/^c0106eec:	c7 04 24 eb 6b 11 c0 	movl   $0xc0116beb,(%esp)$/;"	l
c0106ef3	obj/kernel.asm	/^c0106ef3:	e8 6d 94 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106ef8	obj/kernel.asm	/^c0106ef8:	e8 a4 04 00 00       	call   c01073a1 <check_swap>$/;"	l
c0106efd	obj/kernel.asm	/^c0106efd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106f00	obj/kernel.asm	/^c0106f00:	c9                   	leave  $/;"	l
c0106f01	obj/kernel.asm	/^c0106f01:	c3                   	ret    $/;"	l
c0106f02	obj/kernel.asm	/^c0106f02 <swap_init_mm>:$/;"	l
c0106f02	obj/kernel.asm	/^c0106f02:	55                   	push   %ebp$/;"	l
c0106f03	obj/kernel.asm	/^c0106f03:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f05	obj/kernel.asm	/^c0106f05:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106f08	obj/kernel.asm	/^c0106f08:	a1 14 0f 15 c0       	mov    0xc0150f14,%eax$/;"	l
c0106f0d	obj/kernel.asm	/^c0106f0d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106f10	obj/kernel.asm	/^c0106f10:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106f13	obj/kernel.asm	/^c0106f13:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106f16	obj/kernel.asm	/^c0106f16:	ff d0                	call   *%eax$/;"	l
c0106f18	obj/kernel.asm	/^c0106f18:	c9                   	leave  $/;"	l
c0106f19	obj/kernel.asm	/^c0106f19:	c3                   	ret    $/;"	l
c0106f1a	obj/kernel.asm	/^c0106f1a <swap_tick_event>:$/;"	l
c0106f1a	obj/kernel.asm	/^c0106f1a:	55                   	push   %ebp$/;"	l
c0106f1b	obj/kernel.asm	/^c0106f1b:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f1d	obj/kernel.asm	/^c0106f1d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106f20	obj/kernel.asm	/^c0106f20:	a1 14 0f 15 c0       	mov    0xc0150f14,%eax$/;"	l
c0106f25	obj/kernel.asm	/^c0106f25:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106f28	obj/kernel.asm	/^c0106f28:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106f2b	obj/kernel.asm	/^c0106f2b:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106f2e	obj/kernel.asm	/^c0106f2e:	ff d0                	call   *%eax$/;"	l
c0106f30	obj/kernel.asm	/^c0106f30:	c9                   	leave  $/;"	l
c0106f31	obj/kernel.asm	/^c0106f31:	c3                   	ret    $/;"	l
c0106f32	obj/kernel.asm	/^c0106f32 <swap_map_swappable>:$/;"	l
c0106f32	obj/kernel.asm	/^c0106f32:	55                   	push   %ebp$/;"	l
c0106f33	obj/kernel.asm	/^c0106f33:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f35	obj/kernel.asm	/^c0106f35:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106f38	obj/kernel.asm	/^c0106f38:	a1 14 0f 15 c0       	mov    0xc0150f14,%eax$/;"	l
c0106f3d	obj/kernel.asm	/^c0106f3d:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0106f40	obj/kernel.asm	/^c0106f40:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0106f43	obj/kernel.asm	/^c0106f43:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106f47	obj/kernel.asm	/^c0106f47:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106f4a	obj/kernel.asm	/^c0106f4a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0106f4e	obj/kernel.asm	/^c0106f4e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106f51	obj/kernel.asm	/^c0106f51:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106f55	obj/kernel.asm	/^c0106f55:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106f58	obj/kernel.asm	/^c0106f58:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106f5b	obj/kernel.asm	/^c0106f5b:	ff d0                	call   *%eax$/;"	l
c0106f5d	obj/kernel.asm	/^c0106f5d:	c9                   	leave  $/;"	l
c0106f5e	obj/kernel.asm	/^c0106f5e:	c3                   	ret    $/;"	l
c0106f5f	obj/kernel.asm	/^c0106f5f <swap_set_unswappable>:$/;"	l
c0106f5f	obj/kernel.asm	/^c0106f5f:	55                   	push   %ebp$/;"	l
c0106f60	obj/kernel.asm	/^c0106f60:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f62	obj/kernel.asm	/^c0106f62:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106f65	obj/kernel.asm	/^c0106f65:	a1 14 0f 15 c0       	mov    0xc0150f14,%eax$/;"	l
c0106f6a	obj/kernel.asm	/^c0106f6a:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0106f6d	obj/kernel.asm	/^c0106f6d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106f70	obj/kernel.asm	/^c0106f70:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106f74	obj/kernel.asm	/^c0106f74:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106f77	obj/kernel.asm	/^c0106f77:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106f7a	obj/kernel.asm	/^c0106f7a:	ff d0                	call   *%eax$/;"	l
c0106f7c	obj/kernel.asm	/^c0106f7c:	c9                   	leave  $/;"	l
c0106f7d	obj/kernel.asm	/^c0106f7d:	c3                   	ret    $/;"	l
c0106f7e	obj/kernel.asm	/^c0106f7e <swap_out>:$/;"	l
c0106f7e	obj/kernel.asm	/^c0106f7e:	55                   	push   %ebp$/;"	l
c0106f7f	obj/kernel.asm	/^c0106f7f:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f81	obj/kernel.asm	/^c0106f81:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0106f84	obj/kernel.asm	/^c0106f84:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0106f8b	obj/kernel.asm	/^c0106f8b:	e9 5a 01 00 00       	jmp    c01070ea <swap_out+0x16c>$/;"	l
c0106f90	obj/kernel.asm	/^c0106f90:	a1 14 0f 15 c0       	mov    0xc0150f14,%eax$/;"	l
c0106f95	obj/kernel.asm	/^c0106f95:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0106f98	obj/kernel.asm	/^c0106f98:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106f9b	obj/kernel.asm	/^c0106f9b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0106f9f	obj/kernel.asm	/^c0106f9f:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c0106fa2	obj/kernel.asm	/^c0106fa2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106fa6	obj/kernel.asm	/^c0106fa6:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106fa9	obj/kernel.asm	/^c0106fa9:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106fac	obj/kernel.asm	/^c0106fac:	ff d0                	call   *%eax$/;"	l
c0106fae	obj/kernel.asm	/^c0106fae:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106fb1	obj/kernel.asm	/^c0106fb1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0106fb5	obj/kernel.asm	/^c0106fb5:	74 18                	je     c0106fcf <swap_out+0x51>$/;"	l
c0106fb7	obj/kernel.asm	/^c0106fb7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106fba	obj/kernel.asm	/^c0106fba:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106fbe	obj/kernel.asm	/^c0106fbe:	c7 04 24 00 6c 11 c0 	movl   $0xc0116c00,(%esp)$/;"	l
c0106fc5	obj/kernel.asm	/^c0106fc5:	e8 9b 93 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106fca	obj/kernel.asm	/^c0106fca:	e9 27 01 00 00       	jmp    c01070f6 <swap_out+0x178>$/;"	l
c0106fcf	obj/kernel.asm	/^c0106fcf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106fd2	obj/kernel.asm	/^c0106fd2:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c0106fd5	obj/kernel.asm	/^c0106fd5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106fd8	obj/kernel.asm	/^c0106fd8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106fdb	obj/kernel.asm	/^c0106fdb:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106fde	obj/kernel.asm	/^c0106fde:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106fe5	obj/kernel.asm	/^c0106fe5:	00 $/;"	l
c0106fe6	obj/kernel.asm	/^c0106fe6:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0106fe9	obj/kernel.asm	/^c0106fe9:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106fed	obj/kernel.asm	/^c0106fed:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106ff0	obj/kernel.asm	/^c0106ff0:	e8 e6 e8 ff ff       	call   c01058db <get_pte>$/;"	l
c0106ff5	obj/kernel.asm	/^c0106ff5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106ff8	obj/kernel.asm	/^c0106ff8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106ffb	obj/kernel.asm	/^c0106ffb:	8b 00                	mov    (%eax),%eax$/;"	l
c0106ffd	obj/kernel.asm	/^c0106ffd:	83 e0 01             	and    $0x1,%eax$/;"	l
c0107000	obj/kernel.asm	/^c0107000:	85 c0                	test   %eax,%eax$/;"	l
c0107002	obj/kernel.asm	/^c0107002:	75 24                	jne    c0107028 <swap_out+0xaa>$/;"	l
c0107004	obj/kernel.asm	/^c0107004:	c7 44 24 0c 2d 6c 11 	movl   $0xc0116c2d,0xc(%esp)$/;"	l
c010700b	obj/kernel.asm	/^c010700b:	c0 $/;"	l
c010700c	obj/kernel.asm	/^c010700c:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c0107013	obj/kernel.asm	/^c0107013:	c0 $/;"	l
c0107014	obj/kernel.asm	/^c0107014:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
c010701b	obj/kernel.asm	/^c010701b:	00 $/;"	l
c010701c	obj/kernel.asm	/^c010701c:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c0107023	obj/kernel.asm	/^c0107023:	e8 a0 9e ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107028	obj/kernel.asm	/^c0107028:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010702b	obj/kernel.asm	/^c010702b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010702e	obj/kernel.asm	/^c010702e:	8b 52 20             	mov    0x20(%edx),%edx$/;"	l
c0107031	obj/kernel.asm	/^c0107031:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0107034	obj/kernel.asm	/^c0107034:	83 c2 01             	add    $0x1,%edx$/;"	l
c0107037	obj/kernel.asm	/^c0107037:	c1 e2 08             	shl    $0x8,%edx$/;"	l
c010703a	obj/kernel.asm	/^c010703a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010703e	obj/kernel.asm	/^c010703e:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0107041	obj/kernel.asm	/^c0107041:	e8 67 7f 00 00       	call   c010efad <swapfs_write>$/;"	l
c0107046	obj/kernel.asm	/^c0107046:	85 c0                	test   %eax,%eax$/;"	l
c0107048	obj/kernel.asm	/^c0107048:	74 34                	je     c010707e <swap_out+0x100>$/;"	l
c010704a	obj/kernel.asm	/^c010704a:	c7 04 24 57 6c 11 c0 	movl   $0xc0116c57,(%esp)$/;"	l
c0107051	obj/kernel.asm	/^c0107051:	e8 0f 93 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107056	obj/kernel.asm	/^c0107056:	a1 14 0f 15 c0       	mov    0xc0150f14,%eax$/;"	l
c010705b	obj/kernel.asm	/^c010705b:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010705e	obj/kernel.asm	/^c010705e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107061	obj/kernel.asm	/^c0107061:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0107068	obj/kernel.asm	/^c0107068:	00 $/;"	l
c0107069	obj/kernel.asm	/^c0107069:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010706d	obj/kernel.asm	/^c010706d:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107070	obj/kernel.asm	/^c0107070:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0107074	obj/kernel.asm	/^c0107074:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0107077	obj/kernel.asm	/^c0107077:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010707a	obj/kernel.asm	/^c010707a:	ff d0                	call   *%eax$/;"	l
c010707c	obj/kernel.asm	/^c010707c:	eb 68                	jmp    c01070e6 <swap_out+0x168>$/;"	l
c010707e	obj/kernel.asm	/^c010707e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107081	obj/kernel.asm	/^c0107081:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c0107084	obj/kernel.asm	/^c0107084:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0107087	obj/kernel.asm	/^c0107087:	83 c0 01             	add    $0x1,%eax$/;"	l
c010708a	obj/kernel.asm	/^c010708a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010708e	obj/kernel.asm	/^c010708e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107091	obj/kernel.asm	/^c0107091:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0107095	obj/kernel.asm	/^c0107095:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107098	obj/kernel.asm	/^c0107098:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010709c	obj/kernel.asm	/^c010709c:	c7 04 24 70 6c 11 c0 	movl   $0xc0116c70,(%esp)$/;"	l
c01070a3	obj/kernel.asm	/^c01070a3:	e8 bd 92 ff ff       	call   c0100365 <cprintf>$/;"	l
c01070a8	obj/kernel.asm	/^c01070a8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01070ab	obj/kernel.asm	/^c01070ab:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c01070ae	obj/kernel.asm	/^c01070ae:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01070b1	obj/kernel.asm	/^c01070b1:	83 c0 01             	add    $0x1,%eax$/;"	l
c01070b4	obj/kernel.asm	/^c01070b4:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c01070b7	obj/kernel.asm	/^c01070b7:	89 c2                	mov    %eax,%edx$/;"	l
c01070b9	obj/kernel.asm	/^c01070b9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01070bc	obj/kernel.asm	/^c01070bc:	89 10                	mov    %edx,(%eax)$/;"	l
c01070be	obj/kernel.asm	/^c01070be:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01070c1	obj/kernel.asm	/^c01070c1:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01070c8	obj/kernel.asm	/^c01070c8:	00 $/;"	l
c01070c9	obj/kernel.asm	/^c01070c9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01070cc	obj/kernel.asm	/^c01070cc:	e8 fe e0 ff ff       	call   c01051cf <free_pages>$/;"	l
c01070d1	obj/kernel.asm	/^c01070d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01070d4	obj/kernel.asm	/^c01070d4:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01070d7	obj/kernel.asm	/^c01070d7:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01070da	obj/kernel.asm	/^c01070da:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01070de	obj/kernel.asm	/^c01070de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01070e1	obj/kernel.asm	/^c01070e1:	e8 02 ef ff ff       	call   c0105fe8 <tlb_invalidate>$/;"	l
c01070e6	obj/kernel.asm	/^c01070e6:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01070ea	obj/kernel.asm	/^c01070ea:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01070ed	obj/kernel.asm	/^c01070ed:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01070f0	obj/kernel.asm	/^c01070f0:	0f 85 9a fe ff ff    	jne    c0106f90 <swap_out+0x12>$/;"	l
c01070f6	obj/kernel.asm	/^c01070f6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01070f9	obj/kernel.asm	/^c01070f9:	c9                   	leave  $/;"	l
c01070fa	obj/kernel.asm	/^c01070fa:	c3                   	ret    $/;"	l
c01070fb	obj/kernel.asm	/^c01070fb <swap_in>:$/;"	l
c01070fb	obj/kernel.asm	/^c01070fb:	55                   	push   %ebp$/;"	l
c01070fc	obj/kernel.asm	/^c01070fc:	89 e5                	mov    %esp,%ebp$/;"	l
c01070fe	obj/kernel.asm	/^c01070fe:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107101	obj/kernel.asm	/^c0107101:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0107108	obj/kernel.asm	/^c0107108:	e8 57 e0 ff ff       	call   c0105164 <alloc_pages>$/;"	l
c010710d	obj/kernel.asm	/^c010710d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107110	obj/kernel.asm	/^c0107110:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107114	obj/kernel.asm	/^c0107114:	75 24                	jne    c010713a <swap_in+0x3f>$/;"	l
c0107116	obj/kernel.asm	/^c0107116:	c7 44 24 0c b0 6c 11 	movl   $0xc0116cb0,0xc(%esp)$/;"	l
c010711d	obj/kernel.asm	/^c010711d:	c0 $/;"	l
c010711e	obj/kernel.asm	/^c010711e:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c0107125	obj/kernel.asm	/^c0107125:	c0 $/;"	l
c0107126	obj/kernel.asm	/^c0107126:	c7 44 24 04 7d 00 00 	movl   $0x7d,0x4(%esp)$/;"	l
c010712d	obj/kernel.asm	/^c010712d:	00 $/;"	l
c010712e	obj/kernel.asm	/^c010712e:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c0107135	obj/kernel.asm	/^c0107135:	e8 8e 9d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010713a	obj/kernel.asm	/^c010713a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010713d	obj/kernel.asm	/^c010713d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0107140	obj/kernel.asm	/^c0107140:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0107147	obj/kernel.asm	/^c0107147:	00 $/;"	l
c0107148	obj/kernel.asm	/^c0107148:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010714b	obj/kernel.asm	/^c010714b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010714f	obj/kernel.asm	/^c010714f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107152	obj/kernel.asm	/^c0107152:	e8 84 e7 ff ff       	call   c01058db <get_pte>$/;"	l
c0107157	obj/kernel.asm	/^c0107157:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010715a	obj/kernel.asm	/^c010715a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010715d	obj/kernel.asm	/^c010715d:	8b 00                	mov    (%eax),%eax$/;"	l
c010715f	obj/kernel.asm	/^c010715f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0107162	obj/kernel.asm	/^c0107162:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0107166	obj/kernel.asm	/^c0107166:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107169	obj/kernel.asm	/^c0107169:	e8 cd 7d 00 00       	call   c010ef3b <swapfs_read>$/;"	l
c010716e	obj/kernel.asm	/^c010716e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107171	obj/kernel.asm	/^c0107171:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0107175	obj/kernel.asm	/^c0107175:	74 2a                	je     c01071a1 <swap_in+0xa6>$/;"	l
c0107177	obj/kernel.asm	/^c0107177:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010717b	obj/kernel.asm	/^c010717b:	75 24                	jne    c01071a1 <swap_in+0xa6>$/;"	l
c010717d	obj/kernel.asm	/^c010717d:	c7 44 24 0c bd 6c 11 	movl   $0xc0116cbd,0xc(%esp)$/;"	l
c0107184	obj/kernel.asm	/^c0107184:	c0 $/;"	l
c0107185	obj/kernel.asm	/^c0107185:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c010718c	obj/kernel.asm	/^c010718c:	c0 $/;"	l
c010718d	obj/kernel.asm	/^c010718d:	c7 44 24 04 85 00 00 	movl   $0x85,0x4(%esp)$/;"	l
c0107194	obj/kernel.asm	/^c0107194:	00 $/;"	l
c0107195	obj/kernel.asm	/^c0107195:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c010719c	obj/kernel.asm	/^c010719c:	e8 27 9d ff ff       	call   c0100ec8 <__panic>$/;"	l
c01071a1	obj/kernel.asm	/^c01071a1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071a4	obj/kernel.asm	/^c01071a4:	8b 00                	mov    (%eax),%eax$/;"	l
c01071a6	obj/kernel.asm	/^c01071a6:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c01071a9	obj/kernel.asm	/^c01071a9:	89 c2                	mov    %eax,%edx$/;"	l
c01071ab	obj/kernel.asm	/^c01071ab:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01071ae	obj/kernel.asm	/^c01071ae:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01071b2	obj/kernel.asm	/^c01071b2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01071b6	obj/kernel.asm	/^c01071b6:	c7 04 24 c4 6c 11 c0 	movl   $0xc0116cc4,(%esp)$/;"	l
c01071bd	obj/kernel.asm	/^c01071bd:	e8 a3 91 ff ff       	call   c0100365 <cprintf>$/;"	l
c01071c2	obj/kernel.asm	/^c01071c2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01071c5	obj/kernel.asm	/^c01071c5:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01071c8	obj/kernel.asm	/^c01071c8:	89 10                	mov    %edx,(%eax)$/;"	l
c01071ca	obj/kernel.asm	/^c01071ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01071cf	obj/kernel.asm	/^c01071cf:	c9                   	leave  $/;"	l
c01071d0	obj/kernel.asm	/^c01071d0:	c3                   	ret    $/;"	l
c01071d1	obj/kernel.asm	/^c01071d1 <check_content_set>:$/;"	l
c01071d1	obj/kernel.asm	/^c01071d1:	55                   	push   %ebp$/;"	l
c01071d2	obj/kernel.asm	/^c01071d2:	89 e5                	mov    %esp,%ebp$/;"	l
c01071d4	obj/kernel.asm	/^c01071d4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01071d7	obj/kernel.asm	/^c01071d7:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c01071dc	obj/kernel.asm	/^c01071dc:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c01071df	obj/kernel.asm	/^c01071df:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c01071e4	obj/kernel.asm	/^c01071e4:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01071e7	obj/kernel.asm	/^c01071e7:	74 24                	je     c010720d <check_content_set+0x3c>$/;"	l
c01071e9	obj/kernel.asm	/^c01071e9:	c7 44 24 0c 02 6d 11 	movl   $0xc0116d02,0xc(%esp)$/;"	l
c01071f0	obj/kernel.asm	/^c01071f0:	c0 $/;"	l
c01071f1	obj/kernel.asm	/^c01071f1:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c01071f8	obj/kernel.asm	/^c01071f8:	c0 $/;"	l
c01071f9	obj/kernel.asm	/^c01071f9:	c7 44 24 04 92 00 00 	movl   $0x92,0x4(%esp)$/;"	l
c0107200	obj/kernel.asm	/^c0107200:	00 $/;"	l
c0107201	obj/kernel.asm	/^c0107201:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c0107208	obj/kernel.asm	/^c0107208:	e8 bb 9c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010720d	obj/kernel.asm	/^c010720d:	b8 10 10 00 00       	mov    $0x1010,%eax$/;"	l
c0107212	obj/kernel.asm	/^c0107212:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107215	obj/kernel.asm	/^c0107215:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c010721a	obj/kernel.asm	/^c010721a:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010721d	obj/kernel.asm	/^c010721d:	74 24                	je     c0107243 <check_content_set+0x72>$/;"	l
c010721f	obj/kernel.asm	/^c010721f:	c7 44 24 0c 02 6d 11 	movl   $0xc0116d02,0xc(%esp)$/;"	l
c0107226	obj/kernel.asm	/^c0107226:	c0 $/;"	l
c0107227	obj/kernel.asm	/^c0107227:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c010722e	obj/kernel.asm	/^c010722e:	c0 $/;"	l
c010722f	obj/kernel.asm	/^c010722f:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
c0107236	obj/kernel.asm	/^c0107236:	00 $/;"	l
c0107237	obj/kernel.asm	/^c0107237:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c010723e	obj/kernel.asm	/^c010723e:	e8 85 9c ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107243	obj/kernel.asm	/^c0107243:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107248	obj/kernel.asm	/^c0107248:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c010724b	obj/kernel.asm	/^c010724b:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c0107250	obj/kernel.asm	/^c0107250:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0107253	obj/kernel.asm	/^c0107253:	74 24                	je     c0107279 <check_content_set+0xa8>$/;"	l
c0107255	obj/kernel.asm	/^c0107255:	c7 44 24 0c 11 6d 11 	movl   $0xc0116d11,0xc(%esp)$/;"	l
c010725c	obj/kernel.asm	/^c010725c:	c0 $/;"	l
c010725d	obj/kernel.asm	/^c010725d:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c0107264	obj/kernel.asm	/^c0107264:	c0 $/;"	l
c0107265	obj/kernel.asm	/^c0107265:	c7 44 24 04 96 00 00 	movl   $0x96,0x4(%esp)$/;"	l
c010726c	obj/kernel.asm	/^c010726c:	00 $/;"	l
c010726d	obj/kernel.asm	/^c010726d:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c0107274	obj/kernel.asm	/^c0107274:	e8 4f 9c ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107279	obj/kernel.asm	/^c0107279:	b8 10 20 00 00       	mov    $0x2010,%eax$/;"	l
c010727e	obj/kernel.asm	/^c010727e:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107281	obj/kernel.asm	/^c0107281:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c0107286	obj/kernel.asm	/^c0107286:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0107289	obj/kernel.asm	/^c0107289:	74 24                	je     c01072af <check_content_set+0xde>$/;"	l
c010728b	obj/kernel.asm	/^c010728b:	c7 44 24 0c 11 6d 11 	movl   $0xc0116d11,0xc(%esp)$/;"	l
c0107292	obj/kernel.asm	/^c0107292:	c0 $/;"	l
c0107293	obj/kernel.asm	/^c0107293:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c010729a	obj/kernel.asm	/^c010729a:	c0 $/;"	l
c010729b	obj/kernel.asm	/^c010729b:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
c01072a2	obj/kernel.asm	/^c01072a2:	00 $/;"	l
c01072a3	obj/kernel.asm	/^c01072a3:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c01072aa	obj/kernel.asm	/^c01072aa:	e8 19 9c ff ff       	call   c0100ec8 <__panic>$/;"	l
c01072af	obj/kernel.asm	/^c01072af:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c01072b4	obj/kernel.asm	/^c01072b4:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c01072b7	obj/kernel.asm	/^c01072b7:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c01072bc	obj/kernel.asm	/^c01072bc:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c01072bf	obj/kernel.asm	/^c01072bf:	74 24                	je     c01072e5 <check_content_set+0x114>$/;"	l
c01072c1	obj/kernel.asm	/^c01072c1:	c7 44 24 0c 20 6d 11 	movl   $0xc0116d20,0xc(%esp)$/;"	l
c01072c8	obj/kernel.asm	/^c01072c8:	c0 $/;"	l
c01072c9	obj/kernel.asm	/^c01072c9:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c01072d0	obj/kernel.asm	/^c01072d0:	c0 $/;"	l
c01072d1	obj/kernel.asm	/^c01072d1:	c7 44 24 04 9a 00 00 	movl   $0x9a,0x4(%esp)$/;"	l
c01072d8	obj/kernel.asm	/^c01072d8:	00 $/;"	l
c01072d9	obj/kernel.asm	/^c01072d9:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c01072e0	obj/kernel.asm	/^c01072e0:	e8 e3 9b ff ff       	call   c0100ec8 <__panic>$/;"	l
c01072e5	obj/kernel.asm	/^c01072e5:	b8 10 30 00 00       	mov    $0x3010,%eax$/;"	l
c01072ea	obj/kernel.asm	/^c01072ea:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c01072ed	obj/kernel.asm	/^c01072ed:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c01072f2	obj/kernel.asm	/^c01072f2:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c01072f5	obj/kernel.asm	/^c01072f5:	74 24                	je     c010731b <check_content_set+0x14a>$/;"	l
c01072f7	obj/kernel.asm	/^c01072f7:	c7 44 24 0c 20 6d 11 	movl   $0xc0116d20,0xc(%esp)$/;"	l
c01072fe	obj/kernel.asm	/^c01072fe:	c0 $/;"	l
c01072ff	obj/kernel.asm	/^c01072ff:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c0107306	obj/kernel.asm	/^c0107306:	c0 $/;"	l
c0107307	obj/kernel.asm	/^c0107307:	c7 44 24 04 9c 00 00 	movl   $0x9c,0x4(%esp)$/;"	l
c010730e	obj/kernel.asm	/^c010730e:	00 $/;"	l
c010730f	obj/kernel.asm	/^c010730f:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c0107316	obj/kernel.asm	/^c0107316:	e8 ad 9b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010731b	obj/kernel.asm	/^c010731b:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0107320	obj/kernel.asm	/^c0107320:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107323	obj/kernel.asm	/^c0107323:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c0107328	obj/kernel.asm	/^c0107328:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c010732b	obj/kernel.asm	/^c010732b:	74 24                	je     c0107351 <check_content_set+0x180>$/;"	l
c010732d	obj/kernel.asm	/^c010732d:	c7 44 24 0c 2f 6d 11 	movl   $0xc0116d2f,0xc(%esp)$/;"	l
c0107334	obj/kernel.asm	/^c0107334:	c0 $/;"	l
c0107335	obj/kernel.asm	/^c0107335:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c010733c	obj/kernel.asm	/^c010733c:	c0 $/;"	l
c010733d	obj/kernel.asm	/^c010733d:	c7 44 24 04 9e 00 00 	movl   $0x9e,0x4(%esp)$/;"	l
c0107344	obj/kernel.asm	/^c0107344:	00 $/;"	l
c0107345	obj/kernel.asm	/^c0107345:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c010734c	obj/kernel.asm	/^c010734c:	e8 77 9b ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107351	obj/kernel.asm	/^c0107351:	b8 10 40 00 00       	mov    $0x4010,%eax$/;"	l
c0107356	obj/kernel.asm	/^c0107356:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107359	obj/kernel.asm	/^c0107359:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c010735e	obj/kernel.asm	/^c010735e:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107361	obj/kernel.asm	/^c0107361:	74 24                	je     c0107387 <check_content_set+0x1b6>$/;"	l
c0107363	obj/kernel.asm	/^c0107363:	c7 44 24 0c 2f 6d 11 	movl   $0xc0116d2f,0xc(%esp)$/;"	l
c010736a	obj/kernel.asm	/^c010736a:	c0 $/;"	l
c010736b	obj/kernel.asm	/^c010736b:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c0107372	obj/kernel.asm	/^c0107372:	c0 $/;"	l
c0107373	obj/kernel.asm	/^c0107373:	c7 44 24 04 a0 00 00 	movl   $0xa0,0x4(%esp)$/;"	l
c010737a	obj/kernel.asm	/^c010737a:	00 $/;"	l
c010737b	obj/kernel.asm	/^c010737b:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c0107382	obj/kernel.asm	/^c0107382:	e8 41 9b ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107387	obj/kernel.asm	/^c0107387:	c9                   	leave  $/;"	l
c0107388	obj/kernel.asm	/^c0107388:	c3                   	ret    $/;"	l
c0107389	obj/kernel.asm	/^c0107389 <check_content_access>:$/;"	l
c0107389	obj/kernel.asm	/^c0107389:	55                   	push   %ebp$/;"	l
c010738a	obj/kernel.asm	/^c010738a:	89 e5                	mov    %esp,%ebp$/;"	l
c010738c	obj/kernel.asm	/^c010738c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010738f	obj/kernel.asm	/^c010738f:	a1 14 0f 15 c0       	mov    0xc0150f14,%eax$/;"	l
c0107394	obj/kernel.asm	/^c0107394:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0107397	obj/kernel.asm	/^c0107397:	ff d0                	call   *%eax$/;"	l
c0107399	obj/kernel.asm	/^c0107399:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010739c	obj/kernel.asm	/^c010739c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010739f	obj/kernel.asm	/^c010739f:	c9                   	leave  $/;"	l
c01073a0	obj/kernel.asm	/^c01073a0:	c3                   	ret    $/;"	l
c01073a1	obj/kernel.asm	/^c01073a1 <check_swap>:$/;"	l
c01073a1	obj/kernel.asm	/^c01073a1:	55                   	push   %ebp$/;"	l
c01073a2	obj/kernel.asm	/^c01073a2:	89 e5                	mov    %esp,%ebp$/;"	l
c01073a4	obj/kernel.asm	/^c01073a4:	53                   	push   %ebx$/;"	l
c01073a5	obj/kernel.asm	/^c01073a5:	83 ec 74             	sub    $0x74,%esp$/;"	l
c01073a8	obj/kernel.asm	/^c01073a8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01073af	obj/kernel.asm	/^c01073af:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01073b6	obj/kernel.asm	/^c01073b6:	c7 45 e8 14 40 15 c0 	movl   $0xc0154014,-0x18(%ebp)$/;"	l
c01073bd	obj/kernel.asm	/^c01073bd:	eb 6b                	jmp    c010742a <check_swap+0x89>$/;"	l
c01073bf	obj/kernel.asm	/^c01073bf:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01073c2	obj/kernel.asm	/^c01073c2:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01073c5	obj/kernel.asm	/^c01073c5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01073c8	obj/kernel.asm	/^c01073c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01073cb	obj/kernel.asm	/^c01073cb:	83 c0 04             	add    $0x4,%eax$/;"	l
c01073ce	obj/kernel.asm	/^c01073ce:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)$/;"	l
c01073d5	obj/kernel.asm	/^c01073d5:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c01073d8	obj/kernel.asm	/^c01073d8:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c01073db	obj/kernel.asm	/^c01073db:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c01073de	obj/kernel.asm	/^c01073de:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01073e1	obj/kernel.asm	/^c01073e1:	19 c0                	sbb    %eax,%eax$/;"	l
c01073e3	obj/kernel.asm	/^c01073e3:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c01073e6	obj/kernel.asm	/^c01073e6:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c01073ea	obj/kernel.asm	/^c01073ea:	0f 95 c0             	setne  %al$/;"	l
c01073ed	obj/kernel.asm	/^c01073ed:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01073f0	obj/kernel.asm	/^c01073f0:	85 c0                	test   %eax,%eax$/;"	l
c01073f2	obj/kernel.asm	/^c01073f2:	75 24                	jne    c0107418 <check_swap+0x77>$/;"	l
c01073f4	obj/kernel.asm	/^c01073f4:	c7 44 24 0c 3e 6d 11 	movl   $0xc0116d3e,0xc(%esp)$/;"	l
c01073fb	obj/kernel.asm	/^c01073fb:	c0 $/;"	l
c01073fc	obj/kernel.asm	/^c01073fc:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c0107403	obj/kernel.asm	/^c0107403:	c0 $/;"	l
c0107404	obj/kernel.asm	/^c0107404:	c7 44 24 04 bb 00 00 	movl   $0xbb,0x4(%esp)$/;"	l
c010740b	obj/kernel.asm	/^c010740b:	00 $/;"	l
c010740c	obj/kernel.asm	/^c010740c:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c0107413	obj/kernel.asm	/^c0107413:	e8 b0 9a ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107418	obj/kernel.asm	/^c0107418:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010741c	obj/kernel.asm	/^c010741c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010741f	obj/kernel.asm	/^c010741f:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107422	obj/kernel.asm	/^c0107422:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107425	obj/kernel.asm	/^c0107425:	01 d0                	add    %edx,%eax$/;"	l
c0107427	obj/kernel.asm	/^c0107427:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010742a	obj/kernel.asm	/^c010742a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010742d	obj/kernel.asm	/^c010742d:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0107430	obj/kernel.asm	/^c0107430:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0107433	obj/kernel.asm	/^c0107433:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107436	obj/kernel.asm	/^c0107436:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107439	obj/kernel.asm	/^c0107439:	81 7d e8 14 40 15 c0 	cmpl   $0xc0154014,-0x18(%ebp)$/;"	l
c0107440	obj/kernel.asm	/^c0107440:	0f 85 79 ff ff ff    	jne    c01073bf <check_swap+0x1e>$/;"	l
c0107446	obj/kernel.asm	/^c0107446:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c0107449	obj/kernel.asm	/^c0107449:	e8 b3 dd ff ff       	call   c0105201 <nr_free_pages>$/;"	l
c010744e	obj/kernel.asm	/^c010744e:	39 c3                	cmp    %eax,%ebx$/;"	l
c0107450	obj/kernel.asm	/^c0107450:	74 24                	je     c0107476 <check_swap+0xd5>$/;"	l
c0107452	obj/kernel.asm	/^c0107452:	c7 44 24 0c 4e 6d 11 	movl   $0xc0116d4e,0xc(%esp)$/;"	l
c0107459	obj/kernel.asm	/^c0107459:	c0 $/;"	l
c010745a	obj/kernel.asm	/^c010745a:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c0107461	obj/kernel.asm	/^c0107461:	c0 $/;"	l
c0107462	obj/kernel.asm	/^c0107462:	c7 44 24 04 be 00 00 	movl   $0xbe,0x4(%esp)$/;"	l
c0107469	obj/kernel.asm	/^c0107469:	00 $/;"	l
c010746a	obj/kernel.asm	/^c010746a:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c0107471	obj/kernel.asm	/^c0107471:	e8 52 9a ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107476	obj/kernel.asm	/^c0107476:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107479	obj/kernel.asm	/^c0107479:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010747d	obj/kernel.asm	/^c010747d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107480	obj/kernel.asm	/^c0107480:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107484	obj/kernel.asm	/^c0107484:	c7 04 24 68 6d 11 c0 	movl   $0xc0116d68,(%esp)$/;"	l
c010748b	obj/kernel.asm	/^c010748b:	e8 d5 8e ff ff       	call   c0100365 <cprintf>$/;"	l
c0107490	obj/kernel.asm	/^c0107490:	e8 bc 0a 00 00       	call   c0107f51 <mm_create>$/;"	l
c0107495	obj/kernel.asm	/^c0107495:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107498	obj/kernel.asm	/^c0107498:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c010749c	obj/kernel.asm	/^c010749c:	75 24                	jne    c01074c2 <check_swap+0x121>$/;"	l
c010749e	obj/kernel.asm	/^c010749e:	c7 44 24 0c 8e 6d 11 	movl   $0xc0116d8e,0xc(%esp)$/;"	l
c01074a5	obj/kernel.asm	/^c01074a5:	c0 $/;"	l
c01074a6	obj/kernel.asm	/^c01074a6:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c01074ad	obj/kernel.asm	/^c01074ad:	c0 $/;"	l
c01074ae	obj/kernel.asm	/^c01074ae:	c7 44 24 04 c3 00 00 	movl   $0xc3,0x4(%esp)$/;"	l
c01074b5	obj/kernel.asm	/^c01074b5:	00 $/;"	l
c01074b6	obj/kernel.asm	/^c01074b6:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c01074bd	obj/kernel.asm	/^c01074bd:	e8 06 9a ff ff       	call   c0100ec8 <__panic>$/;"	l
c01074c2	obj/kernel.asm	/^c01074c2:	a1 0c 41 15 c0       	mov    0xc015410c,%eax$/;"	l
c01074c7	obj/kernel.asm	/^c01074c7:	85 c0                	test   %eax,%eax$/;"	l
c01074c9	obj/kernel.asm	/^c01074c9:	74 24                	je     c01074ef <check_swap+0x14e>$/;"	l
c01074cb	obj/kernel.asm	/^c01074cb:	c7 44 24 0c 99 6d 11 	movl   $0xc0116d99,0xc(%esp)$/;"	l
c01074d2	obj/kernel.asm	/^c01074d2:	c0 $/;"	l
c01074d3	obj/kernel.asm	/^c01074d3:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c01074da	obj/kernel.asm	/^c01074da:	c0 $/;"	l
c01074db	obj/kernel.asm	/^c01074db:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
c01074e2	obj/kernel.asm	/^c01074e2:	00 $/;"	l
c01074e3	obj/kernel.asm	/^c01074e3:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c01074ea	obj/kernel.asm	/^c01074ea:	e8 d9 99 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01074ef	obj/kernel.asm	/^c01074ef:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01074f2	obj/kernel.asm	/^c01074f2:	a3 0c 41 15 c0       	mov    %eax,0xc015410c$/;"	l
c01074f7	obj/kernel.asm	/^c01074f7:	8b 15 84 0e 15 c0    	mov    0xc0150e84,%edx$/;"	l
c01074fd	obj/kernel.asm	/^c01074fd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107500	obj/kernel.asm	/^c0107500:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0107503	obj/kernel.asm	/^c0107503:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107506	obj/kernel.asm	/^c0107506:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0107509	obj/kernel.asm	/^c0107509:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010750c	obj/kernel.asm	/^c010750c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010750f	obj/kernel.asm	/^c010750f:	8b 00                	mov    (%eax),%eax$/;"	l
c0107511	obj/kernel.asm	/^c0107511:	85 c0                	test   %eax,%eax$/;"	l
c0107513	obj/kernel.asm	/^c0107513:	74 24                	je     c0107539 <check_swap+0x198>$/;"	l
c0107515	obj/kernel.asm	/^c0107515:	c7 44 24 0c b1 6d 11 	movl   $0xc0116db1,0xc(%esp)$/;"	l
c010751c	obj/kernel.asm	/^c010751c:	c0 $/;"	l
c010751d	obj/kernel.asm	/^c010751d:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c0107524	obj/kernel.asm	/^c0107524:	c0 $/;"	l
c0107525	obj/kernel.asm	/^c0107525:	c7 44 24 04 cb 00 00 	movl   $0xcb,0x4(%esp)$/;"	l
c010752c	obj/kernel.asm	/^c010752c:	00 $/;"	l
c010752d	obj/kernel.asm	/^c010752d:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c0107534	obj/kernel.asm	/^c0107534:	e8 8f 99 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107539	obj/kernel.asm	/^c0107539:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)$/;"	l
c0107540	obj/kernel.asm	/^c0107540:	00 $/;"	l
c0107541	obj/kernel.asm	/^c0107541:	c7 44 24 04 00 60 00 	movl   $0x6000,0x4(%esp)$/;"	l
c0107548	obj/kernel.asm	/^c0107548:	00 $/;"	l
c0107549	obj/kernel.asm	/^c0107549:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c0107550	obj/kernel.asm	/^c0107550:	e8 a1 0a 00 00       	call   c0107ff6 <vma_create>$/;"	l
c0107555	obj/kernel.asm	/^c0107555:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0107558	obj/kernel.asm	/^c0107558:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c010755c	obj/kernel.asm	/^c010755c:	75 24                	jne    c0107582 <check_swap+0x1e1>$/;"	l
c010755e	obj/kernel.asm	/^c010755e:	c7 44 24 0c bf 6d 11 	movl   $0xc0116dbf,0xc(%esp)$/;"	l
c0107565	obj/kernel.asm	/^c0107565:	c0 $/;"	l
c0107566	obj/kernel.asm	/^c0107566:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c010756d	obj/kernel.asm	/^c010756d:	c0 $/;"	l
c010756e	obj/kernel.asm	/^c010756e:	c7 44 24 04 ce 00 00 	movl   $0xce,0x4(%esp)$/;"	l
c0107575	obj/kernel.asm	/^c0107575:	00 $/;"	l
c0107576	obj/kernel.asm	/^c0107576:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c010757d	obj/kernel.asm	/^c010757d:	e8 46 99 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107582	obj/kernel.asm	/^c0107582:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0107585	obj/kernel.asm	/^c0107585:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107589	obj/kernel.asm	/^c0107589:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010758c	obj/kernel.asm	/^c010758c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010758f	obj/kernel.asm	/^c010758f:	e8 f2 0b 00 00       	call   c0108186 <insert_vma_struct>$/;"	l
c0107594	obj/kernel.asm	/^c0107594:	c7 04 24 cc 6d 11 c0 	movl   $0xc0116dcc,(%esp)$/;"	l
c010759b	obj/kernel.asm	/^c010759b:	e8 c5 8d ff ff       	call   c0100365 <cprintf>$/;"	l
c01075a0	obj/kernel.asm	/^c01075a0:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c01075a7	obj/kernel.asm	/^c01075a7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01075aa	obj/kernel.asm	/^c01075aa:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01075ad	obj/kernel.asm	/^c01075ad:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c01075b4	obj/kernel.asm	/^c01075b4:	00 $/;"	l
c01075b5	obj/kernel.asm	/^c01075b5:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c01075bc	obj/kernel.asm	/^c01075bc:	00 $/;"	l
c01075bd	obj/kernel.asm	/^c01075bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01075c0	obj/kernel.asm	/^c01075c0:	e8 16 e3 ff ff       	call   c01058db <get_pte>$/;"	l
c01075c5	obj/kernel.asm	/^c01075c5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01075c8	obj/kernel.asm	/^c01075c8:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
c01075cc	obj/kernel.asm	/^c01075cc:	75 24                	jne    c01075f2 <check_swap+0x251>$/;"	l
c01075ce	obj/kernel.asm	/^c01075ce:	c7 44 24 0c 00 6e 11 	movl   $0xc0116e00,0xc(%esp)$/;"	l
c01075d5	obj/kernel.asm	/^c01075d5:	c0 $/;"	l
c01075d6	obj/kernel.asm	/^c01075d6:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c01075dd	obj/kernel.asm	/^c01075dd:	c0 $/;"	l
c01075de	obj/kernel.asm	/^c01075de:	c7 44 24 04 d6 00 00 	movl   $0xd6,0x4(%esp)$/;"	l
c01075e5	obj/kernel.asm	/^c01075e5:	00 $/;"	l
c01075e6	obj/kernel.asm	/^c01075e6:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c01075ed	obj/kernel.asm	/^c01075ed:	e8 d6 98 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01075f2	obj/kernel.asm	/^c01075f2:	c7 04 24 14 6e 11 c0 	movl   $0xc0116e14,(%esp)$/;"	l
c01075f9	obj/kernel.asm	/^c01075f9:	e8 67 8d ff ff       	call   c0100365 <cprintf>$/;"	l
c01075fe	obj/kernel.asm	/^c01075fe:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0107605	obj/kernel.asm	/^c0107605:	e9 a3 00 00 00       	jmp    c01076ad <check_swap+0x30c>$/;"	l
c010760a	obj/kernel.asm	/^c010760a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0107611	obj/kernel.asm	/^c0107611:	e8 4e db ff ff       	call   c0105164 <alloc_pages>$/;"	l
c0107616	obj/kernel.asm	/^c0107616:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107619	obj/kernel.asm	/^c0107619:	89 04 95 40 40 15 c0 	mov    %eax,-0x3feabfc0(,%edx,4)$/;"	l
c0107620	obj/kernel.asm	/^c0107620:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107623	obj/kernel.asm	/^c0107623:	8b 04 85 40 40 15 c0 	mov    -0x3feabfc0(,%eax,4),%eax$/;"	l
c010762a	obj/kernel.asm	/^c010762a:	85 c0                	test   %eax,%eax$/;"	l
c010762c	obj/kernel.asm	/^c010762c:	75 24                	jne    c0107652 <check_swap+0x2b1>$/;"	l
c010762e	obj/kernel.asm	/^c010762e:	c7 44 24 0c 38 6e 11 	movl   $0xc0116e38,0xc(%esp)$/;"	l
c0107635	obj/kernel.asm	/^c0107635:	c0 $/;"	l
c0107636	obj/kernel.asm	/^c0107636:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c010763d	obj/kernel.asm	/^c010763d:	c0 $/;"	l
c010763e	obj/kernel.asm	/^c010763e:	c7 44 24 04 db 00 00 	movl   $0xdb,0x4(%esp)$/;"	l
c0107645	obj/kernel.asm	/^c0107645:	00 $/;"	l
c0107646	obj/kernel.asm	/^c0107646:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c010764d	obj/kernel.asm	/^c010764d:	e8 76 98 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107652	obj/kernel.asm	/^c0107652:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107655	obj/kernel.asm	/^c0107655:	8b 04 85 40 40 15 c0 	mov    -0x3feabfc0(,%eax,4),%eax$/;"	l
c010765c	obj/kernel.asm	/^c010765c:	83 c0 04             	add    $0x4,%eax$/;"	l
c010765f	obj/kernel.asm	/^c010765f:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)$/;"	l
c0107666	obj/kernel.asm	/^c0107666:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0107669	obj/kernel.asm	/^c0107669:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010766c	obj/kernel.asm	/^c010766c:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010766f	obj/kernel.asm	/^c010766f:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0107672	obj/kernel.asm	/^c0107672:	19 c0                	sbb    %eax,%eax$/;"	l
c0107674	obj/kernel.asm	/^c0107674:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0107677	obj/kernel.asm	/^c0107677:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)$/;"	l
c010767b	obj/kernel.asm	/^c010767b:	0f 95 c0             	setne  %al$/;"	l
c010767e	obj/kernel.asm	/^c010767e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107681	obj/kernel.asm	/^c0107681:	85 c0                	test   %eax,%eax$/;"	l
c0107683	obj/kernel.asm	/^c0107683:	74 24                	je     c01076a9 <check_swap+0x308>$/;"	l
c0107685	obj/kernel.asm	/^c0107685:	c7 44 24 0c 4c 6e 11 	movl   $0xc0116e4c,0xc(%esp)$/;"	l
c010768c	obj/kernel.asm	/^c010768c:	c0 $/;"	l
c010768d	obj/kernel.asm	/^c010768d:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c0107694	obj/kernel.asm	/^c0107694:	c0 $/;"	l
c0107695	obj/kernel.asm	/^c0107695:	c7 44 24 04 dc 00 00 	movl   $0xdc,0x4(%esp)$/;"	l
c010769c	obj/kernel.asm	/^c010769c:	00 $/;"	l
c010769d	obj/kernel.asm	/^c010769d:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c01076a4	obj/kernel.asm	/^c01076a4:	e8 1f 98 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01076a9	obj/kernel.asm	/^c01076a9:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c01076ad	obj/kernel.asm	/^c01076ad:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c01076b1	obj/kernel.asm	/^c01076b1:	0f 8e 53 ff ff ff    	jle    c010760a <check_swap+0x269>$/;"	l
c01076b7	obj/kernel.asm	/^c01076b7:	a1 14 40 15 c0       	mov    0xc0154014,%eax$/;"	l
c01076bc	obj/kernel.asm	/^c01076bc:	8b 15 18 40 15 c0    	mov    0xc0154018,%edx$/;"	l
c01076c2	obj/kernel.asm	/^c01076c2:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c01076c5	obj/kernel.asm	/^c01076c5:	89 55 9c             	mov    %edx,-0x64(%ebp)$/;"	l
c01076c8	obj/kernel.asm	/^c01076c8:	c7 45 a8 14 40 15 c0 	movl   $0xc0154014,-0x58(%ebp)$/;"	l
c01076cf	obj/kernel.asm	/^c01076cf:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c01076d2	obj/kernel.asm	/^c01076d2:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c01076d5	obj/kernel.asm	/^c01076d5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01076d8	obj/kernel.asm	/^c01076d8:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c01076db	obj/kernel.asm	/^c01076db:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01076de	obj/kernel.asm	/^c01076de:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c01076e1	obj/kernel.asm	/^c01076e1:	89 10                	mov    %edx,(%eax)$/;"	l
c01076e3	obj/kernel.asm	/^c01076e3:	c7 45 a4 14 40 15 c0 	movl   $0xc0154014,-0x5c(%ebp)$/;"	l
c01076ea	obj/kernel.asm	/^c01076ea:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c01076ed	obj/kernel.asm	/^c01076ed:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01076f0	obj/kernel.asm	/^c01076f0:	39 45 a4             	cmp    %eax,-0x5c(%ebp)$/;"	l
c01076f3	obj/kernel.asm	/^c01076f3:	0f 94 c0             	sete   %al$/;"	l
c01076f6	obj/kernel.asm	/^c01076f6:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01076f9	obj/kernel.asm	/^c01076f9:	85 c0                	test   %eax,%eax$/;"	l
c01076fb	obj/kernel.asm	/^c01076fb:	75 24                	jne    c0107721 <check_swap+0x380>$/;"	l
c01076fd	obj/kernel.asm	/^c01076fd:	c7 44 24 0c 67 6e 11 	movl   $0xc0116e67,0xc(%esp)$/;"	l
c0107704	obj/kernel.asm	/^c0107704:	c0 $/;"	l
c0107705	obj/kernel.asm	/^c0107705:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c010770c	obj/kernel.asm	/^c010770c:	c0 $/;"	l
c010770d	obj/kernel.asm	/^c010770d:	c7 44 24 04 e0 00 00 	movl   $0xe0,0x4(%esp)$/;"	l
c0107714	obj/kernel.asm	/^c0107714:	00 $/;"	l
c0107715	obj/kernel.asm	/^c0107715:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c010771c	obj/kernel.asm	/^c010771c:	e8 a7 97 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107721	obj/kernel.asm	/^c0107721:	a1 1c 40 15 c0       	mov    0xc015401c,%eax$/;"	l
c0107726	obj/kernel.asm	/^c0107726:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107729	obj/kernel.asm	/^c0107729:	c7 05 1c 40 15 c0 00 	movl   $0x0,0xc015401c$/;"	l
c0107730	obj/kernel.asm	/^c0107730:	00 00 00 $/;"	l
c0107733	obj/kernel.asm	/^c0107733:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010773a	obj/kernel.asm	/^c010773a:	eb 1e                	jmp    c010775a <check_swap+0x3b9>$/;"	l
c010773c	obj/kernel.asm	/^c010773c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010773f	obj/kernel.asm	/^c010773f:	8b 04 85 40 40 15 c0 	mov    -0x3feabfc0(,%eax,4),%eax$/;"	l
c0107746	obj/kernel.asm	/^c0107746:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010774d	obj/kernel.asm	/^c010774d:	00 $/;"	l
c010774e	obj/kernel.asm	/^c010774e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107751	obj/kernel.asm	/^c0107751:	e8 79 da ff ff       	call   c01051cf <free_pages>$/;"	l
c0107756	obj/kernel.asm	/^c0107756:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c010775a	obj/kernel.asm	/^c010775a:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c010775e	obj/kernel.asm	/^c010775e:	7e dc                	jle    c010773c <check_swap+0x39b>$/;"	l
c0107760	obj/kernel.asm	/^c0107760:	a1 1c 40 15 c0       	mov    0xc015401c,%eax$/;"	l
c0107765	obj/kernel.asm	/^c0107765:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107768	obj/kernel.asm	/^c0107768:	74 24                	je     c010778e <check_swap+0x3ed>$/;"	l
c010776a	obj/kernel.asm	/^c010776a:	c7 44 24 0c 80 6e 11 	movl   $0xc0116e80,0xc(%esp)$/;"	l
c0107771	obj/kernel.asm	/^c0107771:	c0 $/;"	l
c0107772	obj/kernel.asm	/^c0107772:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c0107779	obj/kernel.asm	/^c0107779:	c0 $/;"	l
c010777a	obj/kernel.asm	/^c010777a:	c7 44 24 04 e9 00 00 	movl   $0xe9,0x4(%esp)$/;"	l
c0107781	obj/kernel.asm	/^c0107781:	00 $/;"	l
c0107782	obj/kernel.asm	/^c0107782:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c0107789	obj/kernel.asm	/^c0107789:	e8 3a 97 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010778e	obj/kernel.asm	/^c010778e:	c7 04 24 a4 6e 11 c0 	movl   $0xc0116ea4,(%esp)$/;"	l
c0107795	obj/kernel.asm	/^c0107795:	e8 cb 8b ff ff       	call   c0100365 <cprintf>$/;"	l
c010779a	obj/kernel.asm	/^c010779a:	c7 05 18 0f 15 c0 00 	movl   $0x0,0xc0150f18$/;"	l
c01077a1	obj/kernel.asm	/^c01077a1:	00 00 00 $/;"	l
c01077a4	obj/kernel.asm	/^c01077a4:	e8 28 fa ff ff       	call   c01071d1 <check_content_set>$/;"	l
c01077a9	obj/kernel.asm	/^c01077a9:	a1 1c 40 15 c0       	mov    0xc015401c,%eax$/;"	l
c01077ae	obj/kernel.asm	/^c01077ae:	85 c0                	test   %eax,%eax$/;"	l
c01077b0	obj/kernel.asm	/^c01077b0:	74 24                	je     c01077d6 <check_swap+0x435>$/;"	l
c01077b2	obj/kernel.asm	/^c01077b2:	c7 44 24 0c cb 6e 11 	movl   $0xc0116ecb,0xc(%esp)$/;"	l
c01077b9	obj/kernel.asm	/^c01077b9:	c0 $/;"	l
c01077ba	obj/kernel.asm	/^c01077ba:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c01077c1	obj/kernel.asm	/^c01077c1:	c0 $/;"	l
c01077c2	obj/kernel.asm	/^c01077c2:	c7 44 24 04 f2 00 00 	movl   $0xf2,0x4(%esp)$/;"	l
c01077c9	obj/kernel.asm	/^c01077c9:	00 $/;"	l
c01077ca	obj/kernel.asm	/^c01077ca:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c01077d1	obj/kernel.asm	/^c01077d1:	e8 f2 96 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01077d6	obj/kernel.asm	/^c01077d6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c01077dd	obj/kernel.asm	/^c01077dd:	eb 26                	jmp    c0107805 <check_swap+0x464>$/;"	l
c01077df	obj/kernel.asm	/^c01077df:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01077e2	obj/kernel.asm	/^c01077e2:	c7 04 85 60 40 15 c0 	movl   $0xffffffff,-0x3feabfa0(,%eax,4)$/;"	l
c01077e9	obj/kernel.asm	/^c01077e9:	ff ff ff ff $/;"	l
c01077ed	obj/kernel.asm	/^c01077ed:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01077f0	obj/kernel.asm	/^c01077f0:	8b 14 85 60 40 15 c0 	mov    -0x3feabfa0(,%eax,4),%edx$/;"	l
c01077f7	obj/kernel.asm	/^c01077f7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01077fa	obj/kernel.asm	/^c01077fa:	89 14 85 a0 40 15 c0 	mov    %edx,-0x3feabf60(,%eax,4)$/;"	l
c0107801	obj/kernel.asm	/^c0107801:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0107805	obj/kernel.asm	/^c0107805:	83 7d ec 09          	cmpl   $0x9,-0x14(%ebp)$/;"	l
c0107809	obj/kernel.asm	/^c0107809:	7e d4                	jle    c01077df <check_swap+0x43e>$/;"	l
c010780b	obj/kernel.asm	/^c010780b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0107812	obj/kernel.asm	/^c0107812:	e9 eb 00 00 00       	jmp    c0107902 <check_swap+0x561>$/;"	l
c0107817	obj/kernel.asm	/^c0107817:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010781a	obj/kernel.asm	/^c010781a:	c7 04 85 f4 40 15 c0 	movl   $0x0,-0x3feabf0c(,%eax,4)$/;"	l
c0107821	obj/kernel.asm	/^c0107821:	00 00 00 00 $/;"	l
c0107825	obj/kernel.asm	/^c0107825:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107828	obj/kernel.asm	/^c0107828:	83 c0 01             	add    $0x1,%eax$/;"	l
c010782b	obj/kernel.asm	/^c010782b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010782e	obj/kernel.asm	/^c010782e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0107835	obj/kernel.asm	/^c0107835:	00 $/;"	l
c0107836	obj/kernel.asm	/^c0107836:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010783a	obj/kernel.asm	/^c010783a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010783d	obj/kernel.asm	/^c010783d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107840	obj/kernel.asm	/^c0107840:	e8 96 e0 ff ff       	call   c01058db <get_pte>$/;"	l
c0107845	obj/kernel.asm	/^c0107845:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107848	obj/kernel.asm	/^c0107848:	89 04 95 f4 40 15 c0 	mov    %eax,-0x3feabf0c(,%edx,4)$/;"	l
c010784f	obj/kernel.asm	/^c010784f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107852	obj/kernel.asm	/^c0107852:	8b 04 85 f4 40 15 c0 	mov    -0x3feabf0c(,%eax,4),%eax$/;"	l
c0107859	obj/kernel.asm	/^c0107859:	85 c0                	test   %eax,%eax$/;"	l
c010785b	obj/kernel.asm	/^c010785b:	75 24                	jne    c0107881 <check_swap+0x4e0>$/;"	l
c010785d	obj/kernel.asm	/^c010785d:	c7 44 24 0c d8 6e 11 	movl   $0xc0116ed8,0xc(%esp)$/;"	l
c0107864	obj/kernel.asm	/^c0107864:	c0 $/;"	l
c0107865	obj/kernel.asm	/^c0107865:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c010786c	obj/kernel.asm	/^c010786c:	c0 $/;"	l
c010786d	obj/kernel.asm	/^c010786d:	c7 44 24 04 fa 00 00 	movl   $0xfa,0x4(%esp)$/;"	l
c0107874	obj/kernel.asm	/^c0107874:	00 $/;"	l
c0107875	obj/kernel.asm	/^c0107875:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c010787c	obj/kernel.asm	/^c010787c:	e8 47 96 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107881	obj/kernel.asm	/^c0107881:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107884	obj/kernel.asm	/^c0107884:	8b 04 85 f4 40 15 c0 	mov    -0x3feabf0c(,%eax,4),%eax$/;"	l
c010788b	obj/kernel.asm	/^c010788b:	8b 00                	mov    (%eax),%eax$/;"	l
c010788d	obj/kernel.asm	/^c010788d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107890	obj/kernel.asm	/^c0107890:	e8 87 f5 ff ff       	call   c0106e1c <pte2page>$/;"	l
c0107895	obj/kernel.asm	/^c0107895:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107898	obj/kernel.asm	/^c0107898:	8b 14 95 40 40 15 c0 	mov    -0x3feabfc0(,%edx,4),%edx$/;"	l
c010789f	obj/kernel.asm	/^c010789f:	39 d0                	cmp    %edx,%eax$/;"	l
c01078a1	obj/kernel.asm	/^c01078a1:	74 24                	je     c01078c7 <check_swap+0x526>$/;"	l
c01078a3	obj/kernel.asm	/^c01078a3:	c7 44 24 0c f0 6e 11 	movl   $0xc0116ef0,0xc(%esp)$/;"	l
c01078aa	obj/kernel.asm	/^c01078aa:	c0 $/;"	l
c01078ab	obj/kernel.asm	/^c01078ab:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c01078b2	obj/kernel.asm	/^c01078b2:	c0 $/;"	l
c01078b3	obj/kernel.asm	/^c01078b3:	c7 44 24 04 fb 00 00 	movl   $0xfb,0x4(%esp)$/;"	l
c01078ba	obj/kernel.asm	/^c01078ba:	00 $/;"	l
c01078bb	obj/kernel.asm	/^c01078bb:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c01078c2	obj/kernel.asm	/^c01078c2:	e8 01 96 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01078c7	obj/kernel.asm	/^c01078c7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01078ca	obj/kernel.asm	/^c01078ca:	8b 04 85 f4 40 15 c0 	mov    -0x3feabf0c(,%eax,4),%eax$/;"	l
c01078d1	obj/kernel.asm	/^c01078d1:	8b 00                	mov    (%eax),%eax$/;"	l
c01078d3	obj/kernel.asm	/^c01078d3:	83 e0 01             	and    $0x1,%eax$/;"	l
c01078d6	obj/kernel.asm	/^c01078d6:	85 c0                	test   %eax,%eax$/;"	l
c01078d8	obj/kernel.asm	/^c01078d8:	75 24                	jne    c01078fe <check_swap+0x55d>$/;"	l
c01078da	obj/kernel.asm	/^c01078da:	c7 44 24 0c 18 6f 11 	movl   $0xc0116f18,0xc(%esp)$/;"	l
c01078e1	obj/kernel.asm	/^c01078e1:	c0 $/;"	l
c01078e2	obj/kernel.asm	/^c01078e2:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c01078e9	obj/kernel.asm	/^c01078e9:	c0 $/;"	l
c01078ea	obj/kernel.asm	/^c01078ea:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
c01078f1	obj/kernel.asm	/^c01078f1:	00 $/;"	l
c01078f2	obj/kernel.asm	/^c01078f2:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c01078f9	obj/kernel.asm	/^c01078f9:	e8 ca 95 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01078fe	obj/kernel.asm	/^c01078fe:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0107902	obj/kernel.asm	/^c0107902:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0107906	obj/kernel.asm	/^c0107906:	0f 8e 0b ff ff ff    	jle    c0107817 <check_swap+0x476>$/;"	l
c010790c	obj/kernel.asm	/^c010790c:	c7 04 24 34 6f 11 c0 	movl   $0xc0116f34,(%esp)$/;"	l
c0107913	obj/kernel.asm	/^c0107913:	e8 4d 8a ff ff       	call   c0100365 <cprintf>$/;"	l
c0107918	obj/kernel.asm	/^c0107918:	e8 6c fa ff ff       	call   c0107389 <check_content_access>$/;"	l
c010791d	obj/kernel.asm	/^c010791d:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0107920	obj/kernel.asm	/^c0107920:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0107924	obj/kernel.asm	/^c0107924:	74 24                	je     c010794a <check_swap+0x5a9>$/;"	l
c0107926	obj/kernel.asm	/^c0107926:	c7 44 24 0c 5a 6f 11 	movl   $0xc0116f5a,0xc(%esp)$/;"	l
c010792d	obj/kernel.asm	/^c010792d:	c0 $/;"	l
c010792e	obj/kernel.asm	/^c010792e:	c7 44 24 08 42 6c 11 	movl   $0xc0116c42,0x8(%esp)$/;"	l
c0107935	obj/kernel.asm	/^c0107935:	c0 $/;"	l
c0107936	obj/kernel.asm	/^c0107936:	c7 44 24 04 01 01 00 	movl   $0x101,0x4(%esp)$/;"	l
c010793d	obj/kernel.asm	/^c010793d:	00 $/;"	l
c010793e	obj/kernel.asm	/^c010793e:	c7 04 24 dc 6b 11 c0 	movl   $0xc0116bdc,(%esp)$/;"	l
c0107945	obj/kernel.asm	/^c0107945:	e8 7e 95 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010794a	obj/kernel.asm	/^c010794a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0107951	obj/kernel.asm	/^c0107951:	eb 1e                	jmp    c0107971 <check_swap+0x5d0>$/;"	l
c0107953	obj/kernel.asm	/^c0107953:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107956	obj/kernel.asm	/^c0107956:	8b 04 85 40 40 15 c0 	mov    -0x3feabfc0(,%eax,4),%eax$/;"	l
c010795d	obj/kernel.asm	/^c010795d:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0107964	obj/kernel.asm	/^c0107964:	00 $/;"	l
c0107965	obj/kernel.asm	/^c0107965:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107968	obj/kernel.asm	/^c0107968:	e8 62 d8 ff ff       	call   c01051cf <free_pages>$/;"	l
c010796d	obj/kernel.asm	/^c010796d:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0107971	obj/kernel.asm	/^c0107971:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0107975	obj/kernel.asm	/^c0107975:	7e dc                	jle    c0107953 <check_swap+0x5b2>$/;"	l
c0107977	obj/kernel.asm	/^c0107977:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010797a	obj/kernel.asm	/^c010797a:	8b 00                	mov    (%eax),%eax$/;"	l
c010797c	obj/kernel.asm	/^c010797c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010797f	obj/kernel.asm	/^c010797f:	e8 d6 f4 ff ff       	call   c0106e5a <pde2page>$/;"	l
c0107984	obj/kernel.asm	/^c0107984:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010798b	obj/kernel.asm	/^c010798b:	00 $/;"	l
c010798c	obj/kernel.asm	/^c010798c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010798f	obj/kernel.asm	/^c010798f:	e8 3b d8 ff ff       	call   c01051cf <free_pages>$/;"	l
c0107994	obj/kernel.asm	/^c0107994:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107997	obj/kernel.asm	/^c0107997:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010799d	obj/kernel.asm	/^c010799d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01079a0	obj/kernel.asm	/^c01079a0:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c01079a7	obj/kernel.asm	/^c01079a7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01079aa	obj/kernel.asm	/^c01079aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01079ad	obj/kernel.asm	/^c01079ad:	e8 04 09 00 00       	call   c01082b6 <mm_destroy>$/;"	l
c01079b2	obj/kernel.asm	/^c01079b2:	c7 05 0c 41 15 c0 00 	movl   $0x0,0xc015410c$/;"	l
c01079b9	obj/kernel.asm	/^c01079b9:	00 00 00 $/;"	l
c01079bc	obj/kernel.asm	/^c01079bc:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01079bf	obj/kernel.asm	/^c01079bf:	a3 1c 40 15 c0       	mov    %eax,0xc015401c$/;"	l
c01079c4	obj/kernel.asm	/^c01079c4:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c01079c7	obj/kernel.asm	/^c01079c7:	8b 55 9c             	mov    -0x64(%ebp),%edx$/;"	l
c01079ca	obj/kernel.asm	/^c01079ca:	a3 14 40 15 c0       	mov    %eax,0xc0154014$/;"	l
c01079cf	obj/kernel.asm	/^c01079cf:	89 15 18 40 15 c0    	mov    %edx,0xc0154018$/;"	l
c01079d5	obj/kernel.asm	/^c01079d5:	c7 45 e8 14 40 15 c0 	movl   $0xc0154014,-0x18(%ebp)$/;"	l
c01079dc	obj/kernel.asm	/^c01079dc:	eb 1d                	jmp    c01079fb <check_swap+0x65a>$/;"	l
c01079de	obj/kernel.asm	/^c01079de:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01079e1	obj/kernel.asm	/^c01079e1:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01079e4	obj/kernel.asm	/^c01079e4:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01079e7	obj/kernel.asm	/^c01079e7:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01079eb	obj/kernel.asm	/^c01079eb:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01079ee	obj/kernel.asm	/^c01079ee:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01079f1	obj/kernel.asm	/^c01079f1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01079f4	obj/kernel.asm	/^c01079f4:	29 c2                	sub    %eax,%edx$/;"	l
c01079f6	obj/kernel.asm	/^c01079f6:	89 d0                	mov    %edx,%eax$/;"	l
c01079f8	obj/kernel.asm	/^c01079f8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01079fb	obj/kernel.asm	/^c01079fb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01079fe	obj/kernel.asm	/^c01079fe:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0107a01	obj/kernel.asm	/^c0107a01:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0107a04	obj/kernel.asm	/^c0107a04:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107a07	obj/kernel.asm	/^c0107a07:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107a0a	obj/kernel.asm	/^c0107a0a:	81 7d e8 14 40 15 c0 	cmpl   $0xc0154014,-0x18(%ebp)$/;"	l
c0107a11	obj/kernel.asm	/^c0107a11:	75 cb                	jne    c01079de <check_swap+0x63d>$/;"	l
c0107a13	obj/kernel.asm	/^c0107a13:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107a16	obj/kernel.asm	/^c0107a16:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0107a1a	obj/kernel.asm	/^c0107a1a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a1d	obj/kernel.asm	/^c0107a1d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107a21	obj/kernel.asm	/^c0107a21:	c7 04 24 61 6f 11 c0 	movl   $0xc0116f61,(%esp)$/;"	l
c0107a28	obj/kernel.asm	/^c0107a28:	e8 38 89 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107a2d	obj/kernel.asm	/^c0107a2d:	c7 04 24 7b 6f 11 c0 	movl   $0xc0116f7b,(%esp)$/;"	l
c0107a34	obj/kernel.asm	/^c0107a34:	e8 2c 89 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107a39	obj/kernel.asm	/^c0107a39:	83 c4 74             	add    $0x74,%esp$/;"	l
c0107a3c	obj/kernel.asm	/^c0107a3c:	5b                   	pop    %ebx$/;"	l
c0107a3d	obj/kernel.asm	/^c0107a3d:	5d                   	pop    %ebp$/;"	l
c0107a3e	obj/kernel.asm	/^c0107a3e:	c3                   	ret    $/;"	l
c0107a3f	obj/kernel.asm	/^c0107a3f <_fifo_init_mm>:$/;"	l
c0107a3f	obj/kernel.asm	/^c0107a3f:	55                   	push   %ebp$/;"	l
c0107a40	obj/kernel.asm	/^c0107a40:	89 e5                	mov    %esp,%ebp$/;"	l
c0107a42	obj/kernel.asm	/^c0107a42:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0107a45	obj/kernel.asm	/^c0107a45:	c7 45 fc 04 41 15 c0 	movl   $0xc0154104,-0x4(%ebp)$/;"	l
c0107a4c	obj/kernel.asm	/^c0107a4c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107a4f	obj/kernel.asm	/^c0107a4f:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0107a52	obj/kernel.asm	/^c0107a52:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107a55	obj/kernel.asm	/^c0107a55:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107a58	obj/kernel.asm	/^c0107a58:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107a5b	obj/kernel.asm	/^c0107a5b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107a5e	obj/kernel.asm	/^c0107a5e:	89 10                	mov    %edx,(%eax)$/;"	l
c0107a60	obj/kernel.asm	/^c0107a60:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a63	obj/kernel.asm	/^c0107a63:	c7 40 14 04 41 15 c0 	movl   $0xc0154104,0x14(%eax)$/;"	l
c0107a6a	obj/kernel.asm	/^c0107a6a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107a6f	obj/kernel.asm	/^c0107a6f:	c9                   	leave  $/;"	l
c0107a70	obj/kernel.asm	/^c0107a70:	c3                   	ret    $/;"	l
c0107a71	obj/kernel.asm	/^c0107a71 <_fifo_map_swappable>:$/;"	l
c0107a71	obj/kernel.asm	/^c0107a71:	55                   	push   %ebp$/;"	l
c0107a72	obj/kernel.asm	/^c0107a72:	89 e5                	mov    %esp,%ebp$/;"	l
c0107a74	obj/kernel.asm	/^c0107a74:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0107a77	obj/kernel.asm	/^c0107a77:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a7a	obj/kernel.asm	/^c0107a7a:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0107a7d	obj/kernel.asm	/^c0107a7d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107a80	obj/kernel.asm	/^c0107a80:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107a83	obj/kernel.asm	/^c0107a83:	83 c0 18             	add    $0x18,%eax$/;"	l
c0107a86	obj/kernel.asm	/^c0107a86:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107a89	obj/kernel.asm	/^c0107a89:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0107a8d	obj/kernel.asm	/^c0107a8d:	74 06                	je     c0107a95 <_fifo_map_swappable+0x24>$/;"	l
c0107a8f	obj/kernel.asm	/^c0107a8f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107a93	obj/kernel.asm	/^c0107a93:	75 24                	jne    c0107ab9 <_fifo_map_swappable+0x48>$/;"	l
c0107a95	obj/kernel.asm	/^c0107a95:	c7 44 24 0c 94 6f 11 	movl   $0xc0116f94,0xc(%esp)$/;"	l
c0107a9c	obj/kernel.asm	/^c0107a9c:	c0 $/;"	l
c0107a9d	obj/kernel.asm	/^c0107a9d:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107aa4	obj/kernel.asm	/^c0107aa4:	c0 $/;"	l
c0107aa5	obj/kernel.asm	/^c0107aa5:	c7 44 24 04 32 00 00 	movl   $0x32,0x4(%esp)$/;"	l
c0107aac	obj/kernel.asm	/^c0107aac:	00 $/;"	l
c0107aad	obj/kernel.asm	/^c0107aad:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107ab4	obj/kernel.asm	/^c0107ab4:	e8 0f 94 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107ab9	obj/kernel.asm	/^c0107ab9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107abc	obj/kernel.asm	/^c0107abc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107abf	obj/kernel.asm	/^c0107abf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107ac2	obj/kernel.asm	/^c0107ac2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107ac5	obj/kernel.asm	/^c0107ac5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107ac8	obj/kernel.asm	/^c0107ac8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107acb	obj/kernel.asm	/^c0107acb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107ace	obj/kernel.asm	/^c0107ace:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107ad1	obj/kernel.asm	/^c0107ad1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107ad4	obj/kernel.asm	/^c0107ad4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107ad7	obj/kernel.asm	/^c0107ad7:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0107ada	obj/kernel.asm	/^c0107ada:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c0107add	obj/kernel.asm	/^c0107add:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107ae0	obj/kernel.asm	/^c0107ae0:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c0107ae3	obj/kernel.asm	/^c0107ae3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0107ae6	obj/kernel.asm	/^c0107ae6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107ae9	obj/kernel.asm	/^c0107ae9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0107aec	obj/kernel.asm	/^c0107aec:	89 10                	mov    %edx,(%eax)$/;"	l
c0107aee	obj/kernel.asm	/^c0107aee:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107af1	obj/kernel.asm	/^c0107af1:	8b 10                	mov    (%eax),%edx$/;"	l
c0107af3	obj/kernel.asm	/^c0107af3:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0107af6	obj/kernel.asm	/^c0107af6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107af9	obj/kernel.asm	/^c0107af9:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107afc	obj/kernel.asm	/^c0107afc:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0107aff	obj/kernel.asm	/^c0107aff:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107b02	obj/kernel.asm	/^c0107b02:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107b05	obj/kernel.asm	/^c0107b05:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107b08	obj/kernel.asm	/^c0107b08:	89 10                	mov    %edx,(%eax)$/;"	l
c0107b0a	obj/kernel.asm	/^c0107b0a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107b0f	obj/kernel.asm	/^c0107b0f:	c9                   	leave  $/;"	l
c0107b10	obj/kernel.asm	/^c0107b10:	c3                   	ret    $/;"	l
c0107b11	obj/kernel.asm	/^c0107b11 <_fifo_swap_out_victim>:$/;"	l
c0107b11	obj/kernel.asm	/^c0107b11:	55                   	push   %ebp$/;"	l
c0107b12	obj/kernel.asm	/^c0107b12:	89 e5                	mov    %esp,%ebp$/;"	l
c0107b14	obj/kernel.asm	/^c0107b14:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0107b17	obj/kernel.asm	/^c0107b17:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107b1a	obj/kernel.asm	/^c0107b1a:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0107b1d	obj/kernel.asm	/^c0107b1d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107b20	obj/kernel.asm	/^c0107b20:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107b24	obj/kernel.asm	/^c0107b24:	75 24                	jne    c0107b4a <_fifo_swap_out_victim+0x39>$/;"	l
c0107b26	obj/kernel.asm	/^c0107b26:	c7 44 24 0c db 6f 11 	movl   $0xc0116fdb,0xc(%esp)$/;"	l
c0107b2d	obj/kernel.asm	/^c0107b2d:	c0 $/;"	l
c0107b2e	obj/kernel.asm	/^c0107b2e:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107b35	obj/kernel.asm	/^c0107b35:	c0 $/;"	l
c0107b36	obj/kernel.asm	/^c0107b36:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
c0107b3d	obj/kernel.asm	/^c0107b3d:	00 $/;"	l
c0107b3e	obj/kernel.asm	/^c0107b3e:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107b45	obj/kernel.asm	/^c0107b45:	e8 7e 93 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107b4a	obj/kernel.asm	/^c0107b4a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0107b4e	obj/kernel.asm	/^c0107b4e:	74 24                	je     c0107b74 <_fifo_swap_out_victim+0x63>$/;"	l
c0107b50	obj/kernel.asm	/^c0107b50:	c7 44 24 0c e8 6f 11 	movl   $0xc0116fe8,0xc(%esp)$/;"	l
c0107b57	obj/kernel.asm	/^c0107b57:	c0 $/;"	l
c0107b58	obj/kernel.asm	/^c0107b58:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107b5f	obj/kernel.asm	/^c0107b5f:	c0 $/;"	l
c0107b60	obj/kernel.asm	/^c0107b60:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)$/;"	l
c0107b67	obj/kernel.asm	/^c0107b67:	00 $/;"	l
c0107b68	obj/kernel.asm	/^c0107b68:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107b6f	obj/kernel.asm	/^c0107b6f:	e8 54 93 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107b74	obj/kernel.asm	/^c0107b74:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b77	obj/kernel.asm	/^c0107b77:	8b 00                	mov    (%eax),%eax$/;"	l
c0107b79	obj/kernel.asm	/^c0107b79:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107b7c	obj/kernel.asm	/^c0107b7c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b7f	obj/kernel.asm	/^c0107b7f:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107b82	obj/kernel.asm	/^c0107b82:	75 24                	jne    c0107ba8 <_fifo_swap_out_victim+0x97>$/;"	l
c0107b84	obj/kernel.asm	/^c0107b84:	c7 44 24 0c f3 6f 11 	movl   $0xc0116ff3,0xc(%esp)$/;"	l
c0107b8b	obj/kernel.asm	/^c0107b8b:	c0 $/;"	l
c0107b8c	obj/kernel.asm	/^c0107b8c:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107b93	obj/kernel.asm	/^c0107b93:	c0 $/;"	l
c0107b94	obj/kernel.asm	/^c0107b94:	c7 44 24 04 49 00 00 	movl   $0x49,0x4(%esp)$/;"	l
c0107b9b	obj/kernel.asm	/^c0107b9b:	00 $/;"	l
c0107b9c	obj/kernel.asm	/^c0107b9c:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107ba3	obj/kernel.asm	/^c0107ba3:	e8 20 93 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107ba8	obj/kernel.asm	/^c0107ba8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107bab	obj/kernel.asm	/^c0107bab:	83 e8 18             	sub    $0x18,%eax$/;"	l
c0107bae	obj/kernel.asm	/^c0107bae:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107bb1	obj/kernel.asm	/^c0107bb1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107bb4	obj/kernel.asm	/^c0107bb4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107bb7	obj/kernel.asm	/^c0107bb7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107bba	obj/kernel.asm	/^c0107bba:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107bbd	obj/kernel.asm	/^c0107bbd:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0107bc0	obj/kernel.asm	/^c0107bc0:	8b 12                	mov    (%edx),%edx$/;"	l
c0107bc2	obj/kernel.asm	/^c0107bc2:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0107bc5	obj/kernel.asm	/^c0107bc5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107bc8	obj/kernel.asm	/^c0107bc8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107bcb	obj/kernel.asm	/^c0107bcb:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0107bce	obj/kernel.asm	/^c0107bce:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107bd1	obj/kernel.asm	/^c0107bd1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107bd4	obj/kernel.asm	/^c0107bd4:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107bd7	obj/kernel.asm	/^c0107bd7:	89 10                	mov    %edx,(%eax)$/;"	l
c0107bd9	obj/kernel.asm	/^c0107bd9:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0107bdd	obj/kernel.asm	/^c0107bdd:	75 24                	jne    c0107c03 <_fifo_swap_out_victim+0xf2>$/;"	l
c0107bdf	obj/kernel.asm	/^c0107bdf:	c7 44 24 0c fc 6f 11 	movl   $0xc0116ffc,0xc(%esp)$/;"	l
c0107be6	obj/kernel.asm	/^c0107be6:	c0 $/;"	l
c0107be7	obj/kernel.asm	/^c0107be7:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107bee	obj/kernel.asm	/^c0107bee:	c0 $/;"	l
c0107bef	obj/kernel.asm	/^c0107bef:	c7 44 24 04 4c 00 00 	movl   $0x4c,0x4(%esp)$/;"	l
c0107bf6	obj/kernel.asm	/^c0107bf6:	00 $/;"	l
c0107bf7	obj/kernel.asm	/^c0107bf7:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107bfe	obj/kernel.asm	/^c0107bfe:	e8 c5 92 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107c03	obj/kernel.asm	/^c0107c03:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107c06	obj/kernel.asm	/^c0107c06:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107c09	obj/kernel.asm	/^c0107c09:	89 10                	mov    %edx,(%eax)$/;"	l
c0107c0b	obj/kernel.asm	/^c0107c0b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107c10	obj/kernel.asm	/^c0107c10:	c9                   	leave  $/;"	l
c0107c11	obj/kernel.asm	/^c0107c11:	c3                   	ret    $/;"	l
c0107c12	obj/kernel.asm	/^c0107c12 <_fifo_check_swap>:$/;"	l
c0107c12	obj/kernel.asm	/^c0107c12:	55                   	push   %ebp$/;"	l
c0107c13	obj/kernel.asm	/^c0107c13:	89 e5                	mov    %esp,%ebp$/;"	l
c0107c15	obj/kernel.asm	/^c0107c15:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107c18	obj/kernel.asm	/^c0107c18:	c7 04 24 08 70 11 c0 	movl   $0xc0117008,(%esp)$/;"	l
c0107c1f	obj/kernel.asm	/^c0107c1f:	e8 41 87 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107c24	obj/kernel.asm	/^c0107c24:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0107c29	obj/kernel.asm	/^c0107c29:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0107c2c	obj/kernel.asm	/^c0107c2c:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c0107c31	obj/kernel.asm	/^c0107c31:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107c34	obj/kernel.asm	/^c0107c34:	74 24                	je     c0107c5a <_fifo_check_swap+0x48>$/;"	l
c0107c36	obj/kernel.asm	/^c0107c36:	c7 44 24 0c 2e 70 11 	movl   $0xc011702e,0xc(%esp)$/;"	l
c0107c3d	obj/kernel.asm	/^c0107c3d:	c0 $/;"	l
c0107c3e	obj/kernel.asm	/^c0107c3e:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107c45	obj/kernel.asm	/^c0107c45:	c0 $/;"	l
c0107c46	obj/kernel.asm	/^c0107c46:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
c0107c4d	obj/kernel.asm	/^c0107c4d:	00 $/;"	l
c0107c4e	obj/kernel.asm	/^c0107c4e:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107c55	obj/kernel.asm	/^c0107c55:	e8 6e 92 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107c5a	obj/kernel.asm	/^c0107c5a:	c7 04 24 40 70 11 c0 	movl   $0xc0117040,(%esp)$/;"	l
c0107c61	obj/kernel.asm	/^c0107c61:	e8 ff 86 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107c66	obj/kernel.asm	/^c0107c66:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0107c6b	obj/kernel.asm	/^c0107c6b:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107c6e	obj/kernel.asm	/^c0107c6e:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c0107c73	obj/kernel.asm	/^c0107c73:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107c76	obj/kernel.asm	/^c0107c76:	74 24                	je     c0107c9c <_fifo_check_swap+0x8a>$/;"	l
c0107c78	obj/kernel.asm	/^c0107c78:	c7 44 24 0c 2e 70 11 	movl   $0xc011702e,0xc(%esp)$/;"	l
c0107c7f	obj/kernel.asm	/^c0107c7f:	c0 $/;"	l
c0107c80	obj/kernel.asm	/^c0107c80:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107c87	obj/kernel.asm	/^c0107c87:	c0 $/;"	l
c0107c88	obj/kernel.asm	/^c0107c88:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
c0107c8f	obj/kernel.asm	/^c0107c8f:	00 $/;"	l
c0107c90	obj/kernel.asm	/^c0107c90:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107c97	obj/kernel.asm	/^c0107c97:	e8 2c 92 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107c9c	obj/kernel.asm	/^c0107c9c:	c7 04 24 68 70 11 c0 	movl   $0xc0117068,(%esp)$/;"	l
c0107ca3	obj/kernel.asm	/^c0107ca3:	e8 bd 86 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107ca8	obj/kernel.asm	/^c0107ca8:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0107cad	obj/kernel.asm	/^c0107cad:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107cb0	obj/kernel.asm	/^c0107cb0:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c0107cb5	obj/kernel.asm	/^c0107cb5:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107cb8	obj/kernel.asm	/^c0107cb8:	74 24                	je     c0107cde <_fifo_check_swap+0xcc>$/;"	l
c0107cba	obj/kernel.asm	/^c0107cba:	c7 44 24 0c 2e 70 11 	movl   $0xc011702e,0xc(%esp)$/;"	l
c0107cc1	obj/kernel.asm	/^c0107cc1:	c0 $/;"	l
c0107cc2	obj/kernel.asm	/^c0107cc2:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107cc9	obj/kernel.asm	/^c0107cc9:	c0 $/;"	l
c0107cca	obj/kernel.asm	/^c0107cca:	c7 44 24 04 5b 00 00 	movl   $0x5b,0x4(%esp)$/;"	l
c0107cd1	obj/kernel.asm	/^c0107cd1:	00 $/;"	l
c0107cd2	obj/kernel.asm	/^c0107cd2:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107cd9	obj/kernel.asm	/^c0107cd9:	e8 ea 91 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107cde	obj/kernel.asm	/^c0107cde:	c7 04 24 90 70 11 c0 	movl   $0xc0117090,(%esp)$/;"	l
c0107ce5	obj/kernel.asm	/^c0107ce5:	e8 7b 86 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107cea	obj/kernel.asm	/^c0107cea:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107cef	obj/kernel.asm	/^c0107cef:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107cf2	obj/kernel.asm	/^c0107cf2:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c0107cf7	obj/kernel.asm	/^c0107cf7:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107cfa	obj/kernel.asm	/^c0107cfa:	74 24                	je     c0107d20 <_fifo_check_swap+0x10e>$/;"	l
c0107cfc	obj/kernel.asm	/^c0107cfc:	c7 44 24 0c 2e 70 11 	movl   $0xc011702e,0xc(%esp)$/;"	l
c0107d03	obj/kernel.asm	/^c0107d03:	c0 $/;"	l
c0107d04	obj/kernel.asm	/^c0107d04:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107d0b	obj/kernel.asm	/^c0107d0b:	c0 $/;"	l
c0107d0c	obj/kernel.asm	/^c0107d0c:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0107d13	obj/kernel.asm	/^c0107d13:	00 $/;"	l
c0107d14	obj/kernel.asm	/^c0107d14:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107d1b	obj/kernel.asm	/^c0107d1b:	e8 a8 91 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107d20	obj/kernel.asm	/^c0107d20:	c7 04 24 b8 70 11 c0 	movl   $0xc01170b8,(%esp)$/;"	l
c0107d27	obj/kernel.asm	/^c0107d27:	e8 39 86 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107d2c	obj/kernel.asm	/^c0107d2c:	b8 00 50 00 00       	mov    $0x5000,%eax$/;"	l
c0107d31	obj/kernel.asm	/^c0107d31:	c6 00 0e             	movb   $0xe,(%eax)$/;"	l
c0107d34	obj/kernel.asm	/^c0107d34:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c0107d39	obj/kernel.asm	/^c0107d39:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c0107d3c	obj/kernel.asm	/^c0107d3c:	74 24                	je     c0107d62 <_fifo_check_swap+0x150>$/;"	l
c0107d3e	obj/kernel.asm	/^c0107d3e:	c7 44 24 0c de 70 11 	movl   $0xc01170de,0xc(%esp)$/;"	l
c0107d45	obj/kernel.asm	/^c0107d45:	c0 $/;"	l
c0107d46	obj/kernel.asm	/^c0107d46:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107d4d	obj/kernel.asm	/^c0107d4d:	c0 $/;"	l
c0107d4e	obj/kernel.asm	/^c0107d4e:	c7 44 24 04 61 00 00 	movl   $0x61,0x4(%esp)$/;"	l
c0107d55	obj/kernel.asm	/^c0107d55:	00 $/;"	l
c0107d56	obj/kernel.asm	/^c0107d56:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107d5d	obj/kernel.asm	/^c0107d5d:	e8 66 91 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107d62	obj/kernel.asm	/^c0107d62:	c7 04 24 90 70 11 c0 	movl   $0xc0117090,(%esp)$/;"	l
c0107d69	obj/kernel.asm	/^c0107d69:	e8 f7 85 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107d6e	obj/kernel.asm	/^c0107d6e:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107d73	obj/kernel.asm	/^c0107d73:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107d76	obj/kernel.asm	/^c0107d76:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c0107d7b	obj/kernel.asm	/^c0107d7b:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c0107d7e	obj/kernel.asm	/^c0107d7e:	74 24                	je     c0107da4 <_fifo_check_swap+0x192>$/;"	l
c0107d80	obj/kernel.asm	/^c0107d80:	c7 44 24 0c de 70 11 	movl   $0xc01170de,0xc(%esp)$/;"	l
c0107d87	obj/kernel.asm	/^c0107d87:	c0 $/;"	l
c0107d88	obj/kernel.asm	/^c0107d88:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107d8f	obj/kernel.asm	/^c0107d8f:	c0 $/;"	l
c0107d90	obj/kernel.asm	/^c0107d90:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c0107d97	obj/kernel.asm	/^c0107d97:	00 $/;"	l
c0107d98	obj/kernel.asm	/^c0107d98:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107d9f	obj/kernel.asm	/^c0107d9f:	e8 24 91 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107da4	obj/kernel.asm	/^c0107da4:	c7 04 24 40 70 11 c0 	movl   $0xc0117040,(%esp)$/;"	l
c0107dab	obj/kernel.asm	/^c0107dab:	e8 b5 85 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107db0	obj/kernel.asm	/^c0107db0:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0107db5	obj/kernel.asm	/^c0107db5:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107db8	obj/kernel.asm	/^c0107db8:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c0107dbd	obj/kernel.asm	/^c0107dbd:	83 f8 06             	cmp    $0x6,%eax$/;"	l
c0107dc0	obj/kernel.asm	/^c0107dc0:	74 24                	je     c0107de6 <_fifo_check_swap+0x1d4>$/;"	l
c0107dc2	obj/kernel.asm	/^c0107dc2:	c7 44 24 0c ed 70 11 	movl   $0xc01170ed,0xc(%esp)$/;"	l
c0107dc9	obj/kernel.asm	/^c0107dc9:	c0 $/;"	l
c0107dca	obj/kernel.asm	/^c0107dca:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107dd1	obj/kernel.asm	/^c0107dd1:	c0 $/;"	l
c0107dd2	obj/kernel.asm	/^c0107dd2:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
c0107dd9	obj/kernel.asm	/^c0107dd9:	00 $/;"	l
c0107dda	obj/kernel.asm	/^c0107dda:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107de1	obj/kernel.asm	/^c0107de1:	e8 e2 90 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107de6	obj/kernel.asm	/^c0107de6:	c7 04 24 90 70 11 c0 	movl   $0xc0117090,(%esp)$/;"	l
c0107ded	obj/kernel.asm	/^c0107ded:	e8 73 85 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107df2	obj/kernel.asm	/^c0107df2:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107df7	obj/kernel.asm	/^c0107df7:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107dfa	obj/kernel.asm	/^c0107dfa:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c0107dff	obj/kernel.asm	/^c0107dff:	83 f8 07             	cmp    $0x7,%eax$/;"	l
c0107e02	obj/kernel.asm	/^c0107e02:	74 24                	je     c0107e28 <_fifo_check_swap+0x216>$/;"	l
c0107e04	obj/kernel.asm	/^c0107e04:	c7 44 24 0c fc 70 11 	movl   $0xc01170fc,0xc(%esp)$/;"	l
c0107e0b	obj/kernel.asm	/^c0107e0b:	c0 $/;"	l
c0107e0c	obj/kernel.asm	/^c0107e0c:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107e13	obj/kernel.asm	/^c0107e13:	c0 $/;"	l
c0107e14	obj/kernel.asm	/^c0107e14:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c0107e1b	obj/kernel.asm	/^c0107e1b:	00 $/;"	l
c0107e1c	obj/kernel.asm	/^c0107e1c:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107e23	obj/kernel.asm	/^c0107e23:	e8 a0 90 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107e28	obj/kernel.asm	/^c0107e28:	c7 04 24 08 70 11 c0 	movl   $0xc0117008,(%esp)$/;"	l
c0107e2f	obj/kernel.asm	/^c0107e2f:	e8 31 85 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107e34	obj/kernel.asm	/^c0107e34:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0107e39	obj/kernel.asm	/^c0107e39:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0107e3c	obj/kernel.asm	/^c0107e3c:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c0107e41	obj/kernel.asm	/^c0107e41:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c0107e44	obj/kernel.asm	/^c0107e44:	74 24                	je     c0107e6a <_fifo_check_swap+0x258>$/;"	l
c0107e46	obj/kernel.asm	/^c0107e46:	c7 44 24 0c 0b 71 11 	movl   $0xc011710b,0xc(%esp)$/;"	l
c0107e4d	obj/kernel.asm	/^c0107e4d:	c0 $/;"	l
c0107e4e	obj/kernel.asm	/^c0107e4e:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107e55	obj/kernel.asm	/^c0107e55:	c0 $/;"	l
c0107e56	obj/kernel.asm	/^c0107e56:	c7 44 24 04 6d 00 00 	movl   $0x6d,0x4(%esp)$/;"	l
c0107e5d	obj/kernel.asm	/^c0107e5d:	00 $/;"	l
c0107e5e	obj/kernel.asm	/^c0107e5e:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107e65	obj/kernel.asm	/^c0107e65:	e8 5e 90 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107e6a	obj/kernel.asm	/^c0107e6a:	c7 04 24 68 70 11 c0 	movl   $0xc0117068,(%esp)$/;"	l
c0107e71	obj/kernel.asm	/^c0107e71:	e8 ef 84 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107e76	obj/kernel.asm	/^c0107e76:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0107e7b	obj/kernel.asm	/^c0107e7b:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107e7e	obj/kernel.asm	/^c0107e7e:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c0107e83	obj/kernel.asm	/^c0107e83:	83 f8 09             	cmp    $0x9,%eax$/;"	l
c0107e86	obj/kernel.asm	/^c0107e86:	74 24                	je     c0107eac <_fifo_check_swap+0x29a>$/;"	l
c0107e88	obj/kernel.asm	/^c0107e88:	c7 44 24 0c 1a 71 11 	movl   $0xc011711a,0xc(%esp)$/;"	l
c0107e8f	obj/kernel.asm	/^c0107e8f:	c0 $/;"	l
c0107e90	obj/kernel.asm	/^c0107e90:	c7 44 24 08 b2 6f 11 	movl   $0xc0116fb2,0x8(%esp)$/;"	l
c0107e97	obj/kernel.asm	/^c0107e97:	c0 $/;"	l
c0107e98	obj/kernel.asm	/^c0107e98:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c0107e9f	obj/kernel.asm	/^c0107e9f:	00 $/;"	l
c0107ea0	obj/kernel.asm	/^c0107ea0:	c7 04 24 c7 6f 11 c0 	movl   $0xc0116fc7,(%esp)$/;"	l
c0107ea7	obj/kernel.asm	/^c0107ea7:	e8 1c 90 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107eac	obj/kernel.asm	/^c0107eac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107eb1	obj/kernel.asm	/^c0107eb1:	c9                   	leave  $/;"	l
c0107eb2	obj/kernel.asm	/^c0107eb2:	c3                   	ret    $/;"	l
c0107eb3	obj/kernel.asm	/^c0107eb3 <_fifo_init>:$/;"	l
c0107eb3	obj/kernel.asm	/^c0107eb3:	55                   	push   %ebp$/;"	l
c0107eb4	obj/kernel.asm	/^c0107eb4:	89 e5                	mov    %esp,%ebp$/;"	l
c0107eb6	obj/kernel.asm	/^c0107eb6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107ebb	obj/kernel.asm	/^c0107ebb:	5d                   	pop    %ebp$/;"	l
c0107ebc	obj/kernel.asm	/^c0107ebc:	c3                   	ret    $/;"	l
c0107ebd	obj/kernel.asm	/^c0107ebd <_fifo_set_unswappable>:$/;"	l
c0107ebd	obj/kernel.asm	/^c0107ebd:	55                   	push   %ebp$/;"	l
c0107ebe	obj/kernel.asm	/^c0107ebe:	89 e5                	mov    %esp,%ebp$/;"	l
c0107ec0	obj/kernel.asm	/^c0107ec0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107ec5	obj/kernel.asm	/^c0107ec5:	5d                   	pop    %ebp$/;"	l
c0107ec6	obj/kernel.asm	/^c0107ec6:	c3                   	ret    $/;"	l
c0107ec7	obj/kernel.asm	/^c0107ec7 <_fifo_tick_event>:$/;"	l
c0107ec7	obj/kernel.asm	/^c0107ec7:	55                   	push   %ebp$/;"	l
c0107ec8	obj/kernel.asm	/^c0107ec8:	89 e5                	mov    %esp,%ebp$/;"	l
c0107eca	obj/kernel.asm	/^c0107eca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107ecf	obj/kernel.asm	/^c0107ecf:	5d                   	pop    %ebp$/;"	l
c0107ed0	obj/kernel.asm	/^c0107ed0:	c3                   	ret    $/;"	l
c0107ed1	obj/kernel.asm	/^c0107ed1 <mm_count>:$/;"	l
c0107ed1	obj/kernel.asm	/^c0107ed1:	55                   	push   %ebp$/;"	l
c0107ed2	obj/kernel.asm	/^c0107ed2:	89 e5                	mov    %esp,%ebp$/;"	l
c0107ed4	obj/kernel.asm	/^c0107ed4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ed7	obj/kernel.asm	/^c0107ed7:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0107eda	obj/kernel.asm	/^c0107eda:	5d                   	pop    %ebp$/;"	l
c0107edb	obj/kernel.asm	/^c0107edb:	c3                   	ret    $/;"	l
c0107edc	obj/kernel.asm	/^c0107edc <set_mm_count>:$/;"	l
c0107edc	obj/kernel.asm	/^c0107edc:	55                   	push   %ebp$/;"	l
c0107edd	obj/kernel.asm	/^c0107edd:	89 e5                	mov    %esp,%ebp$/;"	l
c0107edf	obj/kernel.asm	/^c0107edf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ee2	obj/kernel.asm	/^c0107ee2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107ee5	obj/kernel.asm	/^c0107ee5:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0107ee8	obj/kernel.asm	/^c0107ee8:	5d                   	pop    %ebp$/;"	l
c0107ee9	obj/kernel.asm	/^c0107ee9:	c3                   	ret    $/;"	l
c0107eea	obj/kernel.asm	/^c0107eea <pa2page>:$/;"	l
c0107eea	obj/kernel.asm	/^c0107eea:	55                   	push   %ebp$/;"	l
c0107eeb	obj/kernel.asm	/^c0107eeb:	89 e5                	mov    %esp,%ebp$/;"	l
c0107eed	obj/kernel.asm	/^c0107eed:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107ef0	obj/kernel.asm	/^c0107ef0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ef3	obj/kernel.asm	/^c0107ef3:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0107ef6	obj/kernel.asm	/^c0107ef6:	89 c2                	mov    %eax,%edx$/;"	l
c0107ef8	obj/kernel.asm	/^c0107ef8:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c0107efd	obj/kernel.asm	/^c0107efd:	39 c2                	cmp    %eax,%edx$/;"	l
c0107eff	obj/kernel.asm	/^c0107eff:	72 1c                	jb     c0107f1d <pa2page+0x33>$/;"	l
c0107f01	obj/kernel.asm	/^c0107f01:	c7 44 24 08 3c 71 11 	movl   $0xc011713c,0x8(%esp)$/;"	l
c0107f08	obj/kernel.asm	/^c0107f08:	c0 $/;"	l
c0107f09	obj/kernel.asm	/^c0107f09:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0107f10	obj/kernel.asm	/^c0107f10:	00 $/;"	l
c0107f11	obj/kernel.asm	/^c0107f11:	c7 04 24 5b 71 11 c0 	movl   $0xc011715b,(%esp)$/;"	l
c0107f18	obj/kernel.asm	/^c0107f18:	e8 ab 8f ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107f1d	obj/kernel.asm	/^c0107f1d:	8b 0d 28 40 15 c0    	mov    0xc0154028,%ecx$/;"	l
c0107f23	obj/kernel.asm	/^c0107f23:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107f26	obj/kernel.asm	/^c0107f26:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0107f29	obj/kernel.asm	/^c0107f29:	89 c2                	mov    %eax,%edx$/;"	l
c0107f2b	obj/kernel.asm	/^c0107f2b:	89 d0                	mov    %edx,%eax$/;"	l
c0107f2d	obj/kernel.asm	/^c0107f2d:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0107f30	obj/kernel.asm	/^c0107f30:	01 d0                	add    %edx,%eax$/;"	l
c0107f32	obj/kernel.asm	/^c0107f32:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0107f35	obj/kernel.asm	/^c0107f35:	01 c8                	add    %ecx,%eax$/;"	l
c0107f37	obj/kernel.asm	/^c0107f37:	c9                   	leave  $/;"	l
c0107f38	obj/kernel.asm	/^c0107f38:	c3                   	ret    $/;"	l
c0107f39	obj/kernel.asm	/^c0107f39 <pde2page>:$/;"	l
c0107f39	obj/kernel.asm	/^c0107f39:	55                   	push   %ebp$/;"	l
c0107f3a	obj/kernel.asm	/^c0107f3a:	89 e5                	mov    %esp,%ebp$/;"	l
c0107f3c	obj/kernel.asm	/^c0107f3c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107f3f	obj/kernel.asm	/^c0107f3f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107f42	obj/kernel.asm	/^c0107f42:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0107f47	obj/kernel.asm	/^c0107f47:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107f4a	obj/kernel.asm	/^c0107f4a:	e8 9b ff ff ff       	call   c0107eea <pa2page>$/;"	l
c0107f4f	obj/kernel.asm	/^c0107f4f:	c9                   	leave  $/;"	l
c0107f50	obj/kernel.asm	/^c0107f50:	c3                   	ret    $/;"	l
c0107f51	obj/kernel.asm	/^c0107f51 <mm_create>:$/;"	l
c0107f51	obj/kernel.asm	/^c0107f51:	55                   	push   %ebp$/;"	l
c0107f52	obj/kernel.asm	/^c0107f52:	89 e5                	mov    %esp,%ebp$/;"	l
c0107f54	obj/kernel.asm	/^c0107f54:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107f57	obj/kernel.asm	/^c0107f57:	c7 04 24 2c 00 00 00 	movl   $0x2c,(%esp)$/;"	l
c0107f5e	obj/kernel.asm	/^c0107f5e:	e8 7c cd ff ff       	call   c0104cdf <kmalloc>$/;"	l
c0107f63	obj/kernel.asm	/^c0107f63:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107f66	obj/kernel.asm	/^c0107f66:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107f6a	obj/kernel.asm	/^c0107f6a:	0f 84 81 00 00 00    	je     c0107ff1 <mm_create+0xa0>$/;"	l
c0107f70	obj/kernel.asm	/^c0107f70:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f73	obj/kernel.asm	/^c0107f73:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107f76	obj/kernel.asm	/^c0107f76:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f79	obj/kernel.asm	/^c0107f79:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107f7c	obj/kernel.asm	/^c0107f7c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107f7f	obj/kernel.asm	/^c0107f7f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f82	obj/kernel.asm	/^c0107f82:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107f85	obj/kernel.asm	/^c0107f85:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f88	obj/kernel.asm	/^c0107f88:	89 10                	mov    %edx,(%eax)$/;"	l
c0107f8a	obj/kernel.asm	/^c0107f8a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f8d	obj/kernel.asm	/^c0107f8d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0107f94	obj/kernel.asm	/^c0107f94:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f97	obj/kernel.asm	/^c0107f97:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0107f9e	obj/kernel.asm	/^c0107f9e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fa1	obj/kernel.asm	/^c0107fa1:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c0107fa8	obj/kernel.asm	/^c0107fa8:	a1 0c 0f 15 c0       	mov    0xc0150f0c,%eax$/;"	l
c0107fad	obj/kernel.asm	/^c0107fad:	85 c0                	test   %eax,%eax$/;"	l
c0107faf	obj/kernel.asm	/^c0107faf:	74 0d                	je     c0107fbe <mm_create+0x6d>$/;"	l
c0107fb1	obj/kernel.asm	/^c0107fb1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fb4	obj/kernel.asm	/^c0107fb4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107fb7	obj/kernel.asm	/^c0107fb7:	e8 46 ef ff ff       	call   c0106f02 <swap_init_mm>$/;"	l
c0107fbc	obj/kernel.asm	/^c0107fbc:	eb 0a                	jmp    c0107fc8 <mm_create+0x77>$/;"	l
c0107fbe	obj/kernel.asm	/^c0107fbe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fc1	obj/kernel.asm	/^c0107fc1:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0107fc8	obj/kernel.asm	/^c0107fc8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0107fcf	obj/kernel.asm	/^c0107fcf:	00 $/;"	l
c0107fd0	obj/kernel.asm	/^c0107fd0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fd3	obj/kernel.asm	/^c0107fd3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107fd6	obj/kernel.asm	/^c0107fd6:	e8 01 ff ff ff       	call   c0107edc <set_mm_count>$/;"	l
c0107fdb	obj/kernel.asm	/^c0107fdb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fde	obj/kernel.asm	/^c0107fde:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0107fe1	obj/kernel.asm	/^c0107fe1:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0107fe8	obj/kernel.asm	/^c0107fe8:	00 $/;"	l
c0107fe9	obj/kernel.asm	/^c0107fe9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107fec	obj/kernel.asm	/^c0107fec:	e8 80 1b 00 00       	call   c0109b71 <sem_init>$/;"	l
c0107ff1	obj/kernel.asm	/^c0107ff1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ff4	obj/kernel.asm	/^c0107ff4:	c9                   	leave  $/;"	l
c0107ff5	obj/kernel.asm	/^c0107ff5:	c3                   	ret    $/;"	l
c0107ff6	obj/kernel.asm	/^c0107ff6 <vma_create>:$/;"	l
c0107ff6	obj/kernel.asm	/^c0107ff6:	55                   	push   %ebp$/;"	l
c0107ff7	obj/kernel.asm	/^c0107ff7:	89 e5                	mov    %esp,%ebp$/;"	l
c0107ff9	obj/kernel.asm	/^c0107ff9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107ffc	obj/kernel.asm	/^c0107ffc:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
c0108003	obj/kernel.asm	/^c0108003:	e8 d7 cc ff ff       	call   c0104cdf <kmalloc>$/;"	l
c0108008	obj/kernel.asm	/^c0108008:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010800b	obj/kernel.asm	/^c010800b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010800f	obj/kernel.asm	/^c010800f:	74 1b                	je     c010802c <vma_create+0x36>$/;"	l
c0108011	obj/kernel.asm	/^c0108011:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108014	obj/kernel.asm	/^c0108014:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108017	obj/kernel.asm	/^c0108017:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010801a	obj/kernel.asm	/^c010801a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010801d	obj/kernel.asm	/^c010801d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108020	obj/kernel.asm	/^c0108020:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0108023	obj/kernel.asm	/^c0108023:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108026	obj/kernel.asm	/^c0108026:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0108029	obj/kernel.asm	/^c0108029:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010802c	obj/kernel.asm	/^c010802c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010802f	obj/kernel.asm	/^c010802f:	c9                   	leave  $/;"	l
c0108030	obj/kernel.asm	/^c0108030:	c3                   	ret    $/;"	l
c0108031	obj/kernel.asm	/^c0108031 <find_vma>:$/;"	l
c0108031	obj/kernel.asm	/^c0108031:	55                   	push   %ebp$/;"	l
c0108032	obj/kernel.asm	/^c0108032:	89 e5                	mov    %esp,%ebp$/;"	l
c0108034	obj/kernel.asm	/^c0108034:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0108037	obj/kernel.asm	/^c0108037:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010803e	obj/kernel.asm	/^c010803e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108042	obj/kernel.asm	/^c0108042:	0f 84 95 00 00 00    	je     c01080dd <find_vma+0xac>$/;"	l
c0108048	obj/kernel.asm	/^c0108048:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010804b	obj/kernel.asm	/^c010804b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010804e	obj/kernel.asm	/^c010804e:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108051	obj/kernel.asm	/^c0108051:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0108055	obj/kernel.asm	/^c0108055:	74 16                	je     c010806d <find_vma+0x3c>$/;"	l
c0108057	obj/kernel.asm	/^c0108057:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010805a	obj/kernel.asm	/^c010805a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010805d	obj/kernel.asm	/^c010805d:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0108060	obj/kernel.asm	/^c0108060:	77 0b                	ja     c010806d <find_vma+0x3c>$/;"	l
c0108062	obj/kernel.asm	/^c0108062:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108065	obj/kernel.asm	/^c0108065:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108068	obj/kernel.asm	/^c0108068:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010806b	obj/kernel.asm	/^c010806b:	77 61                	ja     c01080ce <find_vma+0x9d>$/;"	l
c010806d	obj/kernel.asm	/^c010806d:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c0108074	obj/kernel.asm	/^c0108074:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108077	obj/kernel.asm	/^c0108077:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010807a	obj/kernel.asm	/^c010807a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010807d	obj/kernel.asm	/^c010807d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108080	obj/kernel.asm	/^c0108080:	eb 28                	jmp    c01080aa <find_vma+0x79>$/;"	l
c0108082	obj/kernel.asm	/^c0108082:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108085	obj/kernel.asm	/^c0108085:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108088	obj/kernel.asm	/^c0108088:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010808b	obj/kernel.asm	/^c010808b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010808e	obj/kernel.asm	/^c010808e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108091	obj/kernel.asm	/^c0108091:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0108094	obj/kernel.asm	/^c0108094:	77 14                	ja     c01080aa <find_vma+0x79>$/;"	l
c0108096	obj/kernel.asm	/^c0108096:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108099	obj/kernel.asm	/^c0108099:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010809c	obj/kernel.asm	/^c010809c:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010809f	obj/kernel.asm	/^c010809f:	76 09                	jbe    c01080aa <find_vma+0x79>$/;"	l
c01080a1	obj/kernel.asm	/^c01080a1:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)$/;"	l
c01080a8	obj/kernel.asm	/^c01080a8:	eb 17                	jmp    c01080c1 <find_vma+0x90>$/;"	l
c01080aa	obj/kernel.asm	/^c01080aa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01080ad	obj/kernel.asm	/^c01080ad:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01080b0	obj/kernel.asm	/^c01080b0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01080b3	obj/kernel.asm	/^c01080b3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01080b6	obj/kernel.asm	/^c01080b6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01080b9	obj/kernel.asm	/^c01080b9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01080bc	obj/kernel.asm	/^c01080bc:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01080bf	obj/kernel.asm	/^c01080bf:	75 c1                	jne    c0108082 <find_vma+0x51>$/;"	l
c01080c1	obj/kernel.asm	/^c01080c1:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)$/;"	l
c01080c5	obj/kernel.asm	/^c01080c5:	75 07                	jne    c01080ce <find_vma+0x9d>$/;"	l
c01080c7	obj/kernel.asm	/^c01080c7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01080ce	obj/kernel.asm	/^c01080ce:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c01080d2	obj/kernel.asm	/^c01080d2:	74 09                	je     c01080dd <find_vma+0xac>$/;"	l
c01080d4	obj/kernel.asm	/^c01080d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01080d7	obj/kernel.asm	/^c01080d7:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01080da	obj/kernel.asm	/^c01080da:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01080dd	obj/kernel.asm	/^c01080dd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01080e0	obj/kernel.asm	/^c01080e0:	c9                   	leave  $/;"	l
c01080e1	obj/kernel.asm	/^c01080e1:	c3                   	ret    $/;"	l
c01080e2	obj/kernel.asm	/^c01080e2 <check_vma_overlap>:$/;"	l
c01080e2	obj/kernel.asm	/^c01080e2:	55                   	push   %ebp$/;"	l
c01080e3	obj/kernel.asm	/^c01080e3:	89 e5                	mov    %esp,%ebp$/;"	l
c01080e5	obj/kernel.asm	/^c01080e5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01080e8	obj/kernel.asm	/^c01080e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01080eb	obj/kernel.asm	/^c01080eb:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01080ee	obj/kernel.asm	/^c01080ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01080f1	obj/kernel.asm	/^c01080f1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01080f4	obj/kernel.asm	/^c01080f4:	39 c2                	cmp    %eax,%edx$/;"	l
c01080f6	obj/kernel.asm	/^c01080f6:	72 24                	jb     c010811c <check_vma_overlap+0x3a>$/;"	l
c01080f8	obj/kernel.asm	/^c01080f8:	c7 44 24 0c 69 71 11 	movl   $0xc0117169,0xc(%esp)$/;"	l
c01080ff	obj/kernel.asm	/^c01080ff:	c0 $/;"	l
c0108100	obj/kernel.asm	/^c0108100:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108107	obj/kernel.asm	/^c0108107:	c0 $/;"	l
c0108108	obj/kernel.asm	/^c0108108:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)$/;"	l
c010810f	obj/kernel.asm	/^c010810f:	00 $/;"	l
c0108110	obj/kernel.asm	/^c0108110:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108117	obj/kernel.asm	/^c0108117:	e8 ac 8d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010811c	obj/kernel.asm	/^c010811c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010811f	obj/kernel.asm	/^c010811f:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0108122	obj/kernel.asm	/^c0108122:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108125	obj/kernel.asm	/^c0108125:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108128	obj/kernel.asm	/^c0108128:	39 c2                	cmp    %eax,%edx$/;"	l
c010812a	obj/kernel.asm	/^c010812a:	76 24                	jbe    c0108150 <check_vma_overlap+0x6e>$/;"	l
c010812c	obj/kernel.asm	/^c010812c:	c7 44 24 0c ac 71 11 	movl   $0xc01171ac,0xc(%esp)$/;"	l
c0108133	obj/kernel.asm	/^c0108133:	c0 $/;"	l
c0108134	obj/kernel.asm	/^c0108134:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c010813b	obj/kernel.asm	/^c010813b:	c0 $/;"	l
c010813c	obj/kernel.asm	/^c010813c:	c7 44 24 04 6c 00 00 	movl   $0x6c,0x4(%esp)$/;"	l
c0108143	obj/kernel.asm	/^c0108143:	00 $/;"	l
c0108144	obj/kernel.asm	/^c0108144:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c010814b	obj/kernel.asm	/^c010814b:	e8 78 8d ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108150	obj/kernel.asm	/^c0108150:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108153	obj/kernel.asm	/^c0108153:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108156	obj/kernel.asm	/^c0108156:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108159	obj/kernel.asm	/^c0108159:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010815c	obj/kernel.asm	/^c010815c:	39 c2                	cmp    %eax,%edx$/;"	l
c010815e	obj/kernel.asm	/^c010815e:	72 24                	jb     c0108184 <check_vma_overlap+0xa2>$/;"	l
c0108160	obj/kernel.asm	/^c0108160:	c7 44 24 0c cb 71 11 	movl   $0xc01171cb,0xc(%esp)$/;"	l
c0108167	obj/kernel.asm	/^c0108167:	c0 $/;"	l
c0108168	obj/kernel.asm	/^c0108168:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c010816f	obj/kernel.asm	/^c010816f:	c0 $/;"	l
c0108170	obj/kernel.asm	/^c0108170:	c7 44 24 04 6d 00 00 	movl   $0x6d,0x4(%esp)$/;"	l
c0108177	obj/kernel.asm	/^c0108177:	00 $/;"	l
c0108178	obj/kernel.asm	/^c0108178:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c010817f	obj/kernel.asm	/^c010817f:	e8 44 8d ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108184	obj/kernel.asm	/^c0108184:	c9                   	leave  $/;"	l
c0108185	obj/kernel.asm	/^c0108185:	c3                   	ret    $/;"	l
c0108186	obj/kernel.asm	/^c0108186 <insert_vma_struct>:$/;"	l
c0108186	obj/kernel.asm	/^c0108186:	55                   	push   %ebp$/;"	l
c0108187	obj/kernel.asm	/^c0108187:	89 e5                	mov    %esp,%ebp$/;"	l
c0108189	obj/kernel.asm	/^c0108189:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010818c	obj/kernel.asm	/^c010818c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010818f	obj/kernel.asm	/^c010818f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108192	obj/kernel.asm	/^c0108192:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108195	obj/kernel.asm	/^c0108195:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108198	obj/kernel.asm	/^c0108198:	39 c2                	cmp    %eax,%edx$/;"	l
c010819a	obj/kernel.asm	/^c010819a:	72 24                	jb     c01081c0 <insert_vma_struct+0x3a>$/;"	l
c010819c	obj/kernel.asm	/^c010819c:	c7 44 24 0c e9 71 11 	movl   $0xc01171e9,0xc(%esp)$/;"	l
c01081a3	obj/kernel.asm	/^c01081a3:	c0 $/;"	l
c01081a4	obj/kernel.asm	/^c01081a4:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c01081ab	obj/kernel.asm	/^c01081ab:	c0 $/;"	l
c01081ac	obj/kernel.asm	/^c01081ac:	c7 44 24 04 74 00 00 	movl   $0x74,0x4(%esp)$/;"	l
c01081b3	obj/kernel.asm	/^c01081b3:	00 $/;"	l
c01081b4	obj/kernel.asm	/^c01081b4:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c01081bb	obj/kernel.asm	/^c01081bb:	e8 08 8d ff ff       	call   c0100ec8 <__panic>$/;"	l
c01081c0	obj/kernel.asm	/^c01081c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01081c3	obj/kernel.asm	/^c01081c3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01081c6	obj/kernel.asm	/^c01081c6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01081c9	obj/kernel.asm	/^c01081c9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01081cc	obj/kernel.asm	/^c01081cc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01081cf	obj/kernel.asm	/^c01081cf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01081d2	obj/kernel.asm	/^c01081d2:	eb 21                	jmp    c01081f5 <insert_vma_struct+0x6f>$/;"	l
c01081d4	obj/kernel.asm	/^c01081d4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01081d7	obj/kernel.asm	/^c01081d7:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01081da	obj/kernel.asm	/^c01081da:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01081dd	obj/kernel.asm	/^c01081dd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01081e0	obj/kernel.asm	/^c01081e0:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01081e3	obj/kernel.asm	/^c01081e3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01081e6	obj/kernel.asm	/^c01081e6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01081e9	obj/kernel.asm	/^c01081e9:	39 c2                	cmp    %eax,%edx$/;"	l
c01081eb	obj/kernel.asm	/^c01081eb:	76 02                	jbe    c01081ef <insert_vma_struct+0x69>$/;"	l
c01081ed	obj/kernel.asm	/^c01081ed:	eb 1d                	jmp    c010820c <insert_vma_struct+0x86>$/;"	l
c01081ef	obj/kernel.asm	/^c01081ef:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01081f2	obj/kernel.asm	/^c01081f2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01081f5	obj/kernel.asm	/^c01081f5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01081f8	obj/kernel.asm	/^c01081f8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01081fb	obj/kernel.asm	/^c01081fb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01081fe	obj/kernel.asm	/^c01081fe:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108201	obj/kernel.asm	/^c0108201:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108204	obj/kernel.asm	/^c0108204:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108207	obj/kernel.asm	/^c0108207:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010820a	obj/kernel.asm	/^c010820a:	75 c8                	jne    c01081d4 <insert_vma_struct+0x4e>$/;"	l
c010820c	obj/kernel.asm	/^c010820c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010820f	obj/kernel.asm	/^c010820f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0108212	obj/kernel.asm	/^c0108212:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108215	obj/kernel.asm	/^c0108215:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108218	obj/kernel.asm	/^c0108218:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010821b	obj/kernel.asm	/^c010821b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010821e	obj/kernel.asm	/^c010821e:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108221	obj/kernel.asm	/^c0108221:	74 15                	je     c0108238 <insert_vma_struct+0xb2>$/;"	l
c0108223	obj/kernel.asm	/^c0108223:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108226	obj/kernel.asm	/^c0108226:	8d 50 f0             	lea    -0x10(%eax),%edx$/;"	l
c0108229	obj/kernel.asm	/^c0108229:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010822c	obj/kernel.asm	/^c010822c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108230	obj/kernel.asm	/^c0108230:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0108233	obj/kernel.asm	/^c0108233:	e8 aa fe ff ff       	call   c01080e2 <check_vma_overlap>$/;"	l
c0108238	obj/kernel.asm	/^c0108238:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010823b	obj/kernel.asm	/^c010823b:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010823e	obj/kernel.asm	/^c010823e:	74 15                	je     c0108255 <insert_vma_struct+0xcf>$/;"	l
c0108240	obj/kernel.asm	/^c0108240:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108243	obj/kernel.asm	/^c0108243:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108246	obj/kernel.asm	/^c0108246:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010824a	obj/kernel.asm	/^c010824a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010824d	obj/kernel.asm	/^c010824d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108250	obj/kernel.asm	/^c0108250:	e8 8d fe ff ff       	call   c01080e2 <check_vma_overlap>$/;"	l
c0108255	obj/kernel.asm	/^c0108255:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108258	obj/kernel.asm	/^c0108258:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010825b	obj/kernel.asm	/^c010825b:	89 10                	mov    %edx,(%eax)$/;"	l
c010825d	obj/kernel.asm	/^c010825d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108260	obj/kernel.asm	/^c0108260:	8d 50 10             	lea    0x10(%eax),%edx$/;"	l
c0108263	obj/kernel.asm	/^c0108263:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108266	obj/kernel.asm	/^c0108266:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0108269	obj/kernel.asm	/^c0108269:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010826c	obj/kernel.asm	/^c010826c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010826f	obj/kernel.asm	/^c010826f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108272	obj/kernel.asm	/^c0108272:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0108275	obj/kernel.asm	/^c0108275:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
c0108278	obj/kernel.asm	/^c0108278:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010827b	obj/kernel.asm	/^c010827b:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c010827e	obj/kernel.asm	/^c010827e:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0108281	obj/kernel.asm	/^c0108281:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0108284	obj/kernel.asm	/^c0108284:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0108287	obj/kernel.asm	/^c0108287:	89 10                	mov    %edx,(%eax)$/;"	l
c0108289	obj/kernel.asm	/^c0108289:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010828c	obj/kernel.asm	/^c010828c:	8b 10                	mov    (%eax),%edx$/;"	l
c010828e	obj/kernel.asm	/^c010828e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0108291	obj/kernel.asm	/^c0108291:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108294	obj/kernel.asm	/^c0108294:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0108297	obj/kernel.asm	/^c0108297:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c010829a	obj/kernel.asm	/^c010829a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010829d	obj/kernel.asm	/^c010829d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01082a0	obj/kernel.asm	/^c01082a0:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01082a3	obj/kernel.asm	/^c01082a3:	89 10                	mov    %edx,(%eax)$/;"	l
c01082a5	obj/kernel.asm	/^c01082a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01082a8	obj/kernel.asm	/^c01082a8:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01082ab	obj/kernel.asm	/^c01082ab:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01082ae	obj/kernel.asm	/^c01082ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01082b1	obj/kernel.asm	/^c01082b1:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01082b4	obj/kernel.asm	/^c01082b4:	c9                   	leave  $/;"	l
c01082b5	obj/kernel.asm	/^c01082b5:	c3                   	ret    $/;"	l
c01082b6	obj/kernel.asm	/^c01082b6 <mm_destroy>:$/;"	l
c01082b6	obj/kernel.asm	/^c01082b6:	55                   	push   %ebp$/;"	l
c01082b7	obj/kernel.asm	/^c01082b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01082b9	obj/kernel.asm	/^c01082b9:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01082bc	obj/kernel.asm	/^c01082bc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01082bf	obj/kernel.asm	/^c01082bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01082c2	obj/kernel.asm	/^c01082c2:	e8 0a fc ff ff       	call   c0107ed1 <mm_count>$/;"	l
c01082c7	obj/kernel.asm	/^c01082c7:	85 c0                	test   %eax,%eax$/;"	l
c01082c9	obj/kernel.asm	/^c01082c9:	74 24                	je     c01082ef <mm_destroy+0x39>$/;"	l
c01082cb	obj/kernel.asm	/^c01082cb:	c7 44 24 0c 05 72 11 	movl   $0xc0117205,0xc(%esp)$/;"	l
c01082d2	obj/kernel.asm	/^c01082d2:	c0 $/;"	l
c01082d3	obj/kernel.asm	/^c01082d3:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c01082da	obj/kernel.asm	/^c01082da:	c0 $/;"	l
c01082db	obj/kernel.asm	/^c01082db:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
c01082e2	obj/kernel.asm	/^c01082e2:	00 $/;"	l
c01082e3	obj/kernel.asm	/^c01082e3:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c01082ea	obj/kernel.asm	/^c01082ea:	e8 d9 8b ff ff       	call   c0100ec8 <__panic>$/;"	l
c01082ef	obj/kernel.asm	/^c01082ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01082f2	obj/kernel.asm	/^c01082f2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01082f5	obj/kernel.asm	/^c01082f5:	eb 36                	jmp    c010832d <mm_destroy+0x77>$/;"	l
c01082f7	obj/kernel.asm	/^c01082f7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01082fa	obj/kernel.asm	/^c01082fa:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01082fd	obj/kernel.asm	/^c01082fd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108300	obj/kernel.asm	/^c0108300:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108303	obj/kernel.asm	/^c0108303:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0108306	obj/kernel.asm	/^c0108306:	8b 12                	mov    (%edx),%edx$/;"	l
c0108308	obj/kernel.asm	/^c0108308:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010830b	obj/kernel.asm	/^c010830b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010830e	obj/kernel.asm	/^c010830e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108311	obj/kernel.asm	/^c0108311:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0108314	obj/kernel.asm	/^c0108314:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108317	obj/kernel.asm	/^c0108317:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010831a	obj/kernel.asm	/^c010831a:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010831d	obj/kernel.asm	/^c010831d:	89 10                	mov    %edx,(%eax)$/;"	l
c010831f	obj/kernel.asm	/^c010831f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108322	obj/kernel.asm	/^c0108322:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108325	obj/kernel.asm	/^c0108325:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108328	obj/kernel.asm	/^c0108328:	e8 cd c9 ff ff       	call   c0104cfa <kfree>$/;"	l
c010832d	obj/kernel.asm	/^c010832d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108330	obj/kernel.asm	/^c0108330:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108333	obj/kernel.asm	/^c0108333:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108336	obj/kernel.asm	/^c0108336:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108339	obj/kernel.asm	/^c0108339:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010833c	obj/kernel.asm	/^c010833c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010833f	obj/kernel.asm	/^c010833f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0108342	obj/kernel.asm	/^c0108342:	75 b3                	jne    c01082f7 <mm_destroy+0x41>$/;"	l
c0108344	obj/kernel.asm	/^c0108344:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108347	obj/kernel.asm	/^c0108347:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010834a	obj/kernel.asm	/^c010834a:	e8 ab c9 ff ff       	call   c0104cfa <kfree>$/;"	l
c010834f	obj/kernel.asm	/^c010834f:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c0108356	obj/kernel.asm	/^c0108356:	c9                   	leave  $/;"	l
c0108357	obj/kernel.asm	/^c0108357:	c3                   	ret    $/;"	l
c0108358	obj/kernel.asm	/^c0108358 <mm_map>:$/;"	l
c0108358	obj/kernel.asm	/^c0108358:	55                   	push   %ebp$/;"	l
c0108359	obj/kernel.asm	/^c0108359:	89 e5                	mov    %esp,%ebp$/;"	l
c010835b	obj/kernel.asm	/^c010835b:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010835e	obj/kernel.asm	/^c010835e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108361	obj/kernel.asm	/^c0108361:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108364	obj/kernel.asm	/^c0108364:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108367	obj/kernel.asm	/^c0108367:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010836c	obj/kernel.asm	/^c010836c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010836f	obj/kernel.asm	/^c010836f:	c7 45 e8 00 10 00 00 	movl   $0x1000,-0x18(%ebp)$/;"	l
c0108376	obj/kernel.asm	/^c0108376:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108379	obj/kernel.asm	/^c0108379:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010837c	obj/kernel.asm	/^c010837c:	01 c2                	add    %eax,%edx$/;"	l
c010837e	obj/kernel.asm	/^c010837e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108381	obj/kernel.asm	/^c0108381:	01 d0                	add    %edx,%eax$/;"	l
c0108383	obj/kernel.asm	/^c0108383:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0108386	obj/kernel.asm	/^c0108386:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108389	obj/kernel.asm	/^c0108389:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010838c	obj/kernel.asm	/^c010838c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0108391	obj/kernel.asm	/^c0108391:	f7 75 e8             	divl   -0x18(%ebp)$/;"	l
c0108394	obj/kernel.asm	/^c0108394:	89 d0                	mov    %edx,%eax$/;"	l
c0108396	obj/kernel.asm	/^c0108396:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0108399	obj/kernel.asm	/^c0108399:	29 c2                	sub    %eax,%edx$/;"	l
c010839b	obj/kernel.asm	/^c010839b:	89 d0                	mov    %edx,%eax$/;"	l
c010839d	obj/kernel.asm	/^c010839d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01083a0	obj/kernel.asm	/^c01083a0:	81 7d ec ff ff 1f 00 	cmpl   $0x1fffff,-0x14(%ebp)$/;"	l
c01083a7	obj/kernel.asm	/^c01083a7:	76 11                	jbe    c01083ba <mm_map+0x62>$/;"	l
c01083a9	obj/kernel.asm	/^c01083a9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01083ac	obj/kernel.asm	/^c01083ac:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c01083af	obj/kernel.asm	/^c01083af:	73 09                	jae    c01083ba <mm_map+0x62>$/;"	l
c01083b1	obj/kernel.asm	/^c01083b1:	81 7d e0 00 00 00 b0 	cmpl   $0xb0000000,-0x20(%ebp)$/;"	l
c01083b8	obj/kernel.asm	/^c01083b8:	76 0a                	jbe    c01083c4 <mm_map+0x6c>$/;"	l
c01083ba	obj/kernel.asm	/^c01083ba:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01083bf	obj/kernel.asm	/^c01083bf:	e9 ae 00 00 00       	jmp    c0108472 <mm_map+0x11a>$/;"	l
c01083c4	obj/kernel.asm	/^c01083c4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01083c8	obj/kernel.asm	/^c01083c8:	75 24                	jne    c01083ee <mm_map+0x96>$/;"	l
c01083ca	obj/kernel.asm	/^c01083ca:	c7 44 24 0c 17 72 11 	movl   $0xc0117217,0xc(%esp)$/;"	l
c01083d1	obj/kernel.asm	/^c01083d1:	c0 $/;"	l
c01083d2	obj/kernel.asm	/^c01083d2:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c01083d9	obj/kernel.asm	/^c01083d9:	c0 $/;"	l
c01083da	obj/kernel.asm	/^c01083da:	c7 44 24 04 a7 00 00 	movl   $0xa7,0x4(%esp)$/;"	l
c01083e1	obj/kernel.asm	/^c01083e1:	00 $/;"	l
c01083e2	obj/kernel.asm	/^c01083e2:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c01083e9	obj/kernel.asm	/^c01083e9:	e8 da 8a ff ff       	call   c0100ec8 <__panic>$/;"	l
c01083ee	obj/kernel.asm	/^c01083ee:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c01083f5	obj/kernel.asm	/^c01083f5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01083f8	obj/kernel.asm	/^c01083f8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01083fc	obj/kernel.asm	/^c01083fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01083ff	obj/kernel.asm	/^c01083ff:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108402	obj/kernel.asm	/^c0108402:	e8 2a fc ff ff       	call   c0108031 <find_vma>$/;"	l
c0108407	obj/kernel.asm	/^c0108407:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010840a	obj/kernel.asm	/^c010840a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010840e	obj/kernel.asm	/^c010840e:	74 0d                	je     c010841d <mm_map+0xc5>$/;"	l
c0108410	obj/kernel.asm	/^c0108410:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108413	obj/kernel.asm	/^c0108413:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108416	obj/kernel.asm	/^c0108416:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0108419	obj/kernel.asm	/^c0108419:	73 02                	jae    c010841d <mm_map+0xc5>$/;"	l
c010841b	obj/kernel.asm	/^c010841b:	eb 52                	jmp    c010846f <mm_map+0x117>$/;"	l
c010841d	obj/kernel.asm	/^c010841d:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0108424	obj/kernel.asm	/^c0108424:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0108427	obj/kernel.asm	/^c0108427:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010842b	obj/kernel.asm	/^c010842b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010842e	obj/kernel.asm	/^c010842e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108432	obj/kernel.asm	/^c0108432:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108435	obj/kernel.asm	/^c0108435:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108438	obj/kernel.asm	/^c0108438:	e8 b9 fb ff ff       	call   c0107ff6 <vma_create>$/;"	l
c010843d	obj/kernel.asm	/^c010843d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0108440	obj/kernel.asm	/^c0108440:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0108444	obj/kernel.asm	/^c0108444:	75 02                	jne    c0108448 <mm_map+0xf0>$/;"	l
c0108446	obj/kernel.asm	/^c0108446:	eb 27                	jmp    c010846f <mm_map+0x117>$/;"	l
c0108448	obj/kernel.asm	/^c0108448:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010844b	obj/kernel.asm	/^c010844b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010844f	obj/kernel.asm	/^c010844f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108452	obj/kernel.asm	/^c0108452:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108455	obj/kernel.asm	/^c0108455:	e8 2c fd ff ff       	call   c0108186 <insert_vma_struct>$/;"	l
c010845a	obj/kernel.asm	/^c010845a:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c010845e	obj/kernel.asm	/^c010845e:	74 08                	je     c0108468 <mm_map+0x110>$/;"	l
c0108460	obj/kernel.asm	/^c0108460:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0108463	obj/kernel.asm	/^c0108463:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0108466	obj/kernel.asm	/^c0108466:	89 10                	mov    %edx,(%eax)$/;"	l
c0108468	obj/kernel.asm	/^c0108468:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010846f	obj/kernel.asm	/^c010846f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108472	obj/kernel.asm	/^c0108472:	c9                   	leave  $/;"	l
c0108473	obj/kernel.asm	/^c0108473:	c3                   	ret    $/;"	l
c0108474	obj/kernel.asm	/^c0108474 <dup_mmap>:$/;"	l
c0108474	obj/kernel.asm	/^c0108474:	55                   	push   %ebp$/;"	l
c0108475	obj/kernel.asm	/^c0108475:	89 e5                	mov    %esp,%ebp$/;"	l
c0108477	obj/kernel.asm	/^c0108477:	56                   	push   %esi$/;"	l
c0108478	obj/kernel.asm	/^c0108478:	53                   	push   %ebx$/;"	l
c0108479	obj/kernel.asm	/^c0108479:	83 ec 40             	sub    $0x40,%esp$/;"	l
c010847c	obj/kernel.asm	/^c010847c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108480	obj/kernel.asm	/^c0108480:	74 06                	je     c0108488 <dup_mmap+0x14>$/;"	l
c0108482	obj/kernel.asm	/^c0108482:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0108486	obj/kernel.asm	/^c0108486:	75 24                	jne    c01084ac <dup_mmap+0x38>$/;"	l
c0108488	obj/kernel.asm	/^c0108488:	c7 44 24 0c 22 72 11 	movl   $0xc0117222,0xc(%esp)$/;"	l
c010848f	obj/kernel.asm	/^c010848f:	c0 $/;"	l
c0108490	obj/kernel.asm	/^c0108490:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108497	obj/kernel.asm	/^c0108497:	c0 $/;"	l
c0108498	obj/kernel.asm	/^c0108498:	c7 44 24 04 c0 00 00 	movl   $0xc0,0x4(%esp)$/;"	l
c010849f	obj/kernel.asm	/^c010849f:	00 $/;"	l
c01084a0	obj/kernel.asm	/^c01084a0:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c01084a7	obj/kernel.asm	/^c01084a7:	e8 1c 8a ff ff       	call   c0100ec8 <__panic>$/;"	l
c01084ac	obj/kernel.asm	/^c01084ac:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01084af	obj/kernel.asm	/^c01084af:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01084b2	obj/kernel.asm	/^c01084b2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01084b5	obj/kernel.asm	/^c01084b5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01084b8	obj/kernel.asm	/^c01084b8:	e9 92 00 00 00       	jmp    c010854f <dup_mmap+0xdb>$/;"	l
c01084bd	obj/kernel.asm	/^c01084bd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01084c0	obj/kernel.asm	/^c01084c0:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01084c3	obj/kernel.asm	/^c01084c3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01084c6	obj/kernel.asm	/^c01084c6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01084c9	obj/kernel.asm	/^c01084c9:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c01084cc	obj/kernel.asm	/^c01084cc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01084cf	obj/kernel.asm	/^c01084cf:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01084d2	obj/kernel.asm	/^c01084d2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01084d5	obj/kernel.asm	/^c01084d5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01084d8	obj/kernel.asm	/^c01084d8:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c01084dc	obj/kernel.asm	/^c01084dc:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01084e0	obj/kernel.asm	/^c01084e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01084e3	obj/kernel.asm	/^c01084e3:	e8 0e fb ff ff       	call   c0107ff6 <vma_create>$/;"	l
c01084e8	obj/kernel.asm	/^c01084e8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01084eb	obj/kernel.asm	/^c01084eb:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01084ef	obj/kernel.asm	/^c01084ef:	75 07                	jne    c01084f8 <dup_mmap+0x84>$/;"	l
c01084f1	obj/kernel.asm	/^c01084f1:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01084f6	obj/kernel.asm	/^c01084f6:	eb 76                	jmp    c010856e <dup_mmap+0xfa>$/;"	l
c01084f8	obj/kernel.asm	/^c01084f8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01084fb	obj/kernel.asm	/^c01084fb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01084ff	obj/kernel.asm	/^c01084ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108502	obj/kernel.asm	/^c0108502:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108505	obj/kernel.asm	/^c0108505:	e8 7c fc ff ff       	call   c0108186 <insert_vma_struct>$/;"	l
c010850a	obj/kernel.asm	/^c010850a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0108511	obj/kernel.asm	/^c0108511:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108514	obj/kernel.asm	/^c0108514:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c0108517	obj/kernel.asm	/^c0108517:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010851a	obj/kernel.asm	/^c010851a:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c010851d	obj/kernel.asm	/^c010851d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108520	obj/kernel.asm	/^c0108520:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c0108523	obj/kernel.asm	/^c0108523:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108526	obj/kernel.asm	/^c0108526:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108529	obj/kernel.asm	/^c0108529:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
c010852c	obj/kernel.asm	/^c010852c:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c0108530	obj/kernel.asm	/^c0108530:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0108534	obj/kernel.asm	/^c0108534:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0108538	obj/kernel.asm	/^c0108538:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010853c	obj/kernel.asm	/^c010853c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010853f	obj/kernel.asm	/^c010853f:	e8 84 d7 ff ff       	call   c0105cc8 <copy_range>$/;"	l
c0108544	obj/kernel.asm	/^c0108544:	85 c0                	test   %eax,%eax$/;"	l
c0108546	obj/kernel.asm	/^c0108546:	74 07                	je     c010854f <dup_mmap+0xdb>$/;"	l
c0108548	obj/kernel.asm	/^c0108548:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010854d	obj/kernel.asm	/^c010854d:	eb 1f                	jmp    c010856e <dup_mmap+0xfa>$/;"	l
c010854f	obj/kernel.asm	/^c010854f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108552	obj/kernel.asm	/^c0108552:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108555	obj/kernel.asm	/^c0108555:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108558	obj/kernel.asm	/^c0108558:	8b 00                	mov    (%eax),%eax$/;"	l
c010855a	obj/kernel.asm	/^c010855a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010855d	obj/kernel.asm	/^c010855d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108560	obj/kernel.asm	/^c0108560:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0108563	obj/kernel.asm	/^c0108563:	0f 85 54 ff ff ff    	jne    c01084bd <dup_mmap+0x49>$/;"	l
c0108569	obj/kernel.asm	/^c0108569:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010856e	obj/kernel.asm	/^c010856e:	83 c4 40             	add    $0x40,%esp$/;"	l
c0108571	obj/kernel.asm	/^c0108571:	5b                   	pop    %ebx$/;"	l
c0108572	obj/kernel.asm	/^c0108572:	5e                   	pop    %esi$/;"	l
c0108573	obj/kernel.asm	/^c0108573:	5d                   	pop    %ebp$/;"	l
c0108574	obj/kernel.asm	/^c0108574:	c3                   	ret    $/;"	l
c0108575	obj/kernel.asm	/^c0108575 <exit_mmap>:$/;"	l
c0108575	obj/kernel.asm	/^c0108575:	55                   	push   %ebp$/;"	l
c0108576	obj/kernel.asm	/^c0108576:	89 e5                	mov    %esp,%ebp$/;"	l
c0108578	obj/kernel.asm	/^c0108578:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010857b	obj/kernel.asm	/^c010857b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010857f	obj/kernel.asm	/^c010857f:	74 0f                	je     c0108590 <exit_mmap+0x1b>$/;"	l
c0108581	obj/kernel.asm	/^c0108581:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108584	obj/kernel.asm	/^c0108584:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108587	obj/kernel.asm	/^c0108587:	e8 45 f9 ff ff       	call   c0107ed1 <mm_count>$/;"	l
c010858c	obj/kernel.asm	/^c010858c:	85 c0                	test   %eax,%eax$/;"	l
c010858e	obj/kernel.asm	/^c010858e:	74 24                	je     c01085b4 <exit_mmap+0x3f>$/;"	l
c0108590	obj/kernel.asm	/^c0108590:	c7 44 24 0c 40 72 11 	movl   $0xc0117240,0xc(%esp)$/;"	l
c0108597	obj/kernel.asm	/^c0108597:	c0 $/;"	l
c0108598	obj/kernel.asm	/^c0108598:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c010859f	obj/kernel.asm	/^c010859f:	c0 $/;"	l
c01085a0	obj/kernel.asm	/^c01085a0:	c7 44 24 04 d6 00 00 	movl   $0xd6,0x4(%esp)$/;"	l
c01085a7	obj/kernel.asm	/^c01085a7:	00 $/;"	l
c01085a8	obj/kernel.asm	/^c01085a8:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c01085af	obj/kernel.asm	/^c01085af:	e8 14 89 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01085b4	obj/kernel.asm	/^c01085b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01085b7	obj/kernel.asm	/^c01085b7:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01085ba	obj/kernel.asm	/^c01085ba:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01085bd	obj/kernel.asm	/^c01085bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01085c0	obj/kernel.asm	/^c01085c0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01085c3	obj/kernel.asm	/^c01085c3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01085c6	obj/kernel.asm	/^c01085c6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01085c9	obj/kernel.asm	/^c01085c9:	eb 28                	jmp    c01085f3 <exit_mmap+0x7e>$/;"	l
c01085cb	obj/kernel.asm	/^c01085cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01085ce	obj/kernel.asm	/^c01085ce:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01085d1	obj/kernel.asm	/^c01085d1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01085d4	obj/kernel.asm	/^c01085d4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01085d7	obj/kernel.asm	/^c01085d7:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01085da	obj/kernel.asm	/^c01085da:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01085dd	obj/kernel.asm	/^c01085dd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01085e0	obj/kernel.asm	/^c01085e0:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01085e4	obj/kernel.asm	/^c01085e4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01085e8	obj/kernel.asm	/^c01085e8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01085eb	obj/kernel.asm	/^c01085eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01085ee	obj/kernel.asm	/^c01085ee:	e8 da d4 ff ff       	call   c0105acd <unmap_range>$/;"	l
c01085f3	obj/kernel.asm	/^c01085f3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01085f6	obj/kernel.asm	/^c01085f6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01085f9	obj/kernel.asm	/^c01085f9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01085fc	obj/kernel.asm	/^c01085fc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01085ff	obj/kernel.asm	/^c01085ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108602	obj/kernel.asm	/^c0108602:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108605	obj/kernel.asm	/^c0108605:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108608	obj/kernel.asm	/^c0108608:	75 c1                	jne    c01085cb <exit_mmap+0x56>$/;"	l
c010860a	obj/kernel.asm	/^c010860a:	eb 28                	jmp    c0108634 <exit_mmap+0xbf>$/;"	l
c010860c	obj/kernel.asm	/^c010860c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010860f	obj/kernel.asm	/^c010860f:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108612	obj/kernel.asm	/^c0108612:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108615	obj/kernel.asm	/^c0108615:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108618	obj/kernel.asm	/^c0108618:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010861b	obj/kernel.asm	/^c010861b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010861e	obj/kernel.asm	/^c010861e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108621	obj/kernel.asm	/^c0108621:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0108625	obj/kernel.asm	/^c0108625:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108629	obj/kernel.asm	/^c0108629:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010862c	obj/kernel.asm	/^c010862c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010862f	obj/kernel.asm	/^c010862f:	e8 8d d5 ff ff       	call   c0105bc1 <exit_range>$/;"	l
c0108634	obj/kernel.asm	/^c0108634:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108637	obj/kernel.asm	/^c0108637:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010863a	obj/kernel.asm	/^c010863a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010863d	obj/kernel.asm	/^c010863d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108640	obj/kernel.asm	/^c0108640:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108643	obj/kernel.asm	/^c0108643:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108646	obj/kernel.asm	/^c0108646:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108649	obj/kernel.asm	/^c0108649:	75 c1                	jne    c010860c <exit_mmap+0x97>$/;"	l
c010864b	obj/kernel.asm	/^c010864b:	c9                   	leave  $/;"	l
c010864c	obj/kernel.asm	/^c010864c:	c3                   	ret    $/;"	l
c010864d	obj/kernel.asm	/^c010864d <copy_from_user>:$/;"	l
c010864d	obj/kernel.asm	/^c010864d:	55                   	push   %ebp$/;"	l
c010864e	obj/kernel.asm	/^c010864e:	89 e5                	mov    %esp,%ebp$/;"	l
c0108650	obj/kernel.asm	/^c0108650:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108653	obj/kernel.asm	/^c0108653:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108656	obj/kernel.asm	/^c0108656:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c0108659	obj/kernel.asm	/^c0108659:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010865d	obj/kernel.asm	/^c010865d:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0108660	obj/kernel.asm	/^c0108660:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0108664	obj/kernel.asm	/^c0108664:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108668	obj/kernel.asm	/^c0108668:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010866b	obj/kernel.asm	/^c010866b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010866e	obj/kernel.asm	/^c010866e:	e8 dc 09 00 00       	call   c010904f <user_mem_check>$/;"	l
c0108673	obj/kernel.asm	/^c0108673:	85 c0                	test   %eax,%eax$/;"	l
c0108675	obj/kernel.asm	/^c0108675:	75 07                	jne    c010867e <copy_from_user+0x31>$/;"	l
c0108677	obj/kernel.asm	/^c0108677:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010867c	obj/kernel.asm	/^c010867c:	eb 1e                	jmp    c010869c <copy_from_user+0x4f>$/;"	l
c010867e	obj/kernel.asm	/^c010867e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0108681	obj/kernel.asm	/^c0108681:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108685	obj/kernel.asm	/^c0108685:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108688	obj/kernel.asm	/^c0108688:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010868c	obj/kernel.asm	/^c010868c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010868f	obj/kernel.asm	/^c010868f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108692	obj/kernel.asm	/^c0108692:	e8 bb cf 00 00       	call   c0115652 <memcpy>$/;"	l
c0108697	obj/kernel.asm	/^c0108697:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010869c	obj/kernel.asm	/^c010869c:	c9                   	leave  $/;"	l
c010869d	obj/kernel.asm	/^c010869d:	c3                   	ret    $/;"	l
c010869e	obj/kernel.asm	/^c010869e <copy_to_user>:$/;"	l
c010869e	obj/kernel.asm	/^c010869e:	55                   	push   %ebp$/;"	l
c010869f	obj/kernel.asm	/^c010869f:	89 e5                	mov    %esp,%ebp$/;"	l
c01086a1	obj/kernel.asm	/^c01086a1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01086a4	obj/kernel.asm	/^c01086a4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01086a7	obj/kernel.asm	/^c01086a7:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c01086ae	obj/kernel.asm	/^c01086ae:	00 $/;"	l
c01086af	obj/kernel.asm	/^c01086af:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c01086b2	obj/kernel.asm	/^c01086b2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01086b6	obj/kernel.asm	/^c01086b6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01086ba	obj/kernel.asm	/^c01086ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01086bd	obj/kernel.asm	/^c01086bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01086c0	obj/kernel.asm	/^c01086c0:	e8 8a 09 00 00       	call   c010904f <user_mem_check>$/;"	l
c01086c5	obj/kernel.asm	/^c01086c5:	85 c0                	test   %eax,%eax$/;"	l
c01086c7	obj/kernel.asm	/^c01086c7:	75 07                	jne    c01086d0 <copy_to_user+0x32>$/;"	l
c01086c9	obj/kernel.asm	/^c01086c9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01086ce	obj/kernel.asm	/^c01086ce:	eb 1e                	jmp    c01086ee <copy_to_user+0x50>$/;"	l
c01086d0	obj/kernel.asm	/^c01086d0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01086d3	obj/kernel.asm	/^c01086d3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01086d7	obj/kernel.asm	/^c01086d7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01086da	obj/kernel.asm	/^c01086da:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01086de	obj/kernel.asm	/^c01086de:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01086e1	obj/kernel.asm	/^c01086e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01086e4	obj/kernel.asm	/^c01086e4:	e8 69 cf 00 00       	call   c0115652 <memcpy>$/;"	l
c01086e9	obj/kernel.asm	/^c01086e9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01086ee	obj/kernel.asm	/^c01086ee:	c9                   	leave  $/;"	l
c01086ef	obj/kernel.asm	/^c01086ef:	c3                   	ret    $/;"	l
c01086f0	obj/kernel.asm	/^c01086f0 <vmm_init>:$/;"	l
c01086f0	obj/kernel.asm	/^c01086f0:	55                   	push   %ebp$/;"	l
c01086f1	obj/kernel.asm	/^c01086f1:	89 e5                	mov    %esp,%ebp$/;"	l
c01086f3	obj/kernel.asm	/^c01086f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01086f6	obj/kernel.asm	/^c01086f6:	e8 02 00 00 00       	call   c01086fd <check_vmm>$/;"	l
c01086fb	obj/kernel.asm	/^c01086fb:	c9                   	leave  $/;"	l
c01086fc	obj/kernel.asm	/^c01086fc:	c3                   	ret    $/;"	l
c01086fd	obj/kernel.asm	/^c01086fd <check_vmm>:$/;"	l
c01086fd	obj/kernel.asm	/^c01086fd:	55                   	push   %ebp$/;"	l
c01086fe	obj/kernel.asm	/^c01086fe:	89 e5                	mov    %esp,%ebp$/;"	l
c0108700	obj/kernel.asm	/^c0108700:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0108703	obj/kernel.asm	/^c0108703:	e8 f9 ca ff ff       	call   c0105201 <nr_free_pages>$/;"	l
c0108708	obj/kernel.asm	/^c0108708:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010870b	obj/kernel.asm	/^c010870b:	e8 13 00 00 00       	call   c0108723 <check_vma_struct>$/;"	l
c0108710	obj/kernel.asm	/^c0108710:	e8 a7 04 00 00       	call   c0108bbc <check_pgfault>$/;"	l
c0108715	obj/kernel.asm	/^c0108715:	c7 04 24 60 72 11 c0 	movl   $0xc0117260,(%esp)$/;"	l
c010871c	obj/kernel.asm	/^c010871c:	e8 44 7c ff ff       	call   c0100365 <cprintf>$/;"	l
c0108721	obj/kernel.asm	/^c0108721:	c9                   	leave  $/;"	l
c0108722	obj/kernel.asm	/^c0108722:	c3                   	ret    $/;"	l
c0108723	obj/kernel.asm	/^c0108723 <check_vma_struct>:$/;"	l
c0108723	obj/kernel.asm	/^c0108723:	55                   	push   %ebp$/;"	l
c0108724	obj/kernel.asm	/^c0108724:	89 e5                	mov    %esp,%ebp$/;"	l
c0108726	obj/kernel.asm	/^c0108726:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0108729	obj/kernel.asm	/^c0108729:	e8 d3 ca ff ff       	call   c0105201 <nr_free_pages>$/;"	l
c010872e	obj/kernel.asm	/^c010872e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108731	obj/kernel.asm	/^c0108731:	e8 1b f8 ff ff       	call   c0107f51 <mm_create>$/;"	l
c0108736	obj/kernel.asm	/^c0108736:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108739	obj/kernel.asm	/^c0108739:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010873d	obj/kernel.asm	/^c010873d:	75 24                	jne    c0108763 <check_vma_struct+0x40>$/;"	l
c010873f	obj/kernel.asm	/^c010873f:	c7 44 24 0c 17 72 11 	movl   $0xc0117217,0xc(%esp)$/;"	l
c0108746	obj/kernel.asm	/^c0108746:	c0 $/;"	l
c0108747	obj/kernel.asm	/^c0108747:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c010874e	obj/kernel.asm	/^c010874e:	c0 $/;"	l
c010874f	obj/kernel.asm	/^c010874f:	c7 44 24 04 0e 01 00 	movl   $0x10e,0x4(%esp)$/;"	l
c0108756	obj/kernel.asm	/^c0108756:	00 $/;"	l
c0108757	obj/kernel.asm	/^c0108757:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c010875e	obj/kernel.asm	/^c010875e:	e8 65 87 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108763	obj/kernel.asm	/^c0108763:	c7 45 e4 0a 00 00 00 	movl   $0xa,-0x1c(%ebp)$/;"	l
c010876a	obj/kernel.asm	/^c010876a:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010876d	obj/kernel.asm	/^c010876d:	89 d0                	mov    %edx,%eax$/;"	l
c010876f	obj/kernel.asm	/^c010876f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108772	obj/kernel.asm	/^c0108772:	01 d0                	add    %edx,%eax$/;"	l
c0108774	obj/kernel.asm	/^c0108774:	01 c0                	add    %eax,%eax$/;"	l
c0108776	obj/kernel.asm	/^c0108776:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108779	obj/kernel.asm	/^c0108779:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010877c	obj/kernel.asm	/^c010877c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010877f	obj/kernel.asm	/^c010877f:	eb 70                	jmp    c01087f1 <check_vma_struct+0xce>$/;"	l
c0108781	obj/kernel.asm	/^c0108781:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108784	obj/kernel.asm	/^c0108784:	89 d0                	mov    %edx,%eax$/;"	l
c0108786	obj/kernel.asm	/^c0108786:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108789	obj/kernel.asm	/^c0108789:	01 d0                	add    %edx,%eax$/;"	l
c010878b	obj/kernel.asm	/^c010878b:	83 c0 02             	add    $0x2,%eax$/;"	l
c010878e	obj/kernel.asm	/^c010878e:	89 c1                	mov    %eax,%ecx$/;"	l
c0108790	obj/kernel.asm	/^c0108790:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108793	obj/kernel.asm	/^c0108793:	89 d0                	mov    %edx,%eax$/;"	l
c0108795	obj/kernel.asm	/^c0108795:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108798	obj/kernel.asm	/^c0108798:	01 d0                	add    %edx,%eax$/;"	l
c010879a	obj/kernel.asm	/^c010879a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01087a1	obj/kernel.asm	/^c01087a1:	00 $/;"	l
c01087a2	obj/kernel.asm	/^c01087a2:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c01087a6	obj/kernel.asm	/^c01087a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01087a9	obj/kernel.asm	/^c01087a9:	e8 48 f8 ff ff       	call   c0107ff6 <vma_create>$/;"	l
c01087ae	obj/kernel.asm	/^c01087ae:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01087b1	obj/kernel.asm	/^c01087b1:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01087b5	obj/kernel.asm	/^c01087b5:	75 24                	jne    c01087db <check_vma_struct+0xb8>$/;"	l
c01087b7	obj/kernel.asm	/^c01087b7:	c7 44 24 0c 78 72 11 	movl   $0xc0117278,0xc(%esp)$/;"	l
c01087be	obj/kernel.asm	/^c01087be:	c0 $/;"	l
c01087bf	obj/kernel.asm	/^c01087bf:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c01087c6	obj/kernel.asm	/^c01087c6:	c0 $/;"	l
c01087c7	obj/kernel.asm	/^c01087c7:	c7 44 24 04 15 01 00 	movl   $0x115,0x4(%esp)$/;"	l
c01087ce	obj/kernel.asm	/^c01087ce:	00 $/;"	l
c01087cf	obj/kernel.asm	/^c01087cf:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c01087d6	obj/kernel.asm	/^c01087d6:	e8 ed 86 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01087db	obj/kernel.asm	/^c01087db:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01087de	obj/kernel.asm	/^c01087de:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01087e2	obj/kernel.asm	/^c01087e2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01087e5	obj/kernel.asm	/^c01087e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01087e8	obj/kernel.asm	/^c01087e8:	e8 99 f9 ff ff       	call   c0108186 <insert_vma_struct>$/;"	l
c01087ed	obj/kernel.asm	/^c01087ed:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01087f1	obj/kernel.asm	/^c01087f1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01087f5	obj/kernel.asm	/^c01087f5:	7f 8a                	jg     c0108781 <check_vma_struct+0x5e>$/;"	l
c01087f7	obj/kernel.asm	/^c01087f7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01087fa	obj/kernel.asm	/^c01087fa:	83 c0 01             	add    $0x1,%eax$/;"	l
c01087fd	obj/kernel.asm	/^c01087fd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108800	obj/kernel.asm	/^c0108800:	eb 70                	jmp    c0108872 <check_vma_struct+0x14f>$/;"	l
c0108802	obj/kernel.asm	/^c0108802:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108805	obj/kernel.asm	/^c0108805:	89 d0                	mov    %edx,%eax$/;"	l
c0108807	obj/kernel.asm	/^c0108807:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010880a	obj/kernel.asm	/^c010880a:	01 d0                	add    %edx,%eax$/;"	l
c010880c	obj/kernel.asm	/^c010880c:	83 c0 02             	add    $0x2,%eax$/;"	l
c010880f	obj/kernel.asm	/^c010880f:	89 c1                	mov    %eax,%ecx$/;"	l
c0108811	obj/kernel.asm	/^c0108811:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108814	obj/kernel.asm	/^c0108814:	89 d0                	mov    %edx,%eax$/;"	l
c0108816	obj/kernel.asm	/^c0108816:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108819	obj/kernel.asm	/^c0108819:	01 d0                	add    %edx,%eax$/;"	l
c010881b	obj/kernel.asm	/^c010881b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0108822	obj/kernel.asm	/^c0108822:	00 $/;"	l
c0108823	obj/kernel.asm	/^c0108823:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0108827	obj/kernel.asm	/^c0108827:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010882a	obj/kernel.asm	/^c010882a:	e8 c7 f7 ff ff       	call   c0107ff6 <vma_create>$/;"	l
c010882f	obj/kernel.asm	/^c010882f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0108832	obj/kernel.asm	/^c0108832:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0108836	obj/kernel.asm	/^c0108836:	75 24                	jne    c010885c <check_vma_struct+0x139>$/;"	l
c0108838	obj/kernel.asm	/^c0108838:	c7 44 24 0c 78 72 11 	movl   $0xc0117278,0xc(%esp)$/;"	l
c010883f	obj/kernel.asm	/^c010883f:	c0 $/;"	l
c0108840	obj/kernel.asm	/^c0108840:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108847	obj/kernel.asm	/^c0108847:	c0 $/;"	l
c0108848	obj/kernel.asm	/^c0108848:	c7 44 24 04 1b 01 00 	movl   $0x11b,0x4(%esp)$/;"	l
c010884f	obj/kernel.asm	/^c010884f:	00 $/;"	l
c0108850	obj/kernel.asm	/^c0108850:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108857	obj/kernel.asm	/^c0108857:	e8 6c 86 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010885c	obj/kernel.asm	/^c010885c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010885f	obj/kernel.asm	/^c010885f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108863	obj/kernel.asm	/^c0108863:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108866	obj/kernel.asm	/^c0108866:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108869	obj/kernel.asm	/^c0108869:	e8 18 f9 ff ff       	call   c0108186 <insert_vma_struct>$/;"	l
c010886e	obj/kernel.asm	/^c010886e:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108872	obj/kernel.asm	/^c0108872:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108875	obj/kernel.asm	/^c0108875:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0108878	obj/kernel.asm	/^c0108878:	7e 88                	jle    c0108802 <check_vma_struct+0xdf>$/;"	l
c010887a	obj/kernel.asm	/^c010887a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010887d	obj/kernel.asm	/^c010887d:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0108880	obj/kernel.asm	/^c0108880:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0108883	obj/kernel.asm	/^c0108883:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108886	obj/kernel.asm	/^c0108886:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108889	obj/kernel.asm	/^c0108889:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c0108890	obj/kernel.asm	/^c0108890:	e9 97 00 00 00       	jmp    c010892c <check_vma_struct+0x209>$/;"	l
c0108895	obj/kernel.asm	/^c0108895:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108898	obj/kernel.asm	/^c0108898:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010889b	obj/kernel.asm	/^c010889b:	75 24                	jne    c01088c1 <check_vma_struct+0x19e>$/;"	l
c010889d	obj/kernel.asm	/^c010889d:	c7 44 24 0c 84 72 11 	movl   $0xc0117284,0xc(%esp)$/;"	l
c01088a4	obj/kernel.asm	/^c01088a4:	c0 $/;"	l
c01088a5	obj/kernel.asm	/^c01088a5:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c01088ac	obj/kernel.asm	/^c01088ac:	c0 $/;"	l
c01088ad	obj/kernel.asm	/^c01088ad:	c7 44 24 04 22 01 00 	movl   $0x122,0x4(%esp)$/;"	l
c01088b4	obj/kernel.asm	/^c01088b4:	00 $/;"	l
c01088b5	obj/kernel.asm	/^c01088b5:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c01088bc	obj/kernel.asm	/^c01088bc:	e8 07 86 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01088c1	obj/kernel.asm	/^c01088c1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01088c4	obj/kernel.asm	/^c01088c4:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01088c7	obj/kernel.asm	/^c01088c7:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01088ca	obj/kernel.asm	/^c01088ca:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01088cd	obj/kernel.asm	/^c01088cd:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c01088d0	obj/kernel.asm	/^c01088d0:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01088d3	obj/kernel.asm	/^c01088d3:	89 d0                	mov    %edx,%eax$/;"	l
c01088d5	obj/kernel.asm	/^c01088d5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01088d8	obj/kernel.asm	/^c01088d8:	01 d0                	add    %edx,%eax$/;"	l
c01088da	obj/kernel.asm	/^c01088da:	39 c1                	cmp    %eax,%ecx$/;"	l
c01088dc	obj/kernel.asm	/^c01088dc:	75 17                	jne    c01088f5 <check_vma_struct+0x1d2>$/;"	l
c01088de	obj/kernel.asm	/^c01088de:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01088e1	obj/kernel.asm	/^c01088e1:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
c01088e4	obj/kernel.asm	/^c01088e4:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01088e7	obj/kernel.asm	/^c01088e7:	89 d0                	mov    %edx,%eax$/;"	l
c01088e9	obj/kernel.asm	/^c01088e9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01088ec	obj/kernel.asm	/^c01088ec:	01 d0                	add    %edx,%eax$/;"	l
c01088ee	obj/kernel.asm	/^c01088ee:	83 c0 02             	add    $0x2,%eax$/;"	l
c01088f1	obj/kernel.asm	/^c01088f1:	39 c1                	cmp    %eax,%ecx$/;"	l
c01088f3	obj/kernel.asm	/^c01088f3:	74 24                	je     c0108919 <check_vma_struct+0x1f6>$/;"	l
c01088f5	obj/kernel.asm	/^c01088f5:	c7 44 24 0c 9c 72 11 	movl   $0xc011729c,0xc(%esp)$/;"	l
c01088fc	obj/kernel.asm	/^c01088fc:	c0 $/;"	l
c01088fd	obj/kernel.asm	/^c01088fd:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108904	obj/kernel.asm	/^c0108904:	c0 $/;"	l
c0108905	obj/kernel.asm	/^c0108905:	c7 44 24 04 24 01 00 	movl   $0x124,0x4(%esp)$/;"	l
c010890c	obj/kernel.asm	/^c010890c:	00 $/;"	l
c010890d	obj/kernel.asm	/^c010890d:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108914	obj/kernel.asm	/^c0108914:	e8 af 85 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108919	obj/kernel.asm	/^c0108919:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010891c	obj/kernel.asm	/^c010891c:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010891f	obj/kernel.asm	/^c010891f:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0108922	obj/kernel.asm	/^c0108922:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108925	obj/kernel.asm	/^c0108925:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108928	obj/kernel.asm	/^c0108928:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010892c	obj/kernel.asm	/^c010892c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010892f	obj/kernel.asm	/^c010892f:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0108932	obj/kernel.asm	/^c0108932:	0f 8e 5d ff ff ff    	jle    c0108895 <check_vma_struct+0x172>$/;"	l
c0108938	obj/kernel.asm	/^c0108938:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%ebp)$/;"	l
c010893f	obj/kernel.asm	/^c010893f:	e9 cd 01 00 00       	jmp    c0108b11 <check_vma_struct+0x3ee>$/;"	l
c0108944	obj/kernel.asm	/^c0108944:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108947	obj/kernel.asm	/^c0108947:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010894b	obj/kernel.asm	/^c010894b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010894e	obj/kernel.asm	/^c010894e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108951	obj/kernel.asm	/^c0108951:	e8 db f6 ff ff       	call   c0108031 <find_vma>$/;"	l
c0108956	obj/kernel.asm	/^c0108956:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0108959	obj/kernel.asm	/^c0108959:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c010895d	obj/kernel.asm	/^c010895d:	75 24                	jne    c0108983 <check_vma_struct+0x260>$/;"	l
c010895f	obj/kernel.asm	/^c010895f:	c7 44 24 0c d1 72 11 	movl   $0xc01172d1,0xc(%esp)$/;"	l
c0108966	obj/kernel.asm	/^c0108966:	c0 $/;"	l
c0108967	obj/kernel.asm	/^c0108967:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c010896e	obj/kernel.asm	/^c010896e:	c0 $/;"	l
c010896f	obj/kernel.asm	/^c010896f:	c7 44 24 04 2a 01 00 	movl   $0x12a,0x4(%esp)$/;"	l
c0108976	obj/kernel.asm	/^c0108976:	00 $/;"	l
c0108977	obj/kernel.asm	/^c0108977:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c010897e	obj/kernel.asm	/^c010897e:	e8 45 85 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108983	obj/kernel.asm	/^c0108983:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108986	obj/kernel.asm	/^c0108986:	83 c0 01             	add    $0x1,%eax$/;"	l
c0108989	obj/kernel.asm	/^c0108989:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010898d	obj/kernel.asm	/^c010898d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108990	obj/kernel.asm	/^c0108990:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108993	obj/kernel.asm	/^c0108993:	e8 99 f6 ff ff       	call   c0108031 <find_vma>$/;"	l
c0108998	obj/kernel.asm	/^c0108998:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010899b	obj/kernel.asm	/^c010899b:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c010899f	obj/kernel.asm	/^c010899f:	75 24                	jne    c01089c5 <check_vma_struct+0x2a2>$/;"	l
c01089a1	obj/kernel.asm	/^c01089a1:	c7 44 24 0c de 72 11 	movl   $0xc01172de,0xc(%esp)$/;"	l
c01089a8	obj/kernel.asm	/^c01089a8:	c0 $/;"	l
c01089a9	obj/kernel.asm	/^c01089a9:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c01089b0	obj/kernel.asm	/^c01089b0:	c0 $/;"	l
c01089b1	obj/kernel.asm	/^c01089b1:	c7 44 24 04 2c 01 00 	movl   $0x12c,0x4(%esp)$/;"	l
c01089b8	obj/kernel.asm	/^c01089b8:	00 $/;"	l
c01089b9	obj/kernel.asm	/^c01089b9:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c01089c0	obj/kernel.asm	/^c01089c0:	e8 03 85 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01089c5	obj/kernel.asm	/^c01089c5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01089c8	obj/kernel.asm	/^c01089c8:	83 c0 02             	add    $0x2,%eax$/;"	l
c01089cb	obj/kernel.asm	/^c01089cb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01089cf	obj/kernel.asm	/^c01089cf:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01089d2	obj/kernel.asm	/^c01089d2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01089d5	obj/kernel.asm	/^c01089d5:	e8 57 f6 ff ff       	call   c0108031 <find_vma>$/;"	l
c01089da	obj/kernel.asm	/^c01089da:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01089dd	obj/kernel.asm	/^c01089dd:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c01089e1	obj/kernel.asm	/^c01089e1:	74 24                	je     c0108a07 <check_vma_struct+0x2e4>$/;"	l
c01089e3	obj/kernel.asm	/^c01089e3:	c7 44 24 0c eb 72 11 	movl   $0xc01172eb,0xc(%esp)$/;"	l
c01089ea	obj/kernel.asm	/^c01089ea:	c0 $/;"	l
c01089eb	obj/kernel.asm	/^c01089eb:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c01089f2	obj/kernel.asm	/^c01089f2:	c0 $/;"	l
c01089f3	obj/kernel.asm	/^c01089f3:	c7 44 24 04 2e 01 00 	movl   $0x12e,0x4(%esp)$/;"	l
c01089fa	obj/kernel.asm	/^c01089fa:	00 $/;"	l
c01089fb	obj/kernel.asm	/^c01089fb:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108a02	obj/kernel.asm	/^c0108a02:	e8 c1 84 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108a07	obj/kernel.asm	/^c0108a07:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108a0a	obj/kernel.asm	/^c0108a0a:	83 c0 03             	add    $0x3,%eax$/;"	l
c0108a0d	obj/kernel.asm	/^c0108a0d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108a11	obj/kernel.asm	/^c0108a11:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108a14	obj/kernel.asm	/^c0108a14:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108a17	obj/kernel.asm	/^c0108a17:	e8 15 f6 ff ff       	call   c0108031 <find_vma>$/;"	l
c0108a1c	obj/kernel.asm	/^c0108a1c:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0108a1f	obj/kernel.asm	/^c0108a1f:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)$/;"	l
c0108a23	obj/kernel.asm	/^c0108a23:	74 24                	je     c0108a49 <check_vma_struct+0x326>$/;"	l
c0108a25	obj/kernel.asm	/^c0108a25:	c7 44 24 0c f8 72 11 	movl   $0xc01172f8,0xc(%esp)$/;"	l
c0108a2c	obj/kernel.asm	/^c0108a2c:	c0 $/;"	l
c0108a2d	obj/kernel.asm	/^c0108a2d:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108a34	obj/kernel.asm	/^c0108a34:	c0 $/;"	l
c0108a35	obj/kernel.asm	/^c0108a35:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
c0108a3c	obj/kernel.asm	/^c0108a3c:	00 $/;"	l
c0108a3d	obj/kernel.asm	/^c0108a3d:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108a44	obj/kernel.asm	/^c0108a44:	e8 7f 84 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108a49	obj/kernel.asm	/^c0108a49:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108a4c	obj/kernel.asm	/^c0108a4c:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108a4f	obj/kernel.asm	/^c0108a4f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108a53	obj/kernel.asm	/^c0108a53:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108a56	obj/kernel.asm	/^c0108a56:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108a59	obj/kernel.asm	/^c0108a59:	e8 d3 f5 ff ff       	call   c0108031 <find_vma>$/;"	l
c0108a5e	obj/kernel.asm	/^c0108a5e:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0108a61	obj/kernel.asm	/^c0108a61:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)$/;"	l
c0108a65	obj/kernel.asm	/^c0108a65:	74 24                	je     c0108a8b <check_vma_struct+0x368>$/;"	l
c0108a67	obj/kernel.asm	/^c0108a67:	c7 44 24 0c 05 73 11 	movl   $0xc0117305,0xc(%esp)$/;"	l
c0108a6e	obj/kernel.asm	/^c0108a6e:	c0 $/;"	l
c0108a6f	obj/kernel.asm	/^c0108a6f:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108a76	obj/kernel.asm	/^c0108a76:	c0 $/;"	l
c0108a77	obj/kernel.asm	/^c0108a77:	c7 44 24 04 32 01 00 	movl   $0x132,0x4(%esp)$/;"	l
c0108a7e	obj/kernel.asm	/^c0108a7e:	00 $/;"	l
c0108a7f	obj/kernel.asm	/^c0108a7f:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108a86	obj/kernel.asm	/^c0108a86:	e8 3d 84 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108a8b	obj/kernel.asm	/^c0108a8b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0108a8e	obj/kernel.asm	/^c0108a8e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108a91	obj/kernel.asm	/^c0108a91:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108a94	obj/kernel.asm	/^c0108a94:	39 c2                	cmp    %eax,%edx$/;"	l
c0108a96	obj/kernel.asm	/^c0108a96:	75 10                	jne    c0108aa8 <check_vma_struct+0x385>$/;"	l
c0108a98	obj/kernel.asm	/^c0108a98:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0108a9b	obj/kernel.asm	/^c0108a9b:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0108a9e	obj/kernel.asm	/^c0108a9e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108aa1	obj/kernel.asm	/^c0108aa1:	83 c0 02             	add    $0x2,%eax$/;"	l
c0108aa4	obj/kernel.asm	/^c0108aa4:	39 c2                	cmp    %eax,%edx$/;"	l
c0108aa6	obj/kernel.asm	/^c0108aa6:	74 24                	je     c0108acc <check_vma_struct+0x3a9>$/;"	l
c0108aa8	obj/kernel.asm	/^c0108aa8:	c7 44 24 0c 14 73 11 	movl   $0xc0117314,0xc(%esp)$/;"	l
c0108aaf	obj/kernel.asm	/^c0108aaf:	c0 $/;"	l
c0108ab0	obj/kernel.asm	/^c0108ab0:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108ab7	obj/kernel.asm	/^c0108ab7:	c0 $/;"	l
c0108ab8	obj/kernel.asm	/^c0108ab8:	c7 44 24 04 34 01 00 	movl   $0x134,0x4(%esp)$/;"	l
c0108abf	obj/kernel.asm	/^c0108abf:	00 $/;"	l
c0108ac0	obj/kernel.asm	/^c0108ac0:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108ac7	obj/kernel.asm	/^c0108ac7:	e8 fc 83 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108acc	obj/kernel.asm	/^c0108acc:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0108acf	obj/kernel.asm	/^c0108acf:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108ad2	obj/kernel.asm	/^c0108ad2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ad5	obj/kernel.asm	/^c0108ad5:	39 c2                	cmp    %eax,%edx$/;"	l
c0108ad7	obj/kernel.asm	/^c0108ad7:	75 10                	jne    c0108ae9 <check_vma_struct+0x3c6>$/;"	l
c0108ad9	obj/kernel.asm	/^c0108ad9:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0108adc	obj/kernel.asm	/^c0108adc:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0108adf	obj/kernel.asm	/^c0108adf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ae2	obj/kernel.asm	/^c0108ae2:	83 c0 02             	add    $0x2,%eax$/;"	l
c0108ae5	obj/kernel.asm	/^c0108ae5:	39 c2                	cmp    %eax,%edx$/;"	l
c0108ae7	obj/kernel.asm	/^c0108ae7:	74 24                	je     c0108b0d <check_vma_struct+0x3ea>$/;"	l
c0108ae9	obj/kernel.asm	/^c0108ae9:	c7 44 24 0c 44 73 11 	movl   $0xc0117344,0xc(%esp)$/;"	l
c0108af0	obj/kernel.asm	/^c0108af0:	c0 $/;"	l
c0108af1	obj/kernel.asm	/^c0108af1:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108af8	obj/kernel.asm	/^c0108af8:	c0 $/;"	l
c0108af9	obj/kernel.asm	/^c0108af9:	c7 44 24 04 35 01 00 	movl   $0x135,0x4(%esp)$/;"	l
c0108b00	obj/kernel.asm	/^c0108b00:	00 $/;"	l
c0108b01	obj/kernel.asm	/^c0108b01:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108b08	obj/kernel.asm	/^c0108b08:	e8 bb 83 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108b0d	obj/kernel.asm	/^c0108b0d:	83 45 f4 05          	addl   $0x5,-0xc(%ebp)$/;"	l
c0108b11	obj/kernel.asm	/^c0108b11:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0108b14	obj/kernel.asm	/^c0108b14:	89 d0                	mov    %edx,%eax$/;"	l
c0108b16	obj/kernel.asm	/^c0108b16:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108b19	obj/kernel.asm	/^c0108b19:	01 d0                	add    %edx,%eax$/;"	l
c0108b1b	obj/kernel.asm	/^c0108b1b:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0108b1e	obj/kernel.asm	/^c0108b1e:	0f 8d 20 fe ff ff    	jge    c0108944 <check_vma_struct+0x221>$/;"	l
c0108b24	obj/kernel.asm	/^c0108b24:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%ebp)$/;"	l
c0108b2b	obj/kernel.asm	/^c0108b2b:	eb 70                	jmp    c0108b9d <check_vma_struct+0x47a>$/;"	l
c0108b2d	obj/kernel.asm	/^c0108b2d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108b30	obj/kernel.asm	/^c0108b30:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108b34	obj/kernel.asm	/^c0108b34:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108b37	obj/kernel.asm	/^c0108b37:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108b3a	obj/kernel.asm	/^c0108b3a:	e8 f2 f4 ff ff       	call   c0108031 <find_vma>$/;"	l
c0108b3f	obj/kernel.asm	/^c0108b3f:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0108b42	obj/kernel.asm	/^c0108b42:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0108b46	obj/kernel.asm	/^c0108b46:	74 27                	je     c0108b6f <check_vma_struct+0x44c>$/;"	l
c0108b48	obj/kernel.asm	/^c0108b48:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0108b4b	obj/kernel.asm	/^c0108b4b:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0108b4e	obj/kernel.asm	/^c0108b4e:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0108b51	obj/kernel.asm	/^c0108b51:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108b54	obj/kernel.asm	/^c0108b54:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0108b58	obj/kernel.asm	/^c0108b58:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108b5c	obj/kernel.asm	/^c0108b5c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108b5f	obj/kernel.asm	/^c0108b5f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108b63	obj/kernel.asm	/^c0108b63:	c7 04 24 74 73 11 c0 	movl   $0xc0117374,(%esp)$/;"	l
c0108b6a	obj/kernel.asm	/^c0108b6a:	e8 f6 77 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108b6f	obj/kernel.asm	/^c0108b6f:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0108b73	obj/kernel.asm	/^c0108b73:	74 24                	je     c0108b99 <check_vma_struct+0x476>$/;"	l
c0108b75	obj/kernel.asm	/^c0108b75:	c7 44 24 0c 99 73 11 	movl   $0xc0117399,0xc(%esp)$/;"	l
c0108b7c	obj/kernel.asm	/^c0108b7c:	c0 $/;"	l
c0108b7d	obj/kernel.asm	/^c0108b7d:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108b84	obj/kernel.asm	/^c0108b84:	c0 $/;"	l
c0108b85	obj/kernel.asm	/^c0108b85:	c7 44 24 04 3d 01 00 	movl   $0x13d,0x4(%esp)$/;"	l
c0108b8c	obj/kernel.asm	/^c0108b8c:	00 $/;"	l
c0108b8d	obj/kernel.asm	/^c0108b8d:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108b94	obj/kernel.asm	/^c0108b94:	e8 2f 83 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108b99	obj/kernel.asm	/^c0108b99:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0108b9d	obj/kernel.asm	/^c0108b9d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108ba1	obj/kernel.asm	/^c0108ba1:	79 8a                	jns    c0108b2d <check_vma_struct+0x40a>$/;"	l
c0108ba3	obj/kernel.asm	/^c0108ba3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108ba6	obj/kernel.asm	/^c0108ba6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108ba9	obj/kernel.asm	/^c0108ba9:	e8 08 f7 ff ff       	call   c01082b6 <mm_destroy>$/;"	l
c0108bae	obj/kernel.asm	/^c0108bae:	c7 04 24 b0 73 11 c0 	movl   $0xc01173b0,(%esp)$/;"	l
c0108bb5	obj/kernel.asm	/^c0108bb5:	e8 ab 77 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108bba	obj/kernel.asm	/^c0108bba:	c9                   	leave  $/;"	l
c0108bbb	obj/kernel.asm	/^c0108bbb:	c3                   	ret    $/;"	l
c0108bbc	obj/kernel.asm	/^c0108bbc <check_pgfault>:$/;"	l
c0108bbc	obj/kernel.asm	/^c0108bbc:	55                   	push   %ebp$/;"	l
c0108bbd	obj/kernel.asm	/^c0108bbd:	89 e5                	mov    %esp,%ebp$/;"	l
c0108bbf	obj/kernel.asm	/^c0108bbf:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0108bc2	obj/kernel.asm	/^c0108bc2:	e8 3a c6 ff ff       	call   c0105201 <nr_free_pages>$/;"	l
c0108bc7	obj/kernel.asm	/^c0108bc7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108bca	obj/kernel.asm	/^c0108bca:	e8 82 f3 ff ff       	call   c0107f51 <mm_create>$/;"	l
c0108bcf	obj/kernel.asm	/^c0108bcf:	a3 0c 41 15 c0       	mov    %eax,0xc015410c$/;"	l
c0108bd4	obj/kernel.asm	/^c0108bd4:	a1 0c 41 15 c0       	mov    0xc015410c,%eax$/;"	l
c0108bd9	obj/kernel.asm	/^c0108bd9:	85 c0                	test   %eax,%eax$/;"	l
c0108bdb	obj/kernel.asm	/^c0108bdb:	75 24                	jne    c0108c01 <check_pgfault+0x45>$/;"	l
c0108bdd	obj/kernel.asm	/^c0108bdd:	c7 44 24 0c cf 73 11 	movl   $0xc01173cf,0xc(%esp)$/;"	l
c0108be4	obj/kernel.asm	/^c0108be4:	c0 $/;"	l
c0108be5	obj/kernel.asm	/^c0108be5:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108bec	obj/kernel.asm	/^c0108bec:	c0 $/;"	l
c0108bed	obj/kernel.asm	/^c0108bed:	c7 44 24 04 4f 01 00 	movl   $0x14f,0x4(%esp)$/;"	l
c0108bf4	obj/kernel.asm	/^c0108bf4:	00 $/;"	l
c0108bf5	obj/kernel.asm	/^c0108bf5:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108bfc	obj/kernel.asm	/^c0108bfc:	e8 c7 82 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108c01	obj/kernel.asm	/^c0108c01:	a1 0c 41 15 c0       	mov    0xc015410c,%eax$/;"	l
c0108c06	obj/kernel.asm	/^c0108c06:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108c09	obj/kernel.asm	/^c0108c09:	8b 15 84 0e 15 c0    	mov    0xc0150e84,%edx$/;"	l
c0108c0f	obj/kernel.asm	/^c0108c0f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108c12	obj/kernel.asm	/^c0108c12:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0108c15	obj/kernel.asm	/^c0108c15:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108c18	obj/kernel.asm	/^c0108c18:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108c1b	obj/kernel.asm	/^c0108c1b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108c1e	obj/kernel.asm	/^c0108c1e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108c21	obj/kernel.asm	/^c0108c21:	8b 00                	mov    (%eax),%eax$/;"	l
c0108c23	obj/kernel.asm	/^c0108c23:	85 c0                	test   %eax,%eax$/;"	l
c0108c25	obj/kernel.asm	/^c0108c25:	74 24                	je     c0108c4b <check_pgfault+0x8f>$/;"	l
c0108c27	obj/kernel.asm	/^c0108c27:	c7 44 24 0c e7 73 11 	movl   $0xc01173e7,0xc(%esp)$/;"	l
c0108c2e	obj/kernel.asm	/^c0108c2e:	c0 $/;"	l
c0108c2f	obj/kernel.asm	/^c0108c2f:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108c36	obj/kernel.asm	/^c0108c36:	c0 $/;"	l
c0108c37	obj/kernel.asm	/^c0108c37:	c7 44 24 04 53 01 00 	movl   $0x153,0x4(%esp)$/;"	l
c0108c3e	obj/kernel.asm	/^c0108c3e:	00 $/;"	l
c0108c3f	obj/kernel.asm	/^c0108c3f:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108c46	obj/kernel.asm	/^c0108c46:	e8 7d 82 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108c4b	obj/kernel.asm	/^c0108c4b:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)$/;"	l
c0108c52	obj/kernel.asm	/^c0108c52:	00 $/;"	l
c0108c53	obj/kernel.asm	/^c0108c53:	c7 44 24 04 00 00 40 	movl   $0x400000,0x4(%esp)$/;"	l
c0108c5a	obj/kernel.asm	/^c0108c5a:	00 $/;"	l
c0108c5b	obj/kernel.asm	/^c0108c5b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0108c62	obj/kernel.asm	/^c0108c62:	e8 8f f3 ff ff       	call   c0107ff6 <vma_create>$/;"	l
c0108c67	obj/kernel.asm	/^c0108c67:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108c6a	obj/kernel.asm	/^c0108c6a:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0108c6e	obj/kernel.asm	/^c0108c6e:	75 24                	jne    c0108c94 <check_pgfault+0xd8>$/;"	l
c0108c70	obj/kernel.asm	/^c0108c70:	c7 44 24 0c 78 72 11 	movl   $0xc0117278,0xc(%esp)$/;"	l
c0108c77	obj/kernel.asm	/^c0108c77:	c0 $/;"	l
c0108c78	obj/kernel.asm	/^c0108c78:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108c7f	obj/kernel.asm	/^c0108c7f:	c0 $/;"	l
c0108c80	obj/kernel.asm	/^c0108c80:	c7 44 24 04 56 01 00 	movl   $0x156,0x4(%esp)$/;"	l
c0108c87	obj/kernel.asm	/^c0108c87:	00 $/;"	l
c0108c88	obj/kernel.asm	/^c0108c88:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108c8f	obj/kernel.asm	/^c0108c8f:	e8 34 82 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108c94	obj/kernel.asm	/^c0108c94:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108c97	obj/kernel.asm	/^c0108c97:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108c9b	obj/kernel.asm	/^c0108c9b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108c9e	obj/kernel.asm	/^c0108c9e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108ca1	obj/kernel.asm	/^c0108ca1:	e8 e0 f4 ff ff       	call   c0108186 <insert_vma_struct>$/;"	l
c0108ca6	obj/kernel.asm	/^c0108ca6:	c7 45 dc 00 01 00 00 	movl   $0x100,-0x24(%ebp)$/;"	l
c0108cad	obj/kernel.asm	/^c0108cad:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108cb0	obj/kernel.asm	/^c0108cb0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108cb4	obj/kernel.asm	/^c0108cb4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108cb7	obj/kernel.asm	/^c0108cb7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108cba	obj/kernel.asm	/^c0108cba:	e8 72 f3 ff ff       	call   c0108031 <find_vma>$/;"	l
c0108cbf	obj/kernel.asm	/^c0108cbf:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0108cc2	obj/kernel.asm	/^c0108cc2:	74 24                	je     c0108ce8 <check_pgfault+0x12c>$/;"	l
c0108cc4	obj/kernel.asm	/^c0108cc4:	c7 44 24 0c f5 73 11 	movl   $0xc01173f5,0xc(%esp)$/;"	l
c0108ccb	obj/kernel.asm	/^c0108ccb:	c0 $/;"	l
c0108ccc	obj/kernel.asm	/^c0108ccc:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108cd3	obj/kernel.asm	/^c0108cd3:	c0 $/;"	l
c0108cd4	obj/kernel.asm	/^c0108cd4:	c7 44 24 04 5b 01 00 	movl   $0x15b,0x4(%esp)$/;"	l
c0108cdb	obj/kernel.asm	/^c0108cdb:	00 $/;"	l
c0108cdc	obj/kernel.asm	/^c0108cdc:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108ce3	obj/kernel.asm	/^c0108ce3:	e8 e0 81 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108ce8	obj/kernel.asm	/^c0108ce8:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0108cef	obj/kernel.asm	/^c0108cef:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108cf6	obj/kernel.asm	/^c0108cf6:	eb 17                	jmp    c0108d0f <check_pgfault+0x153>$/;"	l
c0108cf8	obj/kernel.asm	/^c0108cf8:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108cfb	obj/kernel.asm	/^c0108cfb:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108cfe	obj/kernel.asm	/^c0108cfe:	01 d0                	add    %edx,%eax$/;"	l
c0108d00	obj/kernel.asm	/^c0108d00:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108d03	obj/kernel.asm	/^c0108d03:	88 10                	mov    %dl,(%eax)$/;"	l
c0108d05	obj/kernel.asm	/^c0108d05:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d08	obj/kernel.asm	/^c0108d08:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0108d0b	obj/kernel.asm	/^c0108d0b:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108d0f	obj/kernel.asm	/^c0108d0f:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0108d13	obj/kernel.asm	/^c0108d13:	7e e3                	jle    c0108cf8 <check_pgfault+0x13c>$/;"	l
c0108d15	obj/kernel.asm	/^c0108d15:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108d1c	obj/kernel.asm	/^c0108d1c:	eb 15                	jmp    c0108d33 <check_pgfault+0x177>$/;"	l
c0108d1e	obj/kernel.asm	/^c0108d1e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108d21	obj/kernel.asm	/^c0108d21:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108d24	obj/kernel.asm	/^c0108d24:	01 d0                	add    %edx,%eax$/;"	l
c0108d26	obj/kernel.asm	/^c0108d26:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0108d29	obj/kernel.asm	/^c0108d29:	0f be c0             	movsbl %al,%eax$/;"	l
c0108d2c	obj/kernel.asm	/^c0108d2c:	29 45 f0             	sub    %eax,-0x10(%ebp)$/;"	l
c0108d2f	obj/kernel.asm	/^c0108d2f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108d33	obj/kernel.asm	/^c0108d33:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0108d37	obj/kernel.asm	/^c0108d37:	7e e5                	jle    c0108d1e <check_pgfault+0x162>$/;"	l
c0108d39	obj/kernel.asm	/^c0108d39:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108d3d	obj/kernel.asm	/^c0108d3d:	74 24                	je     c0108d63 <check_pgfault+0x1a7>$/;"	l
c0108d3f	obj/kernel.asm	/^c0108d3f:	c7 44 24 0c 0f 74 11 	movl   $0xc011740f,0xc(%esp)$/;"	l
c0108d46	obj/kernel.asm	/^c0108d46:	c0 $/;"	l
c0108d47	obj/kernel.asm	/^c0108d47:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108d4e	obj/kernel.asm	/^c0108d4e:	c0 $/;"	l
c0108d4f	obj/kernel.asm	/^c0108d4f:	c7 44 24 04 65 01 00 	movl   $0x165,0x4(%esp)$/;"	l
c0108d56	obj/kernel.asm	/^c0108d56:	00 $/;"	l
c0108d57	obj/kernel.asm	/^c0108d57:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108d5e	obj/kernel.asm	/^c0108d5e:	e8 65 81 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108d63	obj/kernel.asm	/^c0108d63:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108d66	obj/kernel.asm	/^c0108d66:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0108d69	obj/kernel.asm	/^c0108d69:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0108d6c	obj/kernel.asm	/^c0108d6c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0108d71	obj/kernel.asm	/^c0108d71:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108d75	obj/kernel.asm	/^c0108d75:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108d78	obj/kernel.asm	/^c0108d78:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108d7b	obj/kernel.asm	/^c0108d7b:	e8 6b d1 ff ff       	call   c0105eeb <page_remove>$/;"	l
c0108d80	obj/kernel.asm	/^c0108d80:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108d83	obj/kernel.asm	/^c0108d83:	8b 00                	mov    (%eax),%eax$/;"	l
c0108d85	obj/kernel.asm	/^c0108d85:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108d88	obj/kernel.asm	/^c0108d88:	e8 ac f1 ff ff       	call   c0107f39 <pde2page>$/;"	l
c0108d8d	obj/kernel.asm	/^c0108d8d:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0108d94	obj/kernel.asm	/^c0108d94:	00 $/;"	l
c0108d95	obj/kernel.asm	/^c0108d95:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108d98	obj/kernel.asm	/^c0108d98:	e8 32 c4 ff ff       	call   c01051cf <free_pages>$/;"	l
c0108d9d	obj/kernel.asm	/^c0108d9d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108da0	obj/kernel.asm	/^c0108da0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0108da6	obj/kernel.asm	/^c0108da6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108da9	obj/kernel.asm	/^c0108da9:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0108db0	obj/kernel.asm	/^c0108db0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108db3	obj/kernel.asm	/^c0108db3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108db6	obj/kernel.asm	/^c0108db6:	e8 fb f4 ff ff       	call   c01082b6 <mm_destroy>$/;"	l
c0108dbb	obj/kernel.asm	/^c0108dbb:	c7 05 0c 41 15 c0 00 	movl   $0x0,0xc015410c$/;"	l
c0108dc2	obj/kernel.asm	/^c0108dc2:	00 00 00 $/;"	l
c0108dc5	obj/kernel.asm	/^c0108dc5:	e8 37 c4 ff ff       	call   c0105201 <nr_free_pages>$/;"	l
c0108dca	obj/kernel.asm	/^c0108dca:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108dcd	obj/kernel.asm	/^c0108dcd:	74 24                	je     c0108df3 <check_pgfault+0x237>$/;"	l
c0108dcf	obj/kernel.asm	/^c0108dcf:	c7 44 24 0c 18 74 11 	movl   $0xc0117418,0xc(%esp)$/;"	l
c0108dd6	obj/kernel.asm	/^c0108dd6:	c0 $/;"	l
c0108dd7	obj/kernel.asm	/^c0108dd7:	c7 44 24 08 87 71 11 	movl   $0xc0117187,0x8(%esp)$/;"	l
c0108dde	obj/kernel.asm	/^c0108dde:	c0 $/;"	l
c0108ddf	obj/kernel.asm	/^c0108ddf:	c7 44 24 04 6f 01 00 	movl   $0x16f,0x4(%esp)$/;"	l
c0108de6	obj/kernel.asm	/^c0108de6:	00 $/;"	l
c0108de7	obj/kernel.asm	/^c0108de7:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108dee	obj/kernel.asm	/^c0108dee:	e8 d5 80 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108df3	obj/kernel.asm	/^c0108df3:	c7 04 24 3f 74 11 c0 	movl   $0xc011743f,(%esp)$/;"	l
c0108dfa	obj/kernel.asm	/^c0108dfa:	e8 66 75 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108dff	obj/kernel.asm	/^c0108dff:	c9                   	leave  $/;"	l
c0108e00	obj/kernel.asm	/^c0108e00:	c3                   	ret    $/;"	l
c0108e01	obj/kernel.asm	/^c0108e01 <do_pgfault>:$/;"	l
c0108e01	obj/kernel.asm	/^c0108e01:	55                   	push   %ebp$/;"	l
c0108e02	obj/kernel.asm	/^c0108e02:	89 e5                	mov    %esp,%ebp$/;"	l
c0108e04	obj/kernel.asm	/^c0108e04:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0108e07	obj/kernel.asm	/^c0108e07:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0108e0e	obj/kernel.asm	/^c0108e0e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108e11	obj/kernel.asm	/^c0108e11:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108e15	obj/kernel.asm	/^c0108e15:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e18	obj/kernel.asm	/^c0108e18:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108e1b	obj/kernel.asm	/^c0108e1b:	e8 11 f2 ff ff       	call   c0108031 <find_vma>$/;"	l
c0108e20	obj/kernel.asm	/^c0108e20:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108e23	obj/kernel.asm	/^c0108e23:	a1 18 0f 15 c0       	mov    0xc0150f18,%eax$/;"	l
c0108e28	obj/kernel.asm	/^c0108e28:	83 c0 01             	add    $0x1,%eax$/;"	l
c0108e2b	obj/kernel.asm	/^c0108e2b:	a3 18 0f 15 c0       	mov    %eax,0xc0150f18$/;"	l
c0108e30	obj/kernel.asm	/^c0108e30:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0108e34	obj/kernel.asm	/^c0108e34:	74 0b                	je     c0108e41 <do_pgfault+0x40>$/;"	l
c0108e36	obj/kernel.asm	/^c0108e36:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108e39	obj/kernel.asm	/^c0108e39:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108e3c	obj/kernel.asm	/^c0108e3c:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0108e3f	obj/kernel.asm	/^c0108e3f:	76 18                	jbe    c0108e59 <do_pgfault+0x58>$/;"	l
c0108e41	obj/kernel.asm	/^c0108e41:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108e44	obj/kernel.asm	/^c0108e44:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108e48	obj/kernel.asm	/^c0108e48:	c7 04 24 5c 74 11 c0 	movl   $0xc011745c,(%esp)$/;"	l
c0108e4f	obj/kernel.asm	/^c0108e4f:	e8 11 75 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108e54	obj/kernel.asm	/^c0108e54:	e9 f1 01 00 00       	jmp    c010904a <do_pgfault+0x249>$/;"	l
c0108e59	obj/kernel.asm	/^c0108e59:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108e5c	obj/kernel.asm	/^c0108e5c:	83 e0 03             	and    $0x3,%eax$/;"	l
c0108e5f	obj/kernel.asm	/^c0108e5f:	85 c0                	test   %eax,%eax$/;"	l
c0108e61	obj/kernel.asm	/^c0108e61:	74 36                	je     c0108e99 <do_pgfault+0x98>$/;"	l
c0108e63	obj/kernel.asm	/^c0108e63:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108e66	obj/kernel.asm	/^c0108e66:	74 20                	je     c0108e88 <do_pgfault+0x87>$/;"	l
c0108e68	obj/kernel.asm	/^c0108e68:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108e6b	obj/kernel.asm	/^c0108e6b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108e6e	obj/kernel.asm	/^c0108e6e:	83 e0 02             	and    $0x2,%eax$/;"	l
c0108e71	obj/kernel.asm	/^c0108e71:	85 c0                	test   %eax,%eax$/;"	l
c0108e73	obj/kernel.asm	/^c0108e73:	75 11                	jne    c0108e86 <do_pgfault+0x85>$/;"	l
c0108e75	obj/kernel.asm	/^c0108e75:	c7 04 24 8c 74 11 c0 	movl   $0xc011748c,(%esp)$/;"	l
c0108e7c	obj/kernel.asm	/^c0108e7c:	e8 e4 74 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108e81	obj/kernel.asm	/^c0108e81:	e9 c4 01 00 00       	jmp    c010904a <do_pgfault+0x249>$/;"	l
c0108e86	obj/kernel.asm	/^c0108e86:	eb 2f                	jmp    c0108eb7 <do_pgfault+0xb6>$/;"	l
c0108e88	obj/kernel.asm	/^c0108e88:	c7 04 24 ec 74 11 c0 	movl   $0xc01174ec,(%esp)$/;"	l
c0108e8f	obj/kernel.asm	/^c0108e8f:	e8 d1 74 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108e94	obj/kernel.asm	/^c0108e94:	e9 b1 01 00 00       	jmp    c010904a <do_pgfault+0x249>$/;"	l
c0108e99	obj/kernel.asm	/^c0108e99:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108e9c	obj/kernel.asm	/^c0108e9c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108e9f	obj/kernel.asm	/^c0108e9f:	83 e0 05             	and    $0x5,%eax$/;"	l
c0108ea2	obj/kernel.asm	/^c0108ea2:	85 c0                	test   %eax,%eax$/;"	l
c0108ea4	obj/kernel.asm	/^c0108ea4:	75 11                	jne    c0108eb7 <do_pgfault+0xb6>$/;"	l
c0108ea6	obj/kernel.asm	/^c0108ea6:	c7 04 24 24 75 11 c0 	movl   $0xc0117524,(%esp)$/;"	l
c0108ead	obj/kernel.asm	/^c0108ead:	e8 b3 74 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108eb2	obj/kernel.asm	/^c0108eb2:	e9 93 01 00 00       	jmp    c010904a <do_pgfault+0x249>$/;"	l
c0108eb7	obj/kernel.asm	/^c0108eb7:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%ebp)$/;"	l
c0108ebe	obj/kernel.asm	/^c0108ebe:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108ec1	obj/kernel.asm	/^c0108ec1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108ec4	obj/kernel.asm	/^c0108ec4:	83 e0 02             	and    $0x2,%eax$/;"	l
c0108ec7	obj/kernel.asm	/^c0108ec7:	85 c0                	test   %eax,%eax$/;"	l
c0108ec9	obj/kernel.asm	/^c0108ec9:	74 04                	je     c0108ecf <do_pgfault+0xce>$/;"	l
c0108ecb	obj/kernel.asm	/^c0108ecb:	83 4d f0 02          	orl    $0x2,-0x10(%ebp)$/;"	l
c0108ecf	obj/kernel.asm	/^c0108ecf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108ed2	obj/kernel.asm	/^c0108ed2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108ed5	obj/kernel.asm	/^c0108ed5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108ed8	obj/kernel.asm	/^c0108ed8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0108edd	obj/kernel.asm	/^c0108edd:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0108ee0	obj/kernel.asm	/^c0108ee0:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0108ee7	obj/kernel.asm	/^c0108ee7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0108eee	obj/kernel.asm	/^c0108eee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108ef1	obj/kernel.asm	/^c0108ef1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108ef4	obj/kernel.asm	/^c0108ef4:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0108efb	obj/kernel.asm	/^c0108efb:	00 $/;"	l
c0108efc	obj/kernel.asm	/^c0108efc:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0108eff	obj/kernel.asm	/^c0108eff:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108f03	obj/kernel.asm	/^c0108f03:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108f06	obj/kernel.asm	/^c0108f06:	e8 d0 c9 ff ff       	call   c01058db <get_pte>$/;"	l
c0108f0b	obj/kernel.asm	/^c0108f0b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108f0e	obj/kernel.asm	/^c0108f0e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0108f12	obj/kernel.asm	/^c0108f12:	75 11                	jne    c0108f25 <do_pgfault+0x124>$/;"	l
c0108f14	obj/kernel.asm	/^c0108f14:	c7 04 24 87 75 11 c0 	movl   $0xc0117587,(%esp)$/;"	l
c0108f1b	obj/kernel.asm	/^c0108f1b:	e8 45 74 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108f20	obj/kernel.asm	/^c0108f20:	e9 25 01 00 00       	jmp    c010904a <do_pgfault+0x249>$/;"	l
c0108f25	obj/kernel.asm	/^c0108f25:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108f28	obj/kernel.asm	/^c0108f28:	8b 00                	mov    (%eax),%eax$/;"	l
c0108f2a	obj/kernel.asm	/^c0108f2a:	85 c0                	test   %eax,%eax$/;"	l
c0108f2c	obj/kernel.asm	/^c0108f2c:	75 35                	jne    c0108f63 <do_pgfault+0x162>$/;"	l
c0108f2e	obj/kernel.asm	/^c0108f2e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f31	obj/kernel.asm	/^c0108f31:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108f34	obj/kernel.asm	/^c0108f34:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0108f37	obj/kernel.asm	/^c0108f37:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0108f3b	obj/kernel.asm	/^c0108f3b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0108f3e	obj/kernel.asm	/^c0108f3e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108f42	obj/kernel.asm	/^c0108f42:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108f45	obj/kernel.asm	/^c0108f45:	e8 fb d0 ff ff       	call   c0106045 <pgdir_alloc_page>$/;"	l
c0108f4a	obj/kernel.asm	/^c0108f4a:	85 c0                	test   %eax,%eax$/;"	l
c0108f4c	obj/kernel.asm	/^c0108f4c:	0f 85 f1 00 00 00    	jne    c0109043 <do_pgfault+0x242>$/;"	l
c0108f52	obj/kernel.asm	/^c0108f52:	c7 04 24 a8 75 11 c0 	movl   $0xc01175a8,(%esp)$/;"	l
c0108f59	obj/kernel.asm	/^c0108f59:	e8 07 74 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108f5e	obj/kernel.asm	/^c0108f5e:	e9 e7 00 00 00       	jmp    c010904a <do_pgfault+0x249>$/;"	l
c0108f63	obj/kernel.asm	/^c0108f63:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c0108f6a	obj/kernel.asm	/^c0108f6a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108f6d	obj/kernel.asm	/^c0108f6d:	8b 00                	mov    (%eax),%eax$/;"	l
c0108f6f	obj/kernel.asm	/^c0108f6f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108f73	obj/kernel.asm	/^c0108f73:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108f76	obj/kernel.asm	/^c0108f76:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108f7a	obj/kernel.asm	/^c0108f7a:	c7 04 24 cf 75 11 c0 	movl   $0xc01175cf,(%esp)$/;"	l
c0108f81	obj/kernel.asm	/^c0108f81:	e8 df 73 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108f86	obj/kernel.asm	/^c0108f86:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108f89	obj/kernel.asm	/^c0108f89:	8b 00                	mov    (%eax),%eax$/;"	l
c0108f8b	obj/kernel.asm	/^c0108f8b:	83 e0 01             	and    $0x1,%eax$/;"	l
c0108f8e	obj/kernel.asm	/^c0108f8e:	85 c0                	test   %eax,%eax$/;"	l
c0108f90	obj/kernel.asm	/^c0108f90:	74 1c                	je     c0108fae <do_pgfault+0x1ad>$/;"	l
c0108f92	obj/kernel.asm	/^c0108f92:	c7 44 24 08 ec 75 11 	movl   $0xc01175ec,0x8(%esp)$/;"	l
c0108f99	obj/kernel.asm	/^c0108f99:	c0 $/;"	l
c0108f9a	obj/kernel.asm	/^c0108f9a:	c7 44 24 04 08 02 00 	movl   $0x208,0x4(%esp)$/;"	l
c0108fa1	obj/kernel.asm	/^c0108fa1:	00 $/;"	l
c0108fa2	obj/kernel.asm	/^c0108fa2:	c7 04 24 9c 71 11 c0 	movl   $0xc011719c,(%esp)$/;"	l
c0108fa9	obj/kernel.asm	/^c0108fa9:	e8 1a 7f ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108fae	obj/kernel.asm	/^c0108fae:	a1 0c 0f 15 c0       	mov    0xc0150f0c,%eax$/;"	l
c0108fb3	obj/kernel.asm	/^c0108fb3:	85 c0                	test   %eax,%eax$/;"	l
c0108fb5	obj/kernel.asm	/^c0108fb5:	74 30                	je     c0108fe7 <do_pgfault+0x1e6>$/;"	l
c0108fb7	obj/kernel.asm	/^c0108fb7:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c0108fba	obj/kernel.asm	/^c0108fba:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108fbe	obj/kernel.asm	/^c0108fbe:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108fc1	obj/kernel.asm	/^c0108fc1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108fc5	obj/kernel.asm	/^c0108fc5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108fc8	obj/kernel.asm	/^c0108fc8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108fcb	obj/kernel.asm	/^c0108fcb:	e8 2b e1 ff ff       	call   c01070fb <swap_in>$/;"	l
c0108fd0	obj/kernel.asm	/^c0108fd0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108fd3	obj/kernel.asm	/^c0108fd3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108fd7	obj/kernel.asm	/^c0108fd7:	74 26                	je     c0108fff <do_pgfault+0x1fe>$/;"	l
c0108fd9	obj/kernel.asm	/^c0108fd9:	c7 04 24 0b 76 11 c0 	movl   $0xc011760b,(%esp)$/;"	l
c0108fe0	obj/kernel.asm	/^c0108fe0:	e8 80 73 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108fe5	obj/kernel.asm	/^c0108fe5:	eb 63                	jmp    c010904a <do_pgfault+0x249>$/;"	l
c0108fe7	obj/kernel.asm	/^c0108fe7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108fea	obj/kernel.asm	/^c0108fea:	8b 00                	mov    (%eax),%eax$/;"	l
c0108fec	obj/kernel.asm	/^c0108fec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108ff0	obj/kernel.asm	/^c0108ff0:	c7 04 24 2c 76 11 c0 	movl   $0xc011762c,(%esp)$/;"	l
c0108ff7	obj/kernel.asm	/^c0108ff7:	e8 69 73 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108ffc	obj/kernel.asm	/^c0108ffc:	90                   	nop$/;"	l
c0108ffd	obj/kernel.asm	/^c0108ffd:	eb 4b                	jmp    c010904a <do_pgfault+0x249>$/;"	l
c0108fff	obj/kernel.asm	/^c0108fff:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0109002	obj/kernel.asm	/^c0109002:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109005	obj/kernel.asm	/^c0109005:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109008	obj/kernel.asm	/^c0109008:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010900b	obj/kernel.asm	/^c010900b:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c010900f	obj/kernel.asm	/^c010900f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c0109012	obj/kernel.asm	/^c0109012:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0109016	obj/kernel.asm	/^c0109016:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010901a	obj/kernel.asm	/^c010901a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010901d	obj/kernel.asm	/^c010901d:	e8 0d cf ff ff       	call   c0105f2f <page_insert>$/;"	l
c0109022	obj/kernel.asm	/^c0109022:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109025	obj/kernel.asm	/^c0109025:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c010902c	obj/kernel.asm	/^c010902c:	00 $/;"	l
c010902d	obj/kernel.asm	/^c010902d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109031	obj/kernel.asm	/^c0109031:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0109034	obj/kernel.asm	/^c0109034:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109038	obj/kernel.asm	/^c0109038:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010903b	obj/kernel.asm	/^c010903b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010903e	obj/kernel.asm	/^c010903e:	e8 ef de ff ff       	call   c0106f32 <swap_map_swappable>$/;"	l
c0109043	obj/kernel.asm	/^c0109043:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010904a	obj/kernel.asm	/^c010904a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010904d	obj/kernel.asm	/^c010904d:	c9                   	leave  $/;"	l
c010904e	obj/kernel.asm	/^c010904e:	c3                   	ret    $/;"	l
c010904f	obj/kernel.asm	/^c010904f <user_mem_check>:$/;"	l
c010904f	obj/kernel.asm	/^c010904f:	55                   	push   %ebp$/;"	l
c0109050	obj/kernel.asm	/^c0109050:	89 e5                	mov    %esp,%ebp$/;"	l
c0109052	obj/kernel.asm	/^c0109052:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109055	obj/kernel.asm	/^c0109055:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109059	obj/kernel.asm	/^c0109059:	0f 84 e0 00 00 00    	je     c010913f <user_mem_check+0xf0>$/;"	l
c010905f	obj/kernel.asm	/^c010905f:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0109066	obj/kernel.asm	/^c0109066:	76 1c                	jbe    c0109084 <user_mem_check+0x35>$/;"	l
c0109068	obj/kernel.asm	/^c0109068:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010906b	obj/kernel.asm	/^c010906b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010906e	obj/kernel.asm	/^c010906e:	01 d0                	add    %edx,%eax$/;"	l
c0109070	obj/kernel.asm	/^c0109070:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0109073	obj/kernel.asm	/^c0109073:	76 0f                	jbe    c0109084 <user_mem_check+0x35>$/;"	l
c0109075	obj/kernel.asm	/^c0109075:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0109078	obj/kernel.asm	/^c0109078:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010907b	obj/kernel.asm	/^c010907b:	01 d0                	add    %edx,%eax$/;"	l
c010907d	obj/kernel.asm	/^c010907d:	3d 00 00 00 b0       	cmp    $0xb0000000,%eax$/;"	l
c0109082	obj/kernel.asm	/^c0109082:	76 0a                	jbe    c010908e <user_mem_check+0x3f>$/;"	l
c0109084	obj/kernel.asm	/^c0109084:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109089	obj/kernel.asm	/^c0109089:	e9 e2 00 00 00       	jmp    c0109170 <user_mem_check+0x121>$/;"	l
c010908e	obj/kernel.asm	/^c010908e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109091	obj/kernel.asm	/^c0109091:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109094	obj/kernel.asm	/^c0109094:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0109097	obj/kernel.asm	/^c0109097:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010909a	obj/kernel.asm	/^c010909a:	01 d0                	add    %edx,%eax$/;"	l
c010909c	obj/kernel.asm	/^c010909c:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010909f	obj/kernel.asm	/^c010909f:	e9 88 00 00 00       	jmp    c010912c <user_mem_check+0xdd>$/;"	l
c01090a4	obj/kernel.asm	/^c01090a4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01090a7	obj/kernel.asm	/^c01090a7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01090ab	obj/kernel.asm	/^c01090ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01090ae	obj/kernel.asm	/^c01090ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01090b1	obj/kernel.asm	/^c01090b1:	e8 7b ef ff ff       	call   c0108031 <find_vma>$/;"	l
c01090b6	obj/kernel.asm	/^c01090b6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01090b9	obj/kernel.asm	/^c01090b9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01090bd	obj/kernel.asm	/^c01090bd:	74 0b                	je     c01090ca <user_mem_check+0x7b>$/;"	l
c01090bf	obj/kernel.asm	/^c01090bf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01090c2	obj/kernel.asm	/^c01090c2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01090c5	obj/kernel.asm	/^c01090c5:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01090c8	obj/kernel.asm	/^c01090c8:	76 0a                	jbe    c01090d4 <user_mem_check+0x85>$/;"	l
c01090ca	obj/kernel.asm	/^c01090ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01090cf	obj/kernel.asm	/^c01090cf:	e9 9c 00 00 00       	jmp    c0109170 <user_mem_check+0x121>$/;"	l
c01090d4	obj/kernel.asm	/^c01090d4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01090d7	obj/kernel.asm	/^c01090d7:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c01090da	obj/kernel.asm	/^c01090da:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01090de	obj/kernel.asm	/^c01090de:	74 07                	je     c01090e7 <user_mem_check+0x98>$/;"	l
c01090e0	obj/kernel.asm	/^c01090e0:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
c01090e5	obj/kernel.asm	/^c01090e5:	eb 05                	jmp    c01090ec <user_mem_check+0x9d>$/;"	l
c01090e7	obj/kernel.asm	/^c01090e7:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01090ec	obj/kernel.asm	/^c01090ec:	21 d0                	and    %edx,%eax$/;"	l
c01090ee	obj/kernel.asm	/^c01090ee:	85 c0                	test   %eax,%eax$/;"	l
c01090f0	obj/kernel.asm	/^c01090f0:	75 07                	jne    c01090f9 <user_mem_check+0xaa>$/;"	l
c01090f2	obj/kernel.asm	/^c01090f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01090f7	obj/kernel.asm	/^c01090f7:	eb 77                	jmp    c0109170 <user_mem_check+0x121>$/;"	l
c01090f9	obj/kernel.asm	/^c01090f9:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01090fd	obj/kernel.asm	/^c01090fd:	74 24                	je     c0109123 <user_mem_check+0xd4>$/;"	l
c01090ff	obj/kernel.asm	/^c01090ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109102	obj/kernel.asm	/^c0109102:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109105	obj/kernel.asm	/^c0109105:	83 e0 08             	and    $0x8,%eax$/;"	l
c0109108	obj/kernel.asm	/^c0109108:	85 c0                	test   %eax,%eax$/;"	l
c010910a	obj/kernel.asm	/^c010910a:	74 17                	je     c0109123 <user_mem_check+0xd4>$/;"	l
c010910c	obj/kernel.asm	/^c010910c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010910f	obj/kernel.asm	/^c010910f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109112	obj/kernel.asm	/^c0109112:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c0109117	obj/kernel.asm	/^c0109117:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010911a	obj/kernel.asm	/^c010911a:	76 07                	jbe    c0109123 <user_mem_check+0xd4>$/;"	l
c010911c	obj/kernel.asm	/^c010911c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109121	obj/kernel.asm	/^c0109121:	eb 4d                	jmp    c0109170 <user_mem_check+0x121>$/;"	l
c0109123	obj/kernel.asm	/^c0109123:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109126	obj/kernel.asm	/^c0109126:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109129	obj/kernel.asm	/^c0109129:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010912c	obj/kernel.asm	/^c010912c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010912f	obj/kernel.asm	/^c010912f:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c0109132	obj/kernel.asm	/^c0109132:	0f 82 6c ff ff ff    	jb     c01090a4 <user_mem_check+0x55>$/;"	l
c0109138	obj/kernel.asm	/^c0109138:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010913d	obj/kernel.asm	/^c010913d:	eb 31                	jmp    c0109170 <user_mem_check+0x121>$/;"	l
c010913f	obj/kernel.asm	/^c010913f:	81 7d 0c ff ff ff bf 	cmpl   $0xbfffffff,0xc(%ebp)$/;"	l
c0109146	obj/kernel.asm	/^c0109146:	76 23                	jbe    c010916b <user_mem_check+0x11c>$/;"	l
c0109148	obj/kernel.asm	/^c0109148:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010914b	obj/kernel.asm	/^c010914b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010914e	obj/kernel.asm	/^c010914e:	01 d0                	add    %edx,%eax$/;"	l
c0109150	obj/kernel.asm	/^c0109150:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0109153	obj/kernel.asm	/^c0109153:	76 16                	jbe    c010916b <user_mem_check+0x11c>$/;"	l
c0109155	obj/kernel.asm	/^c0109155:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0109158	obj/kernel.asm	/^c0109158:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010915b	obj/kernel.asm	/^c010915b:	01 d0                	add    %edx,%eax$/;"	l
c010915d	obj/kernel.asm	/^c010915d:	3d 00 00 00 f8       	cmp    $0xf8000000,%eax$/;"	l
c0109162	obj/kernel.asm	/^c0109162:	77 07                	ja     c010916b <user_mem_check+0x11c>$/;"	l
c0109164	obj/kernel.asm	/^c0109164:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0109169	obj/kernel.asm	/^c0109169:	eb 05                	jmp    c0109170 <user_mem_check+0x121>$/;"	l
c010916b	obj/kernel.asm	/^c010916b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109170	obj/kernel.asm	/^c0109170:	c9                   	leave  $/;"	l
c0109171	obj/kernel.asm	/^c0109171:	c3                   	ret    $/;"	l
c0109172	obj/kernel.asm	/^c0109172 <copy_string>:$/;"	l
c0109172	obj/kernel.asm	/^c0109172:	55                   	push   %ebp$/;"	l
c0109173	obj/kernel.asm	/^c0109173:	89 e5                	mov    %esp,%ebp$/;"	l
c0109175	obj/kernel.asm	/^c0109175:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109178	obj/kernel.asm	/^c0109178:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010917b	obj/kernel.asm	/^c010917b:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c0109180	obj/kernel.asm	/^c0109180:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109183	obj/kernel.asm	/^c0109183:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109186	obj/kernel.asm	/^c0109186:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010918b	obj/kernel.asm	/^c010918b:	89 c2                	mov    %eax,%edx$/;"	l
c010918d	obj/kernel.asm	/^c010918d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0109190	obj/kernel.asm	/^c0109190:	29 c2                	sub    %eax,%edx$/;"	l
c0109192	obj/kernel.asm	/^c0109192:	89 d0                	mov    %edx,%eax$/;"	l
c0109194	obj/kernel.asm	/^c0109194:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109197	obj/kernel.asm	/^c0109197:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010919a	obj/kernel.asm	/^c010919a:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c010919d	obj/kernel.asm	/^c010919d:	76 06                	jbe    c01091a5 <copy_string+0x33>$/;"	l
c010919f	obj/kernel.asm	/^c010919f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01091a2	obj/kernel.asm	/^c01091a2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01091a5	obj/kernel.asm	/^c01091a5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01091a8	obj/kernel.asm	/^c01091a8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01091af	obj/kernel.asm	/^c01091af:	00 $/;"	l
c01091b0	obj/kernel.asm	/^c01091b0:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01091b3	obj/kernel.asm	/^c01091b3:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01091b7	obj/kernel.asm	/^c01091b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01091bb	obj/kernel.asm	/^c01091bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091be	obj/kernel.asm	/^c01091be:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01091c1	obj/kernel.asm	/^c01091c1:	e8 89 fe ff ff       	call   c010904f <user_mem_check>$/;"	l
c01091c6	obj/kernel.asm	/^c01091c6:	85 c0                	test   %eax,%eax$/;"	l
c01091c8	obj/kernel.asm	/^c01091c8:	75 0a                	jne    c01091d4 <copy_string+0x62>$/;"	l
c01091ca	obj/kernel.asm	/^c01091ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01091cf	obj/kernel.asm	/^c01091cf:	e9 86 00 00 00       	jmp    c010925a <copy_string+0xe8>$/;"	l
c01091d4	obj/kernel.asm	/^c01091d4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01091d7	obj/kernel.asm	/^c01091d7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01091db	obj/kernel.asm	/^c01091db:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01091de	obj/kernel.asm	/^c01091de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01091e1	obj/kernel.asm	/^c01091e1:	e8 5c c0 00 00       	call   c0115242 <strnlen>$/;"	l
c01091e6	obj/kernel.asm	/^c01091e6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01091e9	obj/kernel.asm	/^c01091e9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01091ec	obj/kernel.asm	/^c01091ec:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01091ef	obj/kernel.asm	/^c01091ef:	73 23                	jae    c0109214 <copy_string+0xa2>$/;"	l
c01091f1	obj/kernel.asm	/^c01091f1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01091f4	obj/kernel.asm	/^c01091f4:	83 c0 01             	add    $0x1,%eax$/;"	l
c01091f7	obj/kernel.asm	/^c01091f7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01091fb	obj/kernel.asm	/^c01091fb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01091fe	obj/kernel.asm	/^c01091fe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109202	obj/kernel.asm	/^c0109202:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109205	obj/kernel.asm	/^c0109205:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109208	obj/kernel.asm	/^c0109208:	e8 45 c4 00 00       	call   c0115652 <memcpy>$/;"	l
c010920d	obj/kernel.asm	/^c010920d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0109212	obj/kernel.asm	/^c0109212:	eb 46                	jmp    c010925a <copy_string+0xe8>$/;"	l
c0109214	obj/kernel.asm	/^c0109214:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109217	obj/kernel.asm	/^c0109217:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c010921a	obj/kernel.asm	/^c010921a:	75 07                	jne    c0109223 <copy_string+0xb1>$/;"	l
c010921c	obj/kernel.asm	/^c010921c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109221	obj/kernel.asm	/^c0109221:	eb 37                	jmp    c010925a <copy_string+0xe8>$/;"	l
c0109223	obj/kernel.asm	/^c0109223:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109226	obj/kernel.asm	/^c0109226:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010922a	obj/kernel.asm	/^c010922a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010922d	obj/kernel.asm	/^c010922d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109231	obj/kernel.asm	/^c0109231:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109234	obj/kernel.asm	/^c0109234:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109237	obj/kernel.asm	/^c0109237:	e8 16 c4 00 00       	call   c0115652 <memcpy>$/;"	l
c010923c	obj/kernel.asm	/^c010923c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010923f	obj/kernel.asm	/^c010923f:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c0109242	obj/kernel.asm	/^c0109242:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109245	obj/kernel.asm	/^c0109245:	01 45 10             	add    %eax,0x10(%ebp)$/;"	l
c0109248	obj/kernel.asm	/^c0109248:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010924b	obj/kernel.asm	/^c010924b:	29 45 14             	sub    %eax,0x14(%ebp)$/;"	l
c010924e	obj/kernel.asm	/^c010924e:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)$/;"	l
c0109255	obj/kernel.asm	/^c0109255:	e9 3d ff ff ff       	jmp    c0109197 <copy_string+0x25>$/;"	l
c010925a	obj/kernel.asm	/^c010925a:	c9                   	leave  $/;"	l
c010925b	obj/kernel.asm	/^c010925b:	c3                   	ret    $/;"	l
c010925c	obj/kernel.asm	/^c010925c <phi_test_sema>:$/;"	l
c010925c	obj/kernel.asm	/^c010925c:	55                   	push   %ebp$/;"	l
c010925d	obj/kernel.asm	/^c010925d:	89 e5                	mov    %esp,%ebp$/;"	l
c010925f	obj/kernel.asm	/^c010925f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109262	obj/kernel.asm	/^c0109262:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109265	obj/kernel.asm	/^c0109265:	8b 04 85 20 41 15 c0 	mov    -0x3feabee0(,%eax,4),%eax$/;"	l
c010926c	obj/kernel.asm	/^c010926c:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010926f	obj/kernel.asm	/^c010926f:	0f 85 85 00 00 00    	jne    c01092fa <phi_test_sema+0x9e>$/;"	l
c0109275	obj/kernel.asm	/^c0109275:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109278	obj/kernel.asm	/^c0109278:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010927b	obj/kernel.asm	/^c010927b:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0109280	obj/kernel.asm	/^c0109280:	89 c8                	mov    %ecx,%eax$/;"	l
c0109282	obj/kernel.asm	/^c0109282:	f7 ea                	imul   %edx$/;"	l
c0109284	obj/kernel.asm	/^c0109284:	d1 fa                	sar    %edx$/;"	d
c0109286	obj/kernel.asm	/^c0109286:	89 c8                	mov    %ecx,%eax$/;"	l
c0109288	obj/kernel.asm	/^c0109288:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c010928b	obj/kernel.asm	/^c010928b:	29 c2                	sub    %eax,%edx$/;"	l
c010928d	obj/kernel.asm	/^c010928d:	89 d0                	mov    %edx,%eax$/;"	l
c010928f	obj/kernel.asm	/^c010928f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109292	obj/kernel.asm	/^c0109292:	01 d0                	add    %edx,%eax$/;"	l
c0109294	obj/kernel.asm	/^c0109294:	29 c1                	sub    %eax,%ecx$/;"	l
c0109296	obj/kernel.asm	/^c0109296:	89 ca                	mov    %ecx,%edx$/;"	l
c0109298	obj/kernel.asm	/^c0109298:	8b 04 95 20 41 15 c0 	mov    -0x3feabee0(,%edx,4),%eax$/;"	l
c010929f	obj/kernel.asm	/^c010929f:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01092a2	obj/kernel.asm	/^c01092a2:	74 56                	je     c01092fa <phi_test_sema+0x9e>$/;"	l
c01092a4	obj/kernel.asm	/^c01092a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01092a7	obj/kernel.asm	/^c01092a7:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c01092aa	obj/kernel.asm	/^c01092aa:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c01092af	obj/kernel.asm	/^c01092af:	89 c8                	mov    %ecx,%eax$/;"	l
c01092b1	obj/kernel.asm	/^c01092b1:	f7 ea                	imul   %edx$/;"	l
c01092b3	obj/kernel.asm	/^c01092b3:	d1 fa                	sar    %edx$/;"	d
c01092b5	obj/kernel.asm	/^c01092b5:	89 c8                	mov    %ecx,%eax$/;"	l
c01092b7	obj/kernel.asm	/^c01092b7:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c01092ba	obj/kernel.asm	/^c01092ba:	29 c2                	sub    %eax,%edx$/;"	l
c01092bc	obj/kernel.asm	/^c01092bc:	89 d0                	mov    %edx,%eax$/;"	l
c01092be	obj/kernel.asm	/^c01092be:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01092c1	obj/kernel.asm	/^c01092c1:	01 d0                	add    %edx,%eax$/;"	l
c01092c3	obj/kernel.asm	/^c01092c3:	29 c1                	sub    %eax,%ecx$/;"	l
c01092c5	obj/kernel.asm	/^c01092c5:	89 ca                	mov    %ecx,%edx$/;"	l
c01092c7	obj/kernel.asm	/^c01092c7:	8b 04 95 20 41 15 c0 	mov    -0x3feabee0(,%edx,4),%eax$/;"	l
c01092ce	obj/kernel.asm	/^c01092ce:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01092d1	obj/kernel.asm	/^c01092d1:	74 27                	je     c01092fa <phi_test_sema+0x9e>$/;"	l
c01092d3	obj/kernel.asm	/^c01092d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01092d6	obj/kernel.asm	/^c01092d6:	c7 04 85 20 41 15 c0 	movl   $0x2,-0x3feabee0(,%eax,4)$/;"	l
c01092dd	obj/kernel.asm	/^c01092dd:	02 00 00 00 $/;"	l
c01092e1	obj/kernel.asm	/^c01092e1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01092e4	obj/kernel.asm	/^c01092e4:	89 d0                	mov    %edx,%eax$/;"	l
c01092e6	obj/kernel.asm	/^c01092e6:	01 c0                	add    %eax,%eax$/;"	l
c01092e8	obj/kernel.asm	/^c01092e8:	01 d0                	add    %edx,%eax$/;"	l
c01092ea	obj/kernel.asm	/^c01092ea:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01092ed	obj/kernel.asm	/^c01092ed:	05 c0 41 15 c0       	add    $0xc01541c0,%eax$/;"	l
c01092f2	obj/kernel.asm	/^c01092f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01092f5	obj/kernel.asm	/^c01092f5:	e8 ea 09 00 00       	call   c0109ce4 <up>$/;"	l
c01092fa	obj/kernel.asm	/^c01092fa:	c9                   	leave  $/;"	l
c01092fb	obj/kernel.asm	/^c01092fb:	c3                   	ret    $/;"	l
c01092fc	obj/kernel.asm	/^c01092fc <phi_take_forks_sema>:$/;"	l
c01092fc	obj/kernel.asm	/^c01092fc:	55                   	push   %ebp$/;"	l
c01092fd	obj/kernel.asm	/^c01092fd:	89 e5                	mov    %esp,%ebp$/;"	l
c01092ff	obj/kernel.asm	/^c01092ff:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109302	obj/kernel.asm	/^c0109302:	c7 04 24 48 41 15 c0 	movl   $0xc0154148,(%esp)$/;"	l
c0109309	obj/kernel.asm	/^c0109309:	e8 f1 09 00 00       	call   c0109cff <down>$/;"	l
c010930e	obj/kernel.asm	/^c010930e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109311	obj/kernel.asm	/^c0109311:	c7 04 85 20 41 15 c0 	movl   $0x1,-0x3feabee0(,%eax,4)$/;"	l
c0109318	obj/kernel.asm	/^c0109318:	01 00 00 00 $/;"	l
c010931c	obj/kernel.asm	/^c010931c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010931f	obj/kernel.asm	/^c010931f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109322	obj/kernel.asm	/^c0109322:	e8 35 ff ff ff       	call   c010925c <phi_test_sema>$/;"	l
c0109327	obj/kernel.asm	/^c0109327:	c7 04 24 48 41 15 c0 	movl   $0xc0154148,(%esp)$/;"	l
c010932e	obj/kernel.asm	/^c010932e:	e8 b1 09 00 00       	call   c0109ce4 <up>$/;"	l
c0109333	obj/kernel.asm	/^c0109333:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109336	obj/kernel.asm	/^c0109336:	89 d0                	mov    %edx,%eax$/;"	l
c0109338	obj/kernel.asm	/^c0109338:	01 c0                	add    %eax,%eax$/;"	l
c010933a	obj/kernel.asm	/^c010933a:	01 d0                	add    %edx,%eax$/;"	l
c010933c	obj/kernel.asm	/^c010933c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010933f	obj/kernel.asm	/^c010933f:	05 c0 41 15 c0       	add    $0xc01541c0,%eax$/;"	l
c0109344	obj/kernel.asm	/^c0109344:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109347	obj/kernel.asm	/^c0109347:	e8 b3 09 00 00       	call   c0109cff <down>$/;"	l
c010934c	obj/kernel.asm	/^c010934c:	c9                   	leave  $/;"	l
c010934d	obj/kernel.asm	/^c010934d:	c3                   	ret    $/;"	l
c010934e	obj/kernel.asm	/^c010934e <phi_put_forks_sema>:$/;"	l
c010934e	obj/kernel.asm	/^c010934e:	55                   	push   %ebp$/;"	l
c010934f	obj/kernel.asm	/^c010934f:	89 e5                	mov    %esp,%ebp$/;"	l
c0109351	obj/kernel.asm	/^c0109351:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109354	obj/kernel.asm	/^c0109354:	c7 04 24 48 41 15 c0 	movl   $0xc0154148,(%esp)$/;"	l
c010935b	obj/kernel.asm	/^c010935b:	e8 9f 09 00 00       	call   c0109cff <down>$/;"	l
c0109360	obj/kernel.asm	/^c0109360:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109363	obj/kernel.asm	/^c0109363:	c7 04 85 20 41 15 c0 	movl   $0x0,-0x3feabee0(,%eax,4)$/;"	l
c010936a	obj/kernel.asm	/^c010936a:	00 00 00 00 $/;"	l
c010936e	obj/kernel.asm	/^c010936e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109371	obj/kernel.asm	/^c0109371:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0109374	obj/kernel.asm	/^c0109374:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0109379	obj/kernel.asm	/^c0109379:	89 c8                	mov    %ecx,%eax$/;"	l
c010937b	obj/kernel.asm	/^c010937b:	f7 ea                	imul   %edx$/;"	l
c010937d	obj/kernel.asm	/^c010937d:	d1 fa                	sar    %edx$/;"	d
c010937f	obj/kernel.asm	/^c010937f:	89 c8                	mov    %ecx,%eax$/;"	l
c0109381	obj/kernel.asm	/^c0109381:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0109384	obj/kernel.asm	/^c0109384:	29 c2                	sub    %eax,%edx$/;"	l
c0109386	obj/kernel.asm	/^c0109386:	89 d0                	mov    %edx,%eax$/;"	l
c0109388	obj/kernel.asm	/^c0109388:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010938b	obj/kernel.asm	/^c010938b:	01 d0                	add    %edx,%eax$/;"	l
c010938d	obj/kernel.asm	/^c010938d:	29 c1                	sub    %eax,%ecx$/;"	l
c010938f	obj/kernel.asm	/^c010938f:	89 ca                	mov    %ecx,%edx$/;"	l
c0109391	obj/kernel.asm	/^c0109391:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0109394	obj/kernel.asm	/^c0109394:	e8 c3 fe ff ff       	call   c010925c <phi_test_sema>$/;"	l
c0109399	obj/kernel.asm	/^c0109399:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010939c	obj/kernel.asm	/^c010939c:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c010939f	obj/kernel.asm	/^c010939f:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c01093a4	obj/kernel.asm	/^c01093a4:	89 c8                	mov    %ecx,%eax$/;"	l
c01093a6	obj/kernel.asm	/^c01093a6:	f7 ea                	imul   %edx$/;"	l
c01093a8	obj/kernel.asm	/^c01093a8:	d1 fa                	sar    %edx$/;"	d
c01093aa	obj/kernel.asm	/^c01093aa:	89 c8                	mov    %ecx,%eax$/;"	l
c01093ac	obj/kernel.asm	/^c01093ac:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c01093af	obj/kernel.asm	/^c01093af:	29 c2                	sub    %eax,%edx$/;"	l
c01093b1	obj/kernel.asm	/^c01093b1:	89 d0                	mov    %edx,%eax$/;"	l
c01093b3	obj/kernel.asm	/^c01093b3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01093b6	obj/kernel.asm	/^c01093b6:	01 d0                	add    %edx,%eax$/;"	l
c01093b8	obj/kernel.asm	/^c01093b8:	29 c1                	sub    %eax,%ecx$/;"	l
c01093ba	obj/kernel.asm	/^c01093ba:	89 ca                	mov    %ecx,%edx$/;"	l
c01093bc	obj/kernel.asm	/^c01093bc:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01093bf	obj/kernel.asm	/^c01093bf:	e8 98 fe ff ff       	call   c010925c <phi_test_sema>$/;"	l
c01093c4	obj/kernel.asm	/^c01093c4:	c7 04 24 48 41 15 c0 	movl   $0xc0154148,(%esp)$/;"	l
c01093cb	obj/kernel.asm	/^c01093cb:	e8 14 09 00 00       	call   c0109ce4 <up>$/;"	l
c01093d0	obj/kernel.asm	/^c01093d0:	c9                   	leave  $/;"	l
c01093d1	obj/kernel.asm	/^c01093d1:	c3                   	ret    $/;"	l
c01093d2	obj/kernel.asm	/^c01093d2 <philosopher_using_semaphore>:$/;"	l
c01093d2	obj/kernel.asm	/^c01093d2:	55                   	push   %ebp$/;"	l
c01093d3	obj/kernel.asm	/^c01093d3:	89 e5                	mov    %esp,%ebp$/;"	l
c01093d5	obj/kernel.asm	/^c01093d5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01093d8	obj/kernel.asm	/^c01093d8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01093df	obj/kernel.asm	/^c01093df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093e2	obj/kernel.asm	/^c01093e2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01093e5	obj/kernel.asm	/^c01093e5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01093e8	obj/kernel.asm	/^c01093e8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01093ec	obj/kernel.asm	/^c01093ec:	c7 04 24 54 76 11 c0 	movl   $0xc0117654,(%esp)$/;"	l
c01093f3	obj/kernel.asm	/^c01093f3:	e8 6d 6f ff ff       	call   c0100365 <cprintf>$/;"	l
c01093f8	obj/kernel.asm	/^c01093f8:	eb 62                	jmp    c010945c <philosopher_using_semaphore+0x8a>$/;"	l
c01093fa	obj/kernel.asm	/^c01093fa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01093fd	obj/kernel.asm	/^c01093fd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109401	obj/kernel.asm	/^c0109401:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109404	obj/kernel.asm	/^c0109404:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109408	obj/kernel.asm	/^c0109408:	c7 04 24 74 76 11 c0 	movl   $0xc0117674,(%esp)$/;"	l
c010940f	obj/kernel.asm	/^c010940f:	e8 51 6f ff ff       	call   c0100365 <cprintf>$/;"	l
c0109414	obj/kernel.asm	/^c0109414:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c010941b	obj/kernel.asm	/^c010941b:	e8 75 4c 00 00       	call   c010e095 <do_sleep>$/;"	l
c0109420	obj/kernel.asm	/^c0109420:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109423	obj/kernel.asm	/^c0109423:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109426	obj/kernel.asm	/^c0109426:	e8 d1 fe ff ff       	call   c01092fc <phi_take_forks_sema>$/;"	l
c010942b	obj/kernel.asm	/^c010942b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010942e	obj/kernel.asm	/^c010942e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109432	obj/kernel.asm	/^c0109432:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109435	obj/kernel.asm	/^c0109435:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109439	obj/kernel.asm	/^c0109439:	c7 04 24 a4 76 11 c0 	movl   $0xc01176a4,(%esp)$/;"	l
c0109440	obj/kernel.asm	/^c0109440:	e8 20 6f ff ff       	call   c0100365 <cprintf>$/;"	l
c0109445	obj/kernel.asm	/^c0109445:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c010944c	obj/kernel.asm	/^c010944c:	e8 44 4c 00 00       	call   c010e095 <do_sleep>$/;"	l
c0109451	obj/kernel.asm	/^c0109451:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109454	obj/kernel.asm	/^c0109454:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109457	obj/kernel.asm	/^c0109457:	e8 f2 fe ff ff       	call   c010934e <phi_put_forks_sema>$/;"	l
c010945c	obj/kernel.asm	/^c010945c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010945f	obj/kernel.asm	/^c010945f:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0109462	obj/kernel.asm	/^c0109462:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0109465	obj/kernel.asm	/^c0109465:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0109468	obj/kernel.asm	/^c0109468:	7e 90                	jle    c01093fa <philosopher_using_semaphore+0x28>$/;"	l
c010946a	obj/kernel.asm	/^c010946a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010946d	obj/kernel.asm	/^c010946d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109471	obj/kernel.asm	/^c0109471:	c7 04 24 cf 76 11 c0 	movl   $0xc01176cf,(%esp)$/;"	l
c0109478	obj/kernel.asm	/^c0109478:	e8 e8 6e ff ff       	call   c0100365 <cprintf>$/;"	l
c010947d	obj/kernel.asm	/^c010947d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109482	obj/kernel.asm	/^c0109482:	c9                   	leave  $/;"	l
c0109483	obj/kernel.asm	/^c0109483:	c3                   	ret    $/;"	l
c0109484	obj/kernel.asm	/^c0109484 <phi_test_condvar>:$/;"	l
c0109484	obj/kernel.asm	/^c0109484:	55                   	push   %ebp$/;"	l
c0109485	obj/kernel.asm	/^c0109485:	89 e5                	mov    %esp,%ebp$/;"	l
c0109487	obj/kernel.asm	/^c0109487:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010948a	obj/kernel.asm	/^c010948a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010948d	obj/kernel.asm	/^c010948d:	8b 04 85 80 41 15 c0 	mov    -0x3feabe80(,%eax,4),%eax$/;"	l
c0109494	obj/kernel.asm	/^c0109494:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0109497	obj/kernel.asm	/^c0109497:	0f 85 b5 00 00 00    	jne    c0109552 <phi_test_condvar+0xce>$/;"	l
c010949d	obj/kernel.asm	/^c010949d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01094a0	obj/kernel.asm	/^c01094a0:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c01094a3	obj/kernel.asm	/^c01094a3:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c01094a8	obj/kernel.asm	/^c01094a8:	89 c8                	mov    %ecx,%eax$/;"	l
c01094aa	obj/kernel.asm	/^c01094aa:	f7 ea                	imul   %edx$/;"	l
c01094ac	obj/kernel.asm	/^c01094ac:	d1 fa                	sar    %edx$/;"	d
c01094ae	obj/kernel.asm	/^c01094ae:	89 c8                	mov    %ecx,%eax$/;"	l
c01094b0	obj/kernel.asm	/^c01094b0:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c01094b3	obj/kernel.asm	/^c01094b3:	29 c2                	sub    %eax,%edx$/;"	l
c01094b5	obj/kernel.asm	/^c01094b5:	89 d0                	mov    %edx,%eax$/;"	l
c01094b7	obj/kernel.asm	/^c01094b7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01094ba	obj/kernel.asm	/^c01094ba:	01 d0                	add    %edx,%eax$/;"	l
c01094bc	obj/kernel.asm	/^c01094bc:	29 c1                	sub    %eax,%ecx$/;"	l
c01094be	obj/kernel.asm	/^c01094be:	89 ca                	mov    %ecx,%edx$/;"	l
c01094c0	obj/kernel.asm	/^c01094c0:	8b 04 95 80 41 15 c0 	mov    -0x3feabe80(,%edx,4),%eax$/;"	l
c01094c7	obj/kernel.asm	/^c01094c7:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01094ca	obj/kernel.asm	/^c01094ca:	0f 84 82 00 00 00    	je     c0109552 <phi_test_condvar+0xce>$/;"	l
c01094d0	obj/kernel.asm	/^c01094d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01094d3	obj/kernel.asm	/^c01094d3:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c01094d6	obj/kernel.asm	/^c01094d6:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c01094db	obj/kernel.asm	/^c01094db:	89 c8                	mov    %ecx,%eax$/;"	l
c01094dd	obj/kernel.asm	/^c01094dd:	f7 ea                	imul   %edx$/;"	l
c01094df	obj/kernel.asm	/^c01094df:	d1 fa                	sar    %edx$/;"	d
c01094e1	obj/kernel.asm	/^c01094e1:	89 c8                	mov    %ecx,%eax$/;"	l
c01094e3	obj/kernel.asm	/^c01094e3:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c01094e6	obj/kernel.asm	/^c01094e6:	29 c2                	sub    %eax,%edx$/;"	l
c01094e8	obj/kernel.asm	/^c01094e8:	89 d0                	mov    %edx,%eax$/;"	l
c01094ea	obj/kernel.asm	/^c01094ea:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01094ed	obj/kernel.asm	/^c01094ed:	01 d0                	add    %edx,%eax$/;"	l
c01094ef	obj/kernel.asm	/^c01094ef:	29 c1                	sub    %eax,%ecx$/;"	l
c01094f1	obj/kernel.asm	/^c01094f1:	89 ca                	mov    %ecx,%edx$/;"	l
c01094f3	obj/kernel.asm	/^c01094f3:	8b 04 95 80 41 15 c0 	mov    -0x3feabe80(,%edx,4),%eax$/;"	l
c01094fa	obj/kernel.asm	/^c01094fa:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01094fd	obj/kernel.asm	/^c01094fd:	74 53                	je     c0109552 <phi_test_condvar+0xce>$/;"	l
c01094ff	obj/kernel.asm	/^c01094ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109502	obj/kernel.asm	/^c0109502:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109506	obj/kernel.asm	/^c0109506:	c7 04 24 ec 76 11 c0 	movl   $0xc01176ec,(%esp)$/;"	l
c010950d	obj/kernel.asm	/^c010950d:	e8 53 6e ff ff       	call   c0100365 <cprintf>$/;"	l
c0109512	obj/kernel.asm	/^c0109512:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109515	obj/kernel.asm	/^c0109515:	c7 04 85 80 41 15 c0 	movl   $0x2,-0x3feabe80(,%eax,4)$/;"	l
c010951c	obj/kernel.asm	/^c010951c:	02 00 00 00 $/;"	l
c0109520	obj/kernel.asm	/^c0109520:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109523	obj/kernel.asm	/^c0109523:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109527	obj/kernel.asm	/^c0109527:	c7 04 24 20 77 11 c0 	movl   $0xc0117720,(%esp)$/;"	l
c010952e	obj/kernel.asm	/^c010952e:	e8 32 6e ff ff       	call   c0100365 <cprintf>$/;"	l
c0109533	obj/kernel.asm	/^c0109533:	a1 80 fa 14 c0       	mov    0xc014fa80,%eax$/;"	l
c0109538	obj/kernel.asm	/^c0109538:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c010953b	obj/kernel.asm	/^c010953b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010953e	obj/kernel.asm	/^c010953e:	89 d0                	mov    %edx,%eax$/;"	l
c0109540	obj/kernel.asm	/^c0109540:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109543	obj/kernel.asm	/^c0109543:	01 d0                	add    %edx,%eax$/;"	l
c0109545	obj/kernel.asm	/^c0109545:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109548	obj/kernel.asm	/^c0109548:	01 c8                	add    %ecx,%eax$/;"	l
c010954a	obj/kernel.asm	/^c010954a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010954d	obj/kernel.asm	/^c010954d:	e8 8f 04 00 00       	call   c01099e1 <cond_signal>$/;"	l
c0109552	obj/kernel.asm	/^c0109552:	c9                   	leave  $/;"	l
c0109553	obj/kernel.asm	/^c0109553:	c3                   	ret    $/;"	l
c0109554	obj/kernel.asm	/^c0109554 <phi_take_forks_condvar>:$/;"	l
c0109554	obj/kernel.asm	/^c0109554:	55                   	push   %ebp$/;"	l
c0109555	obj/kernel.asm	/^c0109555:	89 e5                	mov    %esp,%ebp$/;"	l
c0109557	obj/kernel.asm	/^c0109557:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010955a	obj/kernel.asm	/^c010955a:	a1 80 fa 14 c0       	mov    0xc014fa80,%eax$/;"	l
c010955f	obj/kernel.asm	/^c010955f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109562	obj/kernel.asm	/^c0109562:	e8 98 07 00 00       	call   c0109cff <down>$/;"	l
c0109567	obj/kernel.asm	/^c0109567:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010956a	obj/kernel.asm	/^c010956a:	c7 04 85 80 41 15 c0 	movl   $0x1,-0x3feabe80(,%eax,4)$/;"	l
c0109571	obj/kernel.asm	/^c0109571:	01 00 00 00 $/;"	l
c0109575	obj/kernel.asm	/^c0109575:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109578	obj/kernel.asm	/^c0109578:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010957b	obj/kernel.asm	/^c010957b:	e8 04 ff ff ff       	call   c0109484 <phi_test_condvar>$/;"	l
c0109580	obj/kernel.asm	/^c0109580:	eb 32                	jmp    c01095b4 <phi_take_forks_condvar+0x60>$/;"	l
c0109582	obj/kernel.asm	/^c0109582:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109585	obj/kernel.asm	/^c0109585:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109589	obj/kernel.asm	/^c0109589:	c7 04 24 48 77 11 c0 	movl   $0xc0117748,(%esp)$/;"	l
c0109590	obj/kernel.asm	/^c0109590:	e8 d0 6d ff ff       	call   c0100365 <cprintf>$/;"	l
c0109595	obj/kernel.asm	/^c0109595:	a1 80 fa 14 c0       	mov    0xc014fa80,%eax$/;"	l
c010959a	obj/kernel.asm	/^c010959a:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c010959d	obj/kernel.asm	/^c010959d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01095a0	obj/kernel.asm	/^c01095a0:	89 d0                	mov    %edx,%eax$/;"	l
c01095a2	obj/kernel.asm	/^c01095a2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01095a5	obj/kernel.asm	/^c01095a5:	01 d0                	add    %edx,%eax$/;"	l
c01095a7	obj/kernel.asm	/^c01095a7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01095aa	obj/kernel.asm	/^c01095aa:	01 c8                	add    %ecx,%eax$/;"	l
c01095ac	obj/kernel.asm	/^c01095ac:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01095af	obj/kernel.asm	/^c01095af:	e8 cd 04 00 00       	call   c0109a81 <cond_wait>$/;"	l
c01095b4	obj/kernel.asm	/^c01095b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095b7	obj/kernel.asm	/^c01095b7:	8b 04 85 80 41 15 c0 	mov    -0x3feabe80(,%eax,4),%eax$/;"	l
c01095be	obj/kernel.asm	/^c01095be:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01095c1	obj/kernel.asm	/^c01095c1:	75 bf                	jne    c0109582 <phi_take_forks_condvar+0x2e>$/;"	l
c01095c3	obj/kernel.asm	/^c01095c3:	a1 80 fa 14 c0       	mov    0xc014fa80,%eax$/;"	l
c01095c8	obj/kernel.asm	/^c01095c8:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01095cb	obj/kernel.asm	/^c01095cb:	85 c0                	test   %eax,%eax$/;"	l
c01095cd	obj/kernel.asm	/^c01095cd:	7e 12                	jle    c01095e1 <phi_take_forks_condvar+0x8d>$/;"	l
c01095cf	obj/kernel.asm	/^c01095cf:	a1 80 fa 14 c0       	mov    0xc014fa80,%eax$/;"	l
c01095d4	obj/kernel.asm	/^c01095d4:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01095d7	obj/kernel.asm	/^c01095d7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01095da	obj/kernel.asm	/^c01095da:	e8 05 07 00 00       	call   c0109ce4 <up>$/;"	l
c01095df	obj/kernel.asm	/^c01095df:	eb 0d                	jmp    c01095ee <phi_take_forks_condvar+0x9a>$/;"	l
c01095e1	obj/kernel.asm	/^c01095e1:	a1 80 fa 14 c0       	mov    0xc014fa80,%eax$/;"	l
c01095e6	obj/kernel.asm	/^c01095e6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01095e9	obj/kernel.asm	/^c01095e9:	e8 f6 06 00 00       	call   c0109ce4 <up>$/;"	l
c01095ee	obj/kernel.asm	/^c01095ee:	c9                   	leave  $/;"	l
c01095ef	obj/kernel.asm	/^c01095ef:	c3                   	ret    $/;"	l
c01095f0	obj/kernel.asm	/^c01095f0 <phi_put_forks_condvar>:$/;"	l
c01095f0	obj/kernel.asm	/^c01095f0:	55                   	push   %ebp$/;"	l
c01095f1	obj/kernel.asm	/^c01095f1:	89 e5                	mov    %esp,%ebp$/;"	l
c01095f3	obj/kernel.asm	/^c01095f3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01095f6	obj/kernel.asm	/^c01095f6:	a1 80 fa 14 c0       	mov    0xc014fa80,%eax$/;"	l
c01095fb	obj/kernel.asm	/^c01095fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01095fe	obj/kernel.asm	/^c01095fe:	e8 fc 06 00 00       	call   c0109cff <down>$/;"	l
c0109603	obj/kernel.asm	/^c0109603:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109606	obj/kernel.asm	/^c0109606:	c7 04 85 80 41 15 c0 	movl   $0x0,-0x3feabe80(,%eax,4)$/;"	l
c010960d	obj/kernel.asm	/^c010960d:	00 00 00 00 $/;"	l
c0109611	obj/kernel.asm	/^c0109611:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109614	obj/kernel.asm	/^c0109614:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0109617	obj/kernel.asm	/^c0109617:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c010961c	obj/kernel.asm	/^c010961c:	89 c8                	mov    %ecx,%eax$/;"	l
c010961e	obj/kernel.asm	/^c010961e:	f7 ea                	imul   %edx$/;"	l
c0109620	obj/kernel.asm	/^c0109620:	d1 fa                	sar    %edx$/;"	d
c0109622	obj/kernel.asm	/^c0109622:	89 c8                	mov    %ecx,%eax$/;"	l
c0109624	obj/kernel.asm	/^c0109624:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0109627	obj/kernel.asm	/^c0109627:	29 c2                	sub    %eax,%edx$/;"	l
c0109629	obj/kernel.asm	/^c0109629:	89 d0                	mov    %edx,%eax$/;"	l
c010962b	obj/kernel.asm	/^c010962b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010962e	obj/kernel.asm	/^c010962e:	01 d0                	add    %edx,%eax$/;"	l
c0109630	obj/kernel.asm	/^c0109630:	29 c1                	sub    %eax,%ecx$/;"	l
c0109632	obj/kernel.asm	/^c0109632:	89 ca                	mov    %ecx,%edx$/;"	l
c0109634	obj/kernel.asm	/^c0109634:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0109637	obj/kernel.asm	/^c0109637:	e8 48 fe ff ff       	call   c0109484 <phi_test_condvar>$/;"	l
c010963c	obj/kernel.asm	/^c010963c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010963f	obj/kernel.asm	/^c010963f:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0109642	obj/kernel.asm	/^c0109642:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0109647	obj/kernel.asm	/^c0109647:	89 c8                	mov    %ecx,%eax$/;"	l
c0109649	obj/kernel.asm	/^c0109649:	f7 ea                	imul   %edx$/;"	l
c010964b	obj/kernel.asm	/^c010964b:	d1 fa                	sar    %edx$/;"	d
c010964d	obj/kernel.asm	/^c010964d:	89 c8                	mov    %ecx,%eax$/;"	l
c010964f	obj/kernel.asm	/^c010964f:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0109652	obj/kernel.asm	/^c0109652:	29 c2                	sub    %eax,%edx$/;"	l
c0109654	obj/kernel.asm	/^c0109654:	89 d0                	mov    %edx,%eax$/;"	l
c0109656	obj/kernel.asm	/^c0109656:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109659	obj/kernel.asm	/^c0109659:	01 d0                	add    %edx,%eax$/;"	l
c010965b	obj/kernel.asm	/^c010965b:	29 c1                	sub    %eax,%ecx$/;"	l
c010965d	obj/kernel.asm	/^c010965d:	89 ca                	mov    %ecx,%edx$/;"	l
c010965f	obj/kernel.asm	/^c010965f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0109662	obj/kernel.asm	/^c0109662:	e8 1d fe ff ff       	call   c0109484 <phi_test_condvar>$/;"	l
c0109667	obj/kernel.asm	/^c0109667:	a1 80 fa 14 c0       	mov    0xc014fa80,%eax$/;"	l
c010966c	obj/kernel.asm	/^c010966c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010966f	obj/kernel.asm	/^c010966f:	85 c0                	test   %eax,%eax$/;"	l
c0109671	obj/kernel.asm	/^c0109671:	7e 12                	jle    c0109685 <phi_put_forks_condvar+0x95>$/;"	l
c0109673	obj/kernel.asm	/^c0109673:	a1 80 fa 14 c0       	mov    0xc014fa80,%eax$/;"	l
c0109678	obj/kernel.asm	/^c0109678:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010967b	obj/kernel.asm	/^c010967b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010967e	obj/kernel.asm	/^c010967e:	e8 61 06 00 00       	call   c0109ce4 <up>$/;"	l
c0109683	obj/kernel.asm	/^c0109683:	eb 0d                	jmp    c0109692 <phi_put_forks_condvar+0xa2>$/;"	l
c0109685	obj/kernel.asm	/^c0109685:	a1 80 fa 14 c0       	mov    0xc014fa80,%eax$/;"	l
c010968a	obj/kernel.asm	/^c010968a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010968d	obj/kernel.asm	/^c010968d:	e8 52 06 00 00       	call   c0109ce4 <up>$/;"	l
c0109692	obj/kernel.asm	/^c0109692:	c9                   	leave  $/;"	l
c0109693	obj/kernel.asm	/^c0109693:	c3                   	ret    $/;"	l
c0109694	obj/kernel.asm	/^c0109694 <philosopher_using_condvar>:$/;"	l
c0109694	obj/kernel.asm	/^c0109694:	55                   	push   %ebp$/;"	l
c0109695	obj/kernel.asm	/^c0109695:	89 e5                	mov    %esp,%ebp$/;"	l
c0109697	obj/kernel.asm	/^c0109697:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010969a	obj/kernel.asm	/^c010969a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01096a1	obj/kernel.asm	/^c01096a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096a4	obj/kernel.asm	/^c01096a4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01096a7	obj/kernel.asm	/^c01096a7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01096aa	obj/kernel.asm	/^c01096aa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01096ae	obj/kernel.asm	/^c01096ae:	c7 04 24 84 77 11 c0 	movl   $0xc0117784,(%esp)$/;"	l
c01096b5	obj/kernel.asm	/^c01096b5:	e8 ab 6c ff ff       	call   c0100365 <cprintf>$/;"	l
c01096ba	obj/kernel.asm	/^c01096ba:	eb 62                	jmp    c010971e <philosopher_using_condvar+0x8a>$/;"	l
c01096bc	obj/kernel.asm	/^c01096bc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01096bf	obj/kernel.asm	/^c01096bf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01096c3	obj/kernel.asm	/^c01096c3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01096c6	obj/kernel.asm	/^c01096c6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01096ca	obj/kernel.asm	/^c01096ca:	c7 04 24 a4 77 11 c0 	movl   $0xc01177a4,(%esp)$/;"	l
c01096d1	obj/kernel.asm	/^c01096d1:	e8 8f 6c ff ff       	call   c0100365 <cprintf>$/;"	l
c01096d6	obj/kernel.asm	/^c01096d6:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c01096dd	obj/kernel.asm	/^c01096dd:	e8 b3 49 00 00       	call   c010e095 <do_sleep>$/;"	l
c01096e2	obj/kernel.asm	/^c01096e2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01096e5	obj/kernel.asm	/^c01096e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01096e8	obj/kernel.asm	/^c01096e8:	e8 67 fe ff ff       	call   c0109554 <phi_take_forks_condvar>$/;"	l
c01096ed	obj/kernel.asm	/^c01096ed:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01096f0	obj/kernel.asm	/^c01096f0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01096f4	obj/kernel.asm	/^c01096f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01096f7	obj/kernel.asm	/^c01096f7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01096fb	obj/kernel.asm	/^c01096fb:	c7 04 24 d4 77 11 c0 	movl   $0xc01177d4,(%esp)$/;"	l
c0109702	obj/kernel.asm	/^c0109702:	e8 5e 6c ff ff       	call   c0100365 <cprintf>$/;"	l
c0109707	obj/kernel.asm	/^c0109707:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c010970e	obj/kernel.asm	/^c010970e:	e8 82 49 00 00       	call   c010e095 <do_sleep>$/;"	l
c0109713	obj/kernel.asm	/^c0109713:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109716	obj/kernel.asm	/^c0109716:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109719	obj/kernel.asm	/^c0109719:	e8 d2 fe ff ff       	call   c01095f0 <phi_put_forks_condvar>$/;"	l
c010971e	obj/kernel.asm	/^c010971e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109721	obj/kernel.asm	/^c0109721:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0109724	obj/kernel.asm	/^c0109724:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0109727	obj/kernel.asm	/^c0109727:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010972a	obj/kernel.asm	/^c010972a:	7e 90                	jle    c01096bc <philosopher_using_condvar+0x28>$/;"	l
c010972c	obj/kernel.asm	/^c010972c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010972f	obj/kernel.asm	/^c010972f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109733	obj/kernel.asm	/^c0109733:	c7 04 24 04 78 11 c0 	movl   $0xc0117804,(%esp)$/;"	l
c010973a	obj/kernel.asm	/^c010973a:	e8 26 6c ff ff       	call   c0100365 <cprintf>$/;"	l
c010973f	obj/kernel.asm	/^c010973f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109744	obj/kernel.asm	/^c0109744:	c9                   	leave  $/;"	l
c0109745	obj/kernel.asm	/^c0109745:	c3                   	ret    $/;"	l
c0109746	obj/kernel.asm	/^c0109746 <check_sync>:$/;"	l
c0109746	obj/kernel.asm	/^c0109746:	55                   	push   %ebp$/;"	l
c0109747	obj/kernel.asm	/^c0109747:	89 e5                	mov    %esp,%ebp$/;"	l
c0109749	obj/kernel.asm	/^c0109749:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010974c	obj/kernel.asm	/^c010974c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0109753	obj/kernel.asm	/^c0109753:	00 $/;"	l
c0109754	obj/kernel.asm	/^c0109754:	c7 04 24 48 41 15 c0 	movl   $0xc0154148,(%esp)$/;"	l
c010975b	obj/kernel.asm	/^c010975b:	e8 11 04 00 00       	call   c0109b71 <sem_init>$/;"	l
c0109760	obj/kernel.asm	/^c0109760:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109767	obj/kernel.asm	/^c0109767:	e9 94 00 00 00       	jmp    c0109800 <check_sync+0xba>$/;"	l
c010976c	obj/kernel.asm	/^c010976c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010976f	obj/kernel.asm	/^c010976f:	89 d0                	mov    %edx,%eax$/;"	l
c0109771	obj/kernel.asm	/^c0109771:	01 c0                	add    %eax,%eax$/;"	l
c0109773	obj/kernel.asm	/^c0109773:	01 d0                	add    %edx,%eax$/;"	l
c0109775	obj/kernel.asm	/^c0109775:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109778	obj/kernel.asm	/^c0109778:	05 c0 41 15 c0       	add    $0xc01541c0,%eax$/;"	l
c010977d	obj/kernel.asm	/^c010977d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0109784	obj/kernel.asm	/^c0109784:	00 $/;"	l
c0109785	obj/kernel.asm	/^c0109785:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109788	obj/kernel.asm	/^c0109788:	e8 e4 03 00 00       	call   c0109b71 <sem_init>$/;"	l
c010978d	obj/kernel.asm	/^c010978d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109790	obj/kernel.asm	/^c0109790:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0109797	obj/kernel.asm	/^c0109797:	00 $/;"	l
c0109798	obj/kernel.asm	/^c0109798:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010979c	obj/kernel.asm	/^c010979c:	c7 04 24 d2 93 10 c0 	movl   $0xc01093d2,(%esp)$/;"	l
c01097a3	obj/kernel.asm	/^c01097a3:	e8 fe 2d 00 00       	call   c010c5a6 <kernel_thread>$/;"	l
c01097a8	obj/kernel.asm	/^c01097a8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01097ab	obj/kernel.asm	/^c01097ab:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01097af	obj/kernel.asm	/^c01097af:	7f 1c                	jg     c01097cd <check_sync+0x87>$/;"	l
c01097b1	obj/kernel.asm	/^c01097b1:	c7 44 24 08 24 78 11 	movl   $0xc0117824,0x8(%esp)$/;"	l
c01097b8	obj/kernel.asm	/^c01097b8:	c0 $/;"	l
c01097b9	obj/kernel.asm	/^c01097b9:	c7 44 24 04 c0 00 00 	movl   $0xc0,0x4(%esp)$/;"	l
c01097c0	obj/kernel.asm	/^c01097c0:	00 $/;"	l
c01097c1	obj/kernel.asm	/^c01097c1:	c7 04 24 56 78 11 c0 	movl   $0xc0117856,(%esp)$/;"	l
c01097c8	obj/kernel.asm	/^c01097c8:	e8 fb 76 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01097cd	obj/kernel.asm	/^c01097cd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01097d0	obj/kernel.asm	/^c01097d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01097d3	obj/kernel.asm	/^c01097d3:	e8 5a 2d 00 00       	call   c010c532 <find_proc>$/;"	l
c01097d8	obj/kernel.asm	/^c01097d8:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01097db	obj/kernel.asm	/^c01097db:	89 04 95 94 41 15 c0 	mov    %eax,-0x3feabe6c(,%edx,4)$/;"	l
c01097e2	obj/kernel.asm	/^c01097e2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01097e5	obj/kernel.asm	/^c01097e5:	8b 04 85 94 41 15 c0 	mov    -0x3feabe6c(,%eax,4),%eax$/;"	l
c01097ec	obj/kernel.asm	/^c01097ec:	c7 44 24 04 6d 78 11 	movl   $0xc011786d,0x4(%esp)$/;"	l
c01097f3	obj/kernel.asm	/^c01097f3:	c0 $/;"	l
c01097f4	obj/kernel.asm	/^c01097f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01097f7	obj/kernel.asm	/^c01097f7:	e8 1d 29 00 00       	call   c010c119 <set_proc_name>$/;"	l
c01097fc	obj/kernel.asm	/^c01097fc:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0109800	obj/kernel.asm	/^c0109800:	83 7d f4 04          	cmpl   $0x4,-0xc(%ebp)$/;"	l
c0109804	obj/kernel.asm	/^c0109804:	0f 8e 62 ff ff ff    	jle    c010976c <check_sync+0x26>$/;"	l
c010980a	obj/kernel.asm	/^c010980a:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
c0109811	obj/kernel.asm	/^c0109811:	00 $/;"	l
c0109812	obj/kernel.asm	/^c0109812:	c7 04 24 60 41 15 c0 	movl   $0xc0154160,(%esp)$/;"	l
c0109819	obj/kernel.asm	/^c0109819:	e8 99 00 00 00       	call   c01098b7 <monitor_init>$/;"	l
c010981e	obj/kernel.asm	/^c010981e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109825	obj/kernel.asm	/^c0109825:	e9 81 00 00 00       	jmp    c01098ab <check_sync+0x165>$/;"	l
c010982a	obj/kernel.asm	/^c010982a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010982d	obj/kernel.asm	/^c010982d:	c7 04 85 80 41 15 c0 	movl   $0x0,-0x3feabe80(,%eax,4)$/;"	l
c0109834	obj/kernel.asm	/^c0109834:	00 00 00 00 $/;"	l
c0109838	obj/kernel.asm	/^c0109838:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010983b	obj/kernel.asm	/^c010983b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0109842	obj/kernel.asm	/^c0109842:	00 $/;"	l
c0109843	obj/kernel.asm	/^c0109843:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109847	obj/kernel.asm	/^c0109847:	c7 04 24 94 96 10 c0 	movl   $0xc0109694,(%esp)$/;"	l
c010984e	obj/kernel.asm	/^c010984e:	e8 53 2d 00 00       	call   c010c5a6 <kernel_thread>$/;"	l
c0109853	obj/kernel.asm	/^c0109853:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109856	obj/kernel.asm	/^c0109856:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010985a	obj/kernel.asm	/^c010985a:	7f 1c                	jg     c0109878 <check_sync+0x132>$/;"	l
c010985c	obj/kernel.asm	/^c010985c:	c7 44 24 08 84 78 11 	movl   $0xc0117884,0x8(%esp)$/;"	l
c0109863	obj/kernel.asm	/^c0109863:	c0 $/;"	l
c0109864	obj/kernel.asm	/^c0109864:	c7 44 24 04 cc 00 00 	movl   $0xcc,0x4(%esp)$/;"	l
c010986b	obj/kernel.asm	/^c010986b:	00 $/;"	l
c010986c	obj/kernel.asm	/^c010986c:	c7 04 24 56 78 11 c0 	movl   $0xc0117856,(%esp)$/;"	l
c0109873	obj/kernel.asm	/^c0109873:	e8 50 76 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0109878	obj/kernel.asm	/^c0109878:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010987b	obj/kernel.asm	/^c010987b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010987e	obj/kernel.asm	/^c010987e:	e8 af 2c 00 00       	call   c010c532 <find_proc>$/;"	l
c0109883	obj/kernel.asm	/^c0109883:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109886	obj/kernel.asm	/^c0109886:	89 04 95 34 41 15 c0 	mov    %eax,-0x3feabecc(,%edx,4)$/;"	l
c010988d	obj/kernel.asm	/^c010988d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109890	obj/kernel.asm	/^c0109890:	8b 04 85 34 41 15 c0 	mov    -0x3feabecc(,%eax,4),%eax$/;"	l
c0109897	obj/kernel.asm	/^c0109897:	c7 44 24 04 b4 78 11 	movl   $0xc01178b4,0x4(%esp)$/;"	l
c010989e	obj/kernel.asm	/^c010989e:	c0 $/;"	l
c010989f	obj/kernel.asm	/^c010989f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01098a2	obj/kernel.asm	/^c01098a2:	e8 72 28 00 00       	call   c010c119 <set_proc_name>$/;"	l
c01098a7	obj/kernel.asm	/^c01098a7:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01098ab	obj/kernel.asm	/^c01098ab:	83 7d f4 04          	cmpl   $0x4,-0xc(%ebp)$/;"	l
c01098af	obj/kernel.asm	/^c01098af:	0f 8e 75 ff ff ff    	jle    c010982a <check_sync+0xe4>$/;"	l
c01098b5	obj/kernel.asm	/^c01098b5:	c9                   	leave  $/;"	l
c01098b6	obj/kernel.asm	/^c01098b6:	c3                   	ret    $/;"	l
c01098b7	obj/kernel.asm	/^c01098b7 <monitor_init>:$/;"	l
c01098b7	obj/kernel.asm	/^c01098b7:	55                   	push   %ebp$/;"	l
c01098b8	obj/kernel.asm	/^c01098b8:	89 e5                	mov    %esp,%ebp$/;"	l
c01098ba	obj/kernel.asm	/^c01098ba:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01098bd	obj/kernel.asm	/^c01098bd:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01098c1	obj/kernel.asm	/^c01098c1:	75 24                	jne    c01098e7 <monitor_init+0x30>$/;"	l
c01098c3	obj/kernel.asm	/^c01098c3:	c7 44 24 0c d0 78 11 	movl   $0xc01178d0,0xc(%esp)$/;"	l
c01098ca	obj/kernel.asm	/^c01098ca:	c0 $/;"	l
c01098cb	obj/kernel.asm	/^c01098cb:	c7 44 24 08 d9 78 11 	movl   $0xc01178d9,0x8(%esp)$/;"	l
c01098d2	obj/kernel.asm	/^c01098d2:	c0 $/;"	l
c01098d3	obj/kernel.asm	/^c01098d3:	c7 44 24 04 0b 00 00 	movl   $0xb,0x4(%esp)$/;"	l
c01098da	obj/kernel.asm	/^c01098da:	00 $/;"	l
c01098db	obj/kernel.asm	/^c01098db:	c7 04 24 ee 78 11 c0 	movl   $0xc01178ee,(%esp)$/;"	l
c01098e2	obj/kernel.asm	/^c01098e2:	e8 e1 75 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01098e7	obj/kernel.asm	/^c01098e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098ea	obj/kernel.asm	/^c01098ea:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c01098f1	obj/kernel.asm	/^c01098f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098f4	obj/kernel.asm	/^c01098f4:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c01098fb	obj/kernel.asm	/^c01098fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098fe	obj/kernel.asm	/^c01098fe:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0109905	obj/kernel.asm	/^c0109905:	00 $/;"	l
c0109906	obj/kernel.asm	/^c0109906:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109909	obj/kernel.asm	/^c0109909:	e8 63 02 00 00       	call   c0109b71 <sem_init>$/;"	l
c010990e	obj/kernel.asm	/^c010990e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109911	obj/kernel.asm	/^c0109911:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109914	obj/kernel.asm	/^c0109914:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010991b	obj/kernel.asm	/^c010991b:	00 $/;"	l
c010991c	obj/kernel.asm	/^c010991c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010991f	obj/kernel.asm	/^c010991f:	e8 4d 02 00 00       	call   c0109b71 <sem_init>$/;"	l
c0109924	obj/kernel.asm	/^c0109924:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109927	obj/kernel.asm	/^c0109927:	89 d0                	mov    %edx,%eax$/;"	l
c0109929	obj/kernel.asm	/^c0109929:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010992c	obj/kernel.asm	/^c010992c:	01 d0                	add    %edx,%eax$/;"	l
c010992e	obj/kernel.asm	/^c010992e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109931	obj/kernel.asm	/^c0109931:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109934	obj/kernel.asm	/^c0109934:	e8 a6 b3 ff ff       	call   c0104cdf <kmalloc>$/;"	l
c0109939	obj/kernel.asm	/^c0109939:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010993c	obj/kernel.asm	/^c010993c:	89 42 1c             	mov    %eax,0x1c(%edx)$/;"	l
c010993f	obj/kernel.asm	/^c010993f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109942	obj/kernel.asm	/^c0109942:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0109945	obj/kernel.asm	/^c0109945:	85 c0                	test   %eax,%eax$/;"	l
c0109947	obj/kernel.asm	/^c0109947:	75 24                	jne    c010996d <monitor_init+0xb6>$/;"	l
c0109949	obj/kernel.asm	/^c0109949:	c7 44 24 0c 02 79 11 	movl   $0xc0117902,0xc(%esp)$/;"	l
c0109950	obj/kernel.asm	/^c0109950:	c0 $/;"	l
c0109951	obj/kernel.asm	/^c0109951:	c7 44 24 08 d9 78 11 	movl   $0xc01178d9,0x8(%esp)$/;"	l
c0109958	obj/kernel.asm	/^c0109958:	c0 $/;"	l
c0109959	obj/kernel.asm	/^c0109959:	c7 44 24 04 11 00 00 	movl   $0x11,0x4(%esp)$/;"	l
c0109960	obj/kernel.asm	/^c0109960:	00 $/;"	l
c0109961	obj/kernel.asm	/^c0109961:	c7 04 24 ee 78 11 c0 	movl   $0xc01178ee,(%esp)$/;"	l
c0109968	obj/kernel.asm	/^c0109968:	e8 5b 75 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010996d	obj/kernel.asm	/^c010996d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109974	obj/kernel.asm	/^c0109974:	eb 61                	jmp    c01099d7 <monitor_init+0x120>$/;"	l
c0109976	obj/kernel.asm	/^c0109976:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109979	obj/kernel.asm	/^c0109979:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c010997c	obj/kernel.asm	/^c010997c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010997f	obj/kernel.asm	/^c010997f:	89 d0                	mov    %edx,%eax$/;"	l
c0109981	obj/kernel.asm	/^c0109981:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109984	obj/kernel.asm	/^c0109984:	01 d0                	add    %edx,%eax$/;"	l
c0109986	obj/kernel.asm	/^c0109986:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109989	obj/kernel.asm	/^c0109989:	01 c8                	add    %ecx,%eax$/;"	l
c010998b	obj/kernel.asm	/^c010998b:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0109992	obj/kernel.asm	/^c0109992:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109995	obj/kernel.asm	/^c0109995:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c0109998	obj/kernel.asm	/^c0109998:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010999b	obj/kernel.asm	/^c010999b:	89 d0                	mov    %edx,%eax$/;"	l
c010999d	obj/kernel.asm	/^c010999d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01099a0	obj/kernel.asm	/^c01099a0:	01 d0                	add    %edx,%eax$/;"	l
c01099a2	obj/kernel.asm	/^c01099a2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01099a5	obj/kernel.asm	/^c01099a5:	01 c8                	add    %ecx,%eax$/;"	l
c01099a7	obj/kernel.asm	/^c01099a7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01099ae	obj/kernel.asm	/^c01099ae:	00 $/;"	l
c01099af	obj/kernel.asm	/^c01099af:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01099b2	obj/kernel.asm	/^c01099b2:	e8 ba 01 00 00       	call   c0109b71 <sem_init>$/;"	l
c01099b7	obj/kernel.asm	/^c01099b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099ba	obj/kernel.asm	/^c01099ba:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c01099bd	obj/kernel.asm	/^c01099bd:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01099c0	obj/kernel.asm	/^c01099c0:	89 d0                	mov    %edx,%eax$/;"	l
c01099c2	obj/kernel.asm	/^c01099c2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01099c5	obj/kernel.asm	/^c01099c5:	01 d0                	add    %edx,%eax$/;"	l
c01099c7	obj/kernel.asm	/^c01099c7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01099ca	obj/kernel.asm	/^c01099ca:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c01099cd	obj/kernel.asm	/^c01099cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099d0	obj/kernel.asm	/^c01099d0:	89 42 10             	mov    %eax,0x10(%edx)$/;"	l
c01099d3	obj/kernel.asm	/^c01099d3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01099d7	obj/kernel.asm	/^c01099d7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01099da	obj/kernel.asm	/^c01099da:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01099dd	obj/kernel.asm	/^c01099dd:	72 97                	jb     c0109976 <monitor_init+0xbf>$/;"	l
c01099df	obj/kernel.asm	/^c01099df:	c9                   	leave  $/;"	l
c01099e0	obj/kernel.asm	/^c01099e0:	c3                   	ret    $/;"	l
c01099e1	obj/kernel.asm	/^c01099e1 <cond_signal>:$/;"	l
c01099e1	obj/kernel.asm	/^c01099e1:	55                   	push   %ebp$/;"	l
c01099e2	obj/kernel.asm	/^c01099e2:	89 e5                	mov    %esp,%ebp$/;"	l
c01099e4	obj/kernel.asm	/^c01099e4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01099e7	obj/kernel.asm	/^c01099e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099ea	obj/kernel.asm	/^c01099ea:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01099ed	obj/kernel.asm	/^c01099ed:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c01099f0	obj/kernel.asm	/^c01099f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099f3	obj/kernel.asm	/^c01099f3:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01099f6	obj/kernel.asm	/^c01099f6:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c01099fa	obj/kernel.asm	/^c01099fa:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01099fe	obj/kernel.asm	/^c01099fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a01	obj/kernel.asm	/^c0109a01:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109a05	obj/kernel.asm	/^c0109a05:	c7 04 24 10 79 11 c0 	movl   $0xc0117910,(%esp)$/;"	l
c0109a0c	obj/kernel.asm	/^c0109a0c:	e8 54 69 ff ff       	call   c0100365 <cprintf>$/;"	l
c0109a11	obj/kernel.asm	/^c0109a11:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a14	obj/kernel.asm	/^c0109a14:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109a17	obj/kernel.asm	/^c0109a17:	85 c0                	test   %eax,%eax$/;"	l
c0109a19	obj/kernel.asm	/^c0109a19:	7e 3a                	jle    c0109a55 <cond_signal+0x74>$/;"	l
c0109a1b	obj/kernel.asm	/^c0109a1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a1e	obj/kernel.asm	/^c0109a1e:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109a21	obj/kernel.asm	/^c0109a21:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109a24	obj/kernel.asm	/^c0109a24:	83 c2 01             	add    $0x1,%edx$/;"	l
c0109a27	obj/kernel.asm	/^c0109a27:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0109a2a	obj/kernel.asm	/^c0109a2a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a2d	obj/kernel.asm	/^c0109a2d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a30	obj/kernel.asm	/^c0109a30:	e8 af 02 00 00       	call   c0109ce4 <up>$/;"	l
c0109a35	obj/kernel.asm	/^c0109a35:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a38	obj/kernel.asm	/^c0109a38:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109a3b	obj/kernel.asm	/^c0109a3b:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109a3e	obj/kernel.asm	/^c0109a3e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a41	obj/kernel.asm	/^c0109a41:	e8 b9 02 00 00       	call   c0109cff <down>$/;"	l
c0109a46	obj/kernel.asm	/^c0109a46:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a49	obj/kernel.asm	/^c0109a49:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109a4c	obj/kernel.asm	/^c0109a4c:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109a4f	obj/kernel.asm	/^c0109a4f:	83 ea 01             	sub    $0x1,%edx$/;"	l
c0109a52	obj/kernel.asm	/^c0109a52:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0109a55	obj/kernel.asm	/^c0109a55:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a58	obj/kernel.asm	/^c0109a58:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109a5b	obj/kernel.asm	/^c0109a5b:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109a5e	obj/kernel.asm	/^c0109a5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a61	obj/kernel.asm	/^c0109a61:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109a64	obj/kernel.asm	/^c0109a64:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0109a68	obj/kernel.asm	/^c0109a68:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109a6c	obj/kernel.asm	/^c0109a6c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a6f	obj/kernel.asm	/^c0109a6f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109a73	obj/kernel.asm	/^c0109a73:	c7 04 24 58 79 11 c0 	movl   $0xc0117958,(%esp)$/;"	l
c0109a7a	obj/kernel.asm	/^c0109a7a:	e8 e6 68 ff ff       	call   c0100365 <cprintf>$/;"	l
c0109a7f	obj/kernel.asm	/^c0109a7f:	c9                   	leave  $/;"	l
c0109a80	obj/kernel.asm	/^c0109a80:	c3                   	ret    $/;"	l
c0109a81	obj/kernel.asm	/^c0109a81 <cond_wait>:$/;"	l
c0109a81	obj/kernel.asm	/^c0109a81:	55                   	push   %ebp$/;"	l
c0109a82	obj/kernel.asm	/^c0109a82:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a84	obj/kernel.asm	/^c0109a84:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109a87	obj/kernel.asm	/^c0109a87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a8a	obj/kernel.asm	/^c0109a8a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109a8d	obj/kernel.asm	/^c0109a8d:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109a90	obj/kernel.asm	/^c0109a90:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a93	obj/kernel.asm	/^c0109a93:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109a96	obj/kernel.asm	/^c0109a96:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0109a9a	obj/kernel.asm	/^c0109a9a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109a9e	obj/kernel.asm	/^c0109a9e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109aa1	obj/kernel.asm	/^c0109aa1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109aa5	obj/kernel.asm	/^c0109aa5:	c7 04 24 9c 79 11 c0 	movl   $0xc011799c,(%esp)$/;"	l
c0109aac	obj/kernel.asm	/^c0109aac:	e8 b4 68 ff ff       	call   c0100365 <cprintf>$/;"	l
c0109ab1	obj/kernel.asm	/^c0109ab1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109ab4	obj/kernel.asm	/^c0109ab4:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109ab7	obj/kernel.asm	/^c0109ab7:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0109aba	obj/kernel.asm	/^c0109aba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109abd	obj/kernel.asm	/^c0109abd:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0109ac0	obj/kernel.asm	/^c0109ac0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109ac3	obj/kernel.asm	/^c0109ac3:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109ac6	obj/kernel.asm	/^c0109ac6:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109ac9	obj/kernel.asm	/^c0109ac9:	85 c0                	test   %eax,%eax$/;"	l
c0109acb	obj/kernel.asm	/^c0109acb:	7e 13                	jle    c0109ae0 <cond_wait+0x5f>$/;"	l
c0109acd	obj/kernel.asm	/^c0109acd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109ad0	obj/kernel.asm	/^c0109ad0:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109ad3	obj/kernel.asm	/^c0109ad3:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109ad6	obj/kernel.asm	/^c0109ad6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109ad9	obj/kernel.asm	/^c0109ad9:	e8 06 02 00 00       	call   c0109ce4 <up>$/;"	l
c0109ade	obj/kernel.asm	/^c0109ade:	eb 0e                	jmp    c0109aee <cond_wait+0x6d>$/;"	l
c0109ae0	obj/kernel.asm	/^c0109ae0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109ae3	obj/kernel.asm	/^c0109ae3:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109ae6	obj/kernel.asm	/^c0109ae6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109ae9	obj/kernel.asm	/^c0109ae9:	e8 f6 01 00 00       	call   c0109ce4 <up>$/;"	l
c0109aee	obj/kernel.asm	/^c0109aee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109af1	obj/kernel.asm	/^c0109af1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109af4	obj/kernel.asm	/^c0109af4:	e8 06 02 00 00       	call   c0109cff <down>$/;"	l
c0109af9	obj/kernel.asm	/^c0109af9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109afc	obj/kernel.asm	/^c0109afc:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109aff	obj/kernel.asm	/^c0109aff:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0109b02	obj/kernel.asm	/^c0109b02:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b05	obj/kernel.asm	/^c0109b05:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0109b08	obj/kernel.asm	/^c0109b08:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b0b	obj/kernel.asm	/^c0109b0b:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109b0e	obj/kernel.asm	/^c0109b0e:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109b11	obj/kernel.asm	/^c0109b11:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b14	obj/kernel.asm	/^c0109b14:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109b17	obj/kernel.asm	/^c0109b17:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0109b1b	obj/kernel.asm	/^c0109b1b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109b1f	obj/kernel.asm	/^c0109b1f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b22	obj/kernel.asm	/^c0109b22:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109b26	obj/kernel.asm	/^c0109b26:	c7 04 24 e0 79 11 c0 	movl   $0xc01179e0,(%esp)$/;"	l
c0109b2d	obj/kernel.asm	/^c0109b2d:	e8 33 68 ff ff       	call   c0100365 <cprintf>$/;"	l
c0109b32	obj/kernel.asm	/^c0109b32:	c9                   	leave  $/;"	l
c0109b33	obj/kernel.asm	/^c0109b33:	c3                   	ret    $/;"	l
c0109b34	obj/kernel.asm	/^c0109b34 <__intr_save>:$/;"	l
c0109b34	obj/kernel.asm	/^c0109b34:	55                   	push   %ebp$/;"	l
c0109b35	obj/kernel.asm	/^c0109b35:	89 e5                	mov    %esp,%ebp$/;"	l
c0109b37	obj/kernel.asm	/^c0109b37:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109b3a	obj/kernel.asm	/^c0109b3a:	9c                   	pushf  $/;"	l
c0109b3b	obj/kernel.asm	/^c0109b3b:	58                   	pop    %eax$/;"	l
c0109b3c	obj/kernel.asm	/^c0109b3c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109b3f	obj/kernel.asm	/^c0109b3f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b42	obj/kernel.asm	/^c0109b42:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0109b47	obj/kernel.asm	/^c0109b47:	85 c0                	test   %eax,%eax$/;"	l
c0109b49	obj/kernel.asm	/^c0109b49:	74 0c                	je     c0109b57 <__intr_save+0x23>$/;"	l
c0109b4b	obj/kernel.asm	/^c0109b4b:	e8 da 85 ff ff       	call   c010212a <intr_disable>$/;"	l
c0109b50	obj/kernel.asm	/^c0109b50:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0109b55	obj/kernel.asm	/^c0109b55:	eb 05                	jmp    c0109b5c <__intr_save+0x28>$/;"	l
c0109b57	obj/kernel.asm	/^c0109b57:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109b5c	obj/kernel.asm	/^c0109b5c:	c9                   	leave  $/;"	l
c0109b5d	obj/kernel.asm	/^c0109b5d:	c3                   	ret    $/;"	l
c0109b5e	obj/kernel.asm	/^c0109b5e <__intr_restore>:$/;"	l
c0109b5e	obj/kernel.asm	/^c0109b5e:	55                   	push   %ebp$/;"	l
c0109b5f	obj/kernel.asm	/^c0109b5f:	89 e5                	mov    %esp,%ebp$/;"	l
c0109b61	obj/kernel.asm	/^c0109b61:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109b64	obj/kernel.asm	/^c0109b64:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109b68	obj/kernel.asm	/^c0109b68:	74 05                	je     c0109b6f <__intr_restore+0x11>$/;"	l
c0109b6a	obj/kernel.asm	/^c0109b6a:	e8 b5 85 ff ff       	call   c0102124 <intr_enable>$/;"	l
c0109b6f	obj/kernel.asm	/^c0109b6f:	c9                   	leave  $/;"	l
c0109b70	obj/kernel.asm	/^c0109b70:	c3                   	ret    $/;"	l
c0109b71	obj/kernel.asm	/^c0109b71 <sem_init>:$/;"	l
c0109b71	obj/kernel.asm	/^c0109b71:	55                   	push   %ebp$/;"	l
c0109b72	obj/kernel.asm	/^c0109b72:	89 e5                	mov    %esp,%ebp$/;"	l
c0109b74	obj/kernel.asm	/^c0109b74:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109b77	obj/kernel.asm	/^c0109b77:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b7a	obj/kernel.asm	/^c0109b7a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109b7d	obj/kernel.asm	/^c0109b7d:	89 10                	mov    %edx,(%eax)$/;"	l
c0109b7f	obj/kernel.asm	/^c0109b7f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b82	obj/kernel.asm	/^c0109b82:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109b85	obj/kernel.asm	/^c0109b85:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109b88	obj/kernel.asm	/^c0109b88:	e8 33 02 00 00       	call   c0109dc0 <wait_queue_init>$/;"	l
c0109b8d	obj/kernel.asm	/^c0109b8d:	c9                   	leave  $/;"	l
c0109b8e	obj/kernel.asm	/^c0109b8e:	c3                   	ret    $/;"	l
c0109b8f	obj/kernel.asm	/^c0109b8f <__up>:$/;"	l
c0109b8f	obj/kernel.asm	/^c0109b8f:	55                   	push   %ebp$/;"	l
c0109b90	obj/kernel.asm	/^c0109b90:	89 e5                	mov    %esp,%ebp$/;"	l
c0109b92	obj/kernel.asm	/^c0109b92:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109b95	obj/kernel.asm	/^c0109b95:	e8 9a ff ff ff       	call   c0109b34 <__intr_save>$/;"	l
c0109b9a	obj/kernel.asm	/^c0109b9a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109b9d	obj/kernel.asm	/^c0109b9d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109ba0	obj/kernel.asm	/^c0109ba0:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109ba3	obj/kernel.asm	/^c0109ba3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109ba6	obj/kernel.asm	/^c0109ba6:	e8 69 04 00 00       	call   c010a014 <wait_queue_first>$/;"	l
c0109bab	obj/kernel.asm	/^c0109bab:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109bae	obj/kernel.asm	/^c0109bae:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109bb2	obj/kernel.asm	/^c0109bb2:	75 0f                	jne    c0109bc3 <__up+0x34>$/;"	l
c0109bb4	obj/kernel.asm	/^c0109bb4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109bb7	obj/kernel.asm	/^c0109bb7:	8b 00                	mov    (%eax),%eax$/;"	l
c0109bb9	obj/kernel.asm	/^c0109bb9:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0109bbc	obj/kernel.asm	/^c0109bbc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109bbf	obj/kernel.asm	/^c0109bbf:	89 10                	mov    %edx,(%eax)$/;"	l
c0109bc1	obj/kernel.asm	/^c0109bc1:	eb 58                	jmp    c0109c1b <__up+0x8c>$/;"	l
c0109bc3	obj/kernel.asm	/^c0109bc3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109bc6	obj/kernel.asm	/^c0109bc6:	8b 00                	mov    (%eax),%eax$/;"	l
c0109bc8	obj/kernel.asm	/^c0109bc8:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c0109bce	obj/kernel.asm	/^c0109bce:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0109bd1	obj/kernel.asm	/^c0109bd1:	74 24                	je     c0109bf7 <__up+0x68>$/;"	l
c0109bd3	obj/kernel.asm	/^c0109bd3:	c7 44 24 0c 24 7a 11 	movl   $0xc0117a24,0xc(%esp)$/;"	l
c0109bda	obj/kernel.asm	/^c0109bda:	c0 $/;"	l
c0109bdb	obj/kernel.asm	/^c0109bdb:	c7 44 24 08 49 7a 11 	movl   $0xc0117a49,0x8(%esp)$/;"	l
c0109be2	obj/kernel.asm	/^c0109be2:	c0 $/;"	l
c0109be3	obj/kernel.asm	/^c0109be3:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%esp)$/;"	l
c0109bea	obj/kernel.asm	/^c0109bea:	00 $/;"	l
c0109beb	obj/kernel.asm	/^c0109beb:	c7 04 24 5e 7a 11 c0 	movl   $0xc0117a5e,(%esp)$/;"	l
c0109bf2	obj/kernel.asm	/^c0109bf2:	e8 d1 72 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0109bf7	obj/kernel.asm	/^c0109bf7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109bfa	obj/kernel.asm	/^c0109bfa:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0109bfd	obj/kernel.asm	/^c0109bfd:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0109c04	obj/kernel.asm	/^c0109c04:	00 $/;"	l
c0109c05	obj/kernel.asm	/^c0109c05:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109c08	obj/kernel.asm	/^c0109c08:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109c0c	obj/kernel.asm	/^c0109c0c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109c0f	obj/kernel.asm	/^c0109c0f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109c13	obj/kernel.asm	/^c0109c13:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0109c16	obj/kernel.asm	/^c0109c16:	e8 95 04 00 00       	call   c010a0b0 <wakeup_wait>$/;"	l
c0109c1b	obj/kernel.asm	/^c0109c1b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c1e	obj/kernel.asm	/^c0109c1e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109c21	obj/kernel.asm	/^c0109c21:	e8 38 ff ff ff       	call   c0109b5e <__intr_restore>$/;"	l
c0109c26	obj/kernel.asm	/^c0109c26:	c9                   	leave  $/;"	l
c0109c27	obj/kernel.asm	/^c0109c27:	c3                   	ret    $/;"	l
c0109c28	obj/kernel.asm	/^c0109c28 <__down>:$/;"	l
c0109c28	obj/kernel.asm	/^c0109c28:	55                   	push   %ebp$/;"	l
c0109c29	obj/kernel.asm	/^c0109c29:	89 e5                	mov    %esp,%ebp$/;"	l
c0109c2b	obj/kernel.asm	/^c0109c2b:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0109c2e	obj/kernel.asm	/^c0109c2e:	e8 01 ff ff ff       	call   c0109b34 <__intr_save>$/;"	l
c0109c33	obj/kernel.asm	/^c0109c33:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109c36	obj/kernel.asm	/^c0109c36:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c39	obj/kernel.asm	/^c0109c39:	8b 00                	mov    (%eax),%eax$/;"	l
c0109c3b	obj/kernel.asm	/^c0109c3b:	85 c0                	test   %eax,%eax$/;"	l
c0109c3d	obj/kernel.asm	/^c0109c3d:	7e 22                	jle    c0109c61 <__down+0x39>$/;"	l
c0109c3f	obj/kernel.asm	/^c0109c3f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c42	obj/kernel.asm	/^c0109c42:	8b 00                	mov    (%eax),%eax$/;"	l
c0109c44	obj/kernel.asm	/^c0109c44:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0109c47	obj/kernel.asm	/^c0109c47:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c4a	obj/kernel.asm	/^c0109c4a:	89 10                	mov    %edx,(%eax)$/;"	l
c0109c4c	obj/kernel.asm	/^c0109c4c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c4f	obj/kernel.asm	/^c0109c4f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109c52	obj/kernel.asm	/^c0109c52:	e8 07 ff ff ff       	call   c0109b5e <__intr_restore>$/;"	l
c0109c57	obj/kernel.asm	/^c0109c57:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109c5c	obj/kernel.asm	/^c0109c5c:	e9 81 00 00 00       	jmp    c0109ce2 <__down+0xba>$/;"	l
c0109c61	obj/kernel.asm	/^c0109c61:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0109c64	obj/kernel.asm	/^c0109c64:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109c67	obj/kernel.asm	/^c0109c67:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c6a	obj/kernel.asm	/^c0109c6a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0109c6d	obj/kernel.asm	/^c0109c6d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109c70	obj/kernel.asm	/^c0109c70:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109c74	obj/kernel.asm	/^c0109c74:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109c77	obj/kernel.asm	/^c0109c77:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109c7b	obj/kernel.asm	/^c0109c7b:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0109c7e	obj/kernel.asm	/^c0109c7e:	e8 34 05 00 00       	call   c010a1b7 <wait_current_set>$/;"	l
c0109c83	obj/kernel.asm	/^c0109c83:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c86	obj/kernel.asm	/^c0109c86:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109c89	obj/kernel.asm	/^c0109c89:	e8 d0 fe ff ff       	call   c0109b5e <__intr_restore>$/;"	l
c0109c8e	obj/kernel.asm	/^c0109c8e:	e8 12 4a 00 00       	call   c010e6a5 <schedule>$/;"	l
c0109c93	obj/kernel.asm	/^c0109c93:	e8 9c fe ff ff       	call   c0109b34 <__intr_save>$/;"	l
c0109c98	obj/kernel.asm	/^c0109c98:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109c9b	obj/kernel.asm	/^c0109c9b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109c9e	obj/kernel.asm	/^c0109c9e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109ca1	obj/kernel.asm	/^c0109ca1:	e8 e2 03 00 00       	call   c010a088 <wait_in_queue>$/;"	l
c0109ca6	obj/kernel.asm	/^c0109ca6:	85 c0                	test   %eax,%eax$/;"	l
c0109ca8	obj/kernel.asm	/^c0109ca8:	74 15                	je     c0109cbf <__down+0x97>$/;"	l
c0109caa	obj/kernel.asm	/^c0109caa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109cad	obj/kernel.asm	/^c0109cad:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0109cb0	obj/kernel.asm	/^c0109cb0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109cb3	obj/kernel.asm	/^c0109cb3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109cb7	obj/kernel.asm	/^c0109cb7:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0109cba	obj/kernel.asm	/^c0109cba:	e8 c4 01 00 00       	call   c0109e83 <wait_queue_del>$/;"	l
c0109cbf	obj/kernel.asm	/^c0109cbf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109cc2	obj/kernel.asm	/^c0109cc2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109cc5	obj/kernel.asm	/^c0109cc5:	e8 94 fe ff ff       	call   c0109b5e <__intr_restore>$/;"	l
c0109cca	obj/kernel.asm	/^c0109cca:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109ccd	obj/kernel.asm	/^c0109ccd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109cd0	obj/kernel.asm	/^c0109cd0:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0109cd3	obj/kernel.asm	/^c0109cd3:	74 08                	je     c0109cdd <__down+0xb5>$/;"	l
c0109cd5	obj/kernel.asm	/^c0109cd5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109cd8	obj/kernel.asm	/^c0109cd8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109cdb	obj/kernel.asm	/^c0109cdb:	eb 05                	jmp    c0109ce2 <__down+0xba>$/;"	l
c0109cdd	obj/kernel.asm	/^c0109cdd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109ce2	obj/kernel.asm	/^c0109ce2:	c9                   	leave  $/;"	l
c0109ce3	obj/kernel.asm	/^c0109ce3:	c3                   	ret    $/;"	l
c0109ce4	obj/kernel.asm	/^c0109ce4 <up>:$/;"	l
c0109ce4	obj/kernel.asm	/^c0109ce4:	55                   	push   %ebp$/;"	l
c0109ce5	obj/kernel.asm	/^c0109ce5:	89 e5                	mov    %esp,%ebp$/;"	l
c0109ce7	obj/kernel.asm	/^c0109ce7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109cea	obj/kernel.asm	/^c0109cea:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)$/;"	l
c0109cf1	obj/kernel.asm	/^c0109cf1:	00 $/;"	l
c0109cf2	obj/kernel.asm	/^c0109cf2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109cf5	obj/kernel.asm	/^c0109cf5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109cf8	obj/kernel.asm	/^c0109cf8:	e8 92 fe ff ff       	call   c0109b8f <__up>$/;"	l
c0109cfd	obj/kernel.asm	/^c0109cfd:	c9                   	leave  $/;"	l
c0109cfe	obj/kernel.asm	/^c0109cfe:	c3                   	ret    $/;"	l
c0109cff	obj/kernel.asm	/^c0109cff <down>:$/;"	l
c0109cff	obj/kernel.asm	/^c0109cff:	55                   	push   %ebp$/;"	l
c0109d00	obj/kernel.asm	/^c0109d00:	89 e5                	mov    %esp,%ebp$/;"	l
c0109d02	obj/kernel.asm	/^c0109d02:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109d05	obj/kernel.asm	/^c0109d05:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)$/;"	l
c0109d0c	obj/kernel.asm	/^c0109d0c:	00 $/;"	l
c0109d0d	obj/kernel.asm	/^c0109d0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d10	obj/kernel.asm	/^c0109d10:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109d13	obj/kernel.asm	/^c0109d13:	e8 10 ff ff ff       	call   c0109c28 <__down>$/;"	l
c0109d18	obj/kernel.asm	/^c0109d18:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109d1b	obj/kernel.asm	/^c0109d1b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109d1f	obj/kernel.asm	/^c0109d1f:	74 24                	je     c0109d45 <down+0x46>$/;"	l
c0109d21	obj/kernel.asm	/^c0109d21:	c7 44 24 0c 6e 7a 11 	movl   $0xc0117a6e,0xc(%esp)$/;"	l
c0109d28	obj/kernel.asm	/^c0109d28:	c0 $/;"	l
c0109d29	obj/kernel.asm	/^c0109d29:	c7 44 24 08 49 7a 11 	movl   $0xc0117a49,0x8(%esp)$/;"	l
c0109d30	obj/kernel.asm	/^c0109d30:	c0 $/;"	l
c0109d31	obj/kernel.asm	/^c0109d31:	c7 44 24 04 40 00 00 	movl   $0x40,0x4(%esp)$/;"	l
c0109d38	obj/kernel.asm	/^c0109d38:	00 $/;"	l
c0109d39	obj/kernel.asm	/^c0109d39:	c7 04 24 5e 7a 11 c0 	movl   $0xc0117a5e,(%esp)$/;"	l
c0109d40	obj/kernel.asm	/^c0109d40:	e8 83 71 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0109d45	obj/kernel.asm	/^c0109d45:	c9                   	leave  $/;"	l
c0109d46	obj/kernel.asm	/^c0109d46:	c3                   	ret    $/;"	l
c0109d47	obj/kernel.asm	/^c0109d47 <try_down>:$/;"	l
c0109d47	obj/kernel.asm	/^c0109d47:	55                   	push   %ebp$/;"	l
c0109d48	obj/kernel.asm	/^c0109d48:	89 e5                	mov    %esp,%ebp$/;"	l
c0109d4a	obj/kernel.asm	/^c0109d4a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109d4d	obj/kernel.asm	/^c0109d4d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109d54	obj/kernel.asm	/^c0109d54:	e8 db fd ff ff       	call   c0109b34 <__intr_save>$/;"	l
c0109d59	obj/kernel.asm	/^c0109d59:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109d5c	obj/kernel.asm	/^c0109d5c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d5f	obj/kernel.asm	/^c0109d5f:	8b 00                	mov    (%eax),%eax$/;"	l
c0109d61	obj/kernel.asm	/^c0109d61:	85 c0                	test   %eax,%eax$/;"	l
c0109d63	obj/kernel.asm	/^c0109d63:	7e 14                	jle    c0109d79 <try_down+0x32>$/;"	l
c0109d65	obj/kernel.asm	/^c0109d65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d68	obj/kernel.asm	/^c0109d68:	8b 00                	mov    (%eax),%eax$/;"	l
c0109d6a	obj/kernel.asm	/^c0109d6a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0109d6d	obj/kernel.asm	/^c0109d6d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d70	obj/kernel.asm	/^c0109d70:	89 10                	mov    %edx,(%eax)$/;"	l
c0109d72	obj/kernel.asm	/^c0109d72:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c0109d79	obj/kernel.asm	/^c0109d79:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109d7c	obj/kernel.asm	/^c0109d7c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109d7f	obj/kernel.asm	/^c0109d7f:	e8 da fd ff ff       	call   c0109b5e <__intr_restore>$/;"	l
c0109d84	obj/kernel.asm	/^c0109d84:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109d87	obj/kernel.asm	/^c0109d87:	c9                   	leave  $/;"	l
c0109d88	obj/kernel.asm	/^c0109d88:	c3                   	ret    $/;"	l
c0109d89	obj/kernel.asm	/^c0109d89 <wait_init>:$/;"	l
c0109d89	obj/kernel.asm	/^c0109d89:	55                   	push   %ebp$/;"	l
c0109d8a	obj/kernel.asm	/^c0109d8a:	89 e5                	mov    %esp,%ebp$/;"	l
c0109d8c	obj/kernel.asm	/^c0109d8c:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109d8f	obj/kernel.asm	/^c0109d8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d92	obj/kernel.asm	/^c0109d92:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109d95	obj/kernel.asm	/^c0109d95:	89 10                	mov    %edx,(%eax)$/;"	l
c0109d97	obj/kernel.asm	/^c0109d97:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d9a	obj/kernel.asm	/^c0109d9a:	c7 40 04 00 00 00 80 	movl   $0x80000000,0x4(%eax)$/;"	l
c0109da1	obj/kernel.asm	/^c0109da1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109da4	obj/kernel.asm	/^c0109da4:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109da7	obj/kernel.asm	/^c0109da7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109daa	obj/kernel.asm	/^c0109daa:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109dad	obj/kernel.asm	/^c0109dad:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0109db0	obj/kernel.asm	/^c0109db0:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109db3	obj/kernel.asm	/^c0109db3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109db6	obj/kernel.asm	/^c0109db6:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109db9	obj/kernel.asm	/^c0109db9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109dbc	obj/kernel.asm	/^c0109dbc:	89 10                	mov    %edx,(%eax)$/;"	l
c0109dbe	obj/kernel.asm	/^c0109dbe:	c9                   	leave  $/;"	l
c0109dbf	obj/kernel.asm	/^c0109dbf:	c3                   	ret    $/;"	l
c0109dc0	obj/kernel.asm	/^c0109dc0 <wait_queue_init>:$/;"	l
c0109dc0	obj/kernel.asm	/^c0109dc0:	55                   	push   %ebp$/;"	l
c0109dc1	obj/kernel.asm	/^c0109dc1:	89 e5                	mov    %esp,%ebp$/;"	l
c0109dc3	obj/kernel.asm	/^c0109dc3:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109dc6	obj/kernel.asm	/^c0109dc6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109dc9	obj/kernel.asm	/^c0109dc9:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109dcc	obj/kernel.asm	/^c0109dcc:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109dcf	obj/kernel.asm	/^c0109dcf:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0109dd2	obj/kernel.asm	/^c0109dd2:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109dd5	obj/kernel.asm	/^c0109dd5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109dd8	obj/kernel.asm	/^c0109dd8:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109ddb	obj/kernel.asm	/^c0109ddb:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109dde	obj/kernel.asm	/^c0109dde:	89 10                	mov    %edx,(%eax)$/;"	l
c0109de0	obj/kernel.asm	/^c0109de0:	c9                   	leave  $/;"	l
c0109de1	obj/kernel.asm	/^c0109de1:	c3                   	ret    $/;"	l
c0109de2	obj/kernel.asm	/^c0109de2 <wait_queue_add>:$/;"	l
c0109de2	obj/kernel.asm	/^c0109de2:	55                   	push   %ebp$/;"	l
c0109de3	obj/kernel.asm	/^c0109de3:	89 e5                	mov    %esp,%ebp$/;"	l
c0109de5	obj/kernel.asm	/^c0109de5:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0109de8	obj/kernel.asm	/^c0109de8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109deb	obj/kernel.asm	/^c0109deb:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109dee	obj/kernel.asm	/^c0109dee:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109df1	obj/kernel.asm	/^c0109df1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109df4	obj/kernel.asm	/^c0109df4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109df7	obj/kernel.asm	/^c0109df7:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c0109dfa	obj/kernel.asm	/^c0109dfa:	0f 94 c0             	sete   %al$/;"	l
c0109dfd	obj/kernel.asm	/^c0109dfd:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109e00	obj/kernel.asm	/^c0109e00:	85 c0                	test   %eax,%eax$/;"	l
c0109e02	obj/kernel.asm	/^c0109e02:	74 09                	je     c0109e0d <wait_queue_add+0x2b>$/;"	l
c0109e04	obj/kernel.asm	/^c0109e04:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109e07	obj/kernel.asm	/^c0109e07:	8b 00                	mov    (%eax),%eax$/;"	l
c0109e09	obj/kernel.asm	/^c0109e09:	85 c0                	test   %eax,%eax$/;"	l
c0109e0b	obj/kernel.asm	/^c0109e0b:	75 24                	jne    c0109e31 <wait_queue_add+0x4f>$/;"	l
c0109e0d	obj/kernel.asm	/^c0109e0d:	c7 44 24 0c 7c 7a 11 	movl   $0xc0117a7c,0xc(%esp)$/;"	l
c0109e14	obj/kernel.asm	/^c0109e14:	c0 $/;"	l
c0109e15	obj/kernel.asm	/^c0109e15:	c7 44 24 08 b1 7a 11 	movl   $0xc0117ab1,0x8(%esp)$/;"	l
c0109e1c	obj/kernel.asm	/^c0109e1c:	c0 $/;"	l
c0109e1d	obj/kernel.asm	/^c0109e1d:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)$/;"	l
c0109e24	obj/kernel.asm	/^c0109e24:	00 $/;"	l
c0109e25	obj/kernel.asm	/^c0109e25:	c7 04 24 c6 7a 11 c0 	movl   $0xc0117ac6,(%esp)$/;"	l
c0109e2c	obj/kernel.asm	/^c0109e2c:	e8 97 70 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0109e31	obj/kernel.asm	/^c0109e31:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109e34	obj/kernel.asm	/^c0109e34:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109e37	obj/kernel.asm	/^c0109e37:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0109e3a	obj/kernel.asm	/^c0109e3a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109e3d	obj/kernel.asm	/^c0109e3d:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0109e40	obj/kernel.asm	/^c0109e40:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109e43	obj/kernel.asm	/^c0109e43:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109e46	obj/kernel.asm	/^c0109e46:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0109e49	obj/kernel.asm	/^c0109e49:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109e4c	obj/kernel.asm	/^c0109e4c:	8b 00                	mov    (%eax),%eax$/;"	l
c0109e4e	obj/kernel.asm	/^c0109e4e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109e51	obj/kernel.asm	/^c0109e51:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0109e54	obj/kernel.asm	/^c0109e54:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109e57	obj/kernel.asm	/^c0109e57:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109e5a	obj/kernel.asm	/^c0109e5a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0109e5d	obj/kernel.asm	/^c0109e5d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109e60	obj/kernel.asm	/^c0109e60:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0109e63	obj/kernel.asm	/^c0109e63:	89 10                	mov    %edx,(%eax)$/;"	l
c0109e65	obj/kernel.asm	/^c0109e65:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109e68	obj/kernel.asm	/^c0109e68:	8b 10                	mov    (%eax),%edx$/;"	l
c0109e6a	obj/kernel.asm	/^c0109e6a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109e6d	obj/kernel.asm	/^c0109e6d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109e70	obj/kernel.asm	/^c0109e70:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109e73	obj/kernel.asm	/^c0109e73:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0109e76	obj/kernel.asm	/^c0109e76:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109e79	obj/kernel.asm	/^c0109e79:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109e7c	obj/kernel.asm	/^c0109e7c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0109e7f	obj/kernel.asm	/^c0109e7f:	89 10                	mov    %edx,(%eax)$/;"	l
c0109e81	obj/kernel.asm	/^c0109e81:	c9                   	leave  $/;"	l
c0109e82	obj/kernel.asm	/^c0109e82:	c3                   	ret    $/;"	l
c0109e83	obj/kernel.asm	/^c0109e83 <wait_queue_del>:$/;"	l
c0109e83	obj/kernel.asm	/^c0109e83:	55                   	push   %ebp$/;"	l
c0109e84	obj/kernel.asm	/^c0109e84:	89 e5                	mov    %esp,%ebp$/;"	l
c0109e86	obj/kernel.asm	/^c0109e86:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0109e89	obj/kernel.asm	/^c0109e89:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109e8c	obj/kernel.asm	/^c0109e8c:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109e8f	obj/kernel.asm	/^c0109e8f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109e92	obj/kernel.asm	/^c0109e92:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109e95	obj/kernel.asm	/^c0109e95:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109e98	obj/kernel.asm	/^c0109e98:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c0109e9b	obj/kernel.asm	/^c0109e9b:	0f 94 c0             	sete   %al$/;"	l
c0109e9e	obj/kernel.asm	/^c0109e9e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109ea1	obj/kernel.asm	/^c0109ea1:	85 c0                	test   %eax,%eax$/;"	l
c0109ea3	obj/kernel.asm	/^c0109ea3:	75 0b                	jne    c0109eb0 <wait_queue_del+0x2d>$/;"	l
c0109ea5	obj/kernel.asm	/^c0109ea5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109ea8	obj/kernel.asm	/^c0109ea8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109eab	obj/kernel.asm	/^c0109eab:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0109eae	obj/kernel.asm	/^c0109eae:	74 24                	je     c0109ed4 <wait_queue_del+0x51>$/;"	l
c0109eb0	obj/kernel.asm	/^c0109eb0:	c7 44 24 0c d8 7a 11 	movl   $0xc0117ad8,0xc(%esp)$/;"	l
c0109eb7	obj/kernel.asm	/^c0109eb7:	c0 $/;"	l
c0109eb8	obj/kernel.asm	/^c0109eb8:	c7 44 24 08 b1 7a 11 	movl   $0xc0117ab1,0x8(%esp)$/;"	l
c0109ebf	obj/kernel.asm	/^c0109ebf:	c0 $/;"	l
c0109ec0	obj/kernel.asm	/^c0109ec0:	c7 44 24 04 1c 00 00 	movl   $0x1c,0x4(%esp)$/;"	l
c0109ec7	obj/kernel.asm	/^c0109ec7:	00 $/;"	l
c0109ec8	obj/kernel.asm	/^c0109ec8:	c7 04 24 c6 7a 11 c0 	movl   $0xc0117ac6,(%esp)$/;"	l
c0109ecf	obj/kernel.asm	/^c0109ecf:	e8 f4 6f ff ff       	call   c0100ec8 <__panic>$/;"	l
c0109ed4	obj/kernel.asm	/^c0109ed4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109ed7	obj/kernel.asm	/^c0109ed7:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109eda	obj/kernel.asm	/^c0109eda:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109edd	obj/kernel.asm	/^c0109edd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109ee0	obj/kernel.asm	/^c0109ee0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109ee3	obj/kernel.asm	/^c0109ee3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109ee6	obj/kernel.asm	/^c0109ee6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109ee9	obj/kernel.asm	/^c0109ee9:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109eec	obj/kernel.asm	/^c0109eec:	8b 12                	mov    (%edx),%edx$/;"	l
c0109eee	obj/kernel.asm	/^c0109eee:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0109ef1	obj/kernel.asm	/^c0109ef1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109ef4	obj/kernel.asm	/^c0109ef4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109ef7	obj/kernel.asm	/^c0109ef7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0109efa	obj/kernel.asm	/^c0109efa:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109efd	obj/kernel.asm	/^c0109efd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109f00	obj/kernel.asm	/^c0109f00:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0109f03	obj/kernel.asm	/^c0109f03:	89 10                	mov    %edx,(%eax)$/;"	l
c0109f05	obj/kernel.asm	/^c0109f05:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109f08	obj/kernel.asm	/^c0109f08:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0109f0b	obj/kernel.asm	/^c0109f0b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109f0e	obj/kernel.asm	/^c0109f0e:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0109f11	obj/kernel.asm	/^c0109f11:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109f14	obj/kernel.asm	/^c0109f14:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109f17	obj/kernel.asm	/^c0109f17:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109f1a	obj/kernel.asm	/^c0109f1a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109f1d	obj/kernel.asm	/^c0109f1d:	89 10                	mov    %edx,(%eax)$/;"	l
c0109f1f	obj/kernel.asm	/^c0109f1f:	c9                   	leave  $/;"	l
c0109f20	obj/kernel.asm	/^c0109f20:	c3                   	ret    $/;"	l
c0109f21	obj/kernel.asm	/^c0109f21 <wait_queue_next>:$/;"	l
c0109f21	obj/kernel.asm	/^c0109f21:	55                   	push   %ebp$/;"	l
c0109f22	obj/kernel.asm	/^c0109f22:	89 e5                	mov    %esp,%ebp$/;"	l
c0109f24	obj/kernel.asm	/^c0109f24:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109f27	obj/kernel.asm	/^c0109f27:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109f2a	obj/kernel.asm	/^c0109f2a:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109f2d	obj/kernel.asm	/^c0109f2d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109f30	obj/kernel.asm	/^c0109f30:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109f33	obj/kernel.asm	/^c0109f33:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109f36	obj/kernel.asm	/^c0109f36:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0109f39	obj/kernel.asm	/^c0109f39:	0f 94 c0             	sete   %al$/;"	l
c0109f3c	obj/kernel.asm	/^c0109f3c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109f3f	obj/kernel.asm	/^c0109f3f:	85 c0                	test   %eax,%eax$/;"	l
c0109f41	obj/kernel.asm	/^c0109f41:	75 0b                	jne    c0109f4e <wait_queue_next+0x2d>$/;"	l
c0109f43	obj/kernel.asm	/^c0109f43:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109f46	obj/kernel.asm	/^c0109f46:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109f49	obj/kernel.asm	/^c0109f49:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0109f4c	obj/kernel.asm	/^c0109f4c:	74 24                	je     c0109f72 <wait_queue_next+0x51>$/;"	l
c0109f4e	obj/kernel.asm	/^c0109f4e:	c7 44 24 0c d8 7a 11 	movl   $0xc0117ad8,0xc(%esp)$/;"	l
c0109f55	obj/kernel.asm	/^c0109f55:	c0 $/;"	l
c0109f56	obj/kernel.asm	/^c0109f56:	c7 44 24 08 b1 7a 11 	movl   $0xc0117ab1,0x8(%esp)$/;"	l
c0109f5d	obj/kernel.asm	/^c0109f5d:	c0 $/;"	l
c0109f5e	obj/kernel.asm	/^c0109f5e:	c7 44 24 04 22 00 00 	movl   $0x22,0x4(%esp)$/;"	l
c0109f65	obj/kernel.asm	/^c0109f65:	00 $/;"	l
c0109f66	obj/kernel.asm	/^c0109f66:	c7 04 24 c6 7a 11 c0 	movl   $0xc0117ac6,(%esp)$/;"	l
c0109f6d	obj/kernel.asm	/^c0109f6d:	e8 56 6f ff ff       	call   c0100ec8 <__panic>$/;"	l
c0109f72	obj/kernel.asm	/^c0109f72:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109f75	obj/kernel.asm	/^c0109f75:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109f78	obj/kernel.asm	/^c0109f78:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109f7b	obj/kernel.asm	/^c0109f7b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109f7e	obj/kernel.asm	/^c0109f7e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109f81	obj/kernel.asm	/^c0109f81:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109f84	obj/kernel.asm	/^c0109f84:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109f87	obj/kernel.asm	/^c0109f87:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0109f8a	obj/kernel.asm	/^c0109f8a:	74 08                	je     c0109f94 <wait_queue_next+0x73>$/;"	l
c0109f8c	obj/kernel.asm	/^c0109f8c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109f8f	obj/kernel.asm	/^c0109f8f:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0109f92	obj/kernel.asm	/^c0109f92:	eb 05                	jmp    c0109f99 <wait_queue_next+0x78>$/;"	l
c0109f94	obj/kernel.asm	/^c0109f94:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109f99	obj/kernel.asm	/^c0109f99:	c9                   	leave  $/;"	l
c0109f9a	obj/kernel.asm	/^c0109f9a:	c3                   	ret    $/;"	l
c0109f9b	obj/kernel.asm	/^c0109f9b <wait_queue_prev>:$/;"	l
c0109f9b	obj/kernel.asm	/^c0109f9b:	55                   	push   %ebp$/;"	l
c0109f9c	obj/kernel.asm	/^c0109f9c:	89 e5                	mov    %esp,%ebp$/;"	l
c0109f9e	obj/kernel.asm	/^c0109f9e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109fa1	obj/kernel.asm	/^c0109fa1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109fa4	obj/kernel.asm	/^c0109fa4:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109fa7	obj/kernel.asm	/^c0109fa7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109faa	obj/kernel.asm	/^c0109faa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109fad	obj/kernel.asm	/^c0109fad:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109fb0	obj/kernel.asm	/^c0109fb0:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0109fb3	obj/kernel.asm	/^c0109fb3:	0f 94 c0             	sete   %al$/;"	l
c0109fb6	obj/kernel.asm	/^c0109fb6:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109fb9	obj/kernel.asm	/^c0109fb9:	85 c0                	test   %eax,%eax$/;"	l
c0109fbb	obj/kernel.asm	/^c0109fbb:	75 0b                	jne    c0109fc8 <wait_queue_prev+0x2d>$/;"	l
c0109fbd	obj/kernel.asm	/^c0109fbd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109fc0	obj/kernel.asm	/^c0109fc0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109fc3	obj/kernel.asm	/^c0109fc3:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0109fc6	obj/kernel.asm	/^c0109fc6:	74 24                	je     c0109fec <wait_queue_prev+0x51>$/;"	l
c0109fc8	obj/kernel.asm	/^c0109fc8:	c7 44 24 0c d8 7a 11 	movl   $0xc0117ad8,0xc(%esp)$/;"	l
c0109fcf	obj/kernel.asm	/^c0109fcf:	c0 $/;"	l
c0109fd0	obj/kernel.asm	/^c0109fd0:	c7 44 24 08 b1 7a 11 	movl   $0xc0117ab1,0x8(%esp)$/;"	l
c0109fd7	obj/kernel.asm	/^c0109fd7:	c0 $/;"	l
c0109fd8	obj/kernel.asm	/^c0109fd8:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
c0109fdf	obj/kernel.asm	/^c0109fdf:	00 $/;"	l
c0109fe0	obj/kernel.asm	/^c0109fe0:	c7 04 24 c6 7a 11 c0 	movl   $0xc0117ac6,(%esp)$/;"	l
c0109fe7	obj/kernel.asm	/^c0109fe7:	e8 dc 6e ff ff       	call   c0100ec8 <__panic>$/;"	l
c0109fec	obj/kernel.asm	/^c0109fec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109fef	obj/kernel.asm	/^c0109fef:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109ff2	obj/kernel.asm	/^c0109ff2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109ff5	obj/kernel.asm	/^c0109ff5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109ff8	obj/kernel.asm	/^c0109ff8:	8b 00                	mov    (%eax),%eax$/;"	l
c0109ffa	obj/kernel.asm	/^c0109ffa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109ffd	obj/kernel.asm	/^c0109ffd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a000	obj/kernel.asm	/^c010a000:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010a003	obj/kernel.asm	/^c010a003:	74 08                	je     c010a00d <wait_queue_prev+0x72>$/;"	l
c010a005	obj/kernel.asm	/^c010a005:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a008	obj/kernel.asm	/^c010a008:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010a00b	obj/kernel.asm	/^c010a00b:	eb 05                	jmp    c010a012 <wait_queue_prev+0x77>$/;"	l
c010a00d	obj/kernel.asm	/^c010a00d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a012	obj/kernel.asm	/^c010a012:	c9                   	leave  $/;"	l
c010a013	obj/kernel.asm	/^c010a013:	c3                   	ret    $/;"	l
c010a014	obj/kernel.asm	/^c010a014 <wait_queue_first>:$/;"	l
c010a014	obj/kernel.asm	/^c010a014:	55                   	push   %ebp$/;"	l
c010a015	obj/kernel.asm	/^c010a015:	89 e5                	mov    %esp,%ebp$/;"	l
c010a017	obj/kernel.asm	/^c010a017:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a01a	obj/kernel.asm	/^c010a01a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a01d	obj/kernel.asm	/^c010a01d:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010a020	obj/kernel.asm	/^c010a020:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a023	obj/kernel.asm	/^c010a023:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a026	obj/kernel.asm	/^c010a026:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010a029	obj/kernel.asm	/^c010a029:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a02c	obj/kernel.asm	/^c010a02c:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010a02f	obj/kernel.asm	/^c010a02f:	74 08                	je     c010a039 <wait_queue_first+0x25>$/;"	l
c010a031	obj/kernel.asm	/^c010a031:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a034	obj/kernel.asm	/^c010a034:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010a037	obj/kernel.asm	/^c010a037:	eb 05                	jmp    c010a03e <wait_queue_first+0x2a>$/;"	l
c010a039	obj/kernel.asm	/^c010a039:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a03e	obj/kernel.asm	/^c010a03e:	c9                   	leave  $/;"	l
c010a03f	obj/kernel.asm	/^c010a03f:	c3                   	ret    $/;"	l
c010a040	obj/kernel.asm	/^c010a040 <wait_queue_last>:$/;"	l
c010a040	obj/kernel.asm	/^c010a040:	55                   	push   %ebp$/;"	l
c010a041	obj/kernel.asm	/^c010a041:	89 e5                	mov    %esp,%ebp$/;"	l
c010a043	obj/kernel.asm	/^c010a043:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a046	obj/kernel.asm	/^c010a046:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a049	obj/kernel.asm	/^c010a049:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010a04c	obj/kernel.asm	/^c010a04c:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a04f	obj/kernel.asm	/^c010a04f:	8b 00                	mov    (%eax),%eax$/;"	l
c010a051	obj/kernel.asm	/^c010a051:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010a054	obj/kernel.asm	/^c010a054:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a057	obj/kernel.asm	/^c010a057:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010a05a	obj/kernel.asm	/^c010a05a:	74 08                	je     c010a064 <wait_queue_last+0x24>$/;"	l
c010a05c	obj/kernel.asm	/^c010a05c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a05f	obj/kernel.asm	/^c010a05f:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010a062	obj/kernel.asm	/^c010a062:	eb 05                	jmp    c010a069 <wait_queue_last+0x29>$/;"	l
c010a064	obj/kernel.asm	/^c010a064:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a069	obj/kernel.asm	/^c010a069:	c9                   	leave  $/;"	l
c010a06a	obj/kernel.asm	/^c010a06a:	c3                   	ret    $/;"	l
c010a06b	obj/kernel.asm	/^c010a06b <wait_queue_empty>:$/;"	l
c010a06b	obj/kernel.asm	/^c010a06b:	55                   	push   %ebp$/;"	l
c010a06c	obj/kernel.asm	/^c010a06c:	89 e5                	mov    %esp,%ebp$/;"	l
c010a06e	obj/kernel.asm	/^c010a06e:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a071	obj/kernel.asm	/^c010a071:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a074	obj/kernel.asm	/^c010a074:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010a077	obj/kernel.asm	/^c010a077:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a07a	obj/kernel.asm	/^c010a07a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a07d	obj/kernel.asm	/^c010a07d:	39 45 fc             	cmp    %eax,-0x4(%ebp)$/;"	l
c010a080	obj/kernel.asm	/^c010a080:	0f 94 c0             	sete   %al$/;"	l
c010a083	obj/kernel.asm	/^c010a083:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010a086	obj/kernel.asm	/^c010a086:	c9                   	leave  $/;"	l
c010a087	obj/kernel.asm	/^c010a087:	c3                   	ret    $/;"	l
c010a088	obj/kernel.asm	/^c010a088 <wait_in_queue>:$/;"	l
c010a088	obj/kernel.asm	/^c010a088:	55                   	push   %ebp$/;"	l
c010a089	obj/kernel.asm	/^c010a089:	89 e5                	mov    %esp,%ebp$/;"	l
c010a08b	obj/kernel.asm	/^c010a08b:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a08e	obj/kernel.asm	/^c010a08e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a091	obj/kernel.asm	/^c010a091:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010a094	obj/kernel.asm	/^c010a094:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010a097	obj/kernel.asm	/^c010a097:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a09a	obj/kernel.asm	/^c010a09a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a09d	obj/kernel.asm	/^c010a09d:	39 45 fc             	cmp    %eax,-0x4(%ebp)$/;"	l
c010a0a0	obj/kernel.asm	/^c010a0a0:	0f 94 c0             	sete   %al$/;"	l
c010a0a3	obj/kernel.asm	/^c010a0a3:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010a0a6	obj/kernel.asm	/^c010a0a6:	85 c0                	test   %eax,%eax$/;"	l
c010a0a8	obj/kernel.asm	/^c010a0a8:	0f 94 c0             	sete   %al$/;"	l
c010a0ab	obj/kernel.asm	/^c010a0ab:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010a0ae	obj/kernel.asm	/^c010a0ae:	c9                   	leave  $/;"	l
c010a0af	obj/kernel.asm	/^c010a0af:	c3                   	ret    $/;"	l
c010a0b0	obj/kernel.asm	/^c010a0b0 <wakeup_wait>:$/;"	l
c010a0b0	obj/kernel.asm	/^c010a0b0:	55                   	push   %ebp$/;"	l
c010a0b1	obj/kernel.asm	/^c010a0b1:	89 e5                	mov    %esp,%ebp$/;"	l
c010a0b3	obj/kernel.asm	/^c010a0b3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a0b6	obj/kernel.asm	/^c010a0b6:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010a0ba	obj/kernel.asm	/^c010a0ba:	74 12                	je     c010a0ce <wakeup_wait+0x1e>$/;"	l
c010a0bc	obj/kernel.asm	/^c010a0bc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a0bf	obj/kernel.asm	/^c010a0bf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a0c3	obj/kernel.asm	/^c010a0c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a0c6	obj/kernel.asm	/^c010a0c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a0c9	obj/kernel.asm	/^c010a0c9:	e8 b5 fd ff ff       	call   c0109e83 <wait_queue_del>$/;"	l
c010a0ce	obj/kernel.asm	/^c010a0ce:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a0d1	obj/kernel.asm	/^c010a0d1:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010a0d4	obj/kernel.asm	/^c010a0d4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a0d7	obj/kernel.asm	/^c010a0d7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a0da	obj/kernel.asm	/^c010a0da:	8b 00                	mov    (%eax),%eax$/;"	l
c010a0dc	obj/kernel.asm	/^c010a0dc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a0df	obj/kernel.asm	/^c010a0df:	e8 25 45 00 00       	call   c010e609 <wakeup_proc>$/;"	l
c010a0e4	obj/kernel.asm	/^c010a0e4:	c9                   	leave  $/;"	l
c010a0e5	obj/kernel.asm	/^c010a0e5:	c3                   	ret    $/;"	l
c010a0e6	obj/kernel.asm	/^c010a0e6 <wakeup_first>:$/;"	l
c010a0e6	obj/kernel.asm	/^c010a0e6:	55                   	push   %ebp$/;"	l
c010a0e7	obj/kernel.asm	/^c010a0e7:	89 e5                	mov    %esp,%ebp$/;"	l
c010a0e9	obj/kernel.asm	/^c010a0e9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a0ec	obj/kernel.asm	/^c010a0ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a0ef	obj/kernel.asm	/^c010a0ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a0f2	obj/kernel.asm	/^c010a0f2:	e8 1d ff ff ff       	call   c010a014 <wait_queue_first>$/;"	l
c010a0f7	obj/kernel.asm	/^c010a0f7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a0fa	obj/kernel.asm	/^c010a0fa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a0fe	obj/kernel.asm	/^c010a0fe:	74 20                	je     c010a120 <wakeup_first+0x3a>$/;"	l
c010a100	obj/kernel.asm	/^c010a100:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010a103	obj/kernel.asm	/^c010a103:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010a107	obj/kernel.asm	/^c010a107:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a10a	obj/kernel.asm	/^c010a10a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a10e	obj/kernel.asm	/^c010a10e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a111	obj/kernel.asm	/^c010a111:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a115	obj/kernel.asm	/^c010a115:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a118	obj/kernel.asm	/^c010a118:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a11b	obj/kernel.asm	/^c010a11b:	e8 90 ff ff ff       	call   c010a0b0 <wakeup_wait>$/;"	l
c010a120	obj/kernel.asm	/^c010a120:	c9                   	leave  $/;"	l
c010a121	obj/kernel.asm	/^c010a121:	c3                   	ret    $/;"	l
c010a122	obj/kernel.asm	/^c010a122 <wakeup_queue>:$/;"	l
c010a122	obj/kernel.asm	/^c010a122:	55                   	push   %ebp$/;"	l
c010a123	obj/kernel.asm	/^c010a123:	89 e5                	mov    %esp,%ebp$/;"	l
c010a125	obj/kernel.asm	/^c010a125:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a128	obj/kernel.asm	/^c010a128:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a12b	obj/kernel.asm	/^c010a12b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a12e	obj/kernel.asm	/^c010a12e:	e8 e1 fe ff ff       	call   c010a014 <wait_queue_first>$/;"	l
c010a133	obj/kernel.asm	/^c010a133:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a136	obj/kernel.asm	/^c010a136:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a13a	obj/kernel.asm	/^c010a13a:	74 79                	je     c010a1b5 <wakeup_queue+0x93>$/;"	l
c010a13c	obj/kernel.asm	/^c010a13c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010a140	obj/kernel.asm	/^c010a140:	74 37                	je     c010a179 <wakeup_queue+0x57>$/;"	l
c010a142	obj/kernel.asm	/^c010a142:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c010a149	obj/kernel.asm	/^c010a149:	00 $/;"	l
c010a14a	obj/kernel.asm	/^c010a14a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a14d	obj/kernel.asm	/^c010a14d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a151	obj/kernel.asm	/^c010a151:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a154	obj/kernel.asm	/^c010a154:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a158	obj/kernel.asm	/^c010a158:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a15b	obj/kernel.asm	/^c010a15b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a15e	obj/kernel.asm	/^c010a15e:	e8 4d ff ff ff       	call   c010a0b0 <wakeup_wait>$/;"	l
c010a163	obj/kernel.asm	/^c010a163:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a166	obj/kernel.asm	/^c010a166:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a169	obj/kernel.asm	/^c010a169:	e8 a6 fe ff ff       	call   c010a014 <wait_queue_first>$/;"	l
c010a16e	obj/kernel.asm	/^c010a16e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a171	obj/kernel.asm	/^c010a171:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a175	obj/kernel.asm	/^c010a175:	75 cb                	jne    c010a142 <wakeup_queue+0x20>$/;"	l
c010a177	obj/kernel.asm	/^c010a177:	eb 3c                	jmp    c010a1b5 <wakeup_queue+0x93>$/;"	l
c010a179	obj/kernel.asm	/^c010a179:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010a180	obj/kernel.asm	/^c010a180:	00 $/;"	l
c010a181	obj/kernel.asm	/^c010a181:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a184	obj/kernel.asm	/^c010a184:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a188	obj/kernel.asm	/^c010a188:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a18b	obj/kernel.asm	/^c010a18b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a18f	obj/kernel.asm	/^c010a18f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a192	obj/kernel.asm	/^c010a192:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a195	obj/kernel.asm	/^c010a195:	e8 16 ff ff ff       	call   c010a0b0 <wakeup_wait>$/;"	l
c010a19a	obj/kernel.asm	/^c010a19a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a19d	obj/kernel.asm	/^c010a19d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a1a1	obj/kernel.asm	/^c010a1a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1a4	obj/kernel.asm	/^c010a1a4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a1a7	obj/kernel.asm	/^c010a1a7:	e8 75 fd ff ff       	call   c0109f21 <wait_queue_next>$/;"	l
c010a1ac	obj/kernel.asm	/^c010a1ac:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a1af	obj/kernel.asm	/^c010a1af:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a1b3	obj/kernel.asm	/^c010a1b3:	75 c4                	jne    c010a179 <wakeup_queue+0x57>$/;"	l
c010a1b5	obj/kernel.asm	/^c010a1b5:	c9                   	leave  $/;"	l
c010a1b6	obj/kernel.asm	/^c010a1b6:	c3                   	ret    $/;"	l
c010a1b7	obj/kernel.asm	/^c010a1b7 <wait_current_set>:$/;"	l
c010a1b7	obj/kernel.asm	/^c010a1b7:	55                   	push   %ebp$/;"	l
c010a1b8	obj/kernel.asm	/^c010a1b8:	89 e5                	mov    %esp,%ebp$/;"	l
c010a1ba	obj/kernel.asm	/^c010a1ba:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a1bd	obj/kernel.asm	/^c010a1bd:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010a1c2	obj/kernel.asm	/^c010a1c2:	85 c0                	test   %eax,%eax$/;"	l
c010a1c4	obj/kernel.asm	/^c010a1c4:	75 24                	jne    c010a1ea <wait_current_set+0x33>$/;"	l
c010a1c6	obj/kernel.asm	/^c010a1c6:	c7 44 24 0c 15 7b 11 	movl   $0xc0117b15,0xc(%esp)$/;"	l
c010a1cd	obj/kernel.asm	/^c010a1cd:	c0 $/;"	l
c010a1ce	obj/kernel.asm	/^c010a1ce:	c7 44 24 08 b1 7a 11 	movl   $0xc0117ab1,0x8(%esp)$/;"	l
c010a1d5	obj/kernel.asm	/^c010a1d5:	c0 $/;"	l
c010a1d6	obj/kernel.asm	/^c010a1d6:	c7 44 24 04 74 00 00 	movl   $0x74,0x4(%esp)$/;"	l
c010a1dd	obj/kernel.asm	/^c010a1dd:	00 $/;"	l
c010a1de	obj/kernel.asm	/^c010a1de:	c7 04 24 c6 7a 11 c0 	movl   $0xc0117ac6,(%esp)$/;"	l
c010a1e5	obj/kernel.asm	/^c010a1e5:	e8 de 6c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a1ea	obj/kernel.asm	/^c010a1ea:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010a1ef	obj/kernel.asm	/^c010a1ef:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a1f3	obj/kernel.asm	/^c010a1f3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a1f6	obj/kernel.asm	/^c010a1f6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a1f9	obj/kernel.asm	/^c010a1f9:	e8 8b fb ff ff       	call   c0109d89 <wait_init>$/;"	l
c010a1fe	obj/kernel.asm	/^c010a1fe:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010a203	obj/kernel.asm	/^c010a203:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010a209	obj/kernel.asm	/^c010a209:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010a20e	obj/kernel.asm	/^c010a20e:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010a211	obj/kernel.asm	/^c010a211:	89 90 90 00 00 00    	mov    %edx,0x90(%eax)$/;"	l
c010a217	obj/kernel.asm	/^c010a217:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a21a	obj/kernel.asm	/^c010a21a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a21e	obj/kernel.asm	/^c010a21e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a221	obj/kernel.asm	/^c010a221:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a224	obj/kernel.asm	/^c010a224:	e8 b9 fb ff ff       	call   c0109de2 <wait_queue_add>$/;"	l
c010a229	obj/kernel.asm	/^c010a229:	c9                   	leave  $/;"	l
c010a22a	obj/kernel.asm	/^c010a22a:	c3                   	ret    $/;"	l
c010a22b	obj/kernel.asm	/^c010a22b <files_count>:$/;"	l
c010a22b	obj/kernel.asm	/^c010a22b:	55                   	push   %ebp$/;"	l
c010a22c	obj/kernel.asm	/^c010a22c:	89 e5                	mov    %esp,%ebp$/;"	l
c010a22e	obj/kernel.asm	/^c010a22e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a231	obj/kernel.asm	/^c010a231:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a234	obj/kernel.asm	/^c010a234:	5d                   	pop    %ebp$/;"	l
c010a235	obj/kernel.asm	/^c010a235:	c3                   	ret    $/;"	l
c010a236	obj/kernel.asm	/^c010a236 <fopen_count>:$/;"	l
c010a236	obj/kernel.asm	/^c010a236:	55                   	push   %ebp$/;"	l
c010a237	obj/kernel.asm	/^c010a237:	89 e5                	mov    %esp,%ebp$/;"	l
c010a239	obj/kernel.asm	/^c010a239:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a23c	obj/kernel.asm	/^c010a23c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a23f	obj/kernel.asm	/^c010a23f:	5d                   	pop    %ebp$/;"	l
c010a240	obj/kernel.asm	/^c010a240:	c3                   	ret    $/;"	l
c010a241	obj/kernel.asm	/^c010a241 <fopen_count_inc>:$/;"	l
c010a241	obj/kernel.asm	/^c010a241:	55                   	push   %ebp$/;"	l
c010a242	obj/kernel.asm	/^c010a242:	89 e5                	mov    %esp,%ebp$/;"	l
c010a244	obj/kernel.asm	/^c010a244:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a247	obj/kernel.asm	/^c010a247:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a24a	obj/kernel.asm	/^c010a24a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010a24d	obj/kernel.asm	/^c010a24d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a250	obj/kernel.asm	/^c010a250:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010a253	obj/kernel.asm	/^c010a253:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a256	obj/kernel.asm	/^c010a256:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a259	obj/kernel.asm	/^c010a259:	5d                   	pop    %ebp$/;"	l
c010a25a	obj/kernel.asm	/^c010a25a:	c3                   	ret    $/;"	l
c010a25b	obj/kernel.asm	/^c010a25b <fopen_count_dec>:$/;"	l
c010a25b	obj/kernel.asm	/^c010a25b:	55                   	push   %ebp$/;"	l
c010a25c	obj/kernel.asm	/^c010a25c:	89 e5                	mov    %esp,%ebp$/;"	l
c010a25e	obj/kernel.asm	/^c010a25e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a261	obj/kernel.asm	/^c010a261:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a264	obj/kernel.asm	/^c010a264:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010a267	obj/kernel.asm	/^c010a267:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a26a	obj/kernel.asm	/^c010a26a:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010a26d	obj/kernel.asm	/^c010a26d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a270	obj/kernel.asm	/^c010a270:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a273	obj/kernel.asm	/^c010a273:	5d                   	pop    %ebp$/;"	l
c010a274	obj/kernel.asm	/^c010a274:	c3                   	ret    $/;"	l
c010a275	obj/kernel.asm	/^c010a275 <get_fd_array>:$/;"	l
c010a275	obj/kernel.asm	/^c010a275:	55                   	push   %ebp$/;"	l
c010a276	obj/kernel.asm	/^c010a276:	89 e5                	mov    %esp,%ebp$/;"	l
c010a278	obj/kernel.asm	/^c010a278:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a27b	obj/kernel.asm	/^c010a27b:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010a280	obj/kernel.asm	/^c010a280:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010a286	obj/kernel.asm	/^c010a286:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a289	obj/kernel.asm	/^c010a289:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a28d	obj/kernel.asm	/^c010a28d:	74 0f                	je     c010a29e <get_fd_array+0x29>$/;"	l
c010a28f	obj/kernel.asm	/^c010a28f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a292	obj/kernel.asm	/^c010a292:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a295	obj/kernel.asm	/^c010a295:	e8 91 ff ff ff       	call   c010a22b <files_count>$/;"	l
c010a29a	obj/kernel.asm	/^c010a29a:	85 c0                	test   %eax,%eax$/;"	l
c010a29c	obj/kernel.asm	/^c010a29c:	7f 24                	jg     c010a2c2 <get_fd_array+0x4d>$/;"	l
c010a29e	obj/kernel.asm	/^c010a29e:	c7 44 24 0c 28 7b 11 	movl   $0xc0117b28,0xc(%esp)$/;"	l
c010a2a5	obj/kernel.asm	/^c010a2a5:	c0 $/;"	l
c010a2a6	obj/kernel.asm	/^c010a2a6:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010a2ad	obj/kernel.asm	/^c010a2ad:	c0 $/;"	l
c010a2ae	obj/kernel.asm	/^c010a2ae:	c7 44 24 04 14 00 00 	movl   $0x14,0x4(%esp)$/;"	l
c010a2b5	obj/kernel.asm	/^c010a2b5:	00 $/;"	l
c010a2b6	obj/kernel.asm	/^c010a2b6:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010a2bd	obj/kernel.asm	/^c010a2bd:	e8 06 6c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a2c2	obj/kernel.asm	/^c010a2c2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a2c5	obj/kernel.asm	/^c010a2c5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a2c8	obj/kernel.asm	/^c010a2c8:	c9                   	leave  $/;"	l
c010a2c9	obj/kernel.asm	/^c010a2c9:	c3                   	ret    $/;"	l
c010a2ca	obj/kernel.asm	/^c010a2ca <fd_array_init>:$/;"	l
c010a2ca	obj/kernel.asm	/^c010a2ca:	55                   	push   %ebp$/;"	l
c010a2cb	obj/kernel.asm	/^c010a2cb:	89 e5                	mov    %esp,%ebp$/;"	l
c010a2cd	obj/kernel.asm	/^c010a2cd:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a2d0	obj/kernel.asm	/^c010a2d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a2d3	obj/kernel.asm	/^c010a2d3:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010a2d6	obj/kernel.asm	/^c010a2d6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010a2dd	obj/kernel.asm	/^c010a2dd:	eb 24                	jmp    c010a303 <fd_array_init+0x39>$/;"	l
c010a2df	obj/kernel.asm	/^c010a2df:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a2e2	obj/kernel.asm	/^c010a2e2:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010a2e9	obj/kernel.asm	/^c010a2e9:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a2ec	obj/kernel.asm	/^c010a2ec:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a2f2	obj/kernel.asm	/^c010a2f2:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a2f5	obj/kernel.asm	/^c010a2f5:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010a2f8	obj/kernel.asm	/^c010a2f8:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010a2fb	obj/kernel.asm	/^c010a2fb:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010a2ff	obj/kernel.asm	/^c010a2ff:	83 45 f8 1c          	addl   $0x1c,-0x8(%ebp)$/;"	l
c010a303	obj/kernel.asm	/^c010a303:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a306	obj/kernel.asm	/^c010a306:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a30b	obj/kernel.asm	/^c010a30b:	76 d2                	jbe    c010a2df <fd_array_init+0x15>$/;"	l
c010a30d	obj/kernel.asm	/^c010a30d:	c9                   	leave  $/;"	l
c010a30e	obj/kernel.asm	/^c010a30e:	c3                   	ret    $/;"	l
c010a30f	obj/kernel.asm	/^c010a30f <fd_array_alloc>:$/;"	l
c010a30f	obj/kernel.asm	/^c010a30f:	55                   	push   %ebp$/;"	l
c010a310	obj/kernel.asm	/^c010a310:	89 e5                	mov    %esp,%ebp$/;"	l
c010a312	obj/kernel.asm	/^c010a312:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a315	obj/kernel.asm	/^c010a315:	e8 5b ff ff ff       	call   c010a275 <get_fd_array>$/;"	l
c010a31a	obj/kernel.asm	/^c010a31a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a31d	obj/kernel.asm	/^c010a31d:	81 7d 08 d9 6a ff ff 	cmpl   $0xffff6ad9,0x8(%ebp)$/;"	l
c010a324	obj/kernel.asm	/^c010a324:	75 30                	jne    c010a356 <fd_array_alloc+0x47>$/;"	l
c010a326	obj/kernel.asm	/^c010a326:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c010a32d	obj/kernel.asm	/^c010a32d:	eb 13                	jmp    c010a342 <fd_array_alloc+0x33>$/;"	l
c010a32f	obj/kernel.asm	/^c010a32f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a332	obj/kernel.asm	/^c010a332:	8b 00                	mov    (%eax),%eax$/;"	l
c010a334	obj/kernel.asm	/^c010a334:	85 c0                	test   %eax,%eax$/;"	l
c010a336	obj/kernel.asm	/^c010a336:	75 02                	jne    c010a33a <fd_array_alloc+0x2b>$/;"	l
c010a338	obj/kernel.asm	/^c010a338:	eb 59                	jmp    c010a393 <fd_array_alloc+0x84>$/;"	l
c010a33a	obj/kernel.asm	/^c010a33a:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010a33e	obj/kernel.asm	/^c010a33e:	83 45 f4 1c          	addl   $0x1c,-0xc(%ebp)$/;"	l
c010a342	obj/kernel.asm	/^c010a342:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a345	obj/kernel.asm	/^c010a345:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a34a	obj/kernel.asm	/^c010a34a:	76 e3                	jbe    c010a32f <fd_array_alloc+0x20>$/;"	l
c010a34c	obj/kernel.asm	/^c010a34c:	b8 ea ff ff ff       	mov    $0xffffffea,%eax$/;"	l
c010a351	obj/kernel.asm	/^c010a351:	e9 90 00 00 00       	jmp    c010a3e6 <fd_array_alloc+0xd7>$/;"	l
c010a356	obj/kernel.asm	/^c010a356:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a35a	obj/kernel.asm	/^c010a35a:	78 30                	js     c010a38c <fd_array_alloc+0x7d>$/;"	l
c010a35c	obj/kernel.asm	/^c010a35c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a35f	obj/kernel.asm	/^c010a35f:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a364	obj/kernel.asm	/^c010a364:	77 26                	ja     c010a38c <fd_array_alloc+0x7d>$/;"	l
c010a366	obj/kernel.asm	/^c010a366:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a369	obj/kernel.asm	/^c010a369:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a36c	obj/kernel.asm	/^c010a36c:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010a373	obj/kernel.asm	/^c010a373:	29 c2                	sub    %eax,%edx$/;"	l
c010a375	obj/kernel.asm	/^c010a375:	89 d0                	mov    %edx,%eax$/;"	l
c010a377	obj/kernel.asm	/^c010a377:	01 45 f4             	add    %eax,-0xc(%ebp)$/;"	l
c010a37a	obj/kernel.asm	/^c010a37a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a37d	obj/kernel.asm	/^c010a37d:	8b 00                	mov    (%eax),%eax$/;"	l
c010a37f	obj/kernel.asm	/^c010a37f:	85 c0                	test   %eax,%eax$/;"	l
c010a381	obj/kernel.asm	/^c010a381:	75 02                	jne    c010a385 <fd_array_alloc+0x76>$/;"	l
c010a383	obj/kernel.asm	/^c010a383:	eb 0e                	jmp    c010a393 <fd_array_alloc+0x84>$/;"	l
c010a385	obj/kernel.asm	/^c010a385:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax$/;"	l
c010a38a	obj/kernel.asm	/^c010a38a:	eb 5a                	jmp    c010a3e6 <fd_array_alloc+0xd7>$/;"	l
c010a38c	obj/kernel.asm	/^c010a38c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a391	obj/kernel.asm	/^c010a391:	eb 53                	jmp    c010a3e6 <fd_array_alloc+0xd7>$/;"	l
c010a393	obj/kernel.asm	/^c010a393:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a396	obj/kernel.asm	/^c010a396:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a399	obj/kernel.asm	/^c010a399:	e8 98 fe ff ff       	call   c010a236 <fopen_count>$/;"	l
c010a39e	obj/kernel.asm	/^c010a39e:	85 c0                	test   %eax,%eax$/;"	l
c010a3a0	obj/kernel.asm	/^c010a3a0:	74 24                	je     c010a3c6 <fd_array_alloc+0xb7>$/;"	l
c010a3a2	obj/kernel.asm	/^c010a3a2:	c7 44 24 0c 76 7b 11 	movl   $0xc0117b76,0xc(%esp)$/;"	l
c010a3a9	obj/kernel.asm	/^c010a3a9:	c0 $/;"	l
c010a3aa	obj/kernel.asm	/^c010a3aa:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010a3b1	obj/kernel.asm	/^c010a3b1:	c0 $/;"	l
c010a3b2	obj/kernel.asm	/^c010a3b2:	c7 44 24 04 3b 00 00 	movl   $0x3b,0x4(%esp)$/;"	l
c010a3b9	obj/kernel.asm	/^c010a3b9:	00 $/;"	l
c010a3ba	obj/kernel.asm	/^c010a3ba:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010a3c1	obj/kernel.asm	/^c010a3c1:	e8 02 6b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a3c6	obj/kernel.asm	/^c010a3c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a3c9	obj/kernel.asm	/^c010a3c9:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010a3cf	obj/kernel.asm	/^c010a3cf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a3d2	obj/kernel.asm	/^c010a3d2:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010a3d9	obj/kernel.asm	/^c010a3d9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a3dc	obj/kernel.asm	/^c010a3dc:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a3df	obj/kernel.asm	/^c010a3df:	89 10                	mov    %edx,(%eax)$/;"	l
c010a3e1	obj/kernel.asm	/^c010a3e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a3e6	obj/kernel.asm	/^c010a3e6:	c9                   	leave  $/;"	l
c010a3e7	obj/kernel.asm	/^c010a3e7:	c3                   	ret    $/;"	l
c010a3e8	obj/kernel.asm	/^c010a3e8 <fd_array_free>:$/;"	l
c010a3e8	obj/kernel.asm	/^c010a3e8:	55                   	push   %ebp$/;"	l
c010a3e9	obj/kernel.asm	/^c010a3e9:	89 e5                	mov    %esp,%ebp$/;"	l
c010a3eb	obj/kernel.asm	/^c010a3eb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a3ee	obj/kernel.asm	/^c010a3ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3f1	obj/kernel.asm	/^c010a3f1:	8b 00                	mov    (%eax),%eax$/;"	l
c010a3f3	obj/kernel.asm	/^c010a3f3:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a3f6	obj/kernel.asm	/^c010a3f6:	74 2e                	je     c010a426 <fd_array_free+0x3e>$/;"	l
c010a3f8	obj/kernel.asm	/^c010a3f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3fb	obj/kernel.asm	/^c010a3fb:	8b 00                	mov    (%eax),%eax$/;"	l
c010a3fd	obj/kernel.asm	/^c010a3fd:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a400	obj/kernel.asm	/^c010a400:	74 24                	je     c010a426 <fd_array_free+0x3e>$/;"	l
c010a402	obj/kernel.asm	/^c010a402:	c7 44 24 0c 90 7b 11 	movl   $0xc0117b90,0xc(%esp)$/;"	l
c010a409	obj/kernel.asm	/^c010a409:	c0 $/;"	l
c010a40a	obj/kernel.asm	/^c010a40a:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010a411	obj/kernel.asm	/^c010a411:	c0 $/;"	l
c010a412	obj/kernel.asm	/^c010a412:	c7 44 24 04 44 00 00 	movl   $0x44,0x4(%esp)$/;"	l
c010a419	obj/kernel.asm	/^c010a419:	00 $/;"	l
c010a41a	obj/kernel.asm	/^c010a41a:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010a421	obj/kernel.asm	/^c010a421:	e8 a2 6a ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a426	obj/kernel.asm	/^c010a426:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a429	obj/kernel.asm	/^c010a429:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a42c	obj/kernel.asm	/^c010a42c:	e8 05 fe ff ff       	call   c010a236 <fopen_count>$/;"	l
c010a431	obj/kernel.asm	/^c010a431:	85 c0                	test   %eax,%eax$/;"	l
c010a433	obj/kernel.asm	/^c010a433:	74 24                	je     c010a459 <fd_array_free+0x71>$/;"	l
c010a435	obj/kernel.asm	/^c010a435:	c7 44 24 0c 76 7b 11 	movl   $0xc0117b76,0xc(%esp)$/;"	l
c010a43c	obj/kernel.asm	/^c010a43c:	c0 $/;"	l
c010a43d	obj/kernel.asm	/^c010a43d:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010a444	obj/kernel.asm	/^c010a444:	c0 $/;"	l
c010a445	obj/kernel.asm	/^c010a445:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c010a44c	obj/kernel.asm	/^c010a44c:	00 $/;"	l
c010a44d	obj/kernel.asm	/^c010a44d:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010a454	obj/kernel.asm	/^c010a454:	e8 6f 6a ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a459	obj/kernel.asm	/^c010a459:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a45c	obj/kernel.asm	/^c010a45c:	8b 00                	mov    (%eax),%eax$/;"	l
c010a45e	obj/kernel.asm	/^c010a45e:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a461	obj/kernel.asm	/^c010a461:	75 0e                	jne    c010a471 <fd_array_free+0x89>$/;"	l
c010a463	obj/kernel.asm	/^c010a463:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a466	obj/kernel.asm	/^c010a466:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a469	obj/kernel.asm	/^c010a469:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a46c	obj/kernel.asm	/^c010a46c:	e8 70 5c 00 00       	call   c01100e1 <vfs_close>$/;"	l
c010a471	obj/kernel.asm	/^c010a471:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a474	obj/kernel.asm	/^c010a474:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a47a	obj/kernel.asm	/^c010a47a:	c9                   	leave  $/;"	l
c010a47b	obj/kernel.asm	/^c010a47b:	c3                   	ret    $/;"	l
c010a47c	obj/kernel.asm	/^c010a47c <fd_array_acquire>:$/;"	l
c010a47c	obj/kernel.asm	/^c010a47c:	55                   	push   %ebp$/;"	l
c010a47d	obj/kernel.asm	/^c010a47d:	89 e5                	mov    %esp,%ebp$/;"	l
c010a47f	obj/kernel.asm	/^c010a47f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a482	obj/kernel.asm	/^c010a482:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a485	obj/kernel.asm	/^c010a485:	8b 00                	mov    (%eax),%eax$/;"	l
c010a487	obj/kernel.asm	/^c010a487:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a48a	obj/kernel.asm	/^c010a48a:	74 24                	je     c010a4b0 <fd_array_acquire+0x34>$/;"	l
c010a48c	obj/kernel.asm	/^c010a48c:	c7 44 24 0c c5 7b 11 	movl   $0xc0117bc5,0xc(%esp)$/;"	l
c010a493	obj/kernel.asm	/^c010a493:	c0 $/;"	l
c010a494	obj/kernel.asm	/^c010a494:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010a49b	obj/kernel.asm	/^c010a49b:	c0 $/;"	l
c010a49c	obj/kernel.asm	/^c010a49c:	c7 44 24 04 4e 00 00 	movl   $0x4e,0x4(%esp)$/;"	l
c010a4a3	obj/kernel.asm	/^c010a4a3:	00 $/;"	l
c010a4a4	obj/kernel.asm	/^c010a4a4:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010a4ab	obj/kernel.asm	/^c010a4ab:	e8 18 6a ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a4b0	obj/kernel.asm	/^c010a4b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a4b3	obj/kernel.asm	/^c010a4b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a4b6	obj/kernel.asm	/^c010a4b6:	e8 86 fd ff ff       	call   c010a241 <fopen_count_inc>$/;"	l
c010a4bb	obj/kernel.asm	/^c010a4bb:	c9                   	leave  $/;"	l
c010a4bc	obj/kernel.asm	/^c010a4bc:	c3                   	ret    $/;"	l
c010a4bd	obj/kernel.asm	/^c010a4bd <fd_array_release>:$/;"	l
c010a4bd	obj/kernel.asm	/^c010a4bd:	55                   	push   %ebp$/;"	l
c010a4be	obj/kernel.asm	/^c010a4be:	89 e5                	mov    %esp,%ebp$/;"	l
c010a4c0	obj/kernel.asm	/^c010a4c0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a4c3	obj/kernel.asm	/^c010a4c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a4c6	obj/kernel.asm	/^c010a4c6:	8b 00                	mov    (%eax),%eax$/;"	l
c010a4c8	obj/kernel.asm	/^c010a4c8:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a4cb	obj/kernel.asm	/^c010a4cb:	74 2e                	je     c010a4fb <fd_array_release+0x3e>$/;"	l
c010a4cd	obj/kernel.asm	/^c010a4cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a4d0	obj/kernel.asm	/^c010a4d0:	8b 00                	mov    (%eax),%eax$/;"	l
c010a4d2	obj/kernel.asm	/^c010a4d2:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a4d5	obj/kernel.asm	/^c010a4d5:	74 24                	je     c010a4fb <fd_array_release+0x3e>$/;"	l
c010a4d7	obj/kernel.asm	/^c010a4d7:	c7 44 24 0c e0 7b 11 	movl   $0xc0117be0,0xc(%esp)$/;"	l
c010a4de	obj/kernel.asm	/^c010a4de:	c0 $/;"	l
c010a4df	obj/kernel.asm	/^c010a4df:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010a4e6	obj/kernel.asm	/^c010a4e6:	c0 $/;"	l
c010a4e7	obj/kernel.asm	/^c010a4e7:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
c010a4ee	obj/kernel.asm	/^c010a4ee:	00 $/;"	l
c010a4ef	obj/kernel.asm	/^c010a4ef:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010a4f6	obj/kernel.asm	/^c010a4f6:	e8 cd 69 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a4fb	obj/kernel.asm	/^c010a4fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a4fe	obj/kernel.asm	/^c010a4fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a501	obj/kernel.asm	/^c010a501:	e8 30 fd ff ff       	call   c010a236 <fopen_count>$/;"	l
c010a506	obj/kernel.asm	/^c010a506:	85 c0                	test   %eax,%eax$/;"	l
c010a508	obj/kernel.asm	/^c010a508:	7f 24                	jg     c010a52e <fd_array_release+0x71>$/;"	l
c010a50a	obj/kernel.asm	/^c010a50a:	c7 44 24 0c 17 7c 11 	movl   $0xc0117c17,0xc(%esp)$/;"	l
c010a511	obj/kernel.asm	/^c010a511:	c0 $/;"	l
c010a512	obj/kernel.asm	/^c010a512:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010a519	obj/kernel.asm	/^c010a519:	c0 $/;"	l
c010a51a	obj/kernel.asm	/^c010a51a:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
c010a521	obj/kernel.asm	/^c010a521:	00 $/;"	l
c010a522	obj/kernel.asm	/^c010a522:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010a529	obj/kernel.asm	/^c010a529:	e8 9a 69 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a52e	obj/kernel.asm	/^c010a52e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a531	obj/kernel.asm	/^c010a531:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a534	obj/kernel.asm	/^c010a534:	e8 22 fd ff ff       	call   c010a25b <fopen_count_dec>$/;"	l
c010a539	obj/kernel.asm	/^c010a539:	85 c0                	test   %eax,%eax$/;"	l
c010a53b	obj/kernel.asm	/^c010a53b:	75 0b                	jne    c010a548 <fd_array_release+0x8b>$/;"	l
c010a53d	obj/kernel.asm	/^c010a53d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a540	obj/kernel.asm	/^c010a540:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a543	obj/kernel.asm	/^c010a543:	e8 a0 fe ff ff       	call   c010a3e8 <fd_array_free>$/;"	l
c010a548	obj/kernel.asm	/^c010a548:	c9                   	leave  $/;"	l
c010a549	obj/kernel.asm	/^c010a549:	c3                   	ret    $/;"	l
c010a54a	obj/kernel.asm	/^c010a54a <fd_array_open>:$/;"	l
c010a54a	obj/kernel.asm	/^c010a54a:	55                   	push   %ebp$/;"	l
c010a54b	obj/kernel.asm	/^c010a54b:	89 e5                	mov    %esp,%ebp$/;"	l
c010a54d	obj/kernel.asm	/^c010a54d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a550	obj/kernel.asm	/^c010a550:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a553	obj/kernel.asm	/^c010a553:	8b 00                	mov    (%eax),%eax$/;"	l
c010a555	obj/kernel.asm	/^c010a555:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a558	obj/kernel.asm	/^c010a558:	75 0a                	jne    c010a564 <fd_array_open+0x1a>$/;"	l
c010a55a	obj/kernel.asm	/^c010a55a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a55d	obj/kernel.asm	/^c010a55d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a560	obj/kernel.asm	/^c010a560:	85 c0                	test   %eax,%eax$/;"	l
c010a562	obj/kernel.asm	/^c010a562:	75 24                	jne    c010a588 <fd_array_open+0x3e>$/;"	l
c010a564	obj/kernel.asm	/^c010a564:	c7 44 24 0c 30 7c 11 	movl   $0xc0117c30,0xc(%esp)$/;"	l
c010a56b	obj/kernel.asm	/^c010a56b:	c0 $/;"	l
c010a56c	obj/kernel.asm	/^c010a56c:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010a573	obj/kernel.asm	/^c010a573:	c0 $/;"	l
c010a574	obj/kernel.asm	/^c010a574:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c010a57b	obj/kernel.asm	/^c010a57b:	00 $/;"	l
c010a57c	obj/kernel.asm	/^c010a57c:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010a583	obj/kernel.asm	/^c010a583:	e8 40 69 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a588	obj/kernel.asm	/^c010a588:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a58b	obj/kernel.asm	/^c010a58b:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010a591	obj/kernel.asm	/^c010a591:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a594	obj/kernel.asm	/^c010a594:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a597	obj/kernel.asm	/^c010a597:	e8 a5 fc ff ff       	call   c010a241 <fopen_count_inc>$/;"	l
c010a59c	obj/kernel.asm	/^c010a59c:	c9                   	leave  $/;"	l
c010a59d	obj/kernel.asm	/^c010a59d:	c3                   	ret    $/;"	l
c010a59e	obj/kernel.asm	/^c010a59e <fd_array_close>:$/;"	l
c010a59e	obj/kernel.asm	/^c010a59e:	55                   	push   %ebp$/;"	l
c010a59f	obj/kernel.asm	/^c010a59f:	89 e5                	mov    %esp,%ebp$/;"	l
c010a5a1	obj/kernel.asm	/^c010a5a1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a5a4	obj/kernel.asm	/^c010a5a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a5a7	obj/kernel.asm	/^c010a5a7:	8b 00                	mov    (%eax),%eax$/;"	l
c010a5a9	obj/kernel.asm	/^c010a5a9:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a5ac	obj/kernel.asm	/^c010a5ac:	74 24                	je     c010a5d2 <fd_array_close+0x34>$/;"	l
c010a5ae	obj/kernel.asm	/^c010a5ae:	c7 44 24 0c c5 7b 11 	movl   $0xc0117bc5,0xc(%esp)$/;"	l
c010a5b5	obj/kernel.asm	/^c010a5b5:	c0 $/;"	l
c010a5b6	obj/kernel.asm	/^c010a5b6:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010a5bd	obj/kernel.asm	/^c010a5bd:	c0 $/;"	l
c010a5be	obj/kernel.asm	/^c010a5be:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
c010a5c5	obj/kernel.asm	/^c010a5c5:	00 $/;"	l
c010a5c6	obj/kernel.asm	/^c010a5c6:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010a5cd	obj/kernel.asm	/^c010a5cd:	e8 f6 68 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a5d2	obj/kernel.asm	/^c010a5d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a5d5	obj/kernel.asm	/^c010a5d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a5d8	obj/kernel.asm	/^c010a5d8:	e8 59 fc ff ff       	call   c010a236 <fopen_count>$/;"	l
c010a5dd	obj/kernel.asm	/^c010a5dd:	85 c0                	test   %eax,%eax$/;"	l
c010a5df	obj/kernel.asm	/^c010a5df:	7f 24                	jg     c010a605 <fd_array_close+0x67>$/;"	l
c010a5e1	obj/kernel.asm	/^c010a5e1:	c7 44 24 0c 17 7c 11 	movl   $0xc0117c17,0xc(%esp)$/;"	l
c010a5e8	obj/kernel.asm	/^c010a5e8:	c0 $/;"	l
c010a5e9	obj/kernel.asm	/^c010a5e9:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010a5f0	obj/kernel.asm	/^c010a5f0:	c0 $/;"	l
c010a5f1	obj/kernel.asm	/^c010a5f1:	c7 44 24 04 68 00 00 	movl   $0x68,0x4(%esp)$/;"	l
c010a5f8	obj/kernel.asm	/^c010a5f8:	00 $/;"	l
c010a5f9	obj/kernel.asm	/^c010a5f9:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010a600	obj/kernel.asm	/^c010a600:	e8 c3 68 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a605	obj/kernel.asm	/^c010a605:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a608	obj/kernel.asm	/^c010a608:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c010a60e	obj/kernel.asm	/^c010a60e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a611	obj/kernel.asm	/^c010a611:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a614	obj/kernel.asm	/^c010a614:	e8 42 fc ff ff       	call   c010a25b <fopen_count_dec>$/;"	l
c010a619	obj/kernel.asm	/^c010a619:	85 c0                	test   %eax,%eax$/;"	l
c010a61b	obj/kernel.asm	/^c010a61b:	75 0b                	jne    c010a628 <fd_array_close+0x8a>$/;"	l
c010a61d	obj/kernel.asm	/^c010a61d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a620	obj/kernel.asm	/^c010a620:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a623	obj/kernel.asm	/^c010a623:	e8 c0 fd ff ff       	call   c010a3e8 <fd_array_free>$/;"	l
c010a628	obj/kernel.asm	/^c010a628:	c9                   	leave  $/;"	l
c010a629	obj/kernel.asm	/^c010a629:	c3                   	ret    $/;"	l
c010a62a	obj/kernel.asm	/^c010a62a <fd_array_dup>:$/;"	l
c010a62a	obj/kernel.asm	/^c010a62a:	55                   	push   %ebp$/;"	l
c010a62b	obj/kernel.asm	/^c010a62b:	89 e5                	mov    %esp,%ebp$/;"	l
c010a62d	obj/kernel.asm	/^c010a62d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a630	obj/kernel.asm	/^c010a630:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a633	obj/kernel.asm	/^c010a633:	8b 00                	mov    (%eax),%eax$/;"	l
c010a635	obj/kernel.asm	/^c010a635:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a638	obj/kernel.asm	/^c010a638:	75 0a                	jne    c010a644 <fd_array_dup+0x1a>$/;"	l
c010a63a	obj/kernel.asm	/^c010a63a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a63d	obj/kernel.asm	/^c010a63d:	8b 00                	mov    (%eax),%eax$/;"	l
c010a63f	obj/kernel.asm	/^c010a63f:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a642	obj/kernel.asm	/^c010a642:	74 24                	je     c010a668 <fd_array_dup+0x3e>$/;"	l
c010a644	obj/kernel.asm	/^c010a644:	c7 44 24 0c 60 7c 11 	movl   $0xc0117c60,0xc(%esp)$/;"	l
c010a64b	obj/kernel.asm	/^c010a64b:	c0 $/;"	l
c010a64c	obj/kernel.asm	/^c010a64c:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010a653	obj/kernel.asm	/^c010a653:	c0 $/;"	l
c010a654	obj/kernel.asm	/^c010a654:	c7 44 24 04 73 00 00 	movl   $0x73,0x4(%esp)$/;"	l
c010a65b	obj/kernel.asm	/^c010a65b:	00 $/;"	l
c010a65c	obj/kernel.asm	/^c010a65c:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010a663	obj/kernel.asm	/^c010a663:	e8 60 68 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a668	obj/kernel.asm	/^c010a668:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a66b	obj/kernel.asm	/^c010a66b:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010a66e	obj/kernel.asm	/^c010a66e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a671	obj/kernel.asm	/^c010a671:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010a674	obj/kernel.asm	/^c010a674:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a677	obj/kernel.asm	/^c010a677:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a67a	obj/kernel.asm	/^c010a67a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a67d	obj/kernel.asm	/^c010a67d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a680	obj/kernel.asm	/^c010a680:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a683	obj/kernel.asm	/^c010a683:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010a686	obj/kernel.asm	/^c010a686:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a689	obj/kernel.asm	/^c010a689:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010a68c	obj/kernel.asm	/^c010a68c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a68f	obj/kernel.asm	/^c010a68f:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a692	obj/kernel.asm	/^c010a692:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a695	obj/kernel.asm	/^c010a695:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a698	obj/kernel.asm	/^c010a698:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a69b	obj/kernel.asm	/^c010a69b:	e8 70 4a 00 00       	call   c010f110 <inode_ref_inc>$/;"	l
c010a6a0	obj/kernel.asm	/^c010a6a0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a6a3	obj/kernel.asm	/^c010a6a3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a6a6	obj/kernel.asm	/^c010a6a6:	e8 6c 4b 00 00       	call   c010f217 <inode_open_inc>$/;"	l
c010a6ab	obj/kernel.asm	/^c010a6ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a6ae	obj/kernel.asm	/^c010a6ae:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a6b1	obj/kernel.asm	/^c010a6b1:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010a6b4	obj/kernel.asm	/^c010a6b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a6b7	obj/kernel.asm	/^c010a6b7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a6ba	obj/kernel.asm	/^c010a6ba:	e8 8b fe ff ff       	call   c010a54a <fd_array_open>$/;"	l
c010a6bf	obj/kernel.asm	/^c010a6bf:	c9                   	leave  $/;"	l
c010a6c0	obj/kernel.asm	/^c010a6c0:	c3                   	ret    $/;"	l
c010a6c1	obj/kernel.asm	/^c010a6c1 <fd2file>:$/;"	l
c010a6c1	obj/kernel.asm	/^c010a6c1:	55                   	push   %ebp$/;"	l
c010a6c2	obj/kernel.asm	/^c010a6c2:	89 e5                	mov    %esp,%ebp$/;"	l
c010a6c4	obj/kernel.asm	/^c010a6c4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a6c7	obj/kernel.asm	/^c010a6c7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a6cb	obj/kernel.asm	/^c010a6cb:	78 4b                	js     c010a718 <fd2file+0x57>$/;"	l
c010a6cd	obj/kernel.asm	/^c010a6cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a6d0	obj/kernel.asm	/^c010a6d0:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a6d5	obj/kernel.asm	/^c010a6d5:	77 41                	ja     c010a718 <fd2file+0x57>$/;"	l
c010a6d7	obj/kernel.asm	/^c010a6d7:	e8 99 fb ff ff       	call   c010a275 <get_fd_array>$/;"	l
c010a6dc	obj/kernel.asm	/^c010a6dc:	89 c2                	mov    %eax,%edx$/;"	l
c010a6de	obj/kernel.asm	/^c010a6de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a6e1	obj/kernel.asm	/^c010a6e1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a6e4	obj/kernel.asm	/^c010a6e4:	8d 0c c5 00 00 00 00 	lea    0x0(,%eax,8),%ecx$/;"	l
c010a6eb	obj/kernel.asm	/^c010a6eb:	29 c1                	sub    %eax,%ecx$/;"	l
c010a6ed	obj/kernel.asm	/^c010a6ed:	89 c8                	mov    %ecx,%eax$/;"	l
c010a6ef	obj/kernel.asm	/^c010a6ef:	01 d0                	add    %edx,%eax$/;"	l
c010a6f1	obj/kernel.asm	/^c010a6f1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a6f4	obj/kernel.asm	/^c010a6f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a6f7	obj/kernel.asm	/^c010a6f7:	8b 00                	mov    (%eax),%eax$/;"	l
c010a6f9	obj/kernel.asm	/^c010a6f9:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a6fc	obj/kernel.asm	/^c010a6fc:	75 1a                	jne    c010a718 <fd2file+0x57>$/;"	l
c010a6fe	obj/kernel.asm	/^c010a6fe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a701	obj/kernel.asm	/^c010a701:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a704	obj/kernel.asm	/^c010a704:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010a707	obj/kernel.asm	/^c010a707:	75 0f                	jne    c010a718 <fd2file+0x57>$/;"	l
c010a709	obj/kernel.asm	/^c010a709:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a70c	obj/kernel.asm	/^c010a70c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a70f	obj/kernel.asm	/^c010a70f:	89 10                	mov    %edx,(%eax)$/;"	l
c010a711	obj/kernel.asm	/^c010a711:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a716	obj/kernel.asm	/^c010a716:	eb 05                	jmp    c010a71d <fd2file+0x5c>$/;"	l
c010a718	obj/kernel.asm	/^c010a718:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a71d	obj/kernel.asm	/^c010a71d:	c9                   	leave  $/;"	l
c010a71e	obj/kernel.asm	/^c010a71e:	c3                   	ret    $/;"	l
c010a71f	obj/kernel.asm	/^c010a71f <file_testfd>:$/;"	l
c010a71f	obj/kernel.asm	/^c010a71f:	55                   	push   %ebp$/;"	l
c010a720	obj/kernel.asm	/^c010a720:	89 e5                	mov    %esp,%ebp$/;"	l
c010a722	obj/kernel.asm	/^c010a722:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a725	obj/kernel.asm	/^c010a725:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010a728	obj/kernel.asm	/^c010a728:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a72c	obj/kernel.asm	/^c010a72c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a72f	obj/kernel.asm	/^c010a72f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a732	obj/kernel.asm	/^c010a732:	e8 8a ff ff ff       	call   c010a6c1 <fd2file>$/;"	l
c010a737	obj/kernel.asm	/^c010a737:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a73a	obj/kernel.asm	/^c010a73a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a73e	obj/kernel.asm	/^c010a73e:	74 07                	je     c010a747 <file_testfd+0x28>$/;"	l
c010a740	obj/kernel.asm	/^c010a740:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a745	obj/kernel.asm	/^c010a745:	eb 33                	jmp    c010a77a <file_testfd+0x5b>$/;"	l
c010a747	obj/kernel.asm	/^c010a747:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010a74b	obj/kernel.asm	/^c010a74b:	74 11                	je     c010a75e <file_testfd+0x3f>$/;"	l
c010a74d	obj/kernel.asm	/^c010a74d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a750	obj/kernel.asm	/^c010a750:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a753	obj/kernel.asm	/^c010a753:	85 c0                	test   %eax,%eax$/;"	l
c010a755	obj/kernel.asm	/^c010a755:	75 07                	jne    c010a75e <file_testfd+0x3f>$/;"	l
c010a757	obj/kernel.asm	/^c010a757:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a75c	obj/kernel.asm	/^c010a75c:	eb 1c                	jmp    c010a77a <file_testfd+0x5b>$/;"	l
c010a75e	obj/kernel.asm	/^c010a75e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010a762	obj/kernel.asm	/^c010a762:	74 11                	je     c010a775 <file_testfd+0x56>$/;"	l
c010a764	obj/kernel.asm	/^c010a764:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a767	obj/kernel.asm	/^c010a767:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a76a	obj/kernel.asm	/^c010a76a:	85 c0                	test   %eax,%eax$/;"	l
c010a76c	obj/kernel.asm	/^c010a76c:	75 07                	jne    c010a775 <file_testfd+0x56>$/;"	l
c010a76e	obj/kernel.asm	/^c010a76e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a773	obj/kernel.asm	/^c010a773:	eb 05                	jmp    c010a77a <file_testfd+0x5b>$/;"	l
c010a775	obj/kernel.asm	/^c010a775:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010a77a	obj/kernel.asm	/^c010a77a:	c9                   	leave  $/;"	l
c010a77b	obj/kernel.asm	/^c010a77b:	c3                   	ret    $/;"	l
c010a77c	obj/kernel.asm	/^c010a77c <file_open>:$/;"	l
c010a77c	obj/kernel.asm	/^c010a77c:	55                   	push   %ebp$/;"	l
c010a77d	obj/kernel.asm	/^c010a77d:	89 e5                	mov    %esp,%ebp$/;"	l
c010a77f	obj/kernel.asm	/^c010a77f:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010a782	obj/kernel.asm	/^c010a782:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010a789	obj/kernel.asm	/^c010a789:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010a790	obj/kernel.asm	/^c010a790:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a793	obj/kernel.asm	/^c010a793:	83 e0 03             	and    $0x3,%eax$/;"	l
c010a796	obj/kernel.asm	/^c010a796:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a799	obj/kernel.asm	/^c010a799:	74 15                	je     c010a7b0 <file_open+0x34>$/;"	l
c010a79b	obj/kernel.asm	/^c010a79b:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a79e	obj/kernel.asm	/^c010a79e:	72 07                	jb     c010a7a7 <file_open+0x2b>$/;"	l
c010a7a0	obj/kernel.asm	/^c010a7a0:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a7a3	obj/kernel.asm	/^c010a7a3:	74 14                	je     c010a7b9 <file_open+0x3d>$/;"	l
c010a7a5	obj/kernel.asm	/^c010a7a5:	eb 21                	jmp    c010a7c8 <file_open+0x4c>$/;"	l
c010a7a7	obj/kernel.asm	/^c010a7a7:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010a7ae	obj/kernel.asm	/^c010a7ae:	eb 22                	jmp    c010a7d2 <file_open+0x56>$/;"	l
c010a7b0	obj/kernel.asm	/^c010a7b0:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a7b7	obj/kernel.asm	/^c010a7b7:	eb 19                	jmp    c010a7d2 <file_open+0x56>$/;"	l
c010a7b9	obj/kernel.asm	/^c010a7b9:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a7c0	obj/kernel.asm	/^c010a7c0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a7c3	obj/kernel.asm	/^c010a7c3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a7c6	obj/kernel.asm	/^c010a7c6:	eb 0a                	jmp    c010a7d2 <file_open+0x56>$/;"	l
c010a7c8	obj/kernel.asm	/^c010a7c8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a7cd	obj/kernel.asm	/^c010a7cd:	e9 45 01 00 00       	jmp    c010a917 <file_open+0x19b>$/;"	l
c010a7d2	obj/kernel.asm	/^c010a7d2:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c010a7d5	obj/kernel.asm	/^c010a7d5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a7d9	obj/kernel.asm	/^c010a7d9:	c7 04 24 d9 6a ff ff 	movl   $0xffff6ad9,(%esp)$/;"	l
c010a7e0	obj/kernel.asm	/^c010a7e0:	e8 2a fb ff ff       	call   c010a30f <fd_array_alloc>$/;"	l
c010a7e5	obj/kernel.asm	/^c010a7e5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a7e8	obj/kernel.asm	/^c010a7e8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a7ec	obj/kernel.asm	/^c010a7ec:	74 08                	je     c010a7f6 <file_open+0x7a>$/;"	l
c010a7ee	obj/kernel.asm	/^c010a7ee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a7f1	obj/kernel.asm	/^c010a7f1:	e9 21 01 00 00       	jmp    c010a917 <file_open+0x19b>$/;"	l
c010a7f6	obj/kernel.asm	/^c010a7f6:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010a7f9	obj/kernel.asm	/^c010a7f9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a7fd	obj/kernel.asm	/^c010a7fd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a800	obj/kernel.asm	/^c010a800:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a804	obj/kernel.asm	/^c010a804:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a807	obj/kernel.asm	/^c010a807:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a80a	obj/kernel.asm	/^c010a80a:	e8 e2 55 00 00       	call   c010fdf1 <vfs_open>$/;"	l
c010a80f	obj/kernel.asm	/^c010a80f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a812	obj/kernel.asm	/^c010a812:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a816	obj/kernel.asm	/^c010a816:	74 13                	je     c010a82b <file_open+0xaf>$/;"	l
c010a818	obj/kernel.asm	/^c010a818:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a81b	obj/kernel.asm	/^c010a81b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a81e	obj/kernel.asm	/^c010a81e:	e8 c5 fb ff ff       	call   c010a3e8 <fd_array_free>$/;"	l
c010a823	obj/kernel.asm	/^c010a823:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a826	obj/kernel.asm	/^c010a826:	e9 ec 00 00 00       	jmp    c010a917 <file_open+0x19b>$/;"	l
c010a82b	obj/kernel.asm	/^c010a82b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a82e	obj/kernel.asm	/^c010a82e:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010a835	obj/kernel.asm	/^c010a835:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a838	obj/kernel.asm	/^c010a838:	83 e0 20             	and    $0x20,%eax$/;"	l
c010a83b	obj/kernel.asm	/^c010a83b:	85 c0                	test   %eax,%eax$/;"	l
c010a83d	obj/kernel.asm	/^c010a83d:	0f 84 a8 00 00 00    	je     c010a8eb <file_open+0x16f>$/;"	l
c010a843	obj/kernel.asm	/^c010a843:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c010a846	obj/kernel.asm	/^c010a846:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a849	obj/kernel.asm	/^c010a849:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a84c	obj/kernel.asm	/^c010a84c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a84f	obj/kernel.asm	/^c010a84f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010a853	obj/kernel.asm	/^c010a853:	74 17                	je     c010a86c <file_open+0xf0>$/;"	l
c010a855	obj/kernel.asm	/^c010a855:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a858	obj/kernel.asm	/^c010a858:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a85b	obj/kernel.asm	/^c010a85b:	85 c0                	test   %eax,%eax$/;"	l
c010a85d	obj/kernel.asm	/^c010a85d:	74 0d                	je     c010a86c <file_open+0xf0>$/;"	l
c010a85f	obj/kernel.asm	/^c010a85f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a862	obj/kernel.asm	/^c010a862:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a865	obj/kernel.asm	/^c010a865:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a868	obj/kernel.asm	/^c010a868:	85 c0                	test   %eax,%eax$/;"	l
c010a86a	obj/kernel.asm	/^c010a86a:	75 24                	jne    c010a890 <file_open+0x114>$/;"	l
c010a86c	obj/kernel.asm	/^c010a86c:	c7 44 24 0c 94 7c 11 	movl   $0xc0117c94,0xc(%esp)$/;"	l
c010a873	obj/kernel.asm	/^c010a873:	c0 $/;"	l
c010a874	obj/kernel.asm	/^c010a874:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010a87b	obj/kernel.asm	/^c010a87b:	c0 $/;"	l
c010a87c	obj/kernel.asm	/^c010a87c:	c7 44 24 04 b8 00 00 	movl   $0xb8,0x4(%esp)$/;"	l
c010a883	obj/kernel.asm	/^c010a883:	00 $/;"	l
c010a884	obj/kernel.asm	/^c010a884:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010a88b	obj/kernel.asm	/^c010a88b:	e8 38 66 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a890	obj/kernel.asm	/^c010a890:	c7 44 24 04 e2 7c 11 	movl   $0xc0117ce2,0x4(%esp)$/;"	l
c010a897	obj/kernel.asm	/^c010a897:	c0 $/;"	l
c010a898	obj/kernel.asm	/^c010a898:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a89b	obj/kernel.asm	/^c010a89b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a89e	obj/kernel.asm	/^c010a89e:	e8 75 4a 00 00       	call   c010f318 <inode_check>$/;"	l
c010a8a3	obj/kernel.asm	/^c010a8a3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a8a6	obj/kernel.asm	/^c010a8a6:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a8a9	obj/kernel.asm	/^c010a8a9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a8ac	obj/kernel.asm	/^c010a8ac:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010a8af	obj/kernel.asm	/^c010a8af:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c010a8b2	obj/kernel.asm	/^c010a8b2:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010a8b6	obj/kernel.asm	/^c010a8b6:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010a8b9	obj/kernel.asm	/^c010a8b9:	ff d0                	call   *%eax$/;"	l
c010a8bb	obj/kernel.asm	/^c010a8bb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a8be	obj/kernel.asm	/^c010a8be:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a8c2	obj/kernel.asm	/^c010a8c2:	74 1b                	je     c010a8df <file_open+0x163>$/;"	l
c010a8c4	obj/kernel.asm	/^c010a8c4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a8c7	obj/kernel.asm	/^c010a8c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a8ca	obj/kernel.asm	/^c010a8ca:	e8 12 58 00 00       	call   c01100e1 <vfs_close>$/;"	l
c010a8cf	obj/kernel.asm	/^c010a8cf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a8d2	obj/kernel.asm	/^c010a8d2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a8d5	obj/kernel.asm	/^c010a8d5:	e8 0e fb ff ff       	call   c010a3e8 <fd_array_free>$/;"	l
c010a8da	obj/kernel.asm	/^c010a8da:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a8dd	obj/kernel.asm	/^c010a8dd:	eb 38                	jmp    c010a917 <file_open+0x19b>$/;"	l
c010a8df	obj/kernel.asm	/^c010a8df:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a8e2	obj/kernel.asm	/^c010a8e2:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a8e5	obj/kernel.asm	/^c010a8e5:	8b 52 0c             	mov    0xc(%edx),%edx$/;"	l
c010a8e8	obj/kernel.asm	/^c010a8e8:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010a8eb	obj/kernel.asm	/^c010a8eb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a8ee	obj/kernel.asm	/^c010a8ee:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010a8f1	obj/kernel.asm	/^c010a8f1:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010a8f4	obj/kernel.asm	/^c010a8f4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a8f7	obj/kernel.asm	/^c010a8f7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a8fa	obj/kernel.asm	/^c010a8fa:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a8fd	obj/kernel.asm	/^c010a8fd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a900	obj/kernel.asm	/^c010a900:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010a903	obj/kernel.asm	/^c010a903:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010a906	obj/kernel.asm	/^c010a906:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a909	obj/kernel.asm	/^c010a909:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a90c	obj/kernel.asm	/^c010a90c:	e8 39 fc ff ff       	call   c010a54a <fd_array_open>$/;"	l
c010a911	obj/kernel.asm	/^c010a911:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a914	obj/kernel.asm	/^c010a914:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a917	obj/kernel.asm	/^c010a917:	c9                   	leave  $/;"	l
c010a918	obj/kernel.asm	/^c010a918:	c3                   	ret    $/;"	l
c010a919	obj/kernel.asm	/^c010a919 <file_close>:$/;"	l
c010a919	obj/kernel.asm	/^c010a919:	55                   	push   %ebp$/;"	l
c010a91a	obj/kernel.asm	/^c010a91a:	89 e5                	mov    %esp,%ebp$/;"	l
c010a91c	obj/kernel.asm	/^c010a91c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a91f	obj/kernel.asm	/^c010a91f:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010a922	obj/kernel.asm	/^c010a922:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a926	obj/kernel.asm	/^c010a926:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a929	obj/kernel.asm	/^c010a929:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a92c	obj/kernel.asm	/^c010a92c:	e8 90 fd ff ff       	call   c010a6c1 <fd2file>$/;"	l
c010a931	obj/kernel.asm	/^c010a931:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a934	obj/kernel.asm	/^c010a934:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a938	obj/kernel.asm	/^c010a938:	74 05                	je     c010a93f <file_close+0x26>$/;"	l
c010a93a	obj/kernel.asm	/^c010a93a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a93d	obj/kernel.asm	/^c010a93d:	eb 10                	jmp    c010a94f <file_close+0x36>$/;"	l
c010a93f	obj/kernel.asm	/^c010a93f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a942	obj/kernel.asm	/^c010a942:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a945	obj/kernel.asm	/^c010a945:	e8 54 fc ff ff       	call   c010a59e <fd_array_close>$/;"	l
c010a94a	obj/kernel.asm	/^c010a94a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a94f	obj/kernel.asm	/^c010a94f:	c9                   	leave  $/;"	l
c010a950	obj/kernel.asm	/^c010a950:	c3                   	ret    $/;"	l
c010a951	obj/kernel.asm	/^c010a951 <file_read>:$/;"	l
c010a951	obj/kernel.asm	/^c010a951:	55                   	push   %ebp$/;"	l
c010a952	obj/kernel.asm	/^c010a952:	89 e5                	mov    %esp,%ebp$/;"	l
c010a954	obj/kernel.asm	/^c010a954:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010a957	obj/kernel.asm	/^c010a957:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010a95a	obj/kernel.asm	/^c010a95a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a960	obj/kernel.asm	/^c010a960:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c010a963	obj/kernel.asm	/^c010a963:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a967	obj/kernel.asm	/^c010a967:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a96a	obj/kernel.asm	/^c010a96a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a96d	obj/kernel.asm	/^c010a96d:	e8 4f fd ff ff       	call   c010a6c1 <fd2file>$/;"	l
c010a972	obj/kernel.asm	/^c010a972:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a975	obj/kernel.asm	/^c010a975:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a979	obj/kernel.asm	/^c010a979:	74 08                	je     c010a983 <file_read+0x32>$/;"	l
c010a97b	obj/kernel.asm	/^c010a97b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a97e	obj/kernel.asm	/^c010a97e:	e9 06 01 00 00       	jmp    c010aa89 <file_read+0x138>$/;"	l
c010a983	obj/kernel.asm	/^c010a983:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a986	obj/kernel.asm	/^c010a986:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a989	obj/kernel.asm	/^c010a989:	85 c0                	test   %eax,%eax$/;"	l
c010a98b	obj/kernel.asm	/^c010a98b:	75 0a                	jne    c010a997 <file_read+0x46>$/;"	l
c010a98d	obj/kernel.asm	/^c010a98d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a992	obj/kernel.asm	/^c010a992:	e9 f2 00 00 00       	jmp    c010aa89 <file_read+0x138>$/;"	l
c010a997	obj/kernel.asm	/^c010a997:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a99a	obj/kernel.asm	/^c010a99a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a99d	obj/kernel.asm	/^c010a99d:	e8 da fa ff ff       	call   c010a47c <fd_array_acquire>$/;"	l
c010a9a2	obj/kernel.asm	/^c010a9a2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a9a5	obj/kernel.asm	/^c010a9a5:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a9a8	obj/kernel.asm	/^c010a9a8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010a9ac	obj/kernel.asm	/^c010a9ac:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010a9af	obj/kernel.asm	/^c010a9af:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a9b3	obj/kernel.asm	/^c010a9b3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a9b6	obj/kernel.asm	/^c010a9b6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a9ba	obj/kernel.asm	/^c010a9ba:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010a9bd	obj/kernel.asm	/^c010a9bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a9c0	obj/kernel.asm	/^c010a9c0:	e8 81 09 00 00       	call   c010b346 <iobuf_init>$/;"	l
c010a9c5	obj/kernel.asm	/^c010a9c5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a9c8	obj/kernel.asm	/^c010a9c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a9cb	obj/kernel.asm	/^c010a9cb:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a9ce	obj/kernel.asm	/^c010a9ce:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a9d1	obj/kernel.asm	/^c010a9d1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a9d5	obj/kernel.asm	/^c010a9d5:	74 17                	je     c010a9ee <file_read+0x9d>$/;"	l
c010a9d7	obj/kernel.asm	/^c010a9d7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a9da	obj/kernel.asm	/^c010a9da:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a9dd	obj/kernel.asm	/^c010a9dd:	85 c0                	test   %eax,%eax$/;"	l
c010a9df	obj/kernel.asm	/^c010a9df:	74 0d                	je     c010a9ee <file_read+0x9d>$/;"	l
c010a9e1	obj/kernel.asm	/^c010a9e1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a9e4	obj/kernel.asm	/^c010a9e4:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a9e7	obj/kernel.asm	/^c010a9e7:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a9ea	obj/kernel.asm	/^c010a9ea:	85 c0                	test   %eax,%eax$/;"	l
c010a9ec	obj/kernel.asm	/^c010a9ec:	75 24                	jne    c010aa12 <file_read+0xc1>$/;"	l
c010a9ee	obj/kernel.asm	/^c010a9ee:	c7 44 24 0c e8 7c 11 	movl   $0xc0117ce8,0xc(%esp)$/;"	l
c010a9f5	obj/kernel.asm	/^c010a9f5:	c0 $/;"	l
c010a9f6	obj/kernel.asm	/^c010a9f6:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010a9fd	obj/kernel.asm	/^c010a9fd:	c0 $/;"	l
c010a9fe	obj/kernel.asm	/^c010a9fe:	c7 44 24 04 e2 00 00 	movl   $0xe2,0x4(%esp)$/;"	l
c010aa05	obj/kernel.asm	/^c010aa05:	00 $/;"	l
c010aa06	obj/kernel.asm	/^c010aa06:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010aa0d	obj/kernel.asm	/^c010aa0d:	e8 b6 64 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010aa12	obj/kernel.asm	/^c010aa12:	c7 44 24 04 35 7d 11 	movl   $0xc0117d35,0x4(%esp)$/;"	l
c010aa19	obj/kernel.asm	/^c010aa19:	c0 $/;"	l
c010aa1a	obj/kernel.asm	/^c010aa1a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aa1d	obj/kernel.asm	/^c010aa1d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aa20	obj/kernel.asm	/^c010aa20:	e8 f3 48 00 00       	call   c010f318 <inode_check>$/;"	l
c010aa25	obj/kernel.asm	/^c010aa25:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aa28	obj/kernel.asm	/^c010aa28:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010aa2b	obj/kernel.asm	/^c010aa2b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010aa2e	obj/kernel.asm	/^c010aa2e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010aa31	obj/kernel.asm	/^c010aa31:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010aa34	obj/kernel.asm	/^c010aa34:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010aa37	obj/kernel.asm	/^c010aa37:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010aa3b	obj/kernel.asm	/^c010aa3b:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010aa3e	obj/kernel.asm	/^c010aa3e:	ff d0                	call   *%eax$/;"	l
c010aa40	obj/kernel.asm	/^c010aa40:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aa43	obj/kernel.asm	/^c010aa43:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aa46	obj/kernel.asm	/^c010aa46:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010aa49	obj/kernel.asm	/^c010aa49:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aa4c	obj/kernel.asm	/^c010aa4c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010aa4f	obj/kernel.asm	/^c010aa4f:	29 c2                	sub    %eax,%edx$/;"	l
c010aa51	obj/kernel.asm	/^c010aa51:	89 d0                	mov    %edx,%eax$/;"	l
c010aa53	obj/kernel.asm	/^c010aa53:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010aa56	obj/kernel.asm	/^c010aa56:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aa59	obj/kernel.asm	/^c010aa59:	8b 00                	mov    (%eax),%eax$/;"	l
c010aa5b	obj/kernel.asm	/^c010aa5b:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010aa5e	obj/kernel.asm	/^c010aa5e:	75 13                	jne    c010aa73 <file_read+0x122>$/;"	l
c010aa60	obj/kernel.asm	/^c010aa60:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aa63	obj/kernel.asm	/^c010aa63:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010aa66	obj/kernel.asm	/^c010aa66:	8b 52 10             	mov    0x10(%edx),%edx$/;"	l
c010aa69	obj/kernel.asm	/^c010aa69:	89 d1                	mov    %edx,%ecx$/;"	l
c010aa6b	obj/kernel.asm	/^c010aa6b:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010aa6e	obj/kernel.asm	/^c010aa6e:	01 ca                	add    %ecx,%edx$/;"	l
c010aa70	obj/kernel.asm	/^c010aa70:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010aa73	obj/kernel.asm	/^c010aa73:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010aa76	obj/kernel.asm	/^c010aa76:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010aa79	obj/kernel.asm	/^c010aa79:	89 10                	mov    %edx,(%eax)$/;"	l
c010aa7b	obj/kernel.asm	/^c010aa7b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aa7e	obj/kernel.asm	/^c010aa7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aa81	obj/kernel.asm	/^c010aa81:	e8 37 fa ff ff       	call   c010a4bd <fd_array_release>$/;"	l
c010aa86	obj/kernel.asm	/^c010aa86:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aa89	obj/kernel.asm	/^c010aa89:	c9                   	leave  $/;"	l
c010aa8a	obj/kernel.asm	/^c010aa8a:	c3                   	ret    $/;"	l
c010aa8b	obj/kernel.asm	/^c010aa8b <file_write>:$/;"	l
c010aa8b	obj/kernel.asm	/^c010aa8b:	55                   	push   %ebp$/;"	l
c010aa8c	obj/kernel.asm	/^c010aa8c:	89 e5                	mov    %esp,%ebp$/;"	l
c010aa8e	obj/kernel.asm	/^c010aa8e:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010aa91	obj/kernel.asm	/^c010aa91:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010aa94	obj/kernel.asm	/^c010aa94:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010aa9a	obj/kernel.asm	/^c010aa9a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c010aa9d	obj/kernel.asm	/^c010aa9d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010aaa1	obj/kernel.asm	/^c010aaa1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aaa4	obj/kernel.asm	/^c010aaa4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aaa7	obj/kernel.asm	/^c010aaa7:	e8 15 fc ff ff       	call   c010a6c1 <fd2file>$/;"	l
c010aaac	obj/kernel.asm	/^c010aaac:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aaaf	obj/kernel.asm	/^c010aaaf:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010aab3	obj/kernel.asm	/^c010aab3:	74 08                	je     c010aabd <file_write+0x32>$/;"	l
c010aab5	obj/kernel.asm	/^c010aab5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aab8	obj/kernel.asm	/^c010aab8:	e9 06 01 00 00       	jmp    c010abc3 <file_write+0x138>$/;"	l
c010aabd	obj/kernel.asm	/^c010aabd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aac0	obj/kernel.asm	/^c010aac0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010aac3	obj/kernel.asm	/^c010aac3:	85 c0                	test   %eax,%eax$/;"	l
c010aac5	obj/kernel.asm	/^c010aac5:	75 0a                	jne    c010aad1 <file_write+0x46>$/;"	l
c010aac7	obj/kernel.asm	/^c010aac7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010aacc	obj/kernel.asm	/^c010aacc:	e9 f2 00 00 00       	jmp    c010abc3 <file_write+0x138>$/;"	l
c010aad1	obj/kernel.asm	/^c010aad1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aad4	obj/kernel.asm	/^c010aad4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aad7	obj/kernel.asm	/^c010aad7:	e8 a0 f9 ff ff       	call   c010a47c <fd_array_acquire>$/;"	l
c010aadc	obj/kernel.asm	/^c010aadc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aadf	obj/kernel.asm	/^c010aadf:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010aae2	obj/kernel.asm	/^c010aae2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010aae6	obj/kernel.asm	/^c010aae6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010aae9	obj/kernel.asm	/^c010aae9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010aaed	obj/kernel.asm	/^c010aaed:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aaf0	obj/kernel.asm	/^c010aaf0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010aaf4	obj/kernel.asm	/^c010aaf4:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010aaf7	obj/kernel.asm	/^c010aaf7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aafa	obj/kernel.asm	/^c010aafa:	e8 47 08 00 00       	call   c010b346 <iobuf_init>$/;"	l
c010aaff	obj/kernel.asm	/^c010aaff:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ab02	obj/kernel.asm	/^c010ab02:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ab05	obj/kernel.asm	/^c010ab05:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ab08	obj/kernel.asm	/^c010ab08:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ab0b	obj/kernel.asm	/^c010ab0b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ab0f	obj/kernel.asm	/^c010ab0f:	74 17                	je     c010ab28 <file_write+0x9d>$/;"	l
c010ab11	obj/kernel.asm	/^c010ab11:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ab14	obj/kernel.asm	/^c010ab14:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ab17	obj/kernel.asm	/^c010ab17:	85 c0                	test   %eax,%eax$/;"	l
c010ab19	obj/kernel.asm	/^c010ab19:	74 0d                	je     c010ab28 <file_write+0x9d>$/;"	l
c010ab1b	obj/kernel.asm	/^c010ab1b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ab1e	obj/kernel.asm	/^c010ab1e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ab21	obj/kernel.asm	/^c010ab21:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010ab24	obj/kernel.asm	/^c010ab24:	85 c0                	test   %eax,%eax$/;"	l
c010ab26	obj/kernel.asm	/^c010ab26:	75 24                	jne    c010ab4c <file_write+0xc1>$/;"	l
c010ab28	obj/kernel.asm	/^c010ab28:	c7 44 24 0c 3c 7d 11 	movl   $0xc0117d3c,0xc(%esp)$/;"	l
c010ab2f	obj/kernel.asm	/^c010ab2f:	c0 $/;"	l
c010ab30	obj/kernel.asm	/^c010ab30:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010ab37	obj/kernel.asm	/^c010ab37:	c0 $/;"	l
c010ab38	obj/kernel.asm	/^c010ab38:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
c010ab3f	obj/kernel.asm	/^c010ab3f:	00 $/;"	l
c010ab40	obj/kernel.asm	/^c010ab40:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010ab47	obj/kernel.asm	/^c010ab47:	e8 7c 63 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ab4c	obj/kernel.asm	/^c010ab4c:	c7 44 24 04 8a 7d 11 	movl   $0xc0117d8a,0x4(%esp)$/;"	l
c010ab53	obj/kernel.asm	/^c010ab53:	c0 $/;"	l
c010ab54	obj/kernel.asm	/^c010ab54:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ab57	obj/kernel.asm	/^c010ab57:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ab5a	obj/kernel.asm	/^c010ab5a:	e8 b9 47 00 00       	call   c010f318 <inode_check>$/;"	l
c010ab5f	obj/kernel.asm	/^c010ab5f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ab62	obj/kernel.asm	/^c010ab62:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ab65	obj/kernel.asm	/^c010ab65:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010ab68	obj/kernel.asm	/^c010ab68:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010ab6b	obj/kernel.asm	/^c010ab6b:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010ab6e	obj/kernel.asm	/^c010ab6e:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010ab71	obj/kernel.asm	/^c010ab71:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010ab75	obj/kernel.asm	/^c010ab75:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ab78	obj/kernel.asm	/^c010ab78:	ff d0                	call   *%eax$/;"	l
c010ab7a	obj/kernel.asm	/^c010ab7a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ab7d	obj/kernel.asm	/^c010ab7d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ab80	obj/kernel.asm	/^c010ab80:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010ab83	obj/kernel.asm	/^c010ab83:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ab86	obj/kernel.asm	/^c010ab86:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010ab89	obj/kernel.asm	/^c010ab89:	29 c2                	sub    %eax,%edx$/;"	l
c010ab8b	obj/kernel.asm	/^c010ab8b:	89 d0                	mov    %edx,%eax$/;"	l
c010ab8d	obj/kernel.asm	/^c010ab8d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ab90	obj/kernel.asm	/^c010ab90:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ab93	obj/kernel.asm	/^c010ab93:	8b 00                	mov    (%eax),%eax$/;"	l
c010ab95	obj/kernel.asm	/^c010ab95:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010ab98	obj/kernel.asm	/^c010ab98:	75 13                	jne    c010abad <file_write+0x122>$/;"	l
c010ab9a	obj/kernel.asm	/^c010ab9a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ab9d	obj/kernel.asm	/^c010ab9d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010aba0	obj/kernel.asm	/^c010aba0:	8b 52 10             	mov    0x10(%edx),%edx$/;"	l
c010aba3	obj/kernel.asm	/^c010aba3:	89 d1                	mov    %edx,%ecx$/;"	l
c010aba5	obj/kernel.asm	/^c010aba5:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010aba8	obj/kernel.asm	/^c010aba8:	01 ca                	add    %ecx,%edx$/;"	l
c010abaa	obj/kernel.asm	/^c010abaa:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010abad	obj/kernel.asm	/^c010abad:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010abb0	obj/kernel.asm	/^c010abb0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010abb3	obj/kernel.asm	/^c010abb3:	89 10                	mov    %edx,(%eax)$/;"	l
c010abb5	obj/kernel.asm	/^c010abb5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010abb8	obj/kernel.asm	/^c010abb8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010abbb	obj/kernel.asm	/^c010abbb:	e8 fd f8 ff ff       	call   c010a4bd <fd_array_release>$/;"	l
c010abc0	obj/kernel.asm	/^c010abc0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010abc3	obj/kernel.asm	/^c010abc3:	c9                   	leave  $/;"	l
c010abc4	obj/kernel.asm	/^c010abc4:	c3                   	ret    $/;"	l
c010abc5	obj/kernel.asm	/^c010abc5 <file_seek>:$/;"	l
c010abc5	obj/kernel.asm	/^c010abc5:	55                   	push   %ebp$/;"	l
c010abc6	obj/kernel.asm	/^c010abc6:	89 e5                	mov    %esp,%ebp$/;"	l
c010abc8	obj/kernel.asm	/^c010abc8:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010abcb	obj/kernel.asm	/^c010abcb:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010abce	obj/kernel.asm	/^c010abce:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010abd1	obj/kernel.asm	/^c010abd1:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010abd4	obj/kernel.asm	/^c010abd4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010abd8	obj/kernel.asm	/^c010abd8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010abdb	obj/kernel.asm	/^c010abdb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010abde	obj/kernel.asm	/^c010abde:	e8 de fa ff ff       	call   c010a6c1 <fd2file>$/;"	l
c010abe3	obj/kernel.asm	/^c010abe3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010abe6	obj/kernel.asm	/^c010abe6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010abea	obj/kernel.asm	/^c010abea:	74 08                	je     c010abf4 <file_seek+0x2f>$/;"	l
c010abec	obj/kernel.asm	/^c010abec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010abef	obj/kernel.asm	/^c010abef:	e9 72 01 00 00       	jmp    c010ad66 <file_seek+0x1a1>$/;"	l
c010abf4	obj/kernel.asm	/^c010abf4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010abf7	obj/kernel.asm	/^c010abf7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010abfa	obj/kernel.asm	/^c010abfa:	e8 7d f8 ff ff       	call   c010a47c <fd_array_acquire>$/;"	l
c010abff	obj/kernel.asm	/^c010abff:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010ac02	obj/kernel.asm	/^c010ac02:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010ac05	obj/kernel.asm	/^c010ac05:	74 12                	je     c010ac19 <file_seek+0x54>$/;"	l
c010ac07	obj/kernel.asm	/^c010ac07:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010ac0a	obj/kernel.asm	/^c010ac0a:	74 1b                	je     c010ac27 <file_seek+0x62>$/;"	l
c010ac0c	obj/kernel.asm	/^c010ac0c:	85 c0                	test   %eax,%eax$/;"	l
c010ac0e	obj/kernel.asm	/^c010ac0e:	0f 84 af 00 00 00    	je     c010acc3 <file_seek+0xfe>$/;"	l
c010ac14	obj/kernel.asm	/^c010ac14:	e9 a1 00 00 00       	jmp    c010acba <file_seek+0xf5>$/;"	l
c010ac19	obj/kernel.asm	/^c010ac19:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010ac1c	obj/kernel.asm	/^c010ac1c:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010ac1f	obj/kernel.asm	/^c010ac1f:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c010ac22	obj/kernel.asm	/^c010ac22:	e9 9d 00 00 00       	jmp    c010acc4 <file_seek+0xff>$/;"	l
c010ac27	obj/kernel.asm	/^c010ac27:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010ac2a	obj/kernel.asm	/^c010ac2a:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ac2d	obj/kernel.asm	/^c010ac2d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ac30	obj/kernel.asm	/^c010ac30:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ac34	obj/kernel.asm	/^c010ac34:	74 17                	je     c010ac4d <file_seek+0x88>$/;"	l
c010ac36	obj/kernel.asm	/^c010ac36:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ac39	obj/kernel.asm	/^c010ac39:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ac3c	obj/kernel.asm	/^c010ac3c:	85 c0                	test   %eax,%eax$/;"	l
c010ac3e	obj/kernel.asm	/^c010ac3e:	74 0d                	je     c010ac4d <file_seek+0x88>$/;"	l
c010ac40	obj/kernel.asm	/^c010ac40:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ac43	obj/kernel.asm	/^c010ac43:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ac46	obj/kernel.asm	/^c010ac46:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ac49	obj/kernel.asm	/^c010ac49:	85 c0                	test   %eax,%eax$/;"	l
c010ac4b	obj/kernel.asm	/^c010ac4b:	75 24                	jne    c010ac71 <file_seek+0xac>$/;"	l
c010ac4d	obj/kernel.asm	/^c010ac4d:	c7 44 24 0c 94 7c 11 	movl   $0xc0117c94,0xc(%esp)$/;"	l
c010ac54	obj/kernel.asm	/^c010ac54:	c0 $/;"	l
c010ac55	obj/kernel.asm	/^c010ac55:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010ac5c	obj/kernel.asm	/^c010ac5c:	c0 $/;"	l
c010ac5d	obj/kernel.asm	/^c010ac5d:	c7 44 24 04 16 01 00 	movl   $0x116,0x4(%esp)$/;"	l
c010ac64	obj/kernel.asm	/^c010ac64:	00 $/;"	l
c010ac65	obj/kernel.asm	/^c010ac65:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010ac6c	obj/kernel.asm	/^c010ac6c:	e8 57 62 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ac71	obj/kernel.asm	/^c010ac71:	c7 44 24 04 e2 7c 11 	movl   $0xc0117ce2,0x4(%esp)$/;"	l
c010ac78	obj/kernel.asm	/^c010ac78:	c0 $/;"	l
c010ac79	obj/kernel.asm	/^c010ac79:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ac7c	obj/kernel.asm	/^c010ac7c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ac7f	obj/kernel.asm	/^c010ac7f:	e8 94 46 00 00       	call   c010f318 <inode_check>$/;"	l
c010ac84	obj/kernel.asm	/^c010ac84:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ac87	obj/kernel.asm	/^c010ac87:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ac8a	obj/kernel.asm	/^c010ac8a:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ac8d	obj/kernel.asm	/^c010ac8d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010ac90	obj/kernel.asm	/^c010ac90:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010ac93	obj/kernel.asm	/^c010ac93:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010ac96	obj/kernel.asm	/^c010ac96:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010ac9a	obj/kernel.asm	/^c010ac9a:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ac9d	obj/kernel.asm	/^c010ac9d:	ff d0                	call   *%eax$/;"	l
c010ac9f	obj/kernel.asm	/^c010ac9f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aca2	obj/kernel.asm	/^c010aca2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010aca6	obj/kernel.asm	/^c010aca6:	75 10                	jne    c010acb8 <file_seek+0xf3>$/;"	l
c010aca8	obj/kernel.asm	/^c010aca8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010acab	obj/kernel.asm	/^c010acab:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010acae	obj/kernel.asm	/^c010acae:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010acb1	obj/kernel.asm	/^c010acb1:	01 d0                	add    %edx,%eax$/;"	l
c010acb3	obj/kernel.asm	/^c010acb3:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c010acb6	obj/kernel.asm	/^c010acb6:	eb 0c                	jmp    c010acc4 <file_seek+0xff>$/;"	l
c010acb8	obj/kernel.asm	/^c010acb8:	eb 0a                	jmp    c010acc4 <file_seek+0xff>$/;"	l
c010acba	obj/kernel.asm	/^c010acba:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010acc1	obj/kernel.asm	/^c010acc1:	eb 01                	jmp    c010acc4 <file_seek+0xff>$/;"	l
c010acc3	obj/kernel.asm	/^c010acc3:	90                   	nop$/;"	l
c010acc4	obj/kernel.asm	/^c010acc4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010acc8	obj/kernel.asm	/^c010acc8:	0f 85 8a 00 00 00    	jne    c010ad58 <file_seek+0x193>$/;"	l
c010acce	obj/kernel.asm	/^c010acce:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010acd1	obj/kernel.asm	/^c010acd1:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010acd4	obj/kernel.asm	/^c010acd4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010acd7	obj/kernel.asm	/^c010acd7:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010acdb	obj/kernel.asm	/^c010acdb:	74 17                	je     c010acf4 <file_seek+0x12f>$/;"	l
c010acdd	obj/kernel.asm	/^c010acdd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ace0	obj/kernel.asm	/^c010ace0:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ace3	obj/kernel.asm	/^c010ace3:	85 c0                	test   %eax,%eax$/;"	l
c010ace5	obj/kernel.asm	/^c010ace5:	74 0d                	je     c010acf4 <file_seek+0x12f>$/;"	l
c010ace7	obj/kernel.asm	/^c010ace7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010acea	obj/kernel.asm	/^c010acea:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010aced	obj/kernel.asm	/^c010aced:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010acf0	obj/kernel.asm	/^c010acf0:	85 c0                	test   %eax,%eax$/;"	l
c010acf2	obj/kernel.asm	/^c010acf2:	75 24                	jne    c010ad18 <file_seek+0x153>$/;"	l
c010acf4	obj/kernel.asm	/^c010acf4:	c7 44 24 0c 90 7d 11 	movl   $0xc0117d90,0xc(%esp)$/;"	l
c010acfb	obj/kernel.asm	/^c010acfb:	c0 $/;"	l
c010acfc	obj/kernel.asm	/^c010acfc:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010ad03	obj/kernel.asm	/^c010ad03:	c0 $/;"	l
c010ad04	obj/kernel.asm	/^c010ad04:	c7 44 24 04 1e 01 00 	movl   $0x11e,0x4(%esp)$/;"	l
c010ad0b	obj/kernel.asm	/^c010ad0b:	00 $/;"	l
c010ad0c	obj/kernel.asm	/^c010ad0c:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010ad13	obj/kernel.asm	/^c010ad13:	e8 b0 61 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ad18	obj/kernel.asm	/^c010ad18:	c7 44 24 04 e0 7d 11 	movl   $0xc0117de0,0x4(%esp)$/;"	l
c010ad1f	obj/kernel.asm	/^c010ad1f:	c0 $/;"	l
c010ad20	obj/kernel.asm	/^c010ad20:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ad23	obj/kernel.asm	/^c010ad23:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ad26	obj/kernel.asm	/^c010ad26:	e8 ed 45 00 00       	call   c010f318 <inode_check>$/;"	l
c010ad2b	obj/kernel.asm	/^c010ad2b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ad2e	obj/kernel.asm	/^c010ad2e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ad31	obj/kernel.asm	/^c010ad31:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010ad34	obj/kernel.asm	/^c010ad34:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010ad37	obj/kernel.asm	/^c010ad37:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010ad3a	obj/kernel.asm	/^c010ad3a:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c010ad3d	obj/kernel.asm	/^c010ad3d:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010ad41	obj/kernel.asm	/^c010ad41:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ad44	obj/kernel.asm	/^c010ad44:	ff d0                	call   *%eax$/;"	l
c010ad46	obj/kernel.asm	/^c010ad46:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad49	obj/kernel.asm	/^c010ad49:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ad4d	obj/kernel.asm	/^c010ad4d:	75 09                	jne    c010ad58 <file_seek+0x193>$/;"	l
c010ad4f	obj/kernel.asm	/^c010ad4f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010ad52	obj/kernel.asm	/^c010ad52:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010ad55	obj/kernel.asm	/^c010ad55:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010ad58	obj/kernel.asm	/^c010ad58:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010ad5b	obj/kernel.asm	/^c010ad5b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ad5e	obj/kernel.asm	/^c010ad5e:	e8 5a f7 ff ff       	call   c010a4bd <fd_array_release>$/;"	l
c010ad63	obj/kernel.asm	/^c010ad63:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ad66	obj/kernel.asm	/^c010ad66:	c9                   	leave  $/;"	l
c010ad67	obj/kernel.asm	/^c010ad67:	c3                   	ret    $/;"	l
c010ad68	obj/kernel.asm	/^c010ad68 <file_fstat>:$/;"	l
c010ad68	obj/kernel.asm	/^c010ad68:	55                   	push   %ebp$/;"	l
c010ad69	obj/kernel.asm	/^c010ad69:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad6b	obj/kernel.asm	/^c010ad6b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ad6e	obj/kernel.asm	/^c010ad6e:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010ad71	obj/kernel.asm	/^c010ad71:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ad75	obj/kernel.asm	/^c010ad75:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad78	obj/kernel.asm	/^c010ad78:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ad7b	obj/kernel.asm	/^c010ad7b:	e8 41 f9 ff ff       	call   c010a6c1 <fd2file>$/;"	l
c010ad80	obj/kernel.asm	/^c010ad80:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad83	obj/kernel.asm	/^c010ad83:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ad87	obj/kernel.asm	/^c010ad87:	74 08                	je     c010ad91 <file_fstat+0x29>$/;"	l
c010ad89	obj/kernel.asm	/^c010ad89:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ad8c	obj/kernel.asm	/^c010ad8c:	e9 94 00 00 00       	jmp    c010ae25 <file_fstat+0xbd>$/;"	l
c010ad91	obj/kernel.asm	/^c010ad91:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ad94	obj/kernel.asm	/^c010ad94:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ad97	obj/kernel.asm	/^c010ad97:	e8 e0 f6 ff ff       	call   c010a47c <fd_array_acquire>$/;"	l
c010ad9c	obj/kernel.asm	/^c010ad9c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ad9f	obj/kernel.asm	/^c010ad9f:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ada2	obj/kernel.asm	/^c010ada2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ada5	obj/kernel.asm	/^c010ada5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ada9	obj/kernel.asm	/^c010ada9:	74 17                	je     c010adc2 <file_fstat+0x5a>$/;"	l
c010adab	obj/kernel.asm	/^c010adab:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010adae	obj/kernel.asm	/^c010adae:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010adb1	obj/kernel.asm	/^c010adb1:	85 c0                	test   %eax,%eax$/;"	l
c010adb3	obj/kernel.asm	/^c010adb3:	74 0d                	je     c010adc2 <file_fstat+0x5a>$/;"	l
c010adb5	obj/kernel.asm	/^c010adb5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010adb8	obj/kernel.asm	/^c010adb8:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010adbb	obj/kernel.asm	/^c010adbb:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010adbe	obj/kernel.asm	/^c010adbe:	85 c0                	test   %eax,%eax$/;"	l
c010adc0	obj/kernel.asm	/^c010adc0:	75 24                	jne    c010ade6 <file_fstat+0x7e>$/;"	l
c010adc2	obj/kernel.asm	/^c010adc2:	c7 44 24 0c 94 7c 11 	movl   $0xc0117c94,0xc(%esp)$/;"	l
c010adc9	obj/kernel.asm	/^c010adc9:	c0 $/;"	l
c010adca	obj/kernel.asm	/^c010adca:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010add1	obj/kernel.asm	/^c010add1:	c0 $/;"	l
c010add2	obj/kernel.asm	/^c010add2:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
c010add9	obj/kernel.asm	/^c010add9:	00 $/;"	l
c010adda	obj/kernel.asm	/^c010adda:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010ade1	obj/kernel.asm	/^c010ade1:	e8 e2 60 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ade6	obj/kernel.asm	/^c010ade6:	c7 44 24 04 e2 7c 11 	movl   $0xc0117ce2,0x4(%esp)$/;"	l
c010aded	obj/kernel.asm	/^c010aded:	c0 $/;"	l
c010adee	obj/kernel.asm	/^c010adee:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010adf1	obj/kernel.asm	/^c010adf1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010adf4	obj/kernel.asm	/^c010adf4:	e8 1f 45 00 00       	call   c010f318 <inode_check>$/;"	l
c010adf9	obj/kernel.asm	/^c010adf9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010adfc	obj/kernel.asm	/^c010adfc:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010adff	obj/kernel.asm	/^c010adff:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ae02	obj/kernel.asm	/^c010ae02:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ae05	obj/kernel.asm	/^c010ae05:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010ae08	obj/kernel.asm	/^c010ae08:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c010ae0b	obj/kernel.asm	/^c010ae0b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010ae0f	obj/kernel.asm	/^c010ae0f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ae12	obj/kernel.asm	/^c010ae12:	ff d0                	call   *%eax$/;"	l
c010ae14	obj/kernel.asm	/^c010ae14:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ae17	obj/kernel.asm	/^c010ae17:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ae1a	obj/kernel.asm	/^c010ae1a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ae1d	obj/kernel.asm	/^c010ae1d:	e8 9b f6 ff ff       	call   c010a4bd <fd_array_release>$/;"	l
c010ae22	obj/kernel.asm	/^c010ae22:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ae25	obj/kernel.asm	/^c010ae25:	c9                   	leave  $/;"	l
c010ae26	obj/kernel.asm	/^c010ae26:	c3                   	ret    $/;"	l
c010ae27	obj/kernel.asm	/^c010ae27 <file_fsync>:$/;"	l
c010ae27	obj/kernel.asm	/^c010ae27:	55                   	push   %ebp$/;"	l
c010ae28	obj/kernel.asm	/^c010ae28:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae2a	obj/kernel.asm	/^c010ae2a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ae2d	obj/kernel.asm	/^c010ae2d:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010ae30	obj/kernel.asm	/^c010ae30:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ae34	obj/kernel.asm	/^c010ae34:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae37	obj/kernel.asm	/^c010ae37:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ae3a	obj/kernel.asm	/^c010ae3a:	e8 82 f8 ff ff       	call   c010a6c1 <fd2file>$/;"	l
c010ae3f	obj/kernel.asm	/^c010ae3f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ae42	obj/kernel.asm	/^c010ae42:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ae46	obj/kernel.asm	/^c010ae46:	74 08                	je     c010ae50 <file_fsync+0x29>$/;"	l
c010ae48	obj/kernel.asm	/^c010ae48:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ae4b	obj/kernel.asm	/^c010ae4b:	e9 8d 00 00 00       	jmp    c010aedd <file_fsync+0xb6>$/;"	l
c010ae50	obj/kernel.asm	/^c010ae50:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ae53	obj/kernel.asm	/^c010ae53:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ae56	obj/kernel.asm	/^c010ae56:	e8 21 f6 ff ff       	call   c010a47c <fd_array_acquire>$/;"	l
c010ae5b	obj/kernel.asm	/^c010ae5b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ae5e	obj/kernel.asm	/^c010ae5e:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ae61	obj/kernel.asm	/^c010ae61:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ae64	obj/kernel.asm	/^c010ae64:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ae68	obj/kernel.asm	/^c010ae68:	74 17                	je     c010ae81 <file_fsync+0x5a>$/;"	l
c010ae6a	obj/kernel.asm	/^c010ae6a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ae6d	obj/kernel.asm	/^c010ae6d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ae70	obj/kernel.asm	/^c010ae70:	85 c0                	test   %eax,%eax$/;"	l
c010ae72	obj/kernel.asm	/^c010ae72:	74 0d                	je     c010ae81 <file_fsync+0x5a>$/;"	l
c010ae74	obj/kernel.asm	/^c010ae74:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ae77	obj/kernel.asm	/^c010ae77:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ae7a	obj/kernel.asm	/^c010ae7a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ae7d	obj/kernel.asm	/^c010ae7d:	85 c0                	test   %eax,%eax$/;"	l
c010ae7f	obj/kernel.asm	/^c010ae7f:	75 24                	jne    c010aea5 <file_fsync+0x7e>$/;"	l
c010ae81	obj/kernel.asm	/^c010ae81:	c7 44 24 0c e8 7d 11 	movl   $0xc0117de8,0xc(%esp)$/;"	l
c010ae88	obj/kernel.asm	/^c010ae88:	c0 $/;"	l
c010ae89	obj/kernel.asm	/^c010ae89:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010ae90	obj/kernel.asm	/^c010ae90:	c0 $/;"	l
c010ae91	obj/kernel.asm	/^c010ae91:	c7 44 24 04 3e 01 00 	movl   $0x13e,0x4(%esp)$/;"	l
c010ae98	obj/kernel.asm	/^c010ae98:	00 $/;"	l
c010ae99	obj/kernel.asm	/^c010ae99:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010aea0	obj/kernel.asm	/^c010aea0:	e8 23 60 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010aea5	obj/kernel.asm	/^c010aea5:	c7 44 24 04 36 7e 11 	movl   $0xc0117e36,0x4(%esp)$/;"	l
c010aeac	obj/kernel.asm	/^c010aeac:	c0 $/;"	l
c010aead	obj/kernel.asm	/^c010aead:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aeb0	obj/kernel.asm	/^c010aeb0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aeb3	obj/kernel.asm	/^c010aeb3:	e8 60 44 00 00       	call   c010f318 <inode_check>$/;"	l
c010aeb8	obj/kernel.asm	/^c010aeb8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aebb	obj/kernel.asm	/^c010aebb:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010aebe	obj/kernel.asm	/^c010aebe:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010aec1	obj/kernel.asm	/^c010aec1:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010aec4	obj/kernel.asm	/^c010aec4:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010aec7	obj/kernel.asm	/^c010aec7:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010aeca	obj/kernel.asm	/^c010aeca:	ff d0                	call   *%eax$/;"	l
c010aecc	obj/kernel.asm	/^c010aecc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aecf	obj/kernel.asm	/^c010aecf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aed2	obj/kernel.asm	/^c010aed2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aed5	obj/kernel.asm	/^c010aed5:	e8 e3 f5 ff ff       	call   c010a4bd <fd_array_release>$/;"	l
c010aeda	obj/kernel.asm	/^c010aeda:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aedd	obj/kernel.asm	/^c010aedd:	c9                   	leave  $/;"	l
c010aede	obj/kernel.asm	/^c010aede:	c3                   	ret    $/;"	l
c010aedf	obj/kernel.asm	/^c010aedf <file_getdirentry>:$/;"	l
c010aedf	obj/kernel.asm	/^c010aedf:	55                   	push   %ebp$/;"	l
c010aee0	obj/kernel.asm	/^c010aee0:	89 e5                	mov    %esp,%ebp$/;"	l
c010aee2	obj/kernel.asm	/^c010aee2:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010aee5	obj/kernel.asm	/^c010aee5:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c010aee8	obj/kernel.asm	/^c010aee8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010aeec	obj/kernel.asm	/^c010aeec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aeef	obj/kernel.asm	/^c010aeef:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aef2	obj/kernel.asm	/^c010aef2:	e8 ca f7 ff ff       	call   c010a6c1 <fd2file>$/;"	l
c010aef7	obj/kernel.asm	/^c010aef7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aefa	obj/kernel.asm	/^c010aefa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010aefe	obj/kernel.asm	/^c010aefe:	74 08                	je     c010af08 <file_getdirentry+0x29>$/;"	l
c010af00	obj/kernel.asm	/^c010af00:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af03	obj/kernel.asm	/^c010af03:	e9 e3 00 00 00       	jmp    c010afeb <file_getdirentry+0x10c>$/;"	l
c010af08	obj/kernel.asm	/^c010af08:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010af0b	obj/kernel.asm	/^c010af0b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010af0e	obj/kernel.asm	/^c010af0e:	e8 69 f5 ff ff       	call   c010a47c <fd_array_acquire>$/;"	l
c010af13	obj/kernel.asm	/^c010af13:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010af16	obj/kernel.asm	/^c010af16:	8b 00                	mov    (%eax),%eax$/;"	l
c010af18	obj/kernel.asm	/^c010af18:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010af1b	obj/kernel.asm	/^c010af1b:	83 c2 04             	add    $0x4,%edx$/;"	l
c010af1e	obj/kernel.asm	/^c010af1e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010af22	obj/kernel.asm	/^c010af22:	c7 44 24 08 00 01 00 	movl   $0x100,0x8(%esp)$/;"	l
c010af29	obj/kernel.asm	/^c010af29:	00 $/;"	l
c010af2a	obj/kernel.asm	/^c010af2a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010af2e	obj/kernel.asm	/^c010af2e:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010af31	obj/kernel.asm	/^c010af31:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010af34	obj/kernel.asm	/^c010af34:	e8 0d 04 00 00       	call   c010b346 <iobuf_init>$/;"	l
c010af39	obj/kernel.asm	/^c010af39:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010af3c	obj/kernel.asm	/^c010af3c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010af3f	obj/kernel.asm	/^c010af3f:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010af42	obj/kernel.asm	/^c010af42:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010af45	obj/kernel.asm	/^c010af45:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010af49	obj/kernel.asm	/^c010af49:	74 17                	je     c010af62 <file_getdirentry+0x83>$/;"	l
c010af4b	obj/kernel.asm	/^c010af4b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010af4e	obj/kernel.asm	/^c010af4e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010af51	obj/kernel.asm	/^c010af51:	85 c0                	test   %eax,%eax$/;"	l
c010af53	obj/kernel.asm	/^c010af53:	74 0d                	je     c010af62 <file_getdirentry+0x83>$/;"	l
c010af55	obj/kernel.asm	/^c010af55:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010af58	obj/kernel.asm	/^c010af58:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010af5b	obj/kernel.asm	/^c010af5b:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c010af5e	obj/kernel.asm	/^c010af5e:	85 c0                	test   %eax,%eax$/;"	l
c010af60	obj/kernel.asm	/^c010af60:	75 24                	jne    c010af86 <file_getdirentry+0xa7>$/;"	l
c010af62	obj/kernel.asm	/^c010af62:	c7 44 24 0c 3c 7e 11 	movl   $0xc0117e3c,0xc(%esp)$/;"	l
c010af69	obj/kernel.asm	/^c010af69:	c0 $/;"	l
c010af6a	obj/kernel.asm	/^c010af6a:	c7 44 24 08 52 7b 11 	movl   $0xc0117b52,0x8(%esp)$/;"	l
c010af71	obj/kernel.asm	/^c010af71:	c0 $/;"	l
c010af72	obj/kernel.asm	/^c010af72:	c7 44 24 04 4e 01 00 	movl   $0x14e,0x4(%esp)$/;"	l
c010af79	obj/kernel.asm	/^c010af79:	00 $/;"	l
c010af7a	obj/kernel.asm	/^c010af7a:	c7 04 24 67 7b 11 c0 	movl   $0xc0117b67,(%esp)$/;"	l
c010af81	obj/kernel.asm	/^c010af81:	e8 42 5f ff ff       	call   c0100ec8 <__panic>$/;"	l
c010af86	obj/kernel.asm	/^c010af86:	c7 44 24 04 90 7e 11 	movl   $0xc0117e90,0x4(%esp)$/;"	l
c010af8d	obj/kernel.asm	/^c010af8d:	c0 $/;"	l
c010af8e	obj/kernel.asm	/^c010af8e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010af91	obj/kernel.asm	/^c010af91:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010af94	obj/kernel.asm	/^c010af94:	e8 7f 43 00 00       	call   c010f318 <inode_check>$/;"	l
c010af99	obj/kernel.asm	/^c010af99:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010af9c	obj/kernel.asm	/^c010af9c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010af9f	obj/kernel.asm	/^c010af9f:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c010afa2	obj/kernel.asm	/^c010afa2:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010afa5	obj/kernel.asm	/^c010afa5:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010afa8	obj/kernel.asm	/^c010afa8:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010afab	obj/kernel.asm	/^c010afab:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010afaf	obj/kernel.asm	/^c010afaf:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010afb2	obj/kernel.asm	/^c010afb2:	ff d0                	call   *%eax$/;"	l
c010afb4	obj/kernel.asm	/^c010afb4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010afb7	obj/kernel.asm	/^c010afb7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010afbb	obj/kernel.asm	/^c010afbb:	75 20                	jne    c010afdd <file_getdirentry+0xfe>$/;"	l
c010afbd	obj/kernel.asm	/^c010afbd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010afc0	obj/kernel.asm	/^c010afc0:	8b 00                	mov    (%eax),%eax$/;"	l
c010afc2	obj/kernel.asm	/^c010afc2:	89 c2                	mov    %eax,%edx$/;"	l
c010afc4	obj/kernel.asm	/^c010afc4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010afc7	obj/kernel.asm	/^c010afc7:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
c010afca	obj/kernel.asm	/^c010afca:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010afcd	obj/kernel.asm	/^c010afcd:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010afd0	obj/kernel.asm	/^c010afd0:	29 c1                	sub    %eax,%ecx$/;"	l
c010afd2	obj/kernel.asm	/^c010afd2:	89 c8                	mov    %ecx,%eax$/;"	l
c010afd4	obj/kernel.asm	/^c010afd4:	01 d0                	add    %edx,%eax$/;"	l
c010afd6	obj/kernel.asm	/^c010afd6:	89 c2                	mov    %eax,%edx$/;"	l
c010afd8	obj/kernel.asm	/^c010afd8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010afdb	obj/kernel.asm	/^c010afdb:	89 10                	mov    %edx,(%eax)$/;"	l
c010afdd	obj/kernel.asm	/^c010afdd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010afe0	obj/kernel.asm	/^c010afe0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010afe3	obj/kernel.asm	/^c010afe3:	e8 d5 f4 ff ff       	call   c010a4bd <fd_array_release>$/;"	l
c010afe8	obj/kernel.asm	/^c010afe8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afeb	obj/kernel.asm	/^c010afeb:	c9                   	leave  $/;"	l
c010afec	obj/kernel.asm	/^c010afec:	c3                   	ret    $/;"	l
c010afed	obj/kernel.asm	/^c010afed <file_dup>:$/;"	l
c010afed	obj/kernel.asm	/^c010afed:	55                   	push   %ebp$/;"	l
c010afee	obj/kernel.asm	/^c010afee:	89 e5                	mov    %esp,%ebp$/;"	l
c010aff0	obj/kernel.asm	/^c010aff0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010aff3	obj/kernel.asm	/^c010aff3:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010aff6	obj/kernel.asm	/^c010aff6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010affa	obj/kernel.asm	/^c010affa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010affd	obj/kernel.asm	/^c010affd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b000	obj/kernel.asm	/^c010b000:	e8 bc f6 ff ff       	call   c010a6c1 <fd2file>$/;"	l
c010b005	obj/kernel.asm	/^c010b005:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b008	obj/kernel.asm	/^c010b008:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b00c	obj/kernel.asm	/^c010b00c:	74 05                	je     c010b013 <file_dup+0x26>$/;"	l
c010b00e	obj/kernel.asm	/^c010b00e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b011	obj/kernel.asm	/^c010b011:	eb 38                	jmp    c010b04b <file_dup+0x5e>$/;"	l
c010b013	obj/kernel.asm	/^c010b013:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010b016	obj/kernel.asm	/^c010b016:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b01a	obj/kernel.asm	/^c010b01a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b01d	obj/kernel.asm	/^c010b01d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b020	obj/kernel.asm	/^c010b020:	e8 ea f2 ff ff       	call   c010a30f <fd_array_alloc>$/;"	l
c010b025	obj/kernel.asm	/^c010b025:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b028	obj/kernel.asm	/^c010b028:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b02c	obj/kernel.asm	/^c010b02c:	74 05                	je     c010b033 <file_dup+0x46>$/;"	l
c010b02e	obj/kernel.asm	/^c010b02e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b031	obj/kernel.asm	/^c010b031:	eb 18                	jmp    c010b04b <file_dup+0x5e>$/;"	l
c010b033	obj/kernel.asm	/^c010b033:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010b036	obj/kernel.asm	/^c010b036:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b039	obj/kernel.asm	/^c010b039:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010b03d	obj/kernel.asm	/^c010b03d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b040	obj/kernel.asm	/^c010b040:	e8 e5 f5 ff ff       	call   c010a62a <fd_array_dup>$/;"	l
c010b045	obj/kernel.asm	/^c010b045:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b048	obj/kernel.asm	/^c010b048:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b04b	obj/kernel.asm	/^c010b04b:	c9                   	leave  $/;"	l
c010b04c	obj/kernel.asm	/^c010b04c:	c3                   	ret    $/;"	l
c010b04d	obj/kernel.asm	/^c010b04d <files_count>:$/;"	l
c010b04d	obj/kernel.asm	/^c010b04d:	55                   	push   %ebp$/;"	l
c010b04e	obj/kernel.asm	/^c010b04e:	89 e5                	mov    %esp,%ebp$/;"	l
c010b050	obj/kernel.asm	/^c010b050:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b053	obj/kernel.asm	/^c010b053:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b056	obj/kernel.asm	/^c010b056:	5d                   	pop    %ebp$/;"	l
c010b057	obj/kernel.asm	/^c010b057:	c3                   	ret    $/;"	l
c010b058	obj/kernel.asm	/^c010b058 <fs_init>:$/;"	l
c010b058	obj/kernel.asm	/^c010b058:	55                   	push   %ebp$/;"	l
c010b059	obj/kernel.asm	/^c010b059:	89 e5                	mov    %esp,%ebp$/;"	l
c010b05b	obj/kernel.asm	/^c010b05b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b05e	obj/kernel.asm	/^c010b05e:	e8 d1 43 00 00       	call   c010f434 <vfs_init>$/;"	l
c010b063	obj/kernel.asm	/^c010b063:	e8 0e 5b 00 00       	call   c0110b76 <dev_init>$/;"	l
c010b068	obj/kernel.asm	/^c010b068:	e8 cb 68 00 00       	call   c0111938 <sfs_init>$/;"	l
c010b06d	obj/kernel.asm	/^c010b06d:	c9                   	leave  $/;"	l
c010b06e	obj/kernel.asm	/^c010b06e:	c3                   	ret    $/;"	l
c010b06f	obj/kernel.asm	/^c010b06f <fs_cleanup>:$/;"	l
c010b06f	obj/kernel.asm	/^c010b06f:	55                   	push   %ebp$/;"	l
c010b070	obj/kernel.asm	/^c010b070:	89 e5                	mov    %esp,%ebp$/;"	l
c010b072	obj/kernel.asm	/^c010b072:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b075	obj/kernel.asm	/^c010b075:	e8 73 45 00 00       	call   c010f5ed <vfs_cleanup>$/;"	l
c010b07a	obj/kernel.asm	/^c010b07a:	c9                   	leave  $/;"	l
c010b07b	obj/kernel.asm	/^c010b07b:	c3                   	ret    $/;"	l
c010b07c	obj/kernel.asm	/^c010b07c <lock_files>:$/;"	l
c010b07c	obj/kernel.asm	/^c010b07c:	55                   	push   %ebp$/;"	l
c010b07d	obj/kernel.asm	/^c010b07d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b07f	obj/kernel.asm	/^c010b07f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b082	obj/kernel.asm	/^c010b082:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b085	obj/kernel.asm	/^c010b085:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010b088	obj/kernel.asm	/^c010b088:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b08b	obj/kernel.asm	/^c010b08b:	e8 6f ec ff ff       	call   c0109cff <down>$/;"	l
c010b090	obj/kernel.asm	/^c010b090:	c9                   	leave  $/;"	l
c010b091	obj/kernel.asm	/^c010b091:	c3                   	ret    $/;"	l
c010b092	obj/kernel.asm	/^c010b092 <unlock_files>:$/;"	l
c010b092	obj/kernel.asm	/^c010b092:	55                   	push   %ebp$/;"	l
c010b093	obj/kernel.asm	/^c010b093:	89 e5                	mov    %esp,%ebp$/;"	l
c010b095	obj/kernel.asm	/^c010b095:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b098	obj/kernel.asm	/^c010b098:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b09b	obj/kernel.asm	/^c010b09b:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010b09e	obj/kernel.asm	/^c010b09e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b0a1	obj/kernel.asm	/^c010b0a1:	e8 3e ec ff ff       	call   c0109ce4 <up>$/;"	l
c010b0a6	obj/kernel.asm	/^c010b0a6:	c9                   	leave  $/;"	l
c010b0a7	obj/kernel.asm	/^c010b0a7:	c3                   	ret    $/;"	l
c010b0a8	obj/kernel.asm	/^c010b0a8 <files_create>:$/;"	l
c010b0a8	obj/kernel.asm	/^c010b0a8:	55                   	push   %ebp$/;"	l
c010b0a9	obj/kernel.asm	/^c010b0a9:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0ab	obj/kernel.asm	/^c010b0ab:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b0ae	obj/kernel.asm	/^c010b0ae:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010b0b5	obj/kernel.asm	/^c010b0b5:	e8 25 9c ff ff       	call   c0104cdf <kmalloc>$/;"	l
c010b0ba	obj/kernel.asm	/^c010b0ba:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b0bd	obj/kernel.asm	/^c010b0bd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b0c1	obj/kernel.asm	/^c010b0c1:	74 43                	je     c010b106 <files_create+0x5e>$/;"	l
c010b0c3	obj/kernel.asm	/^c010b0c3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b0c6	obj/kernel.asm	/^c010b0c6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010b0cc	obj/kernel.asm	/^c010b0cc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b0cf	obj/kernel.asm	/^c010b0cf:	8d 50 18             	lea    0x18(%eax),%edx$/;"	l
c010b0d2	obj/kernel.asm	/^c010b0d2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b0d5	obj/kernel.asm	/^c010b0d5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b0d8	obj/kernel.asm	/^c010b0d8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b0db	obj/kernel.asm	/^c010b0db:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010b0e2	obj/kernel.asm	/^c010b0e2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b0e5	obj/kernel.asm	/^c010b0e5:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010b0e8	obj/kernel.asm	/^c010b0e8:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010b0ef	obj/kernel.asm	/^c010b0ef:	00 $/;"	l
c010b0f0	obj/kernel.asm	/^c010b0f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b0f3	obj/kernel.asm	/^c010b0f3:	e8 79 ea ff ff       	call   c0109b71 <sem_init>$/;"	l
c010b0f8	obj/kernel.asm	/^c010b0f8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b0fb	obj/kernel.asm	/^c010b0fb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b0fe	obj/kernel.asm	/^c010b0fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b101	obj/kernel.asm	/^c010b101:	e8 c4 f1 ff ff       	call   c010a2ca <fd_array_init>$/;"	l
c010b106	obj/kernel.asm	/^c010b106:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b109	obj/kernel.asm	/^c010b109:	c9                   	leave  $/;"	l
c010b10a	obj/kernel.asm	/^c010b10a:	c3                   	ret    $/;"	l
c010b10b	obj/kernel.asm	/^c010b10b <files_destroy>:$/;"	l
c010b10b	obj/kernel.asm	/^c010b10b:	55                   	push   %ebp$/;"	l
c010b10c	obj/kernel.asm	/^c010b10c:	89 e5                	mov    %esp,%ebp$/;"	l
c010b10e	obj/kernel.asm	/^c010b10e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b111	obj/kernel.asm	/^c010b111:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b115	obj/kernel.asm	/^c010b115:	74 0f                	je     c010b126 <files_destroy+0x1b>$/;"	l
c010b117	obj/kernel.asm	/^c010b117:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b11a	obj/kernel.asm	/^c010b11a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b11d	obj/kernel.asm	/^c010b11d:	e8 2b ff ff ff       	call   c010b04d <files_count>$/;"	l
c010b122	obj/kernel.asm	/^c010b122:	85 c0                	test   %eax,%eax$/;"	l
c010b124	obj/kernel.asm	/^c010b124:	74 24                	je     c010b14a <files_destroy+0x3f>$/;"	l
c010b126	obj/kernel.asm	/^c010b126:	c7 44 24 0c 9c 7e 11 	movl   $0xc0117e9c,0xc(%esp)$/;"	l
c010b12d	obj/kernel.asm	/^c010b12d:	c0 $/;"	l
c010b12e	obj/kernel.asm	/^c010b12e:	c7 44 24 08 c7 7e 11 	movl   $0xc0117ec7,0x8(%esp)$/;"	l
c010b135	obj/kernel.asm	/^c010b135:	c0 $/;"	l
c010b136	obj/kernel.asm	/^c010b136:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
c010b13d	obj/kernel.asm	/^c010b13d:	00 $/;"	l
c010b13e	obj/kernel.asm	/^c010b13e:	c7 04 24 dc 7e 11 c0 	movl   $0xc0117edc,(%esp)$/;"	l
c010b145	obj/kernel.asm	/^c010b145:	e8 7e 5d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b14a	obj/kernel.asm	/^c010b14a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b14d	obj/kernel.asm	/^c010b14d:	8b 00                	mov    (%eax),%eax$/;"	l
c010b14f	obj/kernel.asm	/^c010b14f:	85 c0                	test   %eax,%eax$/;"	l
c010b151	obj/kernel.asm	/^c010b151:	74 0d                	je     c010b160 <files_destroy+0x55>$/;"	l
c010b153	obj/kernel.asm	/^c010b153:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b156	obj/kernel.asm	/^c010b156:	8b 00                	mov    (%eax),%eax$/;"	l
c010b158	obj/kernel.asm	/^c010b158:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b15b	obj/kernel.asm	/^c010b15b:	e8 ca 3f 00 00       	call   c010f12a <inode_ref_dec>$/;"	l
c010b160	obj/kernel.asm	/^c010b160:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b163	obj/kernel.asm	/^c010b163:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b166	obj/kernel.asm	/^c010b166:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b169	obj/kernel.asm	/^c010b169:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b170	obj/kernel.asm	/^c010b170:	eb 4a                	jmp    c010b1bc <files_destroy+0xb1>$/;"	l
c010b172	obj/kernel.asm	/^c010b172:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b175	obj/kernel.asm	/^c010b175:	8b 00                	mov    (%eax),%eax$/;"	l
c010b177	obj/kernel.asm	/^c010b177:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b17a	obj/kernel.asm	/^c010b17a:	75 0b                	jne    c010b187 <files_destroy+0x7c>$/;"	l
c010b17c	obj/kernel.asm	/^c010b17c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b17f	obj/kernel.asm	/^c010b17f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b182	obj/kernel.asm	/^c010b182:	e8 17 f4 ff ff       	call   c010a59e <fd_array_close>$/;"	l
c010b187	obj/kernel.asm	/^c010b187:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b18a	obj/kernel.asm	/^c010b18a:	8b 00                	mov    (%eax),%eax$/;"	l
c010b18c	obj/kernel.asm	/^c010b18c:	85 c0                	test   %eax,%eax$/;"	l
c010b18e	obj/kernel.asm	/^c010b18e:	74 24                	je     c010b1b4 <files_destroy+0xa9>$/;"	l
c010b190	obj/kernel.asm	/^c010b190:	c7 44 24 0c e9 7e 11 	movl   $0xc0117ee9,0xc(%esp)$/;"	l
c010b197	obj/kernel.asm	/^c010b197:	c0 $/;"	l
c010b198	obj/kernel.asm	/^c010b198:	c7 44 24 08 c7 7e 11 	movl   $0xc0117ec7,0x8(%esp)$/;"	l
c010b19f	obj/kernel.asm	/^c010b19f:	c0 $/;"	l
c010b1a0	obj/kernel.asm	/^c010b1a0:	c7 44 24 04 3d 00 00 	movl   $0x3d,0x4(%esp)$/;"	l
c010b1a7	obj/kernel.asm	/^c010b1a7:	00 $/;"	l
c010b1a8	obj/kernel.asm	/^c010b1a8:	c7 04 24 dc 7e 11 c0 	movl   $0xc0117edc,(%esp)$/;"	l
c010b1af	obj/kernel.asm	/^c010b1af:	e8 14 5d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b1b4	obj/kernel.asm	/^c010b1b4:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010b1b8	obj/kernel.asm	/^c010b1b8:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010b1bc	obj/kernel.asm	/^c010b1bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b1bf	obj/kernel.asm	/^c010b1bf:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b1c4	obj/kernel.asm	/^c010b1c4:	76 ac                	jbe    c010b172 <files_destroy+0x67>$/;"	l
c010b1c6	obj/kernel.asm	/^c010b1c6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1c9	obj/kernel.asm	/^c010b1c9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b1cc	obj/kernel.asm	/^c010b1cc:	e8 29 9b ff ff       	call   c0104cfa <kfree>$/;"	l
c010b1d1	obj/kernel.asm	/^c010b1d1:	c9                   	leave  $/;"	l
c010b1d2	obj/kernel.asm	/^c010b1d2:	c3                   	ret    $/;"	l
c010b1d3	obj/kernel.asm	/^c010b1d3 <files_closeall>:$/;"	l
c010b1d3	obj/kernel.asm	/^c010b1d3:	55                   	push   %ebp$/;"	l
c010b1d4	obj/kernel.asm	/^c010b1d4:	89 e5                	mov    %esp,%ebp$/;"	l
c010b1d6	obj/kernel.asm	/^c010b1d6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b1d9	obj/kernel.asm	/^c010b1d9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b1dd	obj/kernel.asm	/^c010b1dd:	74 0f                	je     c010b1ee <files_closeall+0x1b>$/;"	l
c010b1df	obj/kernel.asm	/^c010b1df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1e2	obj/kernel.asm	/^c010b1e2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b1e5	obj/kernel.asm	/^c010b1e5:	e8 63 fe ff ff       	call   c010b04d <files_count>$/;"	l
c010b1ea	obj/kernel.asm	/^c010b1ea:	85 c0                	test   %eax,%eax$/;"	l
c010b1ec	obj/kernel.asm	/^c010b1ec:	7f 24                	jg     c010b212 <files_closeall+0x3f>$/;"	l
c010b1ee	obj/kernel.asm	/^c010b1ee:	c7 44 24 0c 04 7f 11 	movl   $0xc0117f04,0xc(%esp)$/;"	l
c010b1f5	obj/kernel.asm	/^c010b1f5:	c0 $/;"	l
c010b1f6	obj/kernel.asm	/^c010b1f6:	c7 44 24 08 c7 7e 11 	movl   $0xc0117ec7,0x8(%esp)$/;"	l
c010b1fd	obj/kernel.asm	/^c010b1fd:	c0 $/;"	l
c010b1fe	obj/kernel.asm	/^c010b1fe:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c010b205	obj/kernel.asm	/^c010b205:	00 $/;"	l
c010b206	obj/kernel.asm	/^c010b206:	c7 04 24 dc 7e 11 c0 	movl   $0xc0117edc,(%esp)$/;"	l
c010b20d	obj/kernel.asm	/^c010b20d:	e8 b6 5c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b212	obj/kernel.asm	/^c010b212:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b215	obj/kernel.asm	/^c010b215:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b218	obj/kernel.asm	/^c010b218:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b21b	obj/kernel.asm	/^c010b21b:	c7 45 f4 02 00 00 00 	movl   $0x2,-0xc(%ebp)$/;"	l
c010b222	obj/kernel.asm	/^c010b222:	83 45 f0 38          	addl   $0x38,-0x10(%ebp)$/;"	l
c010b226	obj/kernel.asm	/^c010b226:	eb 1d                	jmp    c010b245 <files_closeall+0x72>$/;"	l
c010b228	obj/kernel.asm	/^c010b228:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b22b	obj/kernel.asm	/^c010b22b:	8b 00                	mov    (%eax),%eax$/;"	l
c010b22d	obj/kernel.asm	/^c010b22d:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b230	obj/kernel.asm	/^c010b230:	75 0b                	jne    c010b23d <files_closeall+0x6a>$/;"	l
c010b232	obj/kernel.asm	/^c010b232:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b235	obj/kernel.asm	/^c010b235:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b238	obj/kernel.asm	/^c010b238:	e8 61 f3 ff ff       	call   c010a59e <fd_array_close>$/;"	l
c010b23d	obj/kernel.asm	/^c010b23d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010b241	obj/kernel.asm	/^c010b241:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010b245	obj/kernel.asm	/^c010b245:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b248	obj/kernel.asm	/^c010b248:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b24d	obj/kernel.asm	/^c010b24d:	76 d9                	jbe    c010b228 <files_closeall+0x55>$/;"	l
c010b24f	obj/kernel.asm	/^c010b24f:	c9                   	leave  $/;"	l
c010b250	obj/kernel.asm	/^c010b250:	c3                   	ret    $/;"	l
c010b251	obj/kernel.asm	/^c010b251 <dup_fs>:$/;"	l
c010b251	obj/kernel.asm	/^c010b251:	55                   	push   %ebp$/;"	l
c010b252	obj/kernel.asm	/^c010b252:	89 e5                	mov    %esp,%ebp$/;"	l
c010b254	obj/kernel.asm	/^c010b254:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b257	obj/kernel.asm	/^c010b257:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b25b	obj/kernel.asm	/^c010b25b:	74 06                	je     c010b263 <dup_fs+0x12>$/;"	l
c010b25d	obj/kernel.asm	/^c010b25d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b261	obj/kernel.asm	/^c010b261:	75 24                	jne    c010b287 <dup_fs+0x36>$/;"	l
c010b263	obj/kernel.asm	/^c010b263:	c7 44 24 0c 2e 7f 11 	movl   $0xc0117f2e,0xc(%esp)$/;"	l
c010b26a	obj/kernel.asm	/^c010b26a:	c0 $/;"	l
c010b26b	obj/kernel.asm	/^c010b26b:	c7 44 24 08 c7 7e 11 	movl   $0xc0117ec7,0x8(%esp)$/;"	l
c010b272	obj/kernel.asm	/^c010b272:	c0 $/;"	l
c010b273	obj/kernel.asm	/^c010b273:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
c010b27a	obj/kernel.asm	/^c010b27a:	00 $/;"	l
c010b27b	obj/kernel.asm	/^c010b27b:	c7 04 24 dc 7e 11 c0 	movl   $0xc0117edc,(%esp)$/;"	l
c010b282	obj/kernel.asm	/^c010b282:	e8 41 5c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b287	obj/kernel.asm	/^c010b287:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b28a	obj/kernel.asm	/^c010b28a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b28d	obj/kernel.asm	/^c010b28d:	e8 bb fd ff ff       	call   c010b04d <files_count>$/;"	l
c010b292	obj/kernel.asm	/^c010b292:	85 c0                	test   %eax,%eax$/;"	l
c010b294	obj/kernel.asm	/^c010b294:	75 0f                	jne    c010b2a5 <dup_fs+0x54>$/;"	l
c010b296	obj/kernel.asm	/^c010b296:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b299	obj/kernel.asm	/^c010b299:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b29c	obj/kernel.asm	/^c010b29c:	e8 ac fd ff ff       	call   c010b04d <files_count>$/;"	l
c010b2a1	obj/kernel.asm	/^c010b2a1:	85 c0                	test   %eax,%eax$/;"	l
c010b2a3	obj/kernel.asm	/^c010b2a3:	7f 24                	jg     c010b2c9 <dup_fs+0x78>$/;"	l
c010b2a5	obj/kernel.asm	/^c010b2a5:	c7 44 24 0c 4c 7f 11 	movl   $0xc0117f4c,0xc(%esp)$/;"	l
c010b2ac	obj/kernel.asm	/^c010b2ac:	c0 $/;"	l
c010b2ad	obj/kernel.asm	/^c010b2ad:	c7 44 24 08 c7 7e 11 	movl   $0xc0117ec7,0x8(%esp)$/;"	l
c010b2b4	obj/kernel.asm	/^c010b2b4:	c0 $/;"	l
c010b2b5	obj/kernel.asm	/^c010b2b5:	c7 44 24 04 54 00 00 	movl   $0x54,0x4(%esp)$/;"	l
c010b2bc	obj/kernel.asm	/^c010b2bc:	00 $/;"	l
c010b2bd	obj/kernel.asm	/^c010b2bd:	c7 04 24 dc 7e 11 c0 	movl   $0xc0117edc,(%esp)$/;"	l
c010b2c4	obj/kernel.asm	/^c010b2c4:	e8 ff 5b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b2c9	obj/kernel.asm	/^c010b2c9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b2cc	obj/kernel.asm	/^c010b2cc:	8b 10                	mov    (%eax),%edx$/;"	l
c010b2ce	obj/kernel.asm	/^c010b2ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b2d1	obj/kernel.asm	/^c010b2d1:	89 10                	mov    %edx,(%eax)$/;"	l
c010b2d3	obj/kernel.asm	/^c010b2d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b2d6	obj/kernel.asm	/^c010b2d6:	8b 00                	mov    (%eax),%eax$/;"	l
c010b2d8	obj/kernel.asm	/^c010b2d8:	85 c0                	test   %eax,%eax$/;"	l
c010b2da	obj/kernel.asm	/^c010b2da:	74 0d                	je     c010b2e9 <dup_fs+0x98>$/;"	l
c010b2dc	obj/kernel.asm	/^c010b2dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b2df	obj/kernel.asm	/^c010b2df:	8b 00                	mov    (%eax),%eax$/;"	l
c010b2e1	obj/kernel.asm	/^c010b2e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b2e4	obj/kernel.asm	/^c010b2e4:	e8 27 3e 00 00       	call   c010f110 <inode_ref_inc>$/;"	l
c010b2e9	obj/kernel.asm	/^c010b2e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b2ec	obj/kernel.asm	/^c010b2ec:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b2ef	obj/kernel.asm	/^c010b2ef:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b2f2	obj/kernel.asm	/^c010b2f2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b2f5	obj/kernel.asm	/^c010b2f5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b2f8	obj/kernel.asm	/^c010b2f8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b2fb	obj/kernel.asm	/^c010b2fb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b302	obj/kernel.asm	/^c010b302:	eb 31                	jmp    c010b335 <dup_fs+0xe4>$/;"	l
c010b304	obj/kernel.asm	/^c010b304:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b307	obj/kernel.asm	/^c010b307:	8b 00                	mov    (%eax),%eax$/;"	l
c010b309	obj/kernel.asm	/^c010b309:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b30c	obj/kernel.asm	/^c010b30c:	75 1b                	jne    c010b329 <dup_fs+0xd8>$/;"	l
c010b30e	obj/kernel.asm	/^c010b30e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b311	obj/kernel.asm	/^c010b311:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010b317	obj/kernel.asm	/^c010b317:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b31a	obj/kernel.asm	/^c010b31a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b31e	obj/kernel.asm	/^c010b31e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b321	obj/kernel.asm	/^c010b321:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b324	obj/kernel.asm	/^c010b324:	e8 01 f3 ff ff       	call   c010a62a <fd_array_dup>$/;"	l
c010b329	obj/kernel.asm	/^c010b329:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010b32d	obj/kernel.asm	/^c010b32d:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010b331	obj/kernel.asm	/^c010b331:	83 45 ec 1c          	addl   $0x1c,-0x14(%ebp)$/;"	l
c010b335	obj/kernel.asm	/^c010b335:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b338	obj/kernel.asm	/^c010b338:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b33d	obj/kernel.asm	/^c010b33d:	76 c5                	jbe    c010b304 <dup_fs+0xb3>$/;"	l
c010b33f	obj/kernel.asm	/^c010b33f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b344	obj/kernel.asm	/^c010b344:	c9                   	leave  $/;"	l
c010b345	obj/kernel.asm	/^c010b345:	c3                   	ret    $/;"	l
c010b346	obj/kernel.asm	/^c010b346 <iobuf_init>:$/;"	l
c010b346	obj/kernel.asm	/^c010b346:	55                   	push   %ebp$/;"	l
c010b347	obj/kernel.asm	/^c010b347:	89 e5                	mov    %esp,%ebp$/;"	l
c010b349	obj/kernel.asm	/^c010b349:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b34c	obj/kernel.asm	/^c010b34c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b34f	obj/kernel.asm	/^c010b34f:	89 10                	mov    %edx,(%eax)$/;"	l
c010b351	obj/kernel.asm	/^c010b351:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b354	obj/kernel.asm	/^c010b354:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010b357	obj/kernel.asm	/^c010b357:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b35a	obj/kernel.asm	/^c010b35a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b35d	obj/kernel.asm	/^c010b35d:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010b360	obj/kernel.asm	/^c010b360:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010b363	obj/kernel.asm	/^c010b363:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b366	obj/kernel.asm	/^c010b366:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010b369	obj/kernel.asm	/^c010b369:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b36c	obj/kernel.asm	/^c010b36c:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010b36f	obj/kernel.asm	/^c010b36f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b372	obj/kernel.asm	/^c010b372:	5d                   	pop    %ebp$/;"	l
c010b373	obj/kernel.asm	/^c010b373:	c3                   	ret    $/;"	l
c010b374	obj/kernel.asm	/^c010b374 <iobuf_move>:$/;"	l
c010b374	obj/kernel.asm	/^c010b374:	55                   	push   %ebp$/;"	l
c010b375	obj/kernel.asm	/^c010b375:	89 e5                	mov    %esp,%ebp$/;"	l
c010b377	obj/kernel.asm	/^c010b377:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b37a	obj/kernel.asm	/^c010b37a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b37d	obj/kernel.asm	/^c010b37d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b380	obj/kernel.asm	/^c010b380:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b383	obj/kernel.asm	/^c010b383:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b386	obj/kernel.asm	/^c010b386:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010b389	obj/kernel.asm	/^c010b389:	76 06                	jbe    c010b391 <iobuf_move+0x1d>$/;"	l
c010b38b	obj/kernel.asm	/^c010b38b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b38e	obj/kernel.asm	/^c010b38e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b391	obj/kernel.asm	/^c010b391:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b395	obj/kernel.asm	/^c010b395:	74 57                	je     c010b3ee <iobuf_move+0x7a>$/;"	l
c010b397	obj/kernel.asm	/^c010b397:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b39a	obj/kernel.asm	/^c010b39a:	8b 00                	mov    (%eax),%eax$/;"	l
c010b39c	obj/kernel.asm	/^c010b39c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b39f	obj/kernel.asm	/^c010b39f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b3a2	obj/kernel.asm	/^c010b3a2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b3a5	obj/kernel.asm	/^c010b3a5:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010b3a9	obj/kernel.asm	/^c010b3a9:	74 12                	je     c010b3bd <iobuf_move+0x49>$/;"	l
c010b3ab	obj/kernel.asm	/^c010b3ab:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b3ae	obj/kernel.asm	/^c010b3ae:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b3b1	obj/kernel.asm	/^c010b3b1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b3b4	obj/kernel.asm	/^c010b3b4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b3b7	obj/kernel.asm	/^c010b3b7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b3ba	obj/kernel.asm	/^c010b3ba:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b3bd	obj/kernel.asm	/^c010b3bd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b3c0	obj/kernel.asm	/^c010b3c0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b3c4	obj/kernel.asm	/^c010b3c4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b3c7	obj/kernel.asm	/^c010b3c7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b3cb	obj/kernel.asm	/^c010b3cb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b3ce	obj/kernel.asm	/^c010b3ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b3d1	obj/kernel.asm	/^c010b3d1:	e8 d9 a1 00 00       	call   c01155af <memmove>$/;"	l
c010b3d6	obj/kernel.asm	/^c010b3d6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b3d9	obj/kernel.asm	/^c010b3d9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b3dd	obj/kernel.asm	/^c010b3dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3e0	obj/kernel.asm	/^c010b3e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b3e3	obj/kernel.asm	/^c010b3e3:	e8 a1 00 00 00       	call   c010b489 <iobuf_skip>$/;"	l
c010b3e8	obj/kernel.asm	/^c010b3e8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b3eb	obj/kernel.asm	/^c010b3eb:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c010b3ee	obj/kernel.asm	/^c010b3ee:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c010b3f2	obj/kernel.asm	/^c010b3f2:	74 08                	je     c010b3fc <iobuf_move+0x88>$/;"	l
c010b3f4	obj/kernel.asm	/^c010b3f4:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010b3f7	obj/kernel.asm	/^c010b3f7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b3fa	obj/kernel.asm	/^c010b3fa:	89 10                	mov    %edx,(%eax)$/;"	l
c010b3fc	obj/kernel.asm	/^c010b3fc:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b400	obj/kernel.asm	/^c010b400:	75 07                	jne    c010b409 <iobuf_move+0x95>$/;"	l
c010b402	obj/kernel.asm	/^c010b402:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b407	obj/kernel.asm	/^c010b407:	eb 05                	jmp    c010b40e <iobuf_move+0x9a>$/;"	l
c010b409	obj/kernel.asm	/^c010b409:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b40e	obj/kernel.asm	/^c010b40e:	c9                   	leave  $/;"	l
c010b40f	obj/kernel.asm	/^c010b40f:	c3                   	ret    $/;"	l
c010b410	obj/kernel.asm	/^c010b410 <iobuf_move_zeros>:$/;"	l
c010b410	obj/kernel.asm	/^c010b410:	55                   	push   %ebp$/;"	l
c010b411	obj/kernel.asm	/^c010b411:	89 e5                	mov    %esp,%ebp$/;"	l
c010b413	obj/kernel.asm	/^c010b413:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b416	obj/kernel.asm	/^c010b416:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b419	obj/kernel.asm	/^c010b419:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b41c	obj/kernel.asm	/^c010b41c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b41f	obj/kernel.asm	/^c010b41f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b422	obj/kernel.asm	/^c010b422:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010b425	obj/kernel.asm	/^c010b425:	76 06                	jbe    c010b42d <iobuf_move_zeros+0x1d>$/;"	l
c010b427	obj/kernel.asm	/^c010b427:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b42a	obj/kernel.asm	/^c010b42a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b42d	obj/kernel.asm	/^c010b42d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b431	obj/kernel.asm	/^c010b431:	74 34                	je     c010b467 <iobuf_move_zeros+0x57>$/;"	l
c010b433	obj/kernel.asm	/^c010b433:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b436	obj/kernel.asm	/^c010b436:	8b 00                	mov    (%eax),%eax$/;"	l
c010b438	obj/kernel.asm	/^c010b438:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b43b	obj/kernel.asm	/^c010b43b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010b43f	obj/kernel.asm	/^c010b43f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010b446	obj/kernel.asm	/^c010b446:	00 $/;"	l
c010b447	obj/kernel.asm	/^c010b447:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b44a	obj/kernel.asm	/^c010b44a:	e8 21 a1 00 00       	call   c0115570 <memset>$/;"	l
c010b44f	obj/kernel.asm	/^c010b44f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b452	obj/kernel.asm	/^c010b452:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b456	obj/kernel.asm	/^c010b456:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b459	obj/kernel.asm	/^c010b459:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b45c	obj/kernel.asm	/^c010b45c:	e8 28 00 00 00       	call   c010b489 <iobuf_skip>$/;"	l
c010b461	obj/kernel.asm	/^c010b461:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b464	obj/kernel.asm	/^c010b464:	29 45 0c             	sub    %eax,0xc(%ebp)$/;"	l
c010b467	obj/kernel.asm	/^c010b467:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b46b	obj/kernel.asm	/^c010b46b:	74 08                	je     c010b475 <iobuf_move_zeros+0x65>$/;"	l
c010b46d	obj/kernel.asm	/^c010b46d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b470	obj/kernel.asm	/^c010b470:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b473	obj/kernel.asm	/^c010b473:	89 10                	mov    %edx,(%eax)$/;"	l
c010b475	obj/kernel.asm	/^c010b475:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b479	obj/kernel.asm	/^c010b479:	75 07                	jne    c010b482 <iobuf_move_zeros+0x72>$/;"	l
c010b47b	obj/kernel.asm	/^c010b47b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b480	obj/kernel.asm	/^c010b480:	eb 05                	jmp    c010b487 <iobuf_move_zeros+0x77>$/;"	l
c010b482	obj/kernel.asm	/^c010b482:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b487	obj/kernel.asm	/^c010b487:	c9                   	leave  $/;"	l
c010b488	obj/kernel.asm	/^c010b488:	c3                   	ret    $/;"	l
c010b489	obj/kernel.asm	/^c010b489 <iobuf_skip>:$/;"	l
c010b489	obj/kernel.asm	/^c010b489:	55                   	push   %ebp$/;"	l
c010b48a	obj/kernel.asm	/^c010b48a:	89 e5                	mov    %esp,%ebp$/;"	l
c010b48c	obj/kernel.asm	/^c010b48c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b48f	obj/kernel.asm	/^c010b48f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b492	obj/kernel.asm	/^c010b492:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b495	obj/kernel.asm	/^c010b495:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010b498	obj/kernel.asm	/^c010b498:	73 24                	jae    c010b4be <iobuf_skip+0x35>$/;"	l
c010b49a	obj/kernel.asm	/^c010b49a:	c7 44 24 0c 7a 7f 11 	movl   $0xc0117f7a,0xc(%esp)$/;"	l
c010b4a1	obj/kernel.asm	/^c010b4a1:	c0 $/;"	l
c010b4a2	obj/kernel.asm	/^c010b4a2:	c7 44 24 08 8d 7f 11 	movl   $0xc0117f8d,0x8(%esp)$/;"	l
c010b4a9	obj/kernel.asm	/^c010b4a9:	c0 $/;"	l
c010b4aa	obj/kernel.asm	/^c010b4aa:	c7 44 24 04 4a 00 00 	movl   $0x4a,0x4(%esp)$/;"	l
c010b4b1	obj/kernel.asm	/^c010b4b1:	00 $/;"	l
c010b4b2	obj/kernel.asm	/^c010b4b2:	c7 04 24 a2 7f 11 c0 	movl   $0xc0117fa2,(%esp)$/;"	l
c010b4b9	obj/kernel.asm	/^c010b4b9:	e8 0a 5a ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b4be	obj/kernel.asm	/^c010b4be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4c1	obj/kernel.asm	/^c010b4c1:	8b 10                	mov    (%eax),%edx$/;"	l
c010b4c3	obj/kernel.asm	/^c010b4c3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b4c6	obj/kernel.asm	/^c010b4c6:	01 c2                	add    %eax,%edx$/;"	l
c010b4c8	obj/kernel.asm	/^c010b4c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4cb	obj/kernel.asm	/^c010b4cb:	89 10                	mov    %edx,(%eax)$/;"	l
c010b4cd	obj/kernel.asm	/^c010b4cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4d0	obj/kernel.asm	/^c010b4d0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b4d3	obj/kernel.asm	/^c010b4d3:	89 c2                	mov    %eax,%edx$/;"	l
c010b4d5	obj/kernel.asm	/^c010b4d5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b4d8	obj/kernel.asm	/^c010b4d8:	01 d0                	add    %edx,%eax$/;"	l
c010b4da	obj/kernel.asm	/^c010b4da:	89 c2                	mov    %eax,%edx$/;"	l
c010b4dc	obj/kernel.asm	/^c010b4dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4df	obj/kernel.asm	/^c010b4df:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b4e2	obj/kernel.asm	/^c010b4e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4e5	obj/kernel.asm	/^c010b4e5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b4e8	obj/kernel.asm	/^c010b4e8:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c010b4eb	obj/kernel.asm	/^c010b4eb:	89 c2                	mov    %eax,%edx$/;"	l
c010b4ed	obj/kernel.asm	/^c010b4ed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4f0	obj/kernel.asm	/^c010b4f0:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010b4f3	obj/kernel.asm	/^c010b4f3:	c9                   	leave  $/;"	l
c010b4f4	obj/kernel.asm	/^c010b4f4:	c3                   	ret    $/;"	l
c010b4f5	obj/kernel.asm	/^c010b4f5 <lock_mm>:$/;"	l
c010b4f5	obj/kernel.asm	/^c010b4f5:	55                   	push   %ebp$/;"	l
c010b4f6	obj/kernel.asm	/^c010b4f6:	89 e5                	mov    %esp,%ebp$/;"	l
c010b4f8	obj/kernel.asm	/^c010b4f8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b4fb	obj/kernel.asm	/^c010b4fb:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b4ff	obj/kernel.asm	/^c010b4ff:	74 25                	je     c010b526 <lock_mm+0x31>$/;"	l
c010b501	obj/kernel.asm	/^c010b501:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b504	obj/kernel.asm	/^c010b504:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010b507	obj/kernel.asm	/^c010b507:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b50a	obj/kernel.asm	/^c010b50a:	e8 f0 e7 ff ff       	call   c0109cff <down>$/;"	l
c010b50f	obj/kernel.asm	/^c010b50f:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010b514	obj/kernel.asm	/^c010b514:	85 c0                	test   %eax,%eax$/;"	l
c010b516	obj/kernel.asm	/^c010b516:	74 0e                	je     c010b526 <lock_mm+0x31>$/;"	l
c010b518	obj/kernel.asm	/^c010b518:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010b51d	obj/kernel.asm	/^c010b51d:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b520	obj/kernel.asm	/^c010b520:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b523	obj/kernel.asm	/^c010b523:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c010b526	obj/kernel.asm	/^c010b526:	c9                   	leave  $/;"	l
c010b527	obj/kernel.asm	/^c010b527:	c3                   	ret    $/;"	l
c010b528	obj/kernel.asm	/^c010b528 <unlock_mm>:$/;"	l
c010b528	obj/kernel.asm	/^c010b528:	55                   	push   %ebp$/;"	l
c010b529	obj/kernel.asm	/^c010b529:	89 e5                	mov    %esp,%ebp$/;"	l
c010b52b	obj/kernel.asm	/^c010b52b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b52e	obj/kernel.asm	/^c010b52e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b532	obj/kernel.asm	/^c010b532:	74 18                	je     c010b54c <unlock_mm+0x24>$/;"	l
c010b534	obj/kernel.asm	/^c010b534:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b537	obj/kernel.asm	/^c010b537:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010b53a	obj/kernel.asm	/^c010b53a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b53d	obj/kernel.asm	/^c010b53d:	e8 a2 e7 ff ff       	call   c0109ce4 <up>$/;"	l
c010b542	obj/kernel.asm	/^c010b542:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b545	obj/kernel.asm	/^c010b545:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)$/;"	l
c010b54c	obj/kernel.asm	/^c010b54c:	c9                   	leave  $/;"	l
c010b54d	obj/kernel.asm	/^c010b54d:	c3                   	ret    $/;"	l
c010b54e	obj/kernel.asm	/^c010b54e <copy_path>:$/;"	l
c010b54e	obj/kernel.asm	/^c010b54e:	55                   	push   %ebp$/;"	l
c010b54f	obj/kernel.asm	/^c010b54f:	89 e5                	mov    %esp,%ebp$/;"	l
c010b551	obj/kernel.asm	/^c010b551:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b554	obj/kernel.asm	/^c010b554:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010b559	obj/kernel.asm	/^c010b559:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b55c	obj/kernel.asm	/^c010b55c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b55f	obj/kernel.asm	/^c010b55f:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010b566	obj/kernel.asm	/^c010b566:	e8 74 97 ff ff       	call   c0104cdf <kmalloc>$/;"	l
c010b56b	obj/kernel.asm	/^c010b56b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b56e	obj/kernel.asm	/^c010b56e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010b572	obj/kernel.asm	/^c010b572:	75 07                	jne    c010b57b <copy_path+0x2d>$/;"	l
c010b574	obj/kernel.asm	/^c010b574:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b579	obj/kernel.asm	/^c010b579:	eb 66                	jmp    c010b5e1 <copy_path+0x93>$/;"	l
c010b57b	obj/kernel.asm	/^c010b57b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b57e	obj/kernel.asm	/^c010b57e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b581	obj/kernel.asm	/^c010b581:	e8 6f ff ff ff       	call   c010b4f5 <lock_mm>$/;"	l
c010b586	obj/kernel.asm	/^c010b586:	c7 44 24 0c 00 10 00 	movl   $0x1000,0xc(%esp)$/;"	l
c010b58d	obj/kernel.asm	/^c010b58d:	00 $/;"	l
c010b58e	obj/kernel.asm	/^c010b58e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b591	obj/kernel.asm	/^c010b591:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b595	obj/kernel.asm	/^c010b595:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b598	obj/kernel.asm	/^c010b598:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b59c	obj/kernel.asm	/^c010b59c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b59f	obj/kernel.asm	/^c010b59f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b5a2	obj/kernel.asm	/^c010b5a2:	e8 cb db ff ff       	call   c0109172 <copy_string>$/;"	l
c010b5a7	obj/kernel.asm	/^c010b5a7:	85 c0                	test   %eax,%eax$/;"	l
c010b5a9	obj/kernel.asm	/^c010b5a9:	75 1e                	jne    c010b5c9 <copy_path+0x7b>$/;"	l
c010b5ab	obj/kernel.asm	/^c010b5ab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b5ae	obj/kernel.asm	/^c010b5ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b5b1	obj/kernel.asm	/^c010b5b1:	e8 72 ff ff ff       	call   c010b528 <unlock_mm>$/;"	l
c010b5b6	obj/kernel.asm	/^c010b5b6:	90                   	nop$/;"	l
c010b5b7	obj/kernel.asm	/^c010b5b7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b5ba	obj/kernel.asm	/^c010b5ba:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b5bd	obj/kernel.asm	/^c010b5bd:	e8 38 97 ff ff       	call   c0104cfa <kfree>$/;"	l
c010b5c2	obj/kernel.asm	/^c010b5c2:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010b5c7	obj/kernel.asm	/^c010b5c7:	eb 18                	jmp    c010b5e1 <copy_path+0x93>$/;"	l
c010b5c9	obj/kernel.asm	/^c010b5c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b5cc	obj/kernel.asm	/^c010b5cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b5cf	obj/kernel.asm	/^c010b5cf:	e8 54 ff ff ff       	call   c010b528 <unlock_mm>$/;"	l
c010b5d4	obj/kernel.asm	/^c010b5d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5d7	obj/kernel.asm	/^c010b5d7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010b5da	obj/kernel.asm	/^c010b5da:	89 10                	mov    %edx,(%eax)$/;"	l
c010b5dc	obj/kernel.asm	/^c010b5dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b5e1	obj/kernel.asm	/^c010b5e1:	c9                   	leave  $/;"	l
c010b5e2	obj/kernel.asm	/^c010b5e2:	c3                   	ret    $/;"	l
c010b5e3	obj/kernel.asm	/^c010b5e3 <sysfile_open>:$/;"	l
c010b5e3	obj/kernel.asm	/^c010b5e3:	55                   	push   %ebp$/;"	l
c010b5e4	obj/kernel.asm	/^c010b5e4:	89 e5                	mov    %esp,%ebp$/;"	l
c010b5e6	obj/kernel.asm	/^c010b5e6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b5e9	obj/kernel.asm	/^c010b5e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5ec	obj/kernel.asm	/^c010b5ec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b5f0	obj/kernel.asm	/^c010b5f0:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010b5f3	obj/kernel.asm	/^c010b5f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b5f6	obj/kernel.asm	/^c010b5f6:	e8 53 ff ff ff       	call   c010b54e <copy_path>$/;"	l
c010b5fb	obj/kernel.asm	/^c010b5fb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b5fe	obj/kernel.asm	/^c010b5fe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b602	obj/kernel.asm	/^c010b602:	74 05                	je     c010b609 <sysfile_open+0x26>$/;"	l
c010b604	obj/kernel.asm	/^c010b604:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b607	obj/kernel.asm	/^c010b607:	eb 23                	jmp    c010b62c <sysfile_open+0x49>$/;"	l
c010b609	obj/kernel.asm	/^c010b609:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b60c	obj/kernel.asm	/^c010b60c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b60f	obj/kernel.asm	/^c010b60f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010b613	obj/kernel.asm	/^c010b613:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b616	obj/kernel.asm	/^c010b616:	e8 61 f1 ff ff       	call   c010a77c <file_open>$/;"	l
c010b61b	obj/kernel.asm	/^c010b61b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b61e	obj/kernel.asm	/^c010b61e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b621	obj/kernel.asm	/^c010b621:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b624	obj/kernel.asm	/^c010b624:	e8 d1 96 ff ff       	call   c0104cfa <kfree>$/;"	l
c010b629	obj/kernel.asm	/^c010b629:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b62c	obj/kernel.asm	/^c010b62c:	c9                   	leave  $/;"	l
c010b62d	obj/kernel.asm	/^c010b62d:	c3                   	ret    $/;"	l
c010b62e	obj/kernel.asm	/^c010b62e <sysfile_close>:$/;"	l
c010b62e	obj/kernel.asm	/^c010b62e:	55                   	push   %ebp$/;"	l
c010b62f	obj/kernel.asm	/^c010b62f:	89 e5                	mov    %esp,%ebp$/;"	l
c010b631	obj/kernel.asm	/^c010b631:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b634	obj/kernel.asm	/^c010b634:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b637	obj/kernel.asm	/^c010b637:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b63a	obj/kernel.asm	/^c010b63a:	e8 da f2 ff ff       	call   c010a919 <file_close>$/;"	l
c010b63f	obj/kernel.asm	/^c010b63f:	c9                   	leave  $/;"	l
c010b640	obj/kernel.asm	/^c010b640:	c3                   	ret    $/;"	l
c010b641	obj/kernel.asm	/^c010b641 <sysfile_read>:$/;"	l
c010b641	obj/kernel.asm	/^c010b641:	55                   	push   %ebp$/;"	l
c010b642	obj/kernel.asm	/^c010b642:	89 e5                	mov    %esp,%ebp$/;"	l
c010b644	obj/kernel.asm	/^c010b644:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010b647	obj/kernel.asm	/^c010b647:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010b64c	obj/kernel.asm	/^c010b64c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b64f	obj/kernel.asm	/^c010b64f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b652	obj/kernel.asm	/^c010b652:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b656	obj/kernel.asm	/^c010b656:	75 0a                	jne    c010b662 <sysfile_read+0x21>$/;"	l
c010b658	obj/kernel.asm	/^c010b658:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b65d	obj/kernel.asm	/^c010b65d:	e9 55 01 00 00       	jmp    c010b7b7 <sysfile_read+0x176>$/;"	l
c010b662	obj/kernel.asm	/^c010b662:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010b669	obj/kernel.asm	/^c010b669:	00 $/;"	l
c010b66a	obj/kernel.asm	/^c010b66a:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010b671	obj/kernel.asm	/^c010b671:	00 $/;"	l
c010b672	obj/kernel.asm	/^c010b672:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b675	obj/kernel.asm	/^c010b675:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b678	obj/kernel.asm	/^c010b678:	e8 a2 f0 ff ff       	call   c010a71f <file_testfd>$/;"	l
c010b67d	obj/kernel.asm	/^c010b67d:	85 c0                	test   %eax,%eax$/;"	l
c010b67f	obj/kernel.asm	/^c010b67f:	75 0a                	jne    c010b68b <sysfile_read+0x4a>$/;"	l
c010b681	obj/kernel.asm	/^c010b681:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010b686	obj/kernel.asm	/^c010b686:	e9 2c 01 00 00       	jmp    c010b7b7 <sysfile_read+0x176>$/;"	l
c010b68b	obj/kernel.asm	/^c010b68b:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010b692	obj/kernel.asm	/^c010b692:	e8 48 96 ff ff       	call   c0104cdf <kmalloc>$/;"	l
c010b697	obj/kernel.asm	/^c010b697:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b69a	obj/kernel.asm	/^c010b69a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b69e	obj/kernel.asm	/^c010b69e:	75 0a                	jne    c010b6aa <sysfile_read+0x69>$/;"	l
c010b6a0	obj/kernel.asm	/^c010b6a0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b6a5	obj/kernel.asm	/^c010b6a5:	e9 0d 01 00 00       	jmp    c010b7b7 <sysfile_read+0x176>$/;"	l
c010b6aa	obj/kernel.asm	/^c010b6aa:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b6b1	obj/kernel.asm	/^c010b6b1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010b6b8	obj/kernel.asm	/^c010b6b8:	e9 d7 00 00 00       	jmp    c010b794 <sysfile_read+0x153>$/;"	l
c010b6bd	obj/kernel.asm	/^c010b6bd:	c7 45 e4 00 10 00 00 	movl   $0x1000,-0x1c(%ebp)$/;"	l
c010b6c4	obj/kernel.asm	/^c010b6c4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b6c7	obj/kernel.asm	/^c010b6c7:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010b6ca	obj/kernel.asm	/^c010b6ca:	76 06                	jbe    c010b6d2 <sysfile_read+0x91>$/;"	l
c010b6cc	obj/kernel.asm	/^c010b6cc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b6cf	obj/kernel.asm	/^c010b6cf:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b6d2	obj/kernel.asm	/^c010b6d2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b6d5	obj/kernel.asm	/^c010b6d5:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c010b6d8	obj/kernel.asm	/^c010b6d8:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010b6dc	obj/kernel.asm	/^c010b6dc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b6e0	obj/kernel.asm	/^c010b6e0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b6e3	obj/kernel.asm	/^c010b6e3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b6e7	obj/kernel.asm	/^c010b6e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b6ea	obj/kernel.asm	/^c010b6ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b6ed	obj/kernel.asm	/^c010b6ed:	e8 5f f2 ff ff       	call   c010a951 <file_read>$/;"	l
c010b6f2	obj/kernel.asm	/^c010b6f2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b6f5	obj/kernel.asm	/^c010b6f5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b6f8	obj/kernel.asm	/^c010b6f8:	85 c0                	test   %eax,%eax$/;"	l
c010b6fa	obj/kernel.asm	/^c010b6fa:	0f 84 87 00 00 00    	je     c010b787 <sysfile_read+0x146>$/;"	l
c010b700	obj/kernel.asm	/^c010b700:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b703	obj/kernel.asm	/^c010b703:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b706	obj/kernel.asm	/^c010b706:	e8 ea fd ff ff       	call   c010b4f5 <lock_mm>$/;"	l
c010b70b	obj/kernel.asm	/^c010b70b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b70e	obj/kernel.asm	/^c010b70e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010b712	obj/kernel.asm	/^c010b712:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b715	obj/kernel.asm	/^c010b715:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b719	obj/kernel.asm	/^c010b719:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b71c	obj/kernel.asm	/^c010b71c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b720	obj/kernel.asm	/^c010b720:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b723	obj/kernel.asm	/^c010b723:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b726	obj/kernel.asm	/^c010b726:	e8 73 cf ff ff       	call   c010869e <copy_to_user>$/;"	l
c010b72b	obj/kernel.asm	/^c010b72b:	85 c0                	test   %eax,%eax$/;"	l
c010b72d	obj/kernel.asm	/^c010b72d:	74 40                	je     c010b76f <sysfile_read+0x12e>$/;"	l
c010b72f	obj/kernel.asm	/^c010b72f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b732	obj/kernel.asm	/^c010b732:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
c010b735	obj/kernel.asm	/^c010b735:	73 24                	jae    c010b75b <sysfile_read+0x11a>$/;"	l
c010b737	obj/kernel.asm	/^c010b737:	c7 44 24 0c b2 7f 11 	movl   $0xc0117fb2,0xc(%esp)$/;"	l
c010b73e	obj/kernel.asm	/^c010b73e:	c0 $/;"	l
c010b73f	obj/kernel.asm	/^c010b73f:	c7 44 24 08 be 7f 11 	movl   $0xc0117fbe,0x8(%esp)$/;"	l
c010b746	obj/kernel.asm	/^c010b746:	c0 $/;"	l
c010b747	obj/kernel.asm	/^c010b747:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
c010b74e	obj/kernel.asm	/^c010b74e:	00 $/;"	l
c010b74f	obj/kernel.asm	/^c010b74f:	c7 04 24 d3 7f 11 c0 	movl   $0xc0117fd3,(%esp)$/;"	l
c010b756	obj/kernel.asm	/^c010b756:	e8 6d 57 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b75b	obj/kernel.asm	/^c010b75b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b75e	obj/kernel.asm	/^c010b75e:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c010b761	obj/kernel.asm	/^c010b761:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b764	obj/kernel.asm	/^c010b764:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c010b767	obj/kernel.asm	/^c010b767:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b76a	obj/kernel.asm	/^c010b76a:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c010b76d	obj/kernel.asm	/^c010b76d:	eb 0d                	jmp    c010b77c <sysfile_read+0x13b>$/;"	l
c010b76f	obj/kernel.asm	/^c010b76f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b773	obj/kernel.asm	/^c010b773:	75 07                	jne    c010b77c <sysfile_read+0x13b>$/;"	l
c010b775	obj/kernel.asm	/^c010b775:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010b77c	obj/kernel.asm	/^c010b77c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b77f	obj/kernel.asm	/^c010b77f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b782	obj/kernel.asm	/^c010b782:	e8 a1 fd ff ff       	call   c010b528 <unlock_mm>$/;"	l
c010b787	obj/kernel.asm	/^c010b787:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b78b	obj/kernel.asm	/^c010b78b:	75 11                	jne    c010b79e <sysfile_read+0x15d>$/;"	l
c010b78d	obj/kernel.asm	/^c010b78d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b790	obj/kernel.asm	/^c010b790:	85 c0                	test   %eax,%eax$/;"	l
c010b792	obj/kernel.asm	/^c010b792:	74 0a                	je     c010b79e <sysfile_read+0x15d>$/;"	l
c010b794	obj/kernel.asm	/^c010b794:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b798	obj/kernel.asm	/^c010b798:	0f 85 1f ff ff ff    	jne    c010b6bd <sysfile_read+0x7c>$/;"	l
c010b79e	obj/kernel.asm	/^c010b79e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b7a1	obj/kernel.asm	/^c010b7a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b7a4	obj/kernel.asm	/^c010b7a4:	e8 51 95 ff ff       	call   c0104cfa <kfree>$/;"	l
c010b7a9	obj/kernel.asm	/^c010b7a9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010b7ad	obj/kernel.asm	/^c010b7ad:	74 05                	je     c010b7b4 <sysfile_read+0x173>$/;"	l
c010b7af	obj/kernel.asm	/^c010b7af:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b7b2	obj/kernel.asm	/^c010b7b2:	eb 03                	jmp    c010b7b7 <sysfile_read+0x176>$/;"	l
c010b7b4	obj/kernel.asm	/^c010b7b4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b7b7	obj/kernel.asm	/^c010b7b7:	c9                   	leave  $/;"	l
c010b7b8	obj/kernel.asm	/^c010b7b8:	c3                   	ret    $/;"	l
c010b7b9	obj/kernel.asm	/^c010b7b9 <sysfile_write>:$/;"	l
c010b7b9	obj/kernel.asm	/^c010b7b9:	55                   	push   %ebp$/;"	l
c010b7ba	obj/kernel.asm	/^c010b7ba:	89 e5                	mov    %esp,%ebp$/;"	l
c010b7bc	obj/kernel.asm	/^c010b7bc:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010b7bf	obj/kernel.asm	/^c010b7bf:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010b7c4	obj/kernel.asm	/^c010b7c4:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b7c7	obj/kernel.asm	/^c010b7c7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b7ca	obj/kernel.asm	/^c010b7ca:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b7ce	obj/kernel.asm	/^c010b7ce:	75 0a                	jne    c010b7da <sysfile_write+0x21>$/;"	l
c010b7d0	obj/kernel.asm	/^c010b7d0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b7d5	obj/kernel.asm	/^c010b7d5:	e9 57 01 00 00       	jmp    c010b931 <sysfile_write+0x178>$/;"	l
c010b7da	obj/kernel.asm	/^c010b7da:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c010b7e1	obj/kernel.asm	/^c010b7e1:	00 $/;"	l
c010b7e2	obj/kernel.asm	/^c010b7e2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010b7e9	obj/kernel.asm	/^c010b7e9:	00 $/;"	l
c010b7ea	obj/kernel.asm	/^c010b7ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b7ed	obj/kernel.asm	/^c010b7ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b7f0	obj/kernel.asm	/^c010b7f0:	e8 2a ef ff ff       	call   c010a71f <file_testfd>$/;"	l
c010b7f5	obj/kernel.asm	/^c010b7f5:	85 c0                	test   %eax,%eax$/;"	l
c010b7f7	obj/kernel.asm	/^c010b7f7:	75 0a                	jne    c010b803 <sysfile_write+0x4a>$/;"	l
c010b7f9	obj/kernel.asm	/^c010b7f9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010b7fe	obj/kernel.asm	/^c010b7fe:	e9 2e 01 00 00       	jmp    c010b931 <sysfile_write+0x178>$/;"	l
c010b803	obj/kernel.asm	/^c010b803:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010b80a	obj/kernel.asm	/^c010b80a:	e8 d0 94 ff ff       	call   c0104cdf <kmalloc>$/;"	l
c010b80f	obj/kernel.asm	/^c010b80f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b812	obj/kernel.asm	/^c010b812:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b816	obj/kernel.asm	/^c010b816:	75 0a                	jne    c010b822 <sysfile_write+0x69>$/;"	l
c010b818	obj/kernel.asm	/^c010b818:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b81d	obj/kernel.asm	/^c010b81d:	e9 0f 01 00 00       	jmp    c010b931 <sysfile_write+0x178>$/;"	l
c010b822	obj/kernel.asm	/^c010b822:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b829	obj/kernel.asm	/^c010b829:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010b830	obj/kernel.asm	/^c010b830:	e9 d9 00 00 00       	jmp    c010b90e <sysfile_write+0x155>$/;"	l
c010b835	obj/kernel.asm	/^c010b835:	c7 45 e4 00 10 00 00 	movl   $0x1000,-0x1c(%ebp)$/;"	l
c010b83c	obj/kernel.asm	/^c010b83c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b83f	obj/kernel.asm	/^c010b83f:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010b842	obj/kernel.asm	/^c010b842:	76 06                	jbe    c010b84a <sysfile_write+0x91>$/;"	l
c010b844	obj/kernel.asm	/^c010b844:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b847	obj/kernel.asm	/^c010b847:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b84a	obj/kernel.asm	/^c010b84a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b84d	obj/kernel.asm	/^c010b84d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b850	obj/kernel.asm	/^c010b850:	e8 a0 fc ff ff       	call   c010b4f5 <lock_mm>$/;"	l
c010b855	obj/kernel.asm	/^c010b855:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b858	obj/kernel.asm	/^c010b858:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c010b85f	obj/kernel.asm	/^c010b85f:	00 $/;"	l
c010b860	obj/kernel.asm	/^c010b860:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010b864	obj/kernel.asm	/^c010b864:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b867	obj/kernel.asm	/^c010b867:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b86b	obj/kernel.asm	/^c010b86b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b86e	obj/kernel.asm	/^c010b86e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b872	obj/kernel.asm	/^c010b872:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b875	obj/kernel.asm	/^c010b875:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b878	obj/kernel.asm	/^c010b878:	e8 d0 cd ff ff       	call   c010864d <copy_from_user>$/;"	l
c010b87d	obj/kernel.asm	/^c010b87d:	85 c0                	test   %eax,%eax$/;"	l
c010b87f	obj/kernel.asm	/^c010b87f:	75 07                	jne    c010b888 <sysfile_write+0xcf>$/;"	l
c010b881	obj/kernel.asm	/^c010b881:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010b888	obj/kernel.asm	/^c010b888:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b88b	obj/kernel.asm	/^c010b88b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b88e	obj/kernel.asm	/^c010b88e:	e8 95 fc ff ff       	call   c010b528 <unlock_mm>$/;"	l
c010b893	obj/kernel.asm	/^c010b893:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b897	obj/kernel.asm	/^c010b897:	75 68                	jne    c010b901 <sysfile_write+0x148>$/;"	l
c010b899	obj/kernel.asm	/^c010b899:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b89c	obj/kernel.asm	/^c010b89c:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c010b89f	obj/kernel.asm	/^c010b89f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010b8a3	obj/kernel.asm	/^c010b8a3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b8a7	obj/kernel.asm	/^c010b8a7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b8aa	obj/kernel.asm	/^c010b8aa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b8ae	obj/kernel.asm	/^c010b8ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8b1	obj/kernel.asm	/^c010b8b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b8b4	obj/kernel.asm	/^c010b8b4:	e8 d2 f1 ff ff       	call   c010aa8b <file_write>$/;"	l
c010b8b9	obj/kernel.asm	/^c010b8b9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b8bc	obj/kernel.asm	/^c010b8bc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b8bf	obj/kernel.asm	/^c010b8bf:	85 c0                	test   %eax,%eax$/;"	l
c010b8c1	obj/kernel.asm	/^c010b8c1:	74 3e                	je     c010b901 <sysfile_write+0x148>$/;"	l
c010b8c3	obj/kernel.asm	/^c010b8c3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b8c6	obj/kernel.asm	/^c010b8c6:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
c010b8c9	obj/kernel.asm	/^c010b8c9:	73 24                	jae    c010b8ef <sysfile_write+0x136>$/;"	l
c010b8cb	obj/kernel.asm	/^c010b8cb:	c7 44 24 0c b2 7f 11 	movl   $0xc0117fb2,0xc(%esp)$/;"	l
c010b8d2	obj/kernel.asm	/^c010b8d2:	c0 $/;"	l
c010b8d3	obj/kernel.asm	/^c010b8d3:	c7 44 24 08 be 7f 11 	movl   $0xc0117fbe,0x8(%esp)$/;"	l
c010b8da	obj/kernel.asm	/^c010b8da:	c0 $/;"	l
c010b8db	obj/kernel.asm	/^c010b8db:	c7 44 24 04 8a 00 00 	movl   $0x8a,0x4(%esp)$/;"	l
c010b8e2	obj/kernel.asm	/^c010b8e2:	00 $/;"	l
c010b8e3	obj/kernel.asm	/^c010b8e3:	c7 04 24 d3 7f 11 c0 	movl   $0xc0117fd3,(%esp)$/;"	l
c010b8ea	obj/kernel.asm	/^c010b8ea:	e8 d9 55 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b8ef	obj/kernel.asm	/^c010b8ef:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b8f2	obj/kernel.asm	/^c010b8f2:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c010b8f5	obj/kernel.asm	/^c010b8f5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b8f8	obj/kernel.asm	/^c010b8f8:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c010b8fb	obj/kernel.asm	/^c010b8fb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b8fe	obj/kernel.asm	/^c010b8fe:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c010b901	obj/kernel.asm	/^c010b901:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b905	obj/kernel.asm	/^c010b905:	75 11                	jne    c010b918 <sysfile_write+0x15f>$/;"	l
c010b907	obj/kernel.asm	/^c010b907:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b90a	obj/kernel.asm	/^c010b90a:	85 c0                	test   %eax,%eax$/;"	l
c010b90c	obj/kernel.asm	/^c010b90c:	74 0a                	je     c010b918 <sysfile_write+0x15f>$/;"	l
c010b90e	obj/kernel.asm	/^c010b90e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b912	obj/kernel.asm	/^c010b912:	0f 85 1d ff ff ff    	jne    c010b835 <sysfile_write+0x7c>$/;"	l
c010b918	obj/kernel.asm	/^c010b918:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b91b	obj/kernel.asm	/^c010b91b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b91e	obj/kernel.asm	/^c010b91e:	e8 d7 93 ff ff       	call   c0104cfa <kfree>$/;"	l
c010b923	obj/kernel.asm	/^c010b923:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010b927	obj/kernel.asm	/^c010b927:	74 05                	je     c010b92e <sysfile_write+0x175>$/;"	l
c010b929	obj/kernel.asm	/^c010b929:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b92c	obj/kernel.asm	/^c010b92c:	eb 03                	jmp    c010b931 <sysfile_write+0x178>$/;"	l
c010b92e	obj/kernel.asm	/^c010b92e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b931	obj/kernel.asm	/^c010b931:	c9                   	leave  $/;"	l
c010b932	obj/kernel.asm	/^c010b932:	c3                   	ret    $/;"	l
c010b933	obj/kernel.asm	/^c010b933 <sysfile_seek>:$/;"	l
c010b933	obj/kernel.asm	/^c010b933:	55                   	push   %ebp$/;"	l
c010b934	obj/kernel.asm	/^c010b934:	89 e5                	mov    %esp,%ebp$/;"	l
c010b936	obj/kernel.asm	/^c010b936:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b939	obj/kernel.asm	/^c010b939:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b93c	obj/kernel.asm	/^c010b93c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b940	obj/kernel.asm	/^c010b940:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b943	obj/kernel.asm	/^c010b943:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b947	obj/kernel.asm	/^c010b947:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b94a	obj/kernel.asm	/^c010b94a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b94d	obj/kernel.asm	/^c010b94d:	e8 73 f2 ff ff       	call   c010abc5 <file_seek>$/;"	l
c010b952	obj/kernel.asm	/^c010b952:	c9                   	leave  $/;"	l
c010b953	obj/kernel.asm	/^c010b953:	c3                   	ret    $/;"	l
c010b954	obj/kernel.asm	/^c010b954 <sysfile_fstat>:$/;"	l
c010b954	obj/kernel.asm	/^c010b954:	55                   	push   %ebp$/;"	l
c010b955	obj/kernel.asm	/^c010b955:	89 e5                	mov    %esp,%ebp$/;"	l
c010b957	obj/kernel.asm	/^c010b957:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010b95a	obj/kernel.asm	/^c010b95a:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010b95f	obj/kernel.asm	/^c010b95f:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b962	obj/kernel.asm	/^c010b962:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b965	obj/kernel.asm	/^c010b965:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010b968	obj/kernel.asm	/^c010b968:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b96b	obj/kernel.asm	/^c010b96b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b96e	obj/kernel.asm	/^c010b96e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b972	obj/kernel.asm	/^c010b972:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b975	obj/kernel.asm	/^c010b975:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b978	obj/kernel.asm	/^c010b978:	e8 eb f3 ff ff       	call   c010ad68 <file_fstat>$/;"	l
c010b97d	obj/kernel.asm	/^c010b97d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b980	obj/kernel.asm	/^c010b980:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b984	obj/kernel.asm	/^c010b984:	74 05                	je     c010b98b <sysfile_fstat+0x37>$/;"	l
c010b986	obj/kernel.asm	/^c010b986:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b989	obj/kernel.asm	/^c010b989:	eb 45                	jmp    c010b9d0 <sysfile_fstat+0x7c>$/;"	l
c010b98b	obj/kernel.asm	/^c010b98b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b98e	obj/kernel.asm	/^c010b98e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b991	obj/kernel.asm	/^c010b991:	e8 5f fb ff ff       	call   c010b4f5 <lock_mm>$/;"	l
c010b996	obj/kernel.asm	/^c010b996:	c7 44 24 0c 10 00 00 	movl   $0x10,0xc(%esp)$/;"	l
c010b99d	obj/kernel.asm	/^c010b99d:	00 $/;"	l
c010b99e	obj/kernel.asm	/^c010b99e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b9a1	obj/kernel.asm	/^c010b9a1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b9a5	obj/kernel.asm	/^c010b9a5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b9a8	obj/kernel.asm	/^c010b9a8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b9ac	obj/kernel.asm	/^c010b9ac:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b9af	obj/kernel.asm	/^c010b9af:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b9b2	obj/kernel.asm	/^c010b9b2:	e8 e7 cc ff ff       	call   c010869e <copy_to_user>$/;"	l
c010b9b7	obj/kernel.asm	/^c010b9b7:	85 c0                	test   %eax,%eax$/;"	l
c010b9b9	obj/kernel.asm	/^c010b9b9:	75 07                	jne    c010b9c2 <sysfile_fstat+0x6e>$/;"	l
c010b9bb	obj/kernel.asm	/^c010b9bb:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010b9c2	obj/kernel.asm	/^c010b9c2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b9c5	obj/kernel.asm	/^c010b9c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b9c8	obj/kernel.asm	/^c010b9c8:	e8 5b fb ff ff       	call   c010b528 <unlock_mm>$/;"	l
c010b9cd	obj/kernel.asm	/^c010b9cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b9d0	obj/kernel.asm	/^c010b9d0:	c9                   	leave  $/;"	l
c010b9d1	obj/kernel.asm	/^c010b9d1:	c3                   	ret    $/;"	l
c010b9d2	obj/kernel.asm	/^c010b9d2 <sysfile_fsync>:$/;"	l
c010b9d2	obj/kernel.asm	/^c010b9d2:	55                   	push   %ebp$/;"	l
c010b9d3	obj/kernel.asm	/^c010b9d3:	89 e5                	mov    %esp,%ebp$/;"	l
c010b9d5	obj/kernel.asm	/^c010b9d5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b9d8	obj/kernel.asm	/^c010b9d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9db	obj/kernel.asm	/^c010b9db:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b9de	obj/kernel.asm	/^c010b9de:	e8 44 f4 ff ff       	call   c010ae27 <file_fsync>$/;"	l
c010b9e3	obj/kernel.asm	/^c010b9e3:	c9                   	leave  $/;"	l
c010b9e4	obj/kernel.asm	/^c010b9e4:	c3                   	ret    $/;"	l
c010b9e5	obj/kernel.asm	/^c010b9e5 <sysfile_chdir>:$/;"	l
c010b9e5	obj/kernel.asm	/^c010b9e5:	55                   	push   %ebp$/;"	l
c010b9e6	obj/kernel.asm	/^c010b9e6:	89 e5                	mov    %esp,%ebp$/;"	l
c010b9e8	obj/kernel.asm	/^c010b9e8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b9eb	obj/kernel.asm	/^c010b9eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9ee	obj/kernel.asm	/^c010b9ee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b9f2	obj/kernel.asm	/^c010b9f2:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010b9f5	obj/kernel.asm	/^c010b9f5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b9f8	obj/kernel.asm	/^c010b9f8:	e8 51 fb ff ff       	call   c010b54e <copy_path>$/;"	l
c010b9fd	obj/kernel.asm	/^c010b9fd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba00	obj/kernel.asm	/^c010ba00:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ba04	obj/kernel.asm	/^c010ba04:	74 05                	je     c010ba0b <sysfile_chdir+0x26>$/;"	l
c010ba06	obj/kernel.asm	/^c010ba06:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba09	obj/kernel.asm	/^c010ba09:	eb 1c                	jmp    c010ba27 <sysfile_chdir+0x42>$/;"	l
c010ba0b	obj/kernel.asm	/^c010ba0b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba0e	obj/kernel.asm	/^c010ba0e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba11	obj/kernel.asm	/^c010ba11:	e8 81 4b 00 00       	call   c0110597 <vfs_chdir>$/;"	l
c010ba16	obj/kernel.asm	/^c010ba16:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba19	obj/kernel.asm	/^c010ba19:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba1c	obj/kernel.asm	/^c010ba1c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba1f	obj/kernel.asm	/^c010ba1f:	e8 d6 92 ff ff       	call   c0104cfa <kfree>$/;"	l
c010ba24	obj/kernel.asm	/^c010ba24:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba27	obj/kernel.asm	/^c010ba27:	c9                   	leave  $/;"	l
c010ba28	obj/kernel.asm	/^c010ba28:	c3                   	ret    $/;"	l
c010ba29	obj/kernel.asm	/^c010ba29 <sysfile_link>:$/;"	l
c010ba29	obj/kernel.asm	/^c010ba29:	55                   	push   %ebp$/;"	l
c010ba2a	obj/kernel.asm	/^c010ba2a:	89 e5                	mov    %esp,%ebp$/;"	l
c010ba2c	obj/kernel.asm	/^c010ba2c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ba2f	obj/kernel.asm	/^c010ba2f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba32	obj/kernel.asm	/^c010ba32:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ba36	obj/kernel.asm	/^c010ba36:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010ba39	obj/kernel.asm	/^c010ba39:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba3c	obj/kernel.asm	/^c010ba3c:	e8 0d fb ff ff       	call   c010b54e <copy_path>$/;"	l
c010ba41	obj/kernel.asm	/^c010ba41:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba44	obj/kernel.asm	/^c010ba44:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ba48	obj/kernel.asm	/^c010ba48:	74 05                	je     c010ba4f <sysfile_link+0x26>$/;"	l
c010ba4a	obj/kernel.asm	/^c010ba4a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba4d	obj/kernel.asm	/^c010ba4d:	eb 59                	jmp    c010baa8 <sysfile_link+0x7f>$/;"	l
c010ba4f	obj/kernel.asm	/^c010ba4f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ba52	obj/kernel.asm	/^c010ba52:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ba56	obj/kernel.asm	/^c010ba56:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010ba59	obj/kernel.asm	/^c010ba59:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba5c	obj/kernel.asm	/^c010ba5c:	e8 ed fa ff ff       	call   c010b54e <copy_path>$/;"	l
c010ba61	obj/kernel.asm	/^c010ba61:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba64	obj/kernel.asm	/^c010ba64:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ba68	obj/kernel.asm	/^c010ba68:	74 10                	je     c010ba7a <sysfile_link+0x51>$/;"	l
c010ba6a	obj/kernel.asm	/^c010ba6a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba6d	obj/kernel.asm	/^c010ba6d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba70	obj/kernel.asm	/^c010ba70:	e8 85 92 ff ff       	call   c0104cfa <kfree>$/;"	l
c010ba75	obj/kernel.asm	/^c010ba75:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba78	obj/kernel.asm	/^c010ba78:	eb 2e                	jmp    c010baa8 <sysfile_link+0x7f>$/;"	l
c010ba7a	obj/kernel.asm	/^c010ba7a:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ba7d	obj/kernel.asm	/^c010ba7d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba80	obj/kernel.asm	/^c010ba80:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010ba84	obj/kernel.asm	/^c010ba84:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba87	obj/kernel.asm	/^c010ba87:	e8 8c 46 00 00       	call   c0110118 <vfs_link>$/;"	l
c010ba8c	obj/kernel.asm	/^c010ba8c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba8f	obj/kernel.asm	/^c010ba8f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba92	obj/kernel.asm	/^c010ba92:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba95	obj/kernel.asm	/^c010ba95:	e8 60 92 ff ff       	call   c0104cfa <kfree>$/;"	l
c010ba9a	obj/kernel.asm	/^c010ba9a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ba9d	obj/kernel.asm	/^c010ba9d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010baa0	obj/kernel.asm	/^c010baa0:	e8 55 92 ff ff       	call   c0104cfa <kfree>$/;"	l
c010baa5	obj/kernel.asm	/^c010baa5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010baa8	obj/kernel.asm	/^c010baa8:	c9                   	leave  $/;"	l
c010baa9	obj/kernel.asm	/^c010baa9:	c3                   	ret    $/;"	l
c010baaa	obj/kernel.asm	/^c010baaa <sysfile_rename>:$/;"	l
c010baaa	obj/kernel.asm	/^c010baaa:	55                   	push   %ebp$/;"	l
c010baab	obj/kernel.asm	/^c010baab:	89 e5                	mov    %esp,%ebp$/;"	l
c010baad	obj/kernel.asm	/^c010baad:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010bab0	obj/kernel.asm	/^c010bab0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bab3	obj/kernel.asm	/^c010bab3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bab7	obj/kernel.asm	/^c010bab7:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010baba	obj/kernel.asm	/^c010baba:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010babd	obj/kernel.asm	/^c010babd:	e8 8c fa ff ff       	call   c010b54e <copy_path>$/;"	l
c010bac2	obj/kernel.asm	/^c010bac2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bac5	obj/kernel.asm	/^c010bac5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bac9	obj/kernel.asm	/^c010bac9:	74 05                	je     c010bad0 <sysfile_rename+0x26>$/;"	l
c010bacb	obj/kernel.asm	/^c010bacb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bace	obj/kernel.asm	/^c010bace:	eb 59                	jmp    c010bb29 <sysfile_rename+0x7f>$/;"	l
c010bad0	obj/kernel.asm	/^c010bad0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bad3	obj/kernel.asm	/^c010bad3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bad7	obj/kernel.asm	/^c010bad7:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010bada	obj/kernel.asm	/^c010bada:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010badd	obj/kernel.asm	/^c010badd:	e8 6c fa ff ff       	call   c010b54e <copy_path>$/;"	l
c010bae2	obj/kernel.asm	/^c010bae2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bae5	obj/kernel.asm	/^c010bae5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bae9	obj/kernel.asm	/^c010bae9:	74 10                	je     c010bafb <sysfile_rename+0x51>$/;"	l
c010baeb	obj/kernel.asm	/^c010baeb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010baee	obj/kernel.asm	/^c010baee:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010baf1	obj/kernel.asm	/^c010baf1:	e8 04 92 ff ff       	call   c0104cfa <kfree>$/;"	l
c010baf6	obj/kernel.asm	/^c010baf6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010baf9	obj/kernel.asm	/^c010baf9:	eb 2e                	jmp    c010bb29 <sysfile_rename+0x7f>$/;"	l
c010bafb	obj/kernel.asm	/^c010bafb:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010bafe	obj/kernel.asm	/^c010bafe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb01	obj/kernel.asm	/^c010bb01:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010bb05	obj/kernel.asm	/^c010bb05:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb08	obj/kernel.asm	/^c010bb08:	e8 01 46 00 00       	call   c011010e <vfs_rename>$/;"	l
c010bb0d	obj/kernel.asm	/^c010bb0d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bb10	obj/kernel.asm	/^c010bb10:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb13	obj/kernel.asm	/^c010bb13:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb16	obj/kernel.asm	/^c010bb16:	e8 df 91 ff ff       	call   c0104cfa <kfree>$/;"	l
c010bb1b	obj/kernel.asm	/^c010bb1b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bb1e	obj/kernel.asm	/^c010bb1e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb21	obj/kernel.asm	/^c010bb21:	e8 d4 91 ff ff       	call   c0104cfa <kfree>$/;"	l
c010bb26	obj/kernel.asm	/^c010bb26:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bb29	obj/kernel.asm	/^c010bb29:	c9                   	leave  $/;"	l
c010bb2a	obj/kernel.asm	/^c010bb2a:	c3                   	ret    $/;"	l
c010bb2b	obj/kernel.asm	/^c010bb2b <sysfile_unlink>:$/;"	l
c010bb2b	obj/kernel.asm	/^c010bb2b:	55                   	push   %ebp$/;"	l
c010bb2c	obj/kernel.asm	/^c010bb2c:	89 e5                	mov    %esp,%ebp$/;"	l
c010bb2e	obj/kernel.asm	/^c010bb2e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010bb31	obj/kernel.asm	/^c010bb31:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb34	obj/kernel.asm	/^c010bb34:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bb38	obj/kernel.asm	/^c010bb38:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010bb3b	obj/kernel.asm	/^c010bb3b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb3e	obj/kernel.asm	/^c010bb3e:	e8 0b fa ff ff       	call   c010b54e <copy_path>$/;"	l
c010bb43	obj/kernel.asm	/^c010bb43:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bb46	obj/kernel.asm	/^c010bb46:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bb4a	obj/kernel.asm	/^c010bb4a:	74 05                	je     c010bb51 <sysfile_unlink+0x26>$/;"	l
c010bb4c	obj/kernel.asm	/^c010bb4c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bb4f	obj/kernel.asm	/^c010bb4f:	eb 1c                	jmp    c010bb6d <sysfile_unlink+0x42>$/;"	l
c010bb51	obj/kernel.asm	/^c010bb51:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb54	obj/kernel.asm	/^c010bb54:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb57	obj/kernel.asm	/^c010bb57:	e8 a8 45 00 00       	call   c0110104 <vfs_unlink>$/;"	l
c010bb5c	obj/kernel.asm	/^c010bb5c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bb5f	obj/kernel.asm	/^c010bb5f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb62	obj/kernel.asm	/^c010bb62:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb65	obj/kernel.asm	/^c010bb65:	e8 90 91 ff ff       	call   c0104cfa <kfree>$/;"	l
c010bb6a	obj/kernel.asm	/^c010bb6a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bb6d	obj/kernel.asm	/^c010bb6d:	c9                   	leave  $/;"	l
c010bb6e	obj/kernel.asm	/^c010bb6e:	c3                   	ret    $/;"	l
c010bb6f	obj/kernel.asm	/^c010bb6f <sysfile_getcwd>:$/;"	l
c010bb6f	obj/kernel.asm	/^c010bb6f:	55                   	push   %ebp$/;"	l
c010bb70	obj/kernel.asm	/^c010bb70:	89 e5                	mov    %esp,%ebp$/;"	l
c010bb72	obj/kernel.asm	/^c010bb72:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010bb75	obj/kernel.asm	/^c010bb75:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010bb7a	obj/kernel.asm	/^c010bb7a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010bb7d	obj/kernel.asm	/^c010bb7d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bb80	obj/kernel.asm	/^c010bb80:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010bb84	obj/kernel.asm	/^c010bb84:	75 07                	jne    c010bb8d <sysfile_getcwd+0x1e>$/;"	l
c010bb86	obj/kernel.asm	/^c010bb86:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010bb8b	obj/kernel.asm	/^c010bb8b:	eb 77                	jmp    c010bc04 <sysfile_getcwd+0x95>$/;"	l
c010bb8d	obj/kernel.asm	/^c010bb8d:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010bb94	obj/kernel.asm	/^c010bb94:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb97	obj/kernel.asm	/^c010bb97:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb9a	obj/kernel.asm	/^c010bb9a:	e8 56 f9 ff ff       	call   c010b4f5 <lock_mm>$/;"	l
c010bb9f	obj/kernel.asm	/^c010bb9f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bba2	obj/kernel.asm	/^c010bba2:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c010bba9	obj/kernel.asm	/^c010bba9:	00 $/;"	l
c010bbaa	obj/kernel.asm	/^c010bbaa:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010bbad	obj/kernel.asm	/^c010bbad:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010bbb1	obj/kernel.asm	/^c010bbb1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bbb5	obj/kernel.asm	/^c010bbb5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bbb8	obj/kernel.asm	/^c010bbb8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bbbb	obj/kernel.asm	/^c010bbbb:	e8 8f d4 ff ff       	call   c010904f <user_mem_check>$/;"	l
c010bbc0	obj/kernel.asm	/^c010bbc0:	85 c0                	test   %eax,%eax$/;"	l
c010bbc2	obj/kernel.asm	/^c010bbc2:	74 32                	je     c010bbf6 <sysfile_getcwd+0x87>$/;"	l
c010bbc4	obj/kernel.asm	/^c010bbc4:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010bbcb	obj/kernel.asm	/^c010bbcb:	00 $/;"	l
c010bbcc	obj/kernel.asm	/^c010bbcc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bbcf	obj/kernel.asm	/^c010bbcf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010bbd3	obj/kernel.asm	/^c010bbd3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bbd6	obj/kernel.asm	/^c010bbd6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bbda	obj/kernel.asm	/^c010bbda:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010bbdd	obj/kernel.asm	/^c010bbdd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bbe0	obj/kernel.asm	/^c010bbe0:	e8 61 f7 ff ff       	call   c010b346 <iobuf_init>$/;"	l
c010bbe5	obj/kernel.asm	/^c010bbe5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bbe8	obj/kernel.asm	/^c010bbe8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bbeb	obj/kernel.asm	/^c010bbeb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bbee	obj/kernel.asm	/^c010bbee:	e8 e3 49 00 00       	call   c01105d6 <vfs_getcwd>$/;"	l
c010bbf3	obj/kernel.asm	/^c010bbf3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bbf6	obj/kernel.asm	/^c010bbf6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bbf9	obj/kernel.asm	/^c010bbf9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bbfc	obj/kernel.asm	/^c010bbfc:	e8 27 f9 ff ff       	call   c010b528 <unlock_mm>$/;"	l
c010bc01	obj/kernel.asm	/^c010bc01:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bc04	obj/kernel.asm	/^c010bc04:	c9                   	leave  $/;"	l
c010bc05	obj/kernel.asm	/^c010bc05:	c3                   	ret    $/;"	l
c010bc06	obj/kernel.asm	/^c010bc06 <sysfile_getdirentry>:$/;"	l
c010bc06	obj/kernel.asm	/^c010bc06:	55                   	push   %ebp$/;"	l
c010bc07	obj/kernel.asm	/^c010bc07:	89 e5                	mov    %esp,%ebp$/;"	l
c010bc09	obj/kernel.asm	/^c010bc09:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010bc0c	obj/kernel.asm	/^c010bc0c:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010bc11	obj/kernel.asm	/^c010bc11:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010bc14	obj/kernel.asm	/^c010bc14:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bc17	obj/kernel.asm	/^c010bc17:	c7 04 24 04 01 00 00 	movl   $0x104,(%esp)$/;"	l
c010bc1e	obj/kernel.asm	/^c010bc1e:	e8 bc 90 ff ff       	call   c0104cdf <kmalloc>$/;"	l
c010bc23	obj/kernel.asm	/^c010bc23:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bc26	obj/kernel.asm	/^c010bc26:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010bc2a	obj/kernel.asm	/^c010bc2a:	75 0a                	jne    c010bc36 <sysfile_getdirentry+0x30>$/;"	l
c010bc2c	obj/kernel.asm	/^c010bc2c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010bc31	obj/kernel.asm	/^c010bc31:	e9 c2 00 00 00       	jmp    c010bcf8 <sysfile_getdirentry+0xf2>$/;"	l
c010bc36	obj/kernel.asm	/^c010bc36:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010bc3d	obj/kernel.asm	/^c010bc3d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bc40	obj/kernel.asm	/^c010bc40:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bc43	obj/kernel.asm	/^c010bc43:	e8 ad f8 ff ff       	call   c010b4f5 <lock_mm>$/;"	l
c010bc48	obj/kernel.asm	/^c010bc48:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010bc4b	obj/kernel.asm	/^c010bc4b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bc4e	obj/kernel.asm	/^c010bc4e:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c010bc55	obj/kernel.asm	/^c010bc55:	00 $/;"	l
c010bc56	obj/kernel.asm	/^c010bc56:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
c010bc5d	obj/kernel.asm	/^c010bc5d:	00 $/;"	l
c010bc5e	obj/kernel.asm	/^c010bc5e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010bc62	obj/kernel.asm	/^c010bc62:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bc66	obj/kernel.asm	/^c010bc66:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bc69	obj/kernel.asm	/^c010bc69:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bc6c	obj/kernel.asm	/^c010bc6c:	e8 dc c9 ff ff       	call   c010864d <copy_from_user>$/;"	l
c010bc71	obj/kernel.asm	/^c010bc71:	85 c0                	test   %eax,%eax$/;"	l
c010bc73	obj/kernel.asm	/^c010bc73:	75 07                	jne    c010bc7c <sysfile_getdirentry+0x76>$/;"	l
c010bc75	obj/kernel.asm	/^c010bc75:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010bc7c	obj/kernel.asm	/^c010bc7c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bc7f	obj/kernel.asm	/^c010bc7f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bc82	obj/kernel.asm	/^c010bc82:	e8 a1 f8 ff ff       	call   c010b528 <unlock_mm>$/;"	l
c010bc87	obj/kernel.asm	/^c010bc87:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bc8b	obj/kernel.asm	/^c010bc8b:	75 5d                	jne    c010bcea <sysfile_getdirentry+0xe4>$/;"	l
c010bc8d	obj/kernel.asm	/^c010bc8d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bc90	obj/kernel.asm	/^c010bc90:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bc94	obj/kernel.asm	/^c010bc94:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc97	obj/kernel.asm	/^c010bc97:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bc9a	obj/kernel.asm	/^c010bc9a:	e8 40 f2 ff ff       	call   c010aedf <file_getdirentry>$/;"	l
c010bc9f	obj/kernel.asm	/^c010bc9f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bca2	obj/kernel.asm	/^c010bca2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bca6	obj/kernel.asm	/^c010bca6:	75 42                	jne    c010bcea <sysfile_getdirentry+0xe4>$/;"	l
c010bca8	obj/kernel.asm	/^c010bca8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bcab	obj/kernel.asm	/^c010bcab:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bcae	obj/kernel.asm	/^c010bcae:	e8 42 f8 ff ff       	call   c010b4f5 <lock_mm>$/;"	l
c010bcb3	obj/kernel.asm	/^c010bcb3:	c7 44 24 0c 04 01 00 	movl   $0x104,0xc(%esp)$/;"	l
c010bcba	obj/kernel.asm	/^c010bcba:	00 $/;"	l
c010bcbb	obj/kernel.asm	/^c010bcbb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bcbe	obj/kernel.asm	/^c010bcbe:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010bcc2	obj/kernel.asm	/^c010bcc2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bcc5	obj/kernel.asm	/^c010bcc5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bcc9	obj/kernel.asm	/^c010bcc9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bccc	obj/kernel.asm	/^c010bccc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bccf	obj/kernel.asm	/^c010bccf:	e8 ca c9 ff ff       	call   c010869e <copy_to_user>$/;"	l
c010bcd4	obj/kernel.asm	/^c010bcd4:	85 c0                	test   %eax,%eax$/;"	l
c010bcd6	obj/kernel.asm	/^c010bcd6:	75 07                	jne    c010bcdf <sysfile_getdirentry+0xd9>$/;"	l
c010bcd8	obj/kernel.asm	/^c010bcd8:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010bcdf	obj/kernel.asm	/^c010bcdf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bce2	obj/kernel.asm	/^c010bce2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bce5	obj/kernel.asm	/^c010bce5:	e8 3e f8 ff ff       	call   c010b528 <unlock_mm>$/;"	l
c010bcea	obj/kernel.asm	/^c010bcea:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bced	obj/kernel.asm	/^c010bced:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bcf0	obj/kernel.asm	/^c010bcf0:	e8 05 90 ff ff       	call   c0104cfa <kfree>$/;"	l
c010bcf5	obj/kernel.asm	/^c010bcf5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bcf8	obj/kernel.asm	/^c010bcf8:	c9                   	leave  $/;"	l
c010bcf9	obj/kernel.asm	/^c010bcf9:	c3                   	ret    $/;"	l
c010bcfa	obj/kernel.asm	/^c010bcfa <sysfile_dup>:$/;"	l
c010bcfa	obj/kernel.asm	/^c010bcfa:	55                   	push   %ebp$/;"	l
c010bcfb	obj/kernel.asm	/^c010bcfb:	89 e5                	mov    %esp,%ebp$/;"	l
c010bcfd	obj/kernel.asm	/^c010bcfd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bd00	obj/kernel.asm	/^c010bd00:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bd03	obj/kernel.asm	/^c010bd03:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bd07	obj/kernel.asm	/^c010bd07:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd0a	obj/kernel.asm	/^c010bd0a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bd0d	obj/kernel.asm	/^c010bd0d:	e8 db f2 ff ff       	call   c010afed <file_dup>$/;"	l
c010bd12	obj/kernel.asm	/^c010bd12:	c9                   	leave  $/;"	l
c010bd13	obj/kernel.asm	/^c010bd13:	c3                   	ret    $/;"	l
c010bd14	obj/kernel.asm	/^c010bd14 <sysfile_pipe>:$/;"	l
c010bd14	obj/kernel.asm	/^c010bd14:	55                   	push   %ebp$/;"	l
c010bd15	obj/kernel.asm	/^c010bd15:	89 e5                	mov    %esp,%ebp$/;"	l
c010bd17	obj/kernel.asm	/^c010bd17:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010bd1c	obj/kernel.asm	/^c010bd1c:	5d                   	pop    %ebp$/;"	l
c010bd1d	obj/kernel.asm	/^c010bd1d:	c3                   	ret    $/;"	l
c010bd1e	obj/kernel.asm	/^c010bd1e <sysfile_mkfifo>:$/;"	l
c010bd1e	obj/kernel.asm	/^c010bd1e:	55                   	push   %ebp$/;"	l
c010bd1f	obj/kernel.asm	/^c010bd1f:	89 e5                	mov    %esp,%ebp$/;"	l
c010bd21	obj/kernel.asm	/^c010bd21:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010bd26	obj/kernel.asm	/^c010bd26:	5d                   	pop    %ebp$/;"	l
c010bd27	obj/kernel.asm	/^c010bd27:	c3                   	ret    $/;"	l
c010bd28	obj/kernel.asm	/^c010bd28 <kernel_thread_entry>:$/;"	l
c010bd28	obj/kernel.asm	/^c010bd28:	52                   	push   %edx$/;"	l
c010bd29	obj/kernel.asm	/^c010bd29:	ff d3                	call   *%ebx$/;"	l
c010bd2b	obj/kernel.asm	/^c010bd2b:	50                   	push   %eax$/;"	l
c010bd2c	obj/kernel.asm	/^c010bd2c:	e8 2e 0e 00 00       	call   c010cb5f <do_exit>$/;"	l
c010bd31	obj/kernel.asm	/^c010bd31 <timer_init>:$/;"	l
c010bd31	obj/kernel.asm	/^c010bd31:	55                   	push   %ebp$/;"	l
c010bd32	obj/kernel.asm	/^c010bd32:	89 e5                	mov    %esp,%ebp$/;"	l
c010bd34	obj/kernel.asm	/^c010bd34:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010bd37	obj/kernel.asm	/^c010bd37:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010bd3a	obj/kernel.asm	/^c010bd3a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd3d	obj/kernel.asm	/^c010bd3d:	89 10                	mov    %edx,(%eax)$/;"	l
c010bd3f	obj/kernel.asm	/^c010bd3f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd42	obj/kernel.asm	/^c010bd42:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010bd45	obj/kernel.asm	/^c010bd45:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bd48	obj/kernel.asm	/^c010bd48:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd4b	obj/kernel.asm	/^c010bd4b:	83 c0 08             	add    $0x8,%eax$/;"	l
c010bd4e	obj/kernel.asm	/^c010bd4e:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010bd51	obj/kernel.asm	/^c010bd51:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bd54	obj/kernel.asm	/^c010bd54:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010bd57	obj/kernel.asm	/^c010bd57:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bd5a	obj/kernel.asm	/^c010bd5a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bd5d	obj/kernel.asm	/^c010bd5d:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010bd60	obj/kernel.asm	/^c010bd60:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bd63	obj/kernel.asm	/^c010bd63:	89 10                	mov    %edx,(%eax)$/;"	l
c010bd65	obj/kernel.asm	/^c010bd65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd68	obj/kernel.asm	/^c010bd68:	c9                   	leave  $/;"	l
c010bd69	obj/kernel.asm	/^c010bd69:	c3                   	ret    $/;"	l
c010bd6a	obj/kernel.asm	/^c010bd6a <__intr_save>:$/;"	l
c010bd6a	obj/kernel.asm	/^c010bd6a:	55                   	push   %ebp$/;"	l
c010bd6b	obj/kernel.asm	/^c010bd6b:	89 e5                	mov    %esp,%ebp$/;"	l
c010bd6d	obj/kernel.asm	/^c010bd6d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bd70	obj/kernel.asm	/^c010bd70:	9c                   	pushf  $/;"	l
c010bd71	obj/kernel.asm	/^c010bd71:	58                   	pop    %eax$/;"	l
c010bd72	obj/kernel.asm	/^c010bd72:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bd75	obj/kernel.asm	/^c010bd75:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bd78	obj/kernel.asm	/^c010bd78:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010bd7d	obj/kernel.asm	/^c010bd7d:	85 c0                	test   %eax,%eax$/;"	l
c010bd7f	obj/kernel.asm	/^c010bd7f:	74 0c                	je     c010bd8d <__intr_save+0x23>$/;"	l
c010bd81	obj/kernel.asm	/^c010bd81:	e8 a4 63 ff ff       	call   c010212a <intr_disable>$/;"	l
c010bd86	obj/kernel.asm	/^c010bd86:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010bd8b	obj/kernel.asm	/^c010bd8b:	eb 05                	jmp    c010bd92 <__intr_save+0x28>$/;"	l
c010bd8d	obj/kernel.asm	/^c010bd8d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bd92	obj/kernel.asm	/^c010bd92:	c9                   	leave  $/;"	l
c010bd93	obj/kernel.asm	/^c010bd93:	c3                   	ret    $/;"	l
c010bd94	obj/kernel.asm	/^c010bd94 <__intr_restore>:$/;"	l
c010bd94	obj/kernel.asm	/^c010bd94:	55                   	push   %ebp$/;"	l
c010bd95	obj/kernel.asm	/^c010bd95:	89 e5                	mov    %esp,%ebp$/;"	l
c010bd97	obj/kernel.asm	/^c010bd97:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bd9a	obj/kernel.asm	/^c010bd9a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010bd9e	obj/kernel.asm	/^c010bd9e:	74 05                	je     c010bda5 <__intr_restore+0x11>$/;"	l
c010bda0	obj/kernel.asm	/^c010bda0:	e8 7f 63 ff ff       	call   c0102124 <intr_enable>$/;"	l
c010bda5	obj/kernel.asm	/^c010bda5:	c9                   	leave  $/;"	l
c010bda6	obj/kernel.asm	/^c010bda6:	c3                   	ret    $/;"	l
c010bda7	obj/kernel.asm	/^c010bda7 <page2ppn>:$/;"	l
c010bda7	obj/kernel.asm	/^c010bda7:	55                   	push   %ebp$/;"	l
c010bda8	obj/kernel.asm	/^c010bda8:	89 e5                	mov    %esp,%ebp$/;"	l
c010bdaa	obj/kernel.asm	/^c010bdaa:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010bdad	obj/kernel.asm	/^c010bdad:	a1 28 40 15 c0       	mov    0xc0154028,%eax$/;"	l
c010bdb2	obj/kernel.asm	/^c010bdb2:	29 c2                	sub    %eax,%edx$/;"	l
c010bdb4	obj/kernel.asm	/^c010bdb4:	89 d0                	mov    %edx,%eax$/;"	l
c010bdb6	obj/kernel.asm	/^c010bdb6:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c010bdb9	obj/kernel.asm	/^c010bdb9:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c010bdbf	obj/kernel.asm	/^c010bdbf:	5d                   	pop    %ebp$/;"	l
c010bdc0	obj/kernel.asm	/^c010bdc0:	c3                   	ret    $/;"	l
c010bdc1	obj/kernel.asm	/^c010bdc1 <page2pa>:$/;"	l
c010bdc1	obj/kernel.asm	/^c010bdc1:	55                   	push   %ebp$/;"	l
c010bdc2	obj/kernel.asm	/^c010bdc2:	89 e5                	mov    %esp,%ebp$/;"	l
c010bdc4	obj/kernel.asm	/^c010bdc4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010bdc7	obj/kernel.asm	/^c010bdc7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bdca	obj/kernel.asm	/^c010bdca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bdcd	obj/kernel.asm	/^c010bdcd:	e8 d5 ff ff ff       	call   c010bda7 <page2ppn>$/;"	l
c010bdd2	obj/kernel.asm	/^c010bdd2:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010bdd5	obj/kernel.asm	/^c010bdd5:	c9                   	leave  $/;"	l
c010bdd6	obj/kernel.asm	/^c010bdd6:	c3                   	ret    $/;"	l
c010bdd7	obj/kernel.asm	/^c010bdd7 <pa2page>:$/;"	l
c010bdd7	obj/kernel.asm	/^c010bdd7:	55                   	push   %ebp$/;"	l
c010bdd8	obj/kernel.asm	/^c010bdd8:	89 e5                	mov    %esp,%ebp$/;"	l
c010bdda	obj/kernel.asm	/^c010bdda:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bddd	obj/kernel.asm	/^c010bddd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bde0	obj/kernel.asm	/^c010bde0:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010bde3	obj/kernel.asm	/^c010bde3:	89 c2                	mov    %eax,%edx$/;"	l
c010bde5	obj/kernel.asm	/^c010bde5:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c010bdea	obj/kernel.asm	/^c010bdea:	39 c2                	cmp    %eax,%edx$/;"	l
c010bdec	obj/kernel.asm	/^c010bdec:	72 1c                	jb     c010be0a <pa2page+0x33>$/;"	l
c010bdee	obj/kernel.asm	/^c010bdee:	c7 44 24 08 e8 7f 11 	movl   $0xc0117fe8,0x8(%esp)$/;"	l
c010bdf5	obj/kernel.asm	/^c010bdf5:	c0 $/;"	l
c010bdf6	obj/kernel.asm	/^c010bdf6:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c010bdfd	obj/kernel.asm	/^c010bdfd:	00 $/;"	l
c010bdfe	obj/kernel.asm	/^c010bdfe:	c7 04 24 07 80 11 c0 	movl   $0xc0118007,(%esp)$/;"	l
c010be05	obj/kernel.asm	/^c010be05:	e8 be 50 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010be0a	obj/kernel.asm	/^c010be0a:	8b 0d 28 40 15 c0    	mov    0xc0154028,%ecx$/;"	l
c010be10	obj/kernel.asm	/^c010be10:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be13	obj/kernel.asm	/^c010be13:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010be16	obj/kernel.asm	/^c010be16:	89 c2                	mov    %eax,%edx$/;"	l
c010be18	obj/kernel.asm	/^c010be18:	89 d0                	mov    %edx,%eax$/;"	l
c010be1a	obj/kernel.asm	/^c010be1a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010be1d	obj/kernel.asm	/^c010be1d:	01 d0                	add    %edx,%eax$/;"	l
c010be1f	obj/kernel.asm	/^c010be1f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010be22	obj/kernel.asm	/^c010be22:	01 c8                	add    %ecx,%eax$/;"	l
c010be24	obj/kernel.asm	/^c010be24:	c9                   	leave  $/;"	l
c010be25	obj/kernel.asm	/^c010be25:	c3                   	ret    $/;"	l
c010be26	obj/kernel.asm	/^c010be26 <page2kva>:$/;"	l
c010be26	obj/kernel.asm	/^c010be26:	55                   	push   %ebp$/;"	l
c010be27	obj/kernel.asm	/^c010be27:	89 e5                	mov    %esp,%ebp$/;"	l
c010be29	obj/kernel.asm	/^c010be29:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010be2c	obj/kernel.asm	/^c010be2c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be2f	obj/kernel.asm	/^c010be2f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010be32	obj/kernel.asm	/^c010be32:	e8 8a ff ff ff       	call   c010bdc1 <page2pa>$/;"	l
c010be37	obj/kernel.asm	/^c010be37:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010be3a	obj/kernel.asm	/^c010be3a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010be3d	obj/kernel.asm	/^c010be3d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010be40	obj/kernel.asm	/^c010be40:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010be43	obj/kernel.asm	/^c010be43:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c010be48	obj/kernel.asm	/^c010be48:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010be4b	obj/kernel.asm	/^c010be4b:	72 23                	jb     c010be70 <page2kva+0x4a>$/;"	l
c010be4d	obj/kernel.asm	/^c010be4d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010be50	obj/kernel.asm	/^c010be50:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010be54	obj/kernel.asm	/^c010be54:	c7 44 24 08 18 80 11 	movl   $0xc0118018,0x8(%esp)$/;"	l
c010be5b	obj/kernel.asm	/^c010be5b:	c0 $/;"	l
c010be5c	obj/kernel.asm	/^c010be5c:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c010be63	obj/kernel.asm	/^c010be63:	00 $/;"	l
c010be64	obj/kernel.asm	/^c010be64:	c7 04 24 07 80 11 c0 	movl   $0xc0118007,(%esp)$/;"	l
c010be6b	obj/kernel.asm	/^c010be6b:	e8 58 50 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010be70	obj/kernel.asm	/^c010be70:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010be73	obj/kernel.asm	/^c010be73:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010be78	obj/kernel.asm	/^c010be78:	c9                   	leave  $/;"	l
c010be79	obj/kernel.asm	/^c010be79:	c3                   	ret    $/;"	l
c010be7a	obj/kernel.asm	/^c010be7a <kva2page>:$/;"	l
c010be7a	obj/kernel.asm	/^c010be7a:	55                   	push   %ebp$/;"	l
c010be7b	obj/kernel.asm	/^c010be7b:	89 e5                	mov    %esp,%ebp$/;"	l
c010be7d	obj/kernel.asm	/^c010be7d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010be80	obj/kernel.asm	/^c010be80:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be83	obj/kernel.asm	/^c010be83:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010be86	obj/kernel.asm	/^c010be86:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c010be8d	obj/kernel.asm	/^c010be8d:	77 23                	ja     c010beb2 <kva2page+0x38>$/;"	l
c010be8f	obj/kernel.asm	/^c010be8f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010be92	obj/kernel.asm	/^c010be92:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010be96	obj/kernel.asm	/^c010be96:	c7 44 24 08 3c 80 11 	movl   $0xc011803c,0x8(%esp)$/;"	l
c010be9d	obj/kernel.asm	/^c010be9d:	c0 $/;"	l
c010be9e	obj/kernel.asm	/^c010be9e:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c010bea5	obj/kernel.asm	/^c010bea5:	00 $/;"	l
c010bea6	obj/kernel.asm	/^c010bea6:	c7 04 24 07 80 11 c0 	movl   $0xc0118007,(%esp)$/;"	l
c010bead	obj/kernel.asm	/^c010bead:	e8 16 50 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010beb2	obj/kernel.asm	/^c010beb2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010beb5	obj/kernel.asm	/^c010beb5:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010beba	obj/kernel.asm	/^c010beba:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bebd	obj/kernel.asm	/^c010bebd:	e8 15 ff ff ff       	call   c010bdd7 <pa2page>$/;"	l
c010bec2	obj/kernel.asm	/^c010bec2:	c9                   	leave  $/;"	l
c010bec3	obj/kernel.asm	/^c010bec3:	c3                   	ret    $/;"	l
c010bec4	obj/kernel.asm	/^c010bec4 <mm_count_inc>:$/;"	l
c010bec4	obj/kernel.asm	/^c010bec4:	55                   	push   %ebp$/;"	l
c010bec5	obj/kernel.asm	/^c010bec5:	89 e5                	mov    %esp,%ebp$/;"	l
c010bec7	obj/kernel.asm	/^c010bec7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010beca	obj/kernel.asm	/^c010beca:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010becd	obj/kernel.asm	/^c010becd:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010bed0	obj/kernel.asm	/^c010bed0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bed3	obj/kernel.asm	/^c010bed3:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010bed6	obj/kernel.asm	/^c010bed6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bed9	obj/kernel.asm	/^c010bed9:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010bedc	obj/kernel.asm	/^c010bedc:	5d                   	pop    %ebp$/;"	l
c010bedd	obj/kernel.asm	/^c010bedd:	c3                   	ret    $/;"	l
c010bede	obj/kernel.asm	/^c010bede <mm_count_dec>:$/;"	l
c010bede	obj/kernel.asm	/^c010bede:	55                   	push   %ebp$/;"	l
c010bedf	obj/kernel.asm	/^c010bedf:	89 e5                	mov    %esp,%ebp$/;"	l
c010bee1	obj/kernel.asm	/^c010bee1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bee4	obj/kernel.asm	/^c010bee4:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010bee7	obj/kernel.asm	/^c010bee7:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010beea	obj/kernel.asm	/^c010beea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010beed	obj/kernel.asm	/^c010beed:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010bef0	obj/kernel.asm	/^c010bef0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bef3	obj/kernel.asm	/^c010bef3:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010bef6	obj/kernel.asm	/^c010bef6:	5d                   	pop    %ebp$/;"	l
c010bef7	obj/kernel.asm	/^c010bef7:	c3                   	ret    $/;"	l
c010bef8	obj/kernel.asm	/^c010bef8 <lock_mm>:$/;"	l
c010bef8	obj/kernel.asm	/^c010bef8:	55                   	push   %ebp$/;"	l
c010bef9	obj/kernel.asm	/^c010bef9:	89 e5                	mov    %esp,%ebp$/;"	l
c010befb	obj/kernel.asm	/^c010befb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010befe	obj/kernel.asm	/^c010befe:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010bf02	obj/kernel.asm	/^c010bf02:	74 25                	je     c010bf29 <lock_mm+0x31>$/;"	l
c010bf04	obj/kernel.asm	/^c010bf04:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf07	obj/kernel.asm	/^c010bf07:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010bf0a	obj/kernel.asm	/^c010bf0a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bf0d	obj/kernel.asm	/^c010bf0d:	e8 ed dd ff ff       	call   c0109cff <down>$/;"	l
c010bf12	obj/kernel.asm	/^c010bf12:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010bf17	obj/kernel.asm	/^c010bf17:	85 c0                	test   %eax,%eax$/;"	l
c010bf19	obj/kernel.asm	/^c010bf19:	74 0e                	je     c010bf29 <lock_mm+0x31>$/;"	l
c010bf1b	obj/kernel.asm	/^c010bf1b:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010bf20	obj/kernel.asm	/^c010bf20:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010bf23	obj/kernel.asm	/^c010bf23:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf26	obj/kernel.asm	/^c010bf26:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c010bf29	obj/kernel.asm	/^c010bf29:	c9                   	leave  $/;"	l
c010bf2a	obj/kernel.asm	/^c010bf2a:	c3                   	ret    $/;"	l
c010bf2b	obj/kernel.asm	/^c010bf2b <unlock_mm>:$/;"	l
c010bf2b	obj/kernel.asm	/^c010bf2b:	55                   	push   %ebp$/;"	l
c010bf2c	obj/kernel.asm	/^c010bf2c:	89 e5                	mov    %esp,%ebp$/;"	l
c010bf2e	obj/kernel.asm	/^c010bf2e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bf31	obj/kernel.asm	/^c010bf31:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010bf35	obj/kernel.asm	/^c010bf35:	74 18                	je     c010bf4f <unlock_mm+0x24>$/;"	l
c010bf37	obj/kernel.asm	/^c010bf37:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf3a	obj/kernel.asm	/^c010bf3a:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010bf3d	obj/kernel.asm	/^c010bf3d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bf40	obj/kernel.asm	/^c010bf40:	e8 9f dd ff ff       	call   c0109ce4 <up>$/;"	l
c010bf45	obj/kernel.asm	/^c010bf45:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf48	obj/kernel.asm	/^c010bf48:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)$/;"	l
c010bf4f	obj/kernel.asm	/^c010bf4f:	c9                   	leave  $/;"	l
c010bf50	obj/kernel.asm	/^c010bf50:	c3                   	ret    $/;"	l
c010bf51	obj/kernel.asm	/^c010bf51 <files_count_inc>:$/;"	l
c010bf51	obj/kernel.asm	/^c010bf51:	55                   	push   %ebp$/;"	l
c010bf52	obj/kernel.asm	/^c010bf52:	89 e5                	mov    %esp,%ebp$/;"	l
c010bf54	obj/kernel.asm	/^c010bf54:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf57	obj/kernel.asm	/^c010bf57:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010bf5a	obj/kernel.asm	/^c010bf5a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010bf5d	obj/kernel.asm	/^c010bf5d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf60	obj/kernel.asm	/^c010bf60:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010bf63	obj/kernel.asm	/^c010bf63:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf66	obj/kernel.asm	/^c010bf66:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010bf69	obj/kernel.asm	/^c010bf69:	5d                   	pop    %ebp$/;"	l
c010bf6a	obj/kernel.asm	/^c010bf6a:	c3                   	ret    $/;"	l
c010bf6b	obj/kernel.asm	/^c010bf6b <files_count_dec>:$/;"	l
c010bf6b	obj/kernel.asm	/^c010bf6b:	55                   	push   %ebp$/;"	l
c010bf6c	obj/kernel.asm	/^c010bf6c:	89 e5                	mov    %esp,%ebp$/;"	l
c010bf6e	obj/kernel.asm	/^c010bf6e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf71	obj/kernel.asm	/^c010bf71:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010bf74	obj/kernel.asm	/^c010bf74:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010bf77	obj/kernel.asm	/^c010bf77:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf7a	obj/kernel.asm	/^c010bf7a:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010bf7d	obj/kernel.asm	/^c010bf7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf80	obj/kernel.asm	/^c010bf80:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010bf83	obj/kernel.asm	/^c010bf83:	5d                   	pop    %ebp$/;"	l
c010bf84	obj/kernel.asm	/^c010bf84:	c3                   	ret    $/;"	l
c010bf85	obj/kernel.asm	/^c010bf85 <alloc_proc>:$/;"	l
c010bf85	obj/kernel.asm	/^c010bf85:	55                   	push   %ebp$/;"	l
c010bf86	obj/kernel.asm	/^c010bf86:	89 e5                	mov    %esp,%ebp$/;"	l
c010bf88	obj/kernel.asm	/^c010bf88:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010bf8b	obj/kernel.asm	/^c010bf8b:	c7 04 24 c8 00 00 00 	movl   $0xc8,(%esp)$/;"	l
c010bf92	obj/kernel.asm	/^c010bf92:	e8 48 8d ff ff       	call   c0104cdf <kmalloc>$/;"	l
c010bf97	obj/kernel.asm	/^c010bf97:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bf9a	obj/kernel.asm	/^c010bf9a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bf9e	obj/kernel.asm	/^c010bf9e:	0f 84 70 01 00 00    	je     c010c114 <alloc_proc+0x18f>$/;"	l
c010bfa4	obj/kernel.asm	/^c010bfa4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfa7	obj/kernel.asm	/^c010bfa7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010bfad	obj/kernel.asm	/^c010bfad:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfb0	obj/kernel.asm	/^c010bfb0:	c7 40 04 ff ff ff ff 	movl   $0xffffffff,0x4(%eax)$/;"	l
c010bfb7	obj/kernel.asm	/^c010bfb7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfba	obj/kernel.asm	/^c010bfba:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010bfc1	obj/kernel.asm	/^c010bfc1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfc4	obj/kernel.asm	/^c010bfc4:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c010bfcb	obj/kernel.asm	/^c010bfcb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfce	obj/kernel.asm	/^c010bfce:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010bfd5	obj/kernel.asm	/^c010bfd5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfd8	obj/kernel.asm	/^c010bfd8:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010bfdf	obj/kernel.asm	/^c010bfdf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfe2	obj/kernel.asm	/^c010bfe2:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010bfe9	obj/kernel.asm	/^c010bfe9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfec	obj/kernel.asm	/^c010bfec:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010bfef	obj/kernel.asm	/^c010bfef:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%esp)$/;"	l
c010bff6	obj/kernel.asm	/^c010bff6:	00 $/;"	l
c010bff7	obj/kernel.asm	/^c010bff7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010bffe	obj/kernel.asm	/^c010bffe:	00 $/;"	l
c010bfff	obj/kernel.asm	/^c010bfff:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c002	obj/kernel.asm	/^c010c002:	e8 69 95 00 00       	call   c0115570 <memset>$/;"	l
c010c007	obj/kernel.asm	/^c010c007:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c00a	obj/kernel.asm	/^c010c00a:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)$/;"	l
c010c011	obj/kernel.asm	/^c010c011:	8b 15 24 40 15 c0    	mov    0xc0154024,%edx$/;"	l
c010c017	obj/kernel.asm	/^c010c017:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c01a	obj/kernel.asm	/^c010c01a:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010c01d	obj/kernel.asm	/^c010c01d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c020	obj/kernel.asm	/^c010c020:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)$/;"	l
c010c027	obj/kernel.asm	/^c010c027:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c02a	obj/kernel.asm	/^c010c02a:	83 c0 48             	add    $0x48,%eax$/;"	l
c010c02d	obj/kernel.asm	/^c010c02d:	c7 44 24 08 32 00 00 	movl   $0x32,0x8(%esp)$/;"	l
c010c034	obj/kernel.asm	/^c010c034:	00 $/;"	l
c010c035	obj/kernel.asm	/^c010c035:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010c03c	obj/kernel.asm	/^c010c03c:	00 $/;"	l
c010c03d	obj/kernel.asm	/^c010c03d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c040	obj/kernel.asm	/^c010c040:	e8 2b 95 00 00       	call   c0115570 <memset>$/;"	l
c010c045	obj/kernel.asm	/^c010c045:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c048	obj/kernel.asm	/^c010c048:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%eax)$/;"	l
c010c04f	obj/kernel.asm	/^c010c04f:	00 00 00 $/;"	l
c010c052	obj/kernel.asm	/^c010c052:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c055	obj/kernel.asm	/^c010c055:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c010c05c	obj/kernel.asm	/^c010c05c:	00 00 00 $/;"	l
c010c05f	obj/kernel.asm	/^c010c05f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c062	obj/kernel.asm	/^c010c062:	8b 90 98 00 00 00    	mov    0x98(%eax),%edx$/;"	l
c010c068	obj/kernel.asm	/^c010c068:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c06b	obj/kernel.asm	/^c010c06b:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010c071	obj/kernel.asm	/^c010c071:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c074	obj/kernel.asm	/^c010c074:	8b 90 9c 00 00 00    	mov    0x9c(%eax),%edx$/;"	l
c010c07a	obj/kernel.asm	/^c010c07a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c07d	obj/kernel.asm	/^c010c07d:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010c083	obj/kernel.asm	/^c010c083:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c086	obj/kernel.asm	/^c010c086:	c7 80 a0 00 00 00 00 	movl   $0x0,0xa0(%eax)$/;"	l
c010c08d	obj/kernel.asm	/^c010c08d:	00 00 00 $/;"	l
c010c090	obj/kernel.asm	/^c010c090:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c093	obj/kernel.asm	/^c010c093:	c7 80 a8 00 00 00 00 	movl   $0x0,0xa8(%eax)$/;"	l
c010c09a	obj/kernel.asm	/^c010c09a:	00 00 00 $/;"	l
c010c09d	obj/kernel.asm	/^c010c09d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c0a0	obj/kernel.asm	/^c010c0a0:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx$/;"	l
c010c0a6	obj/kernel.asm	/^c010c0a6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c0a9	obj/kernel.asm	/^c010c0a9:	89 90 a4 00 00 00    	mov    %edx,0xa4(%eax)$/;"	l
c010c0af	obj/kernel.asm	/^c010c0af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c0b2	obj/kernel.asm	/^c010c0b2:	c7 80 ac 00 00 00 00 	movl   $0x0,0xac(%eax)$/;"	l
c010c0b9	obj/kernel.asm	/^c010c0b9:	00 00 00 $/;"	l
c010c0bc	obj/kernel.asm	/^c010c0bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c0bf	obj/kernel.asm	/^c010c0bf:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)$/;"	l
c010c0c6	obj/kernel.asm	/^c010c0c6:	00 00 00 $/;"	l
c010c0c9	obj/kernel.asm	/^c010c0c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c0cc	obj/kernel.asm	/^c010c0cc:	8b 90 b0 00 00 00    	mov    0xb0(%eax),%edx$/;"	l
c010c0d2	obj/kernel.asm	/^c010c0d2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c0d5	obj/kernel.asm	/^c010c0d5:	89 90 b8 00 00 00    	mov    %edx,0xb8(%eax)$/;"	l
c010c0db	obj/kernel.asm	/^c010c0db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c0de	obj/kernel.asm	/^c010c0de:	8b 90 b8 00 00 00    	mov    0xb8(%eax),%edx$/;"	l
c010c0e4	obj/kernel.asm	/^c010c0e4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c0e7	obj/kernel.asm	/^c010c0e7:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)$/;"	l
c010c0ed	obj/kernel.asm	/^c010c0ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c0f0	obj/kernel.asm	/^c010c0f0:	c7 80 bc 00 00 00 00 	movl   $0x0,0xbc(%eax)$/;"	l
c010c0f7	obj/kernel.asm	/^c010c0f7:	00 00 00 $/;"	l
c010c0fa	obj/kernel.asm	/^c010c0fa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c0fd	obj/kernel.asm	/^c010c0fd:	c7 80 c0 00 00 00 00 	movl   $0x0,0xc0(%eax)$/;"	l
c010c104	obj/kernel.asm	/^c010c104:	00 00 00 $/;"	l
c010c107	obj/kernel.asm	/^c010c107:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c10a	obj/kernel.asm	/^c010c10a:	c7 80 c4 00 00 00 00 	movl   $0x0,0xc4(%eax)$/;"	l
c010c111	obj/kernel.asm	/^c010c111:	00 00 00 $/;"	l
c010c114	obj/kernel.asm	/^c010c114:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c117	obj/kernel.asm	/^c010c117:	c9                   	leave  $/;"	l
c010c118	obj/kernel.asm	/^c010c118:	c3                   	ret    $/;"	l
c010c119	obj/kernel.asm	/^c010c119 <set_proc_name>:$/;"	l
c010c119	obj/kernel.asm	/^c010c119:	55                   	push   %ebp$/;"	l
c010c11a	obj/kernel.asm	/^c010c11a:	89 e5                	mov    %esp,%ebp$/;"	l
c010c11c	obj/kernel.asm	/^c010c11c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c11f	obj/kernel.asm	/^c010c11f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c122	obj/kernel.asm	/^c010c122:	83 c0 48             	add    $0x48,%eax$/;"	l
c010c125	obj/kernel.asm	/^c010c125:	c7 44 24 08 33 00 00 	movl   $0x33,0x8(%esp)$/;"	l
c010c12c	obj/kernel.asm	/^c010c12c:	00 $/;"	l
c010c12d	obj/kernel.asm	/^c010c12d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010c134	obj/kernel.asm	/^c010c134:	00 $/;"	l
c010c135	obj/kernel.asm	/^c010c135:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c138	obj/kernel.asm	/^c010c138:	e8 33 94 00 00       	call   c0115570 <memset>$/;"	l
c010c13d	obj/kernel.asm	/^c010c13d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c140	obj/kernel.asm	/^c010c140:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c010c143	obj/kernel.asm	/^c010c143:	c7 44 24 08 32 00 00 	movl   $0x32,0x8(%esp)$/;"	l
c010c14a	obj/kernel.asm	/^c010c14a:	00 $/;"	l
c010c14b	obj/kernel.asm	/^c010c14b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c14e	obj/kernel.asm	/^c010c14e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c152	obj/kernel.asm	/^c010c152:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010c155	obj/kernel.asm	/^c010c155:	e8 f8 94 00 00       	call   c0115652 <memcpy>$/;"	l
c010c15a	obj/kernel.asm	/^c010c15a:	c9                   	leave  $/;"	l
c010c15b	obj/kernel.asm	/^c010c15b:	c3                   	ret    $/;"	l
c010c15c	obj/kernel.asm	/^c010c15c <get_proc_name>:$/;"	l
c010c15c	obj/kernel.asm	/^c010c15c:	55                   	push   %ebp$/;"	l
c010c15d	obj/kernel.asm	/^c010c15d:	89 e5                	mov    %esp,%ebp$/;"	l
c010c15f	obj/kernel.asm	/^c010c15f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c162	obj/kernel.asm	/^c010c162:	c7 44 24 08 33 00 00 	movl   $0x33,0x8(%esp)$/;"	l
c010c169	obj/kernel.asm	/^c010c169:	00 $/;"	l
c010c16a	obj/kernel.asm	/^c010c16a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010c171	obj/kernel.asm	/^c010c171:	00 $/;"	l
c010c172	obj/kernel.asm	/^c010c172:	c7 04 24 60 2f 15 c0 	movl   $0xc0152f60,(%esp)$/;"	l
c010c179	obj/kernel.asm	/^c010c179:	e8 f2 93 00 00       	call   c0115570 <memset>$/;"	l
c010c17e	obj/kernel.asm	/^c010c17e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c181	obj/kernel.asm	/^c010c181:	83 c0 48             	add    $0x48,%eax$/;"	l
c010c184	obj/kernel.asm	/^c010c184:	c7 44 24 08 32 00 00 	movl   $0x32,0x8(%esp)$/;"	l
c010c18b	obj/kernel.asm	/^c010c18b:	00 $/;"	l
c010c18c	obj/kernel.asm	/^c010c18c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c190	obj/kernel.asm	/^c010c190:	c7 04 24 60 2f 15 c0 	movl   $0xc0152f60,(%esp)$/;"	l
c010c197	obj/kernel.asm	/^c010c197:	e8 b6 94 00 00       	call   c0115652 <memcpy>$/;"	l
c010c19c	obj/kernel.asm	/^c010c19c:	c9                   	leave  $/;"	l
c010c19d	obj/kernel.asm	/^c010c19d:	c3                   	ret    $/;"	l
c010c19e	obj/kernel.asm	/^c010c19e <set_links>:$/;"	l
c010c19e	obj/kernel.asm	/^c010c19e:	55                   	push   %ebp$/;"	l
c010c19f	obj/kernel.asm	/^c010c19f:	89 e5                	mov    %esp,%ebp$/;"	l
c010c1a1	obj/kernel.asm	/^c010c1a1:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010c1a4	obj/kernel.asm	/^c010c1a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1a7	obj/kernel.asm	/^c010c1a7:	83 c0 7c             	add    $0x7c,%eax$/;"	l
c010c1aa	obj/kernel.asm	/^c010c1aa:	c7 45 fc fc 41 15 c0 	movl   $0xc01541fc,-0x4(%ebp)$/;"	l
c010c1b1	obj/kernel.asm	/^c010c1b1:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010c1b4	obj/kernel.asm	/^c010c1b4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c1b7	obj/kernel.asm	/^c010c1b7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c1ba	obj/kernel.asm	/^c010c1ba:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c1bd	obj/kernel.asm	/^c010c1bd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c1c0	obj/kernel.asm	/^c010c1c0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c1c3	obj/kernel.asm	/^c010c1c3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c1c6	obj/kernel.asm	/^c010c1c6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010c1c9	obj/kernel.asm	/^c010c1c9:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010c1cc	obj/kernel.asm	/^c010c1cc:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c1cf	obj/kernel.asm	/^c010c1cf:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010c1d2	obj/kernel.asm	/^c010c1d2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010c1d5	obj/kernel.asm	/^c010c1d5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c1d8	obj/kernel.asm	/^c010c1d8:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010c1db	obj/kernel.asm	/^c010c1db:	89 10                	mov    %edx,(%eax)$/;"	l
c010c1dd	obj/kernel.asm	/^c010c1dd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c1e0	obj/kernel.asm	/^c010c1e0:	8b 10                	mov    (%eax),%edx$/;"	l
c010c1e2	obj/kernel.asm	/^c010c1e2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c1e5	obj/kernel.asm	/^c010c1e5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c1e8	obj/kernel.asm	/^c010c1e8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c1eb	obj/kernel.asm	/^c010c1eb:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010c1ee	obj/kernel.asm	/^c010c1ee:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c1f1	obj/kernel.asm	/^c010c1f1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c1f4	obj/kernel.asm	/^c010c1f4:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010c1f7	obj/kernel.asm	/^c010c1f7:	89 10                	mov    %edx,(%eax)$/;"	l
c010c1f9	obj/kernel.asm	/^c010c1f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1fc	obj/kernel.asm	/^c010c1fc:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c010c203	obj/kernel.asm	/^c010c203:	00 00 00 $/;"	l
c010c206	obj/kernel.asm	/^c010c206:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c209	obj/kernel.asm	/^c010c209:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c20c	obj/kernel.asm	/^c010c20c:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx$/;"	l
c010c212	obj/kernel.asm	/^c010c212:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c215	obj/kernel.asm	/^c010c215:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010c21b	obj/kernel.asm	/^c010c21b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c21e	obj/kernel.asm	/^c010c21e:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010c224	obj/kernel.asm	/^c010c224:	85 c0                	test   %eax,%eax$/;"	l
c010c226	obj/kernel.asm	/^c010c226:	74 12                	je     c010c23a <set_links+0x9c>$/;"	l
c010c228	obj/kernel.asm	/^c010c228:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c22b	obj/kernel.asm	/^c010c22b:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010c231	obj/kernel.asm	/^c010c231:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c234	obj/kernel.asm	/^c010c234:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010c23a	obj/kernel.asm	/^c010c23a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c23d	obj/kernel.asm	/^c010c23d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c240	obj/kernel.asm	/^c010c240:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c243	obj/kernel.asm	/^c010c243:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010c249	obj/kernel.asm	/^c010c249:	a1 40 2f 15 c0       	mov    0xc0152f40,%eax$/;"	l
c010c24e	obj/kernel.asm	/^c010c24e:	83 c0 01             	add    $0x1,%eax$/;"	l
c010c251	obj/kernel.asm	/^c010c251:	a3 40 2f 15 c0       	mov    %eax,0xc0152f40$/;"	l
c010c256	obj/kernel.asm	/^c010c256:	c9                   	leave  $/;"	l
c010c257	obj/kernel.asm	/^c010c257:	c3                   	ret    $/;"	l
c010c258	obj/kernel.asm	/^c010c258 <remove_links>:$/;"	l
c010c258	obj/kernel.asm	/^c010c258:	55                   	push   %ebp$/;"	l
c010c259	obj/kernel.asm	/^c010c259:	89 e5                	mov    %esp,%ebp$/;"	l
c010c25b	obj/kernel.asm	/^c010c25b:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010c25e	obj/kernel.asm	/^c010c25e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c261	obj/kernel.asm	/^c010c261:	83 c0 7c             	add    $0x7c,%eax$/;"	l
c010c264	obj/kernel.asm	/^c010c264:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010c267	obj/kernel.asm	/^c010c267:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c26a	obj/kernel.asm	/^c010c26a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c26d	obj/kernel.asm	/^c010c26d:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010c270	obj/kernel.asm	/^c010c270:	8b 12                	mov    (%edx),%edx$/;"	l
c010c272	obj/kernel.asm	/^c010c272:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010c275	obj/kernel.asm	/^c010c275:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c278	obj/kernel.asm	/^c010c278:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c27b	obj/kernel.asm	/^c010c27b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c27e	obj/kernel.asm	/^c010c27e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c281	obj/kernel.asm	/^c010c281:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c284	obj/kernel.asm	/^c010c284:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010c287	obj/kernel.asm	/^c010c287:	89 10                	mov    %edx,(%eax)$/;"	l
c010c289	obj/kernel.asm	/^c010c289:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c28c	obj/kernel.asm	/^c010c28c:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010c292	obj/kernel.asm	/^c010c292:	85 c0                	test   %eax,%eax$/;"	l
c010c294	obj/kernel.asm	/^c010c294:	74 18                	je     c010c2ae <remove_links+0x56>$/;"	l
c010c296	obj/kernel.asm	/^c010c296:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c299	obj/kernel.asm	/^c010c299:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010c29f	obj/kernel.asm	/^c010c29f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c2a2	obj/kernel.asm	/^c010c2a2:	8b 92 98 00 00 00    	mov    0x98(%edx),%edx$/;"	l
c010c2a8	obj/kernel.asm	/^c010c2a8:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010c2ae	obj/kernel.asm	/^c010c2ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c2b1	obj/kernel.asm	/^c010c2b1:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010c2b7	obj/kernel.asm	/^c010c2b7:	85 c0                	test   %eax,%eax$/;"	l
c010c2b9	obj/kernel.asm	/^c010c2b9:	74 1a                	je     c010c2d5 <remove_links+0x7d>$/;"	l
c010c2bb	obj/kernel.asm	/^c010c2bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c2be	obj/kernel.asm	/^c010c2be:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010c2c4	obj/kernel.asm	/^c010c2c4:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c2c7	obj/kernel.asm	/^c010c2c7:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010c2cd	obj/kernel.asm	/^c010c2cd:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010c2d3	obj/kernel.asm	/^c010c2d3:	eb 15                	jmp    c010c2ea <remove_links+0x92>$/;"	l
c010c2d5	obj/kernel.asm	/^c010c2d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c2d8	obj/kernel.asm	/^c010c2d8:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c2db	obj/kernel.asm	/^c010c2db:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c2de	obj/kernel.asm	/^c010c2de:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010c2e4	obj/kernel.asm	/^c010c2e4:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010c2ea	obj/kernel.asm	/^c010c2ea:	a1 40 2f 15 c0       	mov    0xc0152f40,%eax$/;"	l
c010c2ef	obj/kernel.asm	/^c010c2ef:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010c2f2	obj/kernel.asm	/^c010c2f2:	a3 40 2f 15 c0       	mov    %eax,0xc0152f40$/;"	l
c010c2f7	obj/kernel.asm	/^c010c2f7:	c9                   	leave  $/;"	l
c010c2f8	obj/kernel.asm	/^c010c2f8:	c3                   	ret    $/;"	l
c010c2f9	obj/kernel.asm	/^c010c2f9 <get_pid>:$/;"	l
c010c2f9	obj/kernel.asm	/^c010c2f9:	55                   	push   %ebp$/;"	l
c010c2fa	obj/kernel.asm	/^c010c2fa:	89 e5                	mov    %esp,%ebp$/;"	l
c010c2fc	obj/kernel.asm	/^c010c2fc:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010c2ff	obj/kernel.asm	/^c010c2ff:	c7 45 f8 fc 41 15 c0 	movl   $0xc01541fc,-0x8(%ebp)$/;"	l
c010c306	obj/kernel.asm	/^c010c306:	a1 84 fa 14 c0       	mov    0xc014fa84,%eax$/;"	l
c010c30b	obj/kernel.asm	/^c010c30b:	83 c0 01             	add    $0x1,%eax$/;"	l
c010c30e	obj/kernel.asm	/^c010c30e:	a3 84 fa 14 c0       	mov    %eax,0xc014fa84$/;"	l
c010c313	obj/kernel.asm	/^c010c313:	a1 84 fa 14 c0       	mov    0xc014fa84,%eax$/;"	l
c010c318	obj/kernel.asm	/^c010c318:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c010c31d	obj/kernel.asm	/^c010c31d:	7e 0c                	jle    c010c32b <get_pid+0x32>$/;"	l
c010c31f	obj/kernel.asm	/^c010c31f:	c7 05 84 fa 14 c0 01 	movl   $0x1,0xc014fa84$/;"	l
c010c326	obj/kernel.asm	/^c010c326:	00 00 00 $/;"	l
c010c329	obj/kernel.asm	/^c010c329:	eb 13                	jmp    c010c33e <get_pid+0x45>$/;"	l
c010c32b	obj/kernel.asm	/^c010c32b:	8b 15 84 fa 14 c0    	mov    0xc014fa84,%edx$/;"	l
c010c331	obj/kernel.asm	/^c010c331:	a1 88 fa 14 c0       	mov    0xc014fa88,%eax$/;"	l
c010c336	obj/kernel.asm	/^c010c336:	39 c2                	cmp    %eax,%edx$/;"	l
c010c338	obj/kernel.asm	/^c010c338:	0f 8c ac 00 00 00    	jl     c010c3ea <get_pid+0xf1>$/;"	l
c010c33e	obj/kernel.asm	/^c010c33e:	c7 05 88 fa 14 c0 00 	movl   $0x2000,0xc014fa88$/;"	l
c010c345	obj/kernel.asm	/^c010c345:	20 00 00 $/;"	l
c010c348	obj/kernel.asm	/^c010c348:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c34b	obj/kernel.asm	/^c010c34b:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010c34e	obj/kernel.asm	/^c010c34e:	eb 7f                	jmp    c010c3cf <get_pid+0xd6>$/;"	l
c010c350	obj/kernel.asm	/^c010c350:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c353	obj/kernel.asm	/^c010c353:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
c010c356	obj/kernel.asm	/^c010c356:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c359	obj/kernel.asm	/^c010c359:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c35c	obj/kernel.asm	/^c010c35c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010c35f	obj/kernel.asm	/^c010c35f:	a1 84 fa 14 c0       	mov    0xc014fa84,%eax$/;"	l
c010c364	obj/kernel.asm	/^c010c364:	39 c2                	cmp    %eax,%edx$/;"	l
c010c366	obj/kernel.asm	/^c010c366:	75 3e                	jne    c010c3a6 <get_pid+0xad>$/;"	l
c010c368	obj/kernel.asm	/^c010c368:	a1 84 fa 14 c0       	mov    0xc014fa84,%eax$/;"	l
c010c36d	obj/kernel.asm	/^c010c36d:	83 c0 01             	add    $0x1,%eax$/;"	l
c010c370	obj/kernel.asm	/^c010c370:	a3 84 fa 14 c0       	mov    %eax,0xc014fa84$/;"	l
c010c375	obj/kernel.asm	/^c010c375:	8b 15 84 fa 14 c0    	mov    0xc014fa84,%edx$/;"	l
c010c37b	obj/kernel.asm	/^c010c37b:	a1 88 fa 14 c0       	mov    0xc014fa88,%eax$/;"	l
c010c380	obj/kernel.asm	/^c010c380:	39 c2                	cmp    %eax,%edx$/;"	l
c010c382	obj/kernel.asm	/^c010c382:	7c 4b                	jl     c010c3cf <get_pid+0xd6>$/;"	l
c010c384	obj/kernel.asm	/^c010c384:	a1 84 fa 14 c0       	mov    0xc014fa84,%eax$/;"	l
c010c389	obj/kernel.asm	/^c010c389:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c010c38e	obj/kernel.asm	/^c010c38e:	7e 0a                	jle    c010c39a <get_pid+0xa1>$/;"	l
c010c390	obj/kernel.asm	/^c010c390:	c7 05 84 fa 14 c0 01 	movl   $0x1,0xc014fa84$/;"	l
c010c397	obj/kernel.asm	/^c010c397:	00 00 00 $/;"	l
c010c39a	obj/kernel.asm	/^c010c39a:	c7 05 88 fa 14 c0 00 	movl   $0x2000,0xc014fa88$/;"	l
c010c3a1	obj/kernel.asm	/^c010c3a1:	20 00 00 $/;"	l
c010c3a4	obj/kernel.asm	/^c010c3a4:	eb a2                	jmp    c010c348 <get_pid+0x4f>$/;"	l
c010c3a6	obj/kernel.asm	/^c010c3a6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c3a9	obj/kernel.asm	/^c010c3a9:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010c3ac	obj/kernel.asm	/^c010c3ac:	a1 84 fa 14 c0       	mov    0xc014fa84,%eax$/;"	l
c010c3b1	obj/kernel.asm	/^c010c3b1:	39 c2                	cmp    %eax,%edx$/;"	l
c010c3b3	obj/kernel.asm	/^c010c3b3:	7e 1a                	jle    c010c3cf <get_pid+0xd6>$/;"	l
c010c3b5	obj/kernel.asm	/^c010c3b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c3b8	obj/kernel.asm	/^c010c3b8:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010c3bb	obj/kernel.asm	/^c010c3bb:	a1 88 fa 14 c0       	mov    0xc014fa88,%eax$/;"	l
c010c3c0	obj/kernel.asm	/^c010c3c0:	39 c2                	cmp    %eax,%edx$/;"	l
c010c3c2	obj/kernel.asm	/^c010c3c2:	7d 0b                	jge    c010c3cf <get_pid+0xd6>$/;"	l
c010c3c4	obj/kernel.asm	/^c010c3c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c3c7	obj/kernel.asm	/^c010c3c7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c3ca	obj/kernel.asm	/^c010c3ca:	a3 88 fa 14 c0       	mov    %eax,0xc014fa88$/;"	l
c010c3cf	obj/kernel.asm	/^c010c3cf:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c3d2	obj/kernel.asm	/^c010c3d2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c3d5	obj/kernel.asm	/^c010c3d5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c3d8	obj/kernel.asm	/^c010c3d8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c3db	obj/kernel.asm	/^c010c3db:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010c3de	obj/kernel.asm	/^c010c3de:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c3e1	obj/kernel.asm	/^c010c3e1:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c010c3e4	obj/kernel.asm	/^c010c3e4:	0f 85 66 ff ff ff    	jne    c010c350 <get_pid+0x57>$/;"	l
c010c3ea	obj/kernel.asm	/^c010c3ea:	a1 84 fa 14 c0       	mov    0xc014fa84,%eax$/;"	l
c010c3ef	obj/kernel.asm	/^c010c3ef:	c9                   	leave  $/;"	l
c010c3f0	obj/kernel.asm	/^c010c3f0:	c3                   	ret    $/;"	l
c010c3f1	obj/kernel.asm	/^c010c3f1 <proc_run>:$/;"	l
c010c3f1	obj/kernel.asm	/^c010c3f1:	55                   	push   %ebp$/;"	l
c010c3f2	obj/kernel.asm	/^c010c3f2:	89 e5                	mov    %esp,%ebp$/;"	l
c010c3f4	obj/kernel.asm	/^c010c3f4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c3f7	obj/kernel.asm	/^c010c3f7:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010c3fc	obj/kernel.asm	/^c010c3fc:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010c3ff	obj/kernel.asm	/^c010c3ff:	74 63                	je     c010c464 <proc_run+0x73>$/;"	l
c010c401	obj/kernel.asm	/^c010c401:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010c406	obj/kernel.asm	/^c010c406:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c409	obj/kernel.asm	/^c010c409:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c40c	obj/kernel.asm	/^c010c40c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c40f	obj/kernel.asm	/^c010c40f:	e8 56 f9 ff ff       	call   c010bd6a <__intr_save>$/;"	l
c010c414	obj/kernel.asm	/^c010c414:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c417	obj/kernel.asm	/^c010c417:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c41a	obj/kernel.asm	/^c010c41a:	a3 28 0f 15 c0       	mov    %eax,0xc0150f28$/;"	l
c010c41f	obj/kernel.asm	/^c010c41f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c422	obj/kernel.asm	/^c010c422:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c425	obj/kernel.asm	/^c010c425:	05 00 20 00 00       	add    $0x2000,%eax$/;"	l
c010c42a	obj/kernel.asm	/^c010c42a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c42d	obj/kernel.asm	/^c010c42d:	e8 e4 8b ff ff       	call   c0105016 <load_esp0>$/;"	l
c010c432	obj/kernel.asm	/^c010c432:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c435	obj/kernel.asm	/^c010c435:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c010c438	obj/kernel.asm	/^c010c438:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c43b	obj/kernel.asm	/^c010c43b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c43e	obj/kernel.asm	/^c010c43e:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010c441	obj/kernel.asm	/^c010c441:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c444	obj/kernel.asm	/^c010c444:	8d 50 1c             	lea    0x1c(%eax),%edx$/;"	l
c010c447	obj/kernel.asm	/^c010c447:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c44a	obj/kernel.asm	/^c010c44a:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010c44d	obj/kernel.asm	/^c010c44d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010c451	obj/kernel.asm	/^c010c451:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c454	obj/kernel.asm	/^c010c454:	e8 bc 1c 00 00       	call   c010e115 <switch_to>$/;"	l
c010c459	obj/kernel.asm	/^c010c459:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c45c	obj/kernel.asm	/^c010c45c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c45f	obj/kernel.asm	/^c010c45f:	e8 30 f9 ff ff       	call   c010bd94 <__intr_restore>$/;"	l
c010c464	obj/kernel.asm	/^c010c464:	c9                   	leave  $/;"	l
c010c465	obj/kernel.asm	/^c010c465:	c3                   	ret    $/;"	l
c010c466	obj/kernel.asm	/^c010c466 <forkret>:$/;"	l
c010c466	obj/kernel.asm	/^c010c466:	55                   	push   %ebp$/;"	l
c010c467	obj/kernel.asm	/^c010c467:	89 e5                	mov    %esp,%ebp$/;"	l
c010c469	obj/kernel.asm	/^c010c469:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c46c	obj/kernel.asm	/^c010c46c:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010c471	obj/kernel.asm	/^c010c471:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c474	obj/kernel.asm	/^c010c474:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c477	obj/kernel.asm	/^c010c477:	e8 a6 66 ff ff       	call   c0102b22 <forkrets>$/;"	l
c010c47c	obj/kernel.asm	/^c010c47c:	c9                   	leave  $/;"	l
c010c47d	obj/kernel.asm	/^c010c47d:	c3                   	ret    $/;"	l
c010c47e	obj/kernel.asm	/^c010c47e <hash_proc>:$/;"	l
c010c47e	obj/kernel.asm	/^c010c47e:	55                   	push   %ebp$/;"	l
c010c47f	obj/kernel.asm	/^c010c47f:	89 e5                	mov    %esp,%ebp$/;"	l
c010c481	obj/kernel.asm	/^c010c481:	53                   	push   %ebx$/;"	l
c010c482	obj/kernel.asm	/^c010c482:	83 ec 34             	sub    $0x34,%esp$/;"	l
c010c485	obj/kernel.asm	/^c010c485:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c488	obj/kernel.asm	/^c010c488:	8d 98 84 00 00 00    	lea    0x84(%eax),%ebx$/;"	l
c010c48e	obj/kernel.asm	/^c010c48e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c491	obj/kernel.asm	/^c010c491:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c494	obj/kernel.asm	/^c010c494:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c010c49b	obj/kernel.asm	/^c010c49b:	00 $/;"	l
c010c49c	obj/kernel.asm	/^c010c49c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c49f	obj/kernel.asm	/^c010c49f:	e8 72 85 00 00       	call   c0114a16 <hash32>$/;"	l
c010c4a4	obj/kernel.asm	/^c010c4a4:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010c4a7	obj/kernel.asm	/^c010c4a7:	05 40 0f 15 c0       	add    $0xc0150f40,%eax$/;"	l
c010c4ac	obj/kernel.asm	/^c010c4ac:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c4af	obj/kernel.asm	/^c010c4af:	89 5d f0             	mov    %ebx,-0x10(%ebp)$/;"	l
c010c4b2	obj/kernel.asm	/^c010c4b2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c4b5	obj/kernel.asm	/^c010c4b5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c4b8	obj/kernel.asm	/^c010c4b8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c4bb	obj/kernel.asm	/^c010c4bb:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c4be	obj/kernel.asm	/^c010c4be:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c4c1	obj/kernel.asm	/^c010c4c1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c4c4	obj/kernel.asm	/^c010c4c4:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010c4c7	obj/kernel.asm	/^c010c4c7:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010c4ca	obj/kernel.asm	/^c010c4ca:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010c4cd	obj/kernel.asm	/^c010c4cd:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c010c4d0	obj/kernel.asm	/^c010c4d0:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010c4d3	obj/kernel.asm	/^c010c4d3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010c4d6	obj/kernel.asm	/^c010c4d6:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010c4d9	obj/kernel.asm	/^c010c4d9:	89 10                	mov    %edx,(%eax)$/;"	l
c010c4db	obj/kernel.asm	/^c010c4db:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010c4de	obj/kernel.asm	/^c010c4de:	8b 10                	mov    (%eax),%edx$/;"	l
c010c4e0	obj/kernel.asm	/^c010c4e0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010c4e3	obj/kernel.asm	/^c010c4e3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c4e6	obj/kernel.asm	/^c010c4e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c4e9	obj/kernel.asm	/^c010c4e9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010c4ec	obj/kernel.asm	/^c010c4ec:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c4ef	obj/kernel.asm	/^c010c4ef:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c4f2	obj/kernel.asm	/^c010c4f2:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010c4f5	obj/kernel.asm	/^c010c4f5:	89 10                	mov    %edx,(%eax)$/;"	l
c010c4f7	obj/kernel.asm	/^c010c4f7:	83 c4 34             	add    $0x34,%esp$/;"	l
c010c4fa	obj/kernel.asm	/^c010c4fa:	5b                   	pop    %ebx$/;"	l
c010c4fb	obj/kernel.asm	/^c010c4fb:	5d                   	pop    %ebp$/;"	l
c010c4fc	obj/kernel.asm	/^c010c4fc:	c3                   	ret    $/;"	l
c010c4fd	obj/kernel.asm	/^c010c4fd <unhash_proc>:$/;"	l
c010c4fd	obj/kernel.asm	/^c010c4fd:	55                   	push   %ebp$/;"	l
c010c4fe	obj/kernel.asm	/^c010c4fe:	89 e5                	mov    %esp,%ebp$/;"	l
c010c500	obj/kernel.asm	/^c010c500:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010c503	obj/kernel.asm	/^c010c503:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c506	obj/kernel.asm	/^c010c506:	05 84 00 00 00       	add    $0x84,%eax$/;"	l
c010c50b	obj/kernel.asm	/^c010c50b:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010c50e	obj/kernel.asm	/^c010c50e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c511	obj/kernel.asm	/^c010c511:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c514	obj/kernel.asm	/^c010c514:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010c517	obj/kernel.asm	/^c010c517:	8b 12                	mov    (%edx),%edx$/;"	l
c010c519	obj/kernel.asm	/^c010c519:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010c51c	obj/kernel.asm	/^c010c51c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c51f	obj/kernel.asm	/^c010c51f:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c522	obj/kernel.asm	/^c010c522:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c525	obj/kernel.asm	/^c010c525:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c528	obj/kernel.asm	/^c010c528:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c52b	obj/kernel.asm	/^c010c52b:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010c52e	obj/kernel.asm	/^c010c52e:	89 10                	mov    %edx,(%eax)$/;"	l
c010c530	obj/kernel.asm	/^c010c530:	c9                   	leave  $/;"	l
c010c531	obj/kernel.asm	/^c010c531:	c3                   	ret    $/;"	l
c010c532	obj/kernel.asm	/^c010c532 <find_proc>:$/;"	l
c010c532	obj/kernel.asm	/^c010c532:	55                   	push   %ebp$/;"	l
c010c533	obj/kernel.asm	/^c010c533:	89 e5                	mov    %esp,%ebp$/;"	l
c010c535	obj/kernel.asm	/^c010c535:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c538	obj/kernel.asm	/^c010c538:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010c53c	obj/kernel.asm	/^c010c53c:	7e 61                	jle    c010c59f <find_proc+0x6d>$/;"	l
c010c53e	obj/kernel.asm	/^c010c53e:	81 7d 08 ff 1f 00 00 	cmpl   $0x1fff,0x8(%ebp)$/;"	l
c010c545	obj/kernel.asm	/^c010c545:	7f 58                	jg     c010c59f <find_proc+0x6d>$/;"	l
c010c547	obj/kernel.asm	/^c010c547:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c54a	obj/kernel.asm	/^c010c54a:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c010c551	obj/kernel.asm	/^c010c551:	00 $/;"	l
c010c552	obj/kernel.asm	/^c010c552:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c555	obj/kernel.asm	/^c010c555:	e8 bc 84 00 00       	call   c0114a16 <hash32>$/;"	l
c010c55a	obj/kernel.asm	/^c010c55a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010c55d	obj/kernel.asm	/^c010c55d:	05 40 0f 15 c0       	add    $0xc0150f40,%eax$/;"	l
c010c562	obj/kernel.asm	/^c010c562:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c565	obj/kernel.asm	/^c010c565:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c568	obj/kernel.asm	/^c010c568:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c56b	obj/kernel.asm	/^c010c56b:	eb 1b                	jmp    c010c588 <find_proc+0x56>$/;"	l
c010c56d	obj/kernel.asm	/^c010c56d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c570	obj/kernel.asm	/^c010c570:	2d 84 00 00 00       	sub    $0x84,%eax$/;"	l
c010c575	obj/kernel.asm	/^c010c575:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c578	obj/kernel.asm	/^c010c578:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c57b	obj/kernel.asm	/^c010c57b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c57e	obj/kernel.asm	/^c010c57e:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010c581	obj/kernel.asm	/^c010c581:	75 05                	jne    c010c588 <find_proc+0x56>$/;"	l
c010c583	obj/kernel.asm	/^c010c583:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c586	obj/kernel.asm	/^c010c586:	eb 1c                	jmp    c010c5a4 <find_proc+0x72>$/;"	l
c010c588	obj/kernel.asm	/^c010c588:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c58b	obj/kernel.asm	/^c010c58b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c58e	obj/kernel.asm	/^c010c58e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c591	obj/kernel.asm	/^c010c591:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c594	obj/kernel.asm	/^c010c594:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c597	obj/kernel.asm	/^c010c597:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c59a	obj/kernel.asm	/^c010c59a:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010c59d	obj/kernel.asm	/^c010c59d:	75 ce                	jne    c010c56d <find_proc+0x3b>$/;"	l
c010c59f	obj/kernel.asm	/^c010c59f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c5a4	obj/kernel.asm	/^c010c5a4:	c9                   	leave  $/;"	l
c010c5a5	obj/kernel.asm	/^c010c5a5:	c3                   	ret    $/;"	l
c010c5a6	obj/kernel.asm	/^c010c5a6 <kernel_thread>:$/;"	l
c010c5a6	obj/kernel.asm	/^c010c5a6:	55                   	push   %ebp$/;"	l
c010c5a7	obj/kernel.asm	/^c010c5a7:	89 e5                	mov    %esp,%ebp$/;"	l
c010c5a9	obj/kernel.asm	/^c010c5a9:	83 ec 68             	sub    $0x68,%esp$/;"	l
c010c5ac	obj/kernel.asm	/^c010c5ac:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)$/;"	l
c010c5b3	obj/kernel.asm	/^c010c5b3:	00 $/;"	l
c010c5b4	obj/kernel.asm	/^c010c5b4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010c5bb	obj/kernel.asm	/^c010c5bb:	00 $/;"	l
c010c5bc	obj/kernel.asm	/^c010c5bc:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c010c5bf	obj/kernel.asm	/^c010c5bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c5c2	obj/kernel.asm	/^c010c5c2:	e8 a9 8f 00 00       	call   c0115570 <memset>$/;"	l
c010c5c7	obj/kernel.asm	/^c010c5c7:	66 c7 45 e8 08 00    	movw   $0x8,-0x18(%ebp)$/;"	l
c010c5cd	obj/kernel.asm	/^c010c5cd:	66 c7 45 f4 10 00    	movw   $0x10,-0xc(%ebp)$/;"	l
c010c5d3	obj/kernel.asm	/^c010c5d3:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c010c5d7	obj/kernel.asm	/^c010c5d7:	66 89 45 d4          	mov    %ax,-0x2c(%ebp)$/;"	l
c010c5db	obj/kernel.asm	/^c010c5db:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax$/;"	l
c010c5df	obj/kernel.asm	/^c010c5df:	66 89 45 d8          	mov    %ax,-0x28(%ebp)$/;"	l
c010c5e3	obj/kernel.asm	/^c010c5e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c5e6	obj/kernel.asm	/^c010c5e6:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010c5e9	obj/kernel.asm	/^c010c5e9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c5ec	obj/kernel.asm	/^c010c5ec:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010c5ef	obj/kernel.asm	/^c010c5ef:	b8 28 bd 10 c0       	mov    $0xc010bd28,%eax$/;"	l
c010c5f4	obj/kernel.asm	/^c010c5f4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010c5f7	obj/kernel.asm	/^c010c5f7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c5fa	obj/kernel.asm	/^c010c5fa:	80 cc 01             	or     $0x1,%ah$/;"	l
c010c5fd	obj/kernel.asm	/^c010c5fd:	89 c2                	mov    %eax,%edx$/;"	l
c010c5ff	obj/kernel.asm	/^c010c5ff:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c010c602	obj/kernel.asm	/^c010c602:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010c606	obj/kernel.asm	/^c010c606:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010c60d	obj/kernel.asm	/^c010c60d:	00 $/;"	l
c010c60e	obj/kernel.asm	/^c010c60e:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010c611	obj/kernel.asm	/^c010c611:	e8 0e 04 00 00       	call   c010ca24 <do_fork>$/;"	l
c010c616	obj/kernel.asm	/^c010c616:	c9                   	leave  $/;"	l
c010c617	obj/kernel.asm	/^c010c617:	c3                   	ret    $/;"	l
c010c618	obj/kernel.asm	/^c010c618 <setup_kstack>:$/;"	l
c010c618	obj/kernel.asm	/^c010c618:	55                   	push   %ebp$/;"	l
c010c619	obj/kernel.asm	/^c010c619:	89 e5                	mov    %esp,%ebp$/;"	l
c010c61b	obj/kernel.asm	/^c010c61b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c61e	obj/kernel.asm	/^c010c61e:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c010c625	obj/kernel.asm	/^c010c625:	e8 3a 8b ff ff       	call   c0105164 <alloc_pages>$/;"	l
c010c62a	obj/kernel.asm	/^c010c62a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c62d	obj/kernel.asm	/^c010c62d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c631	obj/kernel.asm	/^c010c631:	74 1a                	je     c010c64d <setup_kstack+0x35>$/;"	l
c010c633	obj/kernel.asm	/^c010c633:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c636	obj/kernel.asm	/^c010c636:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c639	obj/kernel.asm	/^c010c639:	e8 e8 f7 ff ff       	call   c010be26 <page2kva>$/;"	l
c010c63e	obj/kernel.asm	/^c010c63e:	89 c2                	mov    %eax,%edx$/;"	l
c010c640	obj/kernel.asm	/^c010c640:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c643	obj/kernel.asm	/^c010c643:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010c646	obj/kernel.asm	/^c010c646:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c64b	obj/kernel.asm	/^c010c64b:	eb 05                	jmp    c010c652 <setup_kstack+0x3a>$/;"	l
c010c64d	obj/kernel.asm	/^c010c64d:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010c652	obj/kernel.asm	/^c010c652:	c9                   	leave  $/;"	l
c010c653	obj/kernel.asm	/^c010c653:	c3                   	ret    $/;"	l
c010c654	obj/kernel.asm	/^c010c654 <put_kstack>:$/;"	l
c010c654	obj/kernel.asm	/^c010c654:	55                   	push   %ebp$/;"	l
c010c655	obj/kernel.asm	/^c010c655:	89 e5                	mov    %esp,%ebp$/;"	l
c010c657	obj/kernel.asm	/^c010c657:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c65a	obj/kernel.asm	/^c010c65a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c65d	obj/kernel.asm	/^c010c65d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c660	obj/kernel.asm	/^c010c660:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c663	obj/kernel.asm	/^c010c663:	e8 12 f8 ff ff       	call   c010be7a <kva2page>$/;"	l
c010c668	obj/kernel.asm	/^c010c668:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
c010c66f	obj/kernel.asm	/^c010c66f:	00 $/;"	l
c010c670	obj/kernel.asm	/^c010c670:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c673	obj/kernel.asm	/^c010c673:	e8 57 8b ff ff       	call   c01051cf <free_pages>$/;"	l
c010c678	obj/kernel.asm	/^c010c678:	c9                   	leave  $/;"	l
c010c679	obj/kernel.asm	/^c010c679:	c3                   	ret    $/;"	l
c010c67a	obj/kernel.asm	/^c010c67a <setup_pgdir>:$/;"	l
c010c67a	obj/kernel.asm	/^c010c67a:	55                   	push   %ebp$/;"	l
c010c67b	obj/kernel.asm	/^c010c67b:	89 e5                	mov    %esp,%ebp$/;"	l
c010c67d	obj/kernel.asm	/^c010c67d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c680	obj/kernel.asm	/^c010c680:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010c687	obj/kernel.asm	/^c010c687:	e8 d8 8a ff ff       	call   c0105164 <alloc_pages>$/;"	l
c010c68c	obj/kernel.asm	/^c010c68c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c68f	obj/kernel.asm	/^c010c68f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c693	obj/kernel.asm	/^c010c693:	75 0a                	jne    c010c69f <setup_pgdir+0x25>$/;"	l
c010c695	obj/kernel.asm	/^c010c695:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010c69a	obj/kernel.asm	/^c010c69a:	e9 80 00 00 00       	jmp    c010c71f <setup_pgdir+0xa5>$/;"	l
c010c69f	obj/kernel.asm	/^c010c69f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c6a2	obj/kernel.asm	/^c010c6a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c6a5	obj/kernel.asm	/^c010c6a5:	e8 7c f7 ff ff       	call   c010be26 <page2kva>$/;"	l
c010c6aa	obj/kernel.asm	/^c010c6aa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c6ad	obj/kernel.asm	/^c010c6ad:	a1 84 0e 15 c0       	mov    0xc0150e84,%eax$/;"	l
c010c6b2	obj/kernel.asm	/^c010c6b2:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c010c6b9	obj/kernel.asm	/^c010c6b9:	00 $/;"	l
c010c6ba	obj/kernel.asm	/^c010c6ba:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c6be	obj/kernel.asm	/^c010c6be:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c6c1	obj/kernel.asm	/^c010c6c1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c6c4	obj/kernel.asm	/^c010c6c4:	e8 89 8f 00 00       	call   c0115652 <memcpy>$/;"	l
c010c6c9	obj/kernel.asm	/^c010c6c9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c6cc	obj/kernel.asm	/^c010c6cc:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c010c6d2	obj/kernel.asm	/^c010c6d2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c6d5	obj/kernel.asm	/^c010c6d5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c6d8	obj/kernel.asm	/^c010c6d8:	81 7d ec ff ff ff bf 	cmpl   $0xbfffffff,-0x14(%ebp)$/;"	l
c010c6df	obj/kernel.asm	/^c010c6df:	77 23                	ja     c010c704 <setup_pgdir+0x8a>$/;"	l
c010c6e1	obj/kernel.asm	/^c010c6e1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c6e4	obj/kernel.asm	/^c010c6e4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010c6e8	obj/kernel.asm	/^c010c6e8:	c7 44 24 08 3c 80 11 	movl   $0xc011803c,0x8(%esp)$/;"	l
c010c6ef	obj/kernel.asm	/^c010c6ef:	c0 $/;"	l
c010c6f0	obj/kernel.asm	/^c010c6f0:	c7 44 24 04 39 01 00 	movl   $0x139,0x4(%esp)$/;"	l
c010c6f7	obj/kernel.asm	/^c010c6f7:	00 $/;"	l
c010c6f8	obj/kernel.asm	/^c010c6f8:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010c6ff	obj/kernel.asm	/^c010c6ff:	e8 c4 47 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010c704	obj/kernel.asm	/^c010c704:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c707	obj/kernel.asm	/^c010c707:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010c70c	obj/kernel.asm	/^c010c70c:	83 c8 03             	or     $0x3,%eax$/;"	l
c010c70f	obj/kernel.asm	/^c010c70f:	89 02                	mov    %eax,(%edx)$/;"	l
c010c711	obj/kernel.asm	/^c010c711:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c714	obj/kernel.asm	/^c010c714:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010c717	obj/kernel.asm	/^c010c717:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010c71a	obj/kernel.asm	/^c010c71a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c71f	obj/kernel.asm	/^c010c71f:	c9                   	leave  $/;"	l
c010c720	obj/kernel.asm	/^c010c720:	c3                   	ret    $/;"	l
c010c721	obj/kernel.asm	/^c010c721 <put_pgdir>:$/;"	l
c010c721	obj/kernel.asm	/^c010c721:	55                   	push   %ebp$/;"	l
c010c722	obj/kernel.asm	/^c010c722:	89 e5                	mov    %esp,%ebp$/;"	l
c010c724	obj/kernel.asm	/^c010c724:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c727	obj/kernel.asm	/^c010c727:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c72a	obj/kernel.asm	/^c010c72a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c72d	obj/kernel.asm	/^c010c72d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c730	obj/kernel.asm	/^c010c730:	e8 45 f7 ff ff       	call   c010be7a <kva2page>$/;"	l
c010c735	obj/kernel.asm	/^c010c735:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010c73c	obj/kernel.asm	/^c010c73c:	00 $/;"	l
c010c73d	obj/kernel.asm	/^c010c73d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c740	obj/kernel.asm	/^c010c740:	e8 8a 8a ff ff       	call   c01051cf <free_pages>$/;"	l
c010c745	obj/kernel.asm	/^c010c745:	c9                   	leave  $/;"	l
c010c746	obj/kernel.asm	/^c010c746:	c3                   	ret    $/;"	l
c010c747	obj/kernel.asm	/^c010c747 <copy_mm>:$/;"	l
c010c747	obj/kernel.asm	/^c010c747:	55                   	push   %ebp$/;"	l
c010c748	obj/kernel.asm	/^c010c748:	89 e5                	mov    %esp,%ebp$/;"	l
c010c74a	obj/kernel.asm	/^c010c74a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c74d	obj/kernel.asm	/^c010c74d:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010c752	obj/kernel.asm	/^c010c752:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010c755	obj/kernel.asm	/^c010c755:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c758	obj/kernel.asm	/^c010c758:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010c75c	obj/kernel.asm	/^c010c75c:	75 0a                	jne    c010c768 <copy_mm+0x21>$/;"	l
c010c75e	obj/kernel.asm	/^c010c75e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c763	obj/kernel.asm	/^c010c763:	e9 f9 00 00 00       	jmp    c010c861 <copy_mm+0x11a>$/;"	l
c010c768	obj/kernel.asm	/^c010c768:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c76b	obj/kernel.asm	/^c010c76b:	25 00 01 00 00       	and    $0x100,%eax$/;"	l
c010c770	obj/kernel.asm	/^c010c770:	85 c0                	test   %eax,%eax$/;"	l
c010c772	obj/kernel.asm	/^c010c772:	74 08                	je     c010c77c <copy_mm+0x35>$/;"	l
c010c774	obj/kernel.asm	/^c010c774:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c777	obj/kernel.asm	/^c010c777:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c77a	obj/kernel.asm	/^c010c77a:	eb 78                	jmp    c010c7f4 <copy_mm+0xad>$/;"	l
c010c77c	obj/kernel.asm	/^c010c77c:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010c783	obj/kernel.asm	/^c010c783:	e8 c9 b7 ff ff       	call   c0107f51 <mm_create>$/;"	l
c010c788	obj/kernel.asm	/^c010c788:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c78b	obj/kernel.asm	/^c010c78b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c78f	obj/kernel.asm	/^c010c78f:	75 05                	jne    c010c796 <copy_mm+0x4f>$/;"	l
c010c791	obj/kernel.asm	/^c010c791:	e9 c8 00 00 00       	jmp    c010c85e <copy_mm+0x117>$/;"	l
c010c796	obj/kernel.asm	/^c010c796:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c799	obj/kernel.asm	/^c010c799:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c79c	obj/kernel.asm	/^c010c79c:	e8 d9 fe ff ff       	call   c010c67a <setup_pgdir>$/;"	l
c010c7a1	obj/kernel.asm	/^c010c7a1:	85 c0                	test   %eax,%eax$/;"	l
c010c7a3	obj/kernel.asm	/^c010c7a3:	74 05                	je     c010c7aa <copy_mm+0x63>$/;"	l
c010c7a5	obj/kernel.asm	/^c010c7a5:	e9 a9 00 00 00       	jmp    c010c853 <copy_mm+0x10c>$/;"	l
c010c7aa	obj/kernel.asm	/^c010c7aa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c7ad	obj/kernel.asm	/^c010c7ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c7b0	obj/kernel.asm	/^c010c7b0:	e8 43 f7 ff ff       	call   c010bef8 <lock_mm>$/;"	l
c010c7b5	obj/kernel.asm	/^c010c7b5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c7b8	obj/kernel.asm	/^c010c7b8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c7bc	obj/kernel.asm	/^c010c7bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c7bf	obj/kernel.asm	/^c010c7bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c7c2	obj/kernel.asm	/^c010c7c2:	e8 ad bc ff ff       	call   c0108474 <dup_mmap>$/;"	l
c010c7c7	obj/kernel.asm	/^c010c7c7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c7ca	obj/kernel.asm	/^c010c7ca:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c7cd	obj/kernel.asm	/^c010c7cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c7d0	obj/kernel.asm	/^c010c7d0:	e8 56 f7 ff ff       	call   c010bf2b <unlock_mm>$/;"	l
c010c7d5	obj/kernel.asm	/^c010c7d5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010c7d9	obj/kernel.asm	/^c010c7d9:	74 19                	je     c010c7f4 <copy_mm+0xad>$/;"	l
c010c7db	obj/kernel.asm	/^c010c7db:	90                   	nop$/;"	l
c010c7dc	obj/kernel.asm	/^c010c7dc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c7df	obj/kernel.asm	/^c010c7df:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c7e2	obj/kernel.asm	/^c010c7e2:	e8 8e bd ff ff       	call   c0108575 <exit_mmap>$/;"	l
c010c7e7	obj/kernel.asm	/^c010c7e7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c7ea	obj/kernel.asm	/^c010c7ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c7ed	obj/kernel.asm	/^c010c7ed:	e8 2f ff ff ff       	call   c010c721 <put_pgdir>$/;"	l
c010c7f2	obj/kernel.asm	/^c010c7f2:	eb 5f                	jmp    c010c853 <copy_mm+0x10c>$/;"	l
c010c7f4	obj/kernel.asm	/^c010c7f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c7f7	obj/kernel.asm	/^c010c7f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c7fa	obj/kernel.asm	/^c010c7fa:	e8 c5 f6 ff ff       	call   c010bec4 <mm_count_inc>$/;"	l
c010c7ff	obj/kernel.asm	/^c010c7ff:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c802	obj/kernel.asm	/^c010c802:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c805	obj/kernel.asm	/^c010c805:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010c808	obj/kernel.asm	/^c010c808:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c80b	obj/kernel.asm	/^c010c80b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c80e	obj/kernel.asm	/^c010c80e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c811	obj/kernel.asm	/^c010c811:	81 7d e8 ff ff ff bf 	cmpl   $0xbfffffff,-0x18(%ebp)$/;"	l
c010c818	obj/kernel.asm	/^c010c818:	77 23                	ja     c010c83d <copy_mm+0xf6>$/;"	l
c010c81a	obj/kernel.asm	/^c010c81a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c81d	obj/kernel.asm	/^c010c81d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010c821	obj/kernel.asm	/^c010c821:	c7 44 24 08 3c 80 11 	movl   $0xc011803c,0x8(%esp)$/;"	l
c010c828	obj/kernel.asm	/^c010c828:	c0 $/;"	l
c010c829	obj/kernel.asm	/^c010c829:	c7 44 24 04 68 01 00 	movl   $0x168,0x4(%esp)$/;"	l
c010c830	obj/kernel.asm	/^c010c830:	00 $/;"	l
c010c831	obj/kernel.asm	/^c010c831:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010c838	obj/kernel.asm	/^c010c838:	e8 8b 46 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010c83d	obj/kernel.asm	/^c010c83d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c840	obj/kernel.asm	/^c010c840:	8d 90 00 00 00 40    	lea    0x40000000(%eax),%edx$/;"	l
c010c846	obj/kernel.asm	/^c010c846:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c849	obj/kernel.asm	/^c010c849:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010c84c	obj/kernel.asm	/^c010c84c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c851	obj/kernel.asm	/^c010c851:	eb 0e                	jmp    c010c861 <copy_mm+0x11a>$/;"	l
c010c853	obj/kernel.asm	/^c010c853:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c856	obj/kernel.asm	/^c010c856:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c859	obj/kernel.asm	/^c010c859:	e8 58 ba ff ff       	call   c01082b6 <mm_destroy>$/;"	l
c010c85e	obj/kernel.asm	/^c010c85e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c861	obj/kernel.asm	/^c010c861:	c9                   	leave  $/;"	l
c010c862	obj/kernel.asm	/^c010c862:	c3                   	ret    $/;"	l
c010c863	obj/kernel.asm	/^c010c863 <copy_thread>:$/;"	l
c010c863	obj/kernel.asm	/^c010c863:	55                   	push   %ebp$/;"	l
c010c864	obj/kernel.asm	/^c010c864:	89 e5                	mov    %esp,%ebp$/;"	l
c010c866	obj/kernel.asm	/^c010c866:	57                   	push   %edi$/;"	l
c010c867	obj/kernel.asm	/^c010c867:	56                   	push   %esi$/;"	l
c010c868	obj/kernel.asm	/^c010c868:	53                   	push   %ebx$/;"	l
c010c869	obj/kernel.asm	/^c010c869:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c86c	obj/kernel.asm	/^c010c86c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c86f	obj/kernel.asm	/^c010c86f:	05 b4 1f 00 00       	add    $0x1fb4,%eax$/;"	l
c010c874	obj/kernel.asm	/^c010c874:	89 c2                	mov    %eax,%edx$/;"	l
c010c876	obj/kernel.asm	/^c010c876:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c879	obj/kernel.asm	/^c010c879:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c010c87c	obj/kernel.asm	/^c010c87c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c87f	obj/kernel.asm	/^c010c87f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c882	obj/kernel.asm	/^c010c882:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010c885	obj/kernel.asm	/^c010c885:	bb 4c 00 00 00       	mov    $0x4c,%ebx$/;"	l
c010c88a	obj/kernel.asm	/^c010c88a:	89 c1                	mov    %eax,%ecx$/;"	l
c010c88c	obj/kernel.asm	/^c010c88c:	83 e1 01             	and    $0x1,%ecx$/;"	l
c010c88f	obj/kernel.asm	/^c010c88f:	85 c9                	test   %ecx,%ecx$/;"	l
c010c891	obj/kernel.asm	/^c010c891:	74 0e                	je     c010c8a1 <copy_thread+0x3e>$/;"	l
c010c893	obj/kernel.asm	/^c010c893:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
c010c896	obj/kernel.asm	/^c010c896:	88 08                	mov    %cl,(%eax)$/;"	l
c010c898	obj/kernel.asm	/^c010c898:	83 c0 01             	add    $0x1,%eax$/;"	l
c010c89b	obj/kernel.asm	/^c010c89b:	83 c2 01             	add    $0x1,%edx$/;"	l
c010c89e	obj/kernel.asm	/^c010c89e:	83 eb 01             	sub    $0x1,%ebx$/;"	l
c010c8a1	obj/kernel.asm	/^c010c8a1:	89 c1                	mov    %eax,%ecx$/;"	l
c010c8a3	obj/kernel.asm	/^c010c8a3:	83 e1 02             	and    $0x2,%ecx$/;"	l
c010c8a6	obj/kernel.asm	/^c010c8a6:	85 c9                	test   %ecx,%ecx$/;"	l
c010c8a8	obj/kernel.asm	/^c010c8a8:	74 0f                	je     c010c8b9 <copy_thread+0x56>$/;"	l
c010c8aa	obj/kernel.asm	/^c010c8aa:	0f b7 0a             	movzwl (%edx),%ecx$/;"	l
c010c8ad	obj/kernel.asm	/^c010c8ad:	66 89 08             	mov    %cx,(%eax)$/;"	l
c010c8b0	obj/kernel.asm	/^c010c8b0:	83 c0 02             	add    $0x2,%eax$/;"	l
c010c8b3	obj/kernel.asm	/^c010c8b3:	83 c2 02             	add    $0x2,%edx$/;"	l
c010c8b6	obj/kernel.asm	/^c010c8b6:	83 eb 02             	sub    $0x2,%ebx$/;"	l
c010c8b9	obj/kernel.asm	/^c010c8b9:	89 d9                	mov    %ebx,%ecx$/;"	l
c010c8bb	obj/kernel.asm	/^c010c8bb:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
c010c8be	obj/kernel.asm	/^c010c8be:	89 c7                	mov    %eax,%edi$/;"	l
c010c8c0	obj/kernel.asm	/^c010c8c0:	89 d6                	mov    %edx,%esi$/;"	l
c010c8c2	obj/kernel.asm	/^c010c8c2:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010c8c4	obj/kernel.asm	/^c010c8c4:	89 f2                	mov    %esi,%edx$/;"	l
c010c8c6	obj/kernel.asm	/^c010c8c6:	89 f8                	mov    %edi,%eax$/;"	l
c010c8c8	obj/kernel.asm	/^c010c8c8:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
c010c8cd	obj/kernel.asm	/^c010c8cd:	89 de                	mov    %ebx,%esi$/;"	l
c010c8cf	obj/kernel.asm	/^c010c8cf:	83 e6 02             	and    $0x2,%esi$/;"	l
c010c8d2	obj/kernel.asm	/^c010c8d2:	85 f6                	test   %esi,%esi$/;"	l
c010c8d4	obj/kernel.asm	/^c010c8d4:	74 0b                	je     c010c8e1 <copy_thread+0x7e>$/;"	l
c010c8d6	obj/kernel.asm	/^c010c8d6:	0f b7 34 0a          	movzwl (%edx,%ecx,1),%esi$/;"	l
c010c8da	obj/kernel.asm	/^c010c8da:	66 89 34 08          	mov    %si,(%eax,%ecx,1)$/;"	l
c010c8de	obj/kernel.asm	/^c010c8de:	83 c1 02             	add    $0x2,%ecx$/;"	l
c010c8e1	obj/kernel.asm	/^c010c8e1:	83 e3 01             	and    $0x1,%ebx$/;"	l
c010c8e4	obj/kernel.asm	/^c010c8e4:	85 db                	test   %ebx,%ebx$/;"	l
c010c8e6	obj/kernel.asm	/^c010c8e6:	74 07                	je     c010c8ef <copy_thread+0x8c>$/;"	l
c010c8e8	obj/kernel.asm	/^c010c8e8:	0f b6 14 0a          	movzbl (%edx,%ecx,1),%edx$/;"	l
c010c8ec	obj/kernel.asm	/^c010c8ec:	88 14 08             	mov    %dl,(%eax,%ecx,1)$/;"	l
c010c8ef	obj/kernel.asm	/^c010c8ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c8f2	obj/kernel.asm	/^c010c8f2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c8f5	obj/kernel.asm	/^c010c8f5:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c010c8fc	obj/kernel.asm	/^c010c8fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c8ff	obj/kernel.asm	/^c010c8ff:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c902	obj/kernel.asm	/^c010c902:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010c905	obj/kernel.asm	/^c010c905:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010c908	obj/kernel.asm	/^c010c908:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c90b	obj/kernel.asm	/^c010c90b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c90e	obj/kernel.asm	/^c010c90e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c911	obj/kernel.asm	/^c010c911:	8b 52 3c             	mov    0x3c(%edx),%edx$/;"	l
c010c914	obj/kernel.asm	/^c010c914:	8b 52 40             	mov    0x40(%edx),%edx$/;"	l
c010c917	obj/kernel.asm	/^c010c917:	80 ce 02             	or     $0x2,%dh$/;"	l
c010c91a	obj/kernel.asm	/^c010c91a:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010c91d	obj/kernel.asm	/^c010c91d:	ba 66 c4 10 c0       	mov    $0xc010c466,%edx$/;"	l
c010c922	obj/kernel.asm	/^c010c922:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c925	obj/kernel.asm	/^c010c925:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010c928	obj/kernel.asm	/^c010c928:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c92b	obj/kernel.asm	/^c010c92b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c92e	obj/kernel.asm	/^c010c92e:	89 c2                	mov    %eax,%edx$/;"	l
c010c930	obj/kernel.asm	/^c010c930:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c933	obj/kernel.asm	/^c010c933:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
c010c936	obj/kernel.asm	/^c010c936:	5b                   	pop    %ebx$/;"	l
c010c937	obj/kernel.asm	/^c010c937:	5e                   	pop    %esi$/;"	l
c010c938	obj/kernel.asm	/^c010c938:	5f                   	pop    %edi$/;"	l
c010c939	obj/kernel.asm	/^c010c939:	5d                   	pop    %ebp$/;"	l
c010c93a	obj/kernel.asm	/^c010c93a:	c3                   	ret    $/;"	l
c010c93b	obj/kernel.asm	/^c010c93b <copy_fs>:$/;"	l
c010c93b	obj/kernel.asm	/^c010c93b:	55                   	push   %ebp$/;"	l
c010c93c	obj/kernel.asm	/^c010c93c:	89 e5                	mov    %esp,%ebp$/;"	l
c010c93e	obj/kernel.asm	/^c010c93e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c941	obj/kernel.asm	/^c010c941:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010c946	obj/kernel.asm	/^c010c946:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010c94c	obj/kernel.asm	/^c010c94c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c94f	obj/kernel.asm	/^c010c94f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010c953	obj/kernel.asm	/^c010c953:	75 24                	jne    c010c979 <copy_fs+0x3e>$/;"	l
c010c955	obj/kernel.asm	/^c010c955:	c7 44 24 0c 74 80 11 	movl   $0xc0118074,0xc(%esp)$/;"	l
c010c95c	obj/kernel.asm	/^c010c95c:	c0 $/;"	l
c010c95d	obj/kernel.asm	/^c010c95d:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010c964	obj/kernel.asm	/^c010c964:	c0 $/;"	l
c010c965	obj/kernel.asm	/^c010c965:	c7 44 24 04 85 01 00 	movl   $0x185,0x4(%esp)$/;"	l
c010c96c	obj/kernel.asm	/^c010c96c:	00 $/;"	l
c010c96d	obj/kernel.asm	/^c010c96d:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010c974	obj/kernel.asm	/^c010c974:	e8 4f 45 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010c979	obj/kernel.asm	/^c010c979:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c97c	obj/kernel.asm	/^c010c97c:	25 00 08 00 00       	and    $0x800,%eax$/;"	l
c010c981	obj/kernel.asm	/^c010c981:	85 c0                	test   %eax,%eax$/;"	l
c010c983	obj/kernel.asm	/^c010c983:	74 08                	je     c010c98d <copy_fs+0x52>$/;"	l
c010c985	obj/kernel.asm	/^c010c985:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c988	obj/kernel.asm	/^c010c988:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c98b	obj/kernel.asm	/^c010c98b:	eb 40                	jmp    c010c9cd <copy_fs+0x92>$/;"	l
c010c98d	obj/kernel.asm	/^c010c98d:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010c994	obj/kernel.asm	/^c010c994:	e8 0f e7 ff ff       	call   c010b0a8 <files_create>$/;"	l
c010c999	obj/kernel.asm	/^c010c999:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c99c	obj/kernel.asm	/^c010c99c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c9a0	obj/kernel.asm	/^c010c9a0:	75 02                	jne    c010c9a4 <copy_fs+0x69>$/;"	l
c010c9a2	obj/kernel.asm	/^c010c9a2:	eb 47                	jmp    c010c9eb <copy_fs+0xb0>$/;"	l
c010c9a4	obj/kernel.asm	/^c010c9a4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c9a7	obj/kernel.asm	/^c010c9a7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c9ab	obj/kernel.asm	/^c010c9ab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c9ae	obj/kernel.asm	/^c010c9ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c9b1	obj/kernel.asm	/^c010c9b1:	e8 9b e8 ff ff       	call   c010b251 <dup_fs>$/;"	l
c010c9b6	obj/kernel.asm	/^c010c9b6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c9b9	obj/kernel.asm	/^c010c9b9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010c9bd	obj/kernel.asm	/^c010c9bd:	74 0e                	je     c010c9cd <copy_fs+0x92>$/;"	l
c010c9bf	obj/kernel.asm	/^c010c9bf:	90                   	nop$/;"	l
c010c9c0	obj/kernel.asm	/^c010c9c0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c9c3	obj/kernel.asm	/^c010c9c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c9c6	obj/kernel.asm	/^c010c9c6:	e8 40 e7 ff ff       	call   c010b10b <files_destroy>$/;"	l
c010c9cb	obj/kernel.asm	/^c010c9cb:	eb 1e                	jmp    c010c9eb <copy_fs+0xb0>$/;"	l
c010c9cd	obj/kernel.asm	/^c010c9cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c9d0	obj/kernel.asm	/^c010c9d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c9d3	obj/kernel.asm	/^c010c9d3:	e8 79 f5 ff ff       	call   c010bf51 <files_count_inc>$/;"	l
c010c9d8	obj/kernel.asm	/^c010c9d8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c9db	obj/kernel.asm	/^c010c9db:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c9de	obj/kernel.asm	/^c010c9de:	89 90 c4 00 00 00    	mov    %edx,0xc4(%eax)$/;"	l
c010c9e4	obj/kernel.asm	/^c010c9e4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c9e9	obj/kernel.asm	/^c010c9e9:	eb 03                	jmp    c010c9ee <copy_fs+0xb3>$/;"	l
c010c9eb	obj/kernel.asm	/^c010c9eb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c9ee	obj/kernel.asm	/^c010c9ee:	c9                   	leave  $/;"	l
c010c9ef	obj/kernel.asm	/^c010c9ef:	c3                   	ret    $/;"	l
c010c9f0	obj/kernel.asm	/^c010c9f0 <put_fs>:$/;"	l
c010c9f0	obj/kernel.asm	/^c010c9f0:	55                   	push   %ebp$/;"	l
c010c9f1	obj/kernel.asm	/^c010c9f1:	89 e5                	mov    %esp,%ebp$/;"	l
c010c9f3	obj/kernel.asm	/^c010c9f3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c9f6	obj/kernel.asm	/^c010c9f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c9f9	obj/kernel.asm	/^c010c9f9:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010c9ff	obj/kernel.asm	/^c010c9ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ca02	obj/kernel.asm	/^c010ca02:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ca06	obj/kernel.asm	/^c010ca06:	74 1a                	je     c010ca22 <put_fs+0x32>$/;"	l
c010ca08	obj/kernel.asm	/^c010ca08:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ca0b	obj/kernel.asm	/^c010ca0b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ca0e	obj/kernel.asm	/^c010ca0e:	e8 58 f5 ff ff       	call   c010bf6b <files_count_dec>$/;"	l
c010ca13	obj/kernel.asm	/^c010ca13:	85 c0                	test   %eax,%eax$/;"	l
c010ca15	obj/kernel.asm	/^c010ca15:	75 0b                	jne    c010ca22 <put_fs+0x32>$/;"	l
c010ca17	obj/kernel.asm	/^c010ca17:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ca1a	obj/kernel.asm	/^c010ca1a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ca1d	obj/kernel.asm	/^c010ca1d:	e8 e9 e6 ff ff       	call   c010b10b <files_destroy>$/;"	l
c010ca22	obj/kernel.asm	/^c010ca22:	c9                   	leave  $/;"	l
c010ca23	obj/kernel.asm	/^c010ca23:	c3                   	ret    $/;"	l
c010ca24	obj/kernel.asm	/^c010ca24 <do_fork>:$/;"	l
c010ca24	obj/kernel.asm	/^c010ca24:	55                   	push   %ebp$/;"	l
c010ca25	obj/kernel.asm	/^c010ca25:	89 e5                	mov    %esp,%ebp$/;"	l
c010ca27	obj/kernel.asm	/^c010ca27:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ca2a	obj/kernel.asm	/^c010ca2a:	c7 45 f4 fb ff ff ff 	movl   $0xfffffffb,-0xc(%ebp)$/;"	l
c010ca31	obj/kernel.asm	/^c010ca31:	a1 40 2f 15 c0       	mov    0xc0152f40,%eax$/;"	l
c010ca36	obj/kernel.asm	/^c010ca36:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c010ca3b	obj/kernel.asm	/^c010ca3b:	7e 05                	jle    c010ca42 <do_fork+0x1e>$/;"	l
c010ca3d	obj/kernel.asm	/^c010ca3d:	e9 fe 00 00 00       	jmp    c010cb40 <do_fork+0x11c>$/;"	l
c010ca42	obj/kernel.asm	/^c010ca42:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010ca49	obj/kernel.asm	/^c010ca49:	e8 37 f5 ff ff       	call   c010bf85 <alloc_proc>$/;"	l
c010ca4e	obj/kernel.asm	/^c010ca4e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ca51	obj/kernel.asm	/^c010ca51:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ca55	obj/kernel.asm	/^c010ca55:	75 05                	jne    c010ca5c <do_fork+0x38>$/;"	l
c010ca57	obj/kernel.asm	/^c010ca57:	e9 e4 00 00 00       	jmp    c010cb40 <do_fork+0x11c>$/;"	l
c010ca5c	obj/kernel.asm	/^c010ca5c:	8b 15 28 0f 15 c0    	mov    0xc0150f28,%edx$/;"	l
c010ca62	obj/kernel.asm	/^c010ca62:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ca65	obj/kernel.asm	/^c010ca65:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010ca68	obj/kernel.asm	/^c010ca68:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010ca6d	obj/kernel.asm	/^c010ca6d:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010ca73	obj/kernel.asm	/^c010ca73:	85 c0                	test   %eax,%eax$/;"	l
c010ca75	obj/kernel.asm	/^c010ca75:	74 24                	je     c010ca9b <do_fork+0x77>$/;"	l
c010ca77	obj/kernel.asm	/^c010ca77:	c7 44 24 0c 9c 80 11 	movl   $0xc011809c,0xc(%esp)$/;"	l
c010ca7e	obj/kernel.asm	/^c010ca7e:	c0 $/;"	l
c010ca7f	obj/kernel.asm	/^c010ca7f:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010ca86	obj/kernel.asm	/^c010ca86:	c0 $/;"	l
c010ca87	obj/kernel.asm	/^c010ca87:	c7 44 24 04 de 01 00 	movl   $0x1de,0x4(%esp)$/;"	l
c010ca8e	obj/kernel.asm	/^c010ca8e:	00 $/;"	l
c010ca8f	obj/kernel.asm	/^c010ca8f:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010ca96	obj/kernel.asm	/^c010ca96:	e8 2d 44 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ca9b	obj/kernel.asm	/^c010ca9b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ca9e	obj/kernel.asm	/^c010ca9e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010caa1	obj/kernel.asm	/^c010caa1:	e8 72 fb ff ff       	call   c010c618 <setup_kstack>$/;"	l
c010caa6	obj/kernel.asm	/^c010caa6:	85 c0                	test   %eax,%eax$/;"	l
c010caa8	obj/kernel.asm	/^c010caa8:	74 05                	je     c010caaf <do_fork+0x8b>$/;"	l
c010caaa	obj/kernel.asm	/^c010caaa:	e9 a1 00 00 00       	jmp    c010cb50 <do_fork+0x12c>$/;"	l
c010caaf	obj/kernel.asm	/^c010caaf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010cab2	obj/kernel.asm	/^c010cab2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010cab6	obj/kernel.asm	/^c010cab6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cab9	obj/kernel.asm	/^c010cab9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cabc	obj/kernel.asm	/^c010cabc:	e8 7a fe ff ff       	call   c010c93b <copy_fs>$/;"	l
c010cac1	obj/kernel.asm	/^c010cac1:	85 c0                	test   %eax,%eax$/;"	l
c010cac3	obj/kernel.asm	/^c010cac3:	74 02                	je     c010cac7 <do_fork+0xa3>$/;"	l
c010cac5	obj/kernel.asm	/^c010cac5:	eb 7e                	jmp    c010cb45 <do_fork+0x121>$/;"	l
c010cac7	obj/kernel.asm	/^c010cac7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010caca	obj/kernel.asm	/^c010caca:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010cace	obj/kernel.asm	/^c010cace:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cad1	obj/kernel.asm	/^c010cad1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cad4	obj/kernel.asm	/^c010cad4:	e8 6e fc ff ff       	call   c010c747 <copy_mm>$/;"	l
c010cad9	obj/kernel.asm	/^c010cad9:	85 c0                	test   %eax,%eax$/;"	l
c010cadb	obj/kernel.asm	/^c010cadb:	74 02                	je     c010cadf <do_fork+0xbb>$/;"	l
c010cadd	obj/kernel.asm	/^c010cadd:	eb 66                	jmp    c010cb45 <do_fork+0x121>$/;"	l
c010cadf	obj/kernel.asm	/^c010cadf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010cae2	obj/kernel.asm	/^c010cae2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010cae6	obj/kernel.asm	/^c010cae6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010cae9	obj/kernel.asm	/^c010cae9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010caed	obj/kernel.asm	/^c010caed:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010caf0	obj/kernel.asm	/^c010caf0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010caf3	obj/kernel.asm	/^c010caf3:	e8 6b fd ff ff       	call   c010c863 <copy_thread>$/;"	l
c010caf8	obj/kernel.asm	/^c010caf8:	e8 6d f2 ff ff       	call   c010bd6a <__intr_save>$/;"	l
c010cafd	obj/kernel.asm	/^c010cafd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010cb00	obj/kernel.asm	/^c010cb00:	e8 f4 f7 ff ff       	call   c010c2f9 <get_pid>$/;"	l
c010cb05	obj/kernel.asm	/^c010cb05:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010cb08	obj/kernel.asm	/^c010cb08:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c010cb0b	obj/kernel.asm	/^c010cb0b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010cb0e	obj/kernel.asm	/^c010cb0e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cb11	obj/kernel.asm	/^c010cb11:	e8 68 f9 ff ff       	call   c010c47e <hash_proc>$/;"	l
c010cb16	obj/kernel.asm	/^c010cb16:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010cb19	obj/kernel.asm	/^c010cb19:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cb1c	obj/kernel.asm	/^c010cb1c:	e8 7d f6 ff ff       	call   c010c19e <set_links>$/;"	l
c010cb21	obj/kernel.asm	/^c010cb21:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cb24	obj/kernel.asm	/^c010cb24:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cb27	obj/kernel.asm	/^c010cb27:	e8 68 f2 ff ff       	call   c010bd94 <__intr_restore>$/;"	l
c010cb2c	obj/kernel.asm	/^c010cb2c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010cb2f	obj/kernel.asm	/^c010cb2f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cb32	obj/kernel.asm	/^c010cb32:	e8 d2 1a 00 00       	call   c010e609 <wakeup_proc>$/;"	l
c010cb37	obj/kernel.asm	/^c010cb37:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010cb3a	obj/kernel.asm	/^c010cb3a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010cb3d	obj/kernel.asm	/^c010cb3d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cb40	obj/kernel.asm	/^c010cb40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cb43	obj/kernel.asm	/^c010cb43:	eb 18                	jmp    c010cb5d <do_fork+0x139>$/;"	l
c010cb45	obj/kernel.asm	/^c010cb45:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010cb48	obj/kernel.asm	/^c010cb48:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cb4b	obj/kernel.asm	/^c010cb4b:	e8 04 fb ff ff       	call   c010c654 <put_kstack>$/;"	l
c010cb50	obj/kernel.asm	/^c010cb50:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010cb53	obj/kernel.asm	/^c010cb53:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cb56	obj/kernel.asm	/^c010cb56:	e8 9f 81 ff ff       	call   c0104cfa <kfree>$/;"	l
c010cb5b	obj/kernel.asm	/^c010cb5b:	eb e3                	jmp    c010cb40 <do_fork+0x11c>$/;"	l
c010cb5d	obj/kernel.asm	/^c010cb5d:	c9                   	leave  $/;"	l
c010cb5e	obj/kernel.asm	/^c010cb5e:	c3                   	ret    $/;"	l
c010cb5f	obj/kernel.asm	/^c010cb5f <do_exit>:$/;"	l
c010cb5f	obj/kernel.asm	/^c010cb5f:	55                   	push   %ebp$/;"	l
c010cb60	obj/kernel.asm	/^c010cb60:	89 e5                	mov    %esp,%ebp$/;"	l
c010cb62	obj/kernel.asm	/^c010cb62:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010cb65	obj/kernel.asm	/^c010cb65:	8b 15 28 0f 15 c0    	mov    0xc0150f28,%edx$/;"	l
c010cb6b	obj/kernel.asm	/^c010cb6b:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010cb70	obj/kernel.asm	/^c010cb70:	39 c2                	cmp    %eax,%edx$/;"	l
c010cb72	obj/kernel.asm	/^c010cb72:	75 1c                	jne    c010cb90 <do_exit+0x31>$/;"	l
c010cb74	obj/kernel.asm	/^c010cb74:	c7 44 24 08 b5 80 11 	movl   $0xc01180b5,0x8(%esp)$/;"	l
c010cb7b	obj/kernel.asm	/^c010cb7b:	c0 $/;"	l
c010cb7c	obj/kernel.asm	/^c010cb7c:	c7 44 24 04 0b 02 00 	movl   $0x20b,0x4(%esp)$/;"	l
c010cb83	obj/kernel.asm	/^c010cb83:	00 $/;"	l
c010cb84	obj/kernel.asm	/^c010cb84:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010cb8b	obj/kernel.asm	/^c010cb8b:	e8 38 43 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010cb90	obj/kernel.asm	/^c010cb90:	8b 15 28 0f 15 c0    	mov    0xc0150f28,%edx$/;"	l
c010cb96	obj/kernel.asm	/^c010cb96:	a1 24 0f 15 c0       	mov    0xc0150f24,%eax$/;"	l
c010cb9b	obj/kernel.asm	/^c010cb9b:	39 c2                	cmp    %eax,%edx$/;"	l
c010cb9d	obj/kernel.asm	/^c010cb9d:	75 1c                	jne    c010cbbb <do_exit+0x5c>$/;"	l
c010cb9f	obj/kernel.asm	/^c010cb9f:	c7 44 24 08 c5 80 11 	movl   $0xc01180c5,0x8(%esp)$/;"	l
c010cba6	obj/kernel.asm	/^c010cba6:	c0 $/;"	l
c010cba7	obj/kernel.asm	/^c010cba7:	c7 44 24 04 0e 02 00 	movl   $0x20e,0x4(%esp)$/;"	l
c010cbae	obj/kernel.asm	/^c010cbae:	00 $/;"	l
c010cbaf	obj/kernel.asm	/^c010cbaf:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010cbb6	obj/kernel.asm	/^c010cbb6:	e8 0d 43 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010cbbb	obj/kernel.asm	/^c010cbbb:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010cbc0	obj/kernel.asm	/^c010cbc0:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010cbc3	obj/kernel.asm	/^c010cbc3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cbc6	obj/kernel.asm	/^c010cbc6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cbca	obj/kernel.asm	/^c010cbca:	74 4a                	je     c010cc16 <do_exit+0xb7>$/;"	l
c010cbcc	obj/kernel.asm	/^c010cbcc:	a1 24 40 15 c0       	mov    0xc0154024,%eax$/;"	l
c010cbd1	obj/kernel.asm	/^c010cbd1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010cbd4	obj/kernel.asm	/^c010cbd4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010cbd7	obj/kernel.asm	/^c010cbd7:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010cbda	obj/kernel.asm	/^c010cbda:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cbdd	obj/kernel.asm	/^c010cbdd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cbe0	obj/kernel.asm	/^c010cbe0:	e8 f9 f2 ff ff       	call   c010bede <mm_count_dec>$/;"	l
c010cbe5	obj/kernel.asm	/^c010cbe5:	85 c0                	test   %eax,%eax$/;"	l
c010cbe7	obj/kernel.asm	/^c010cbe7:	75 21                	jne    c010cc0a <do_exit+0xab>$/;"	l
c010cbe9	obj/kernel.asm	/^c010cbe9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cbec	obj/kernel.asm	/^c010cbec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cbef	obj/kernel.asm	/^c010cbef:	e8 81 b9 ff ff       	call   c0108575 <exit_mmap>$/;"	l
c010cbf4	obj/kernel.asm	/^c010cbf4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cbf7	obj/kernel.asm	/^c010cbf7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cbfa	obj/kernel.asm	/^c010cbfa:	e8 22 fb ff ff       	call   c010c721 <put_pgdir>$/;"	l
c010cbff	obj/kernel.asm	/^c010cbff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cc02	obj/kernel.asm	/^c010cc02:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cc05	obj/kernel.asm	/^c010cc05:	e8 ac b6 ff ff       	call   c01082b6 <mm_destroy>$/;"	l
c010cc0a	obj/kernel.asm	/^c010cc0a:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010cc0f	obj/kernel.asm	/^c010cc0f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010cc16	obj/kernel.asm	/^c010cc16:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010cc1b	obj/kernel.asm	/^c010cc1b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cc1e	obj/kernel.asm	/^c010cc1e:	e8 cd fd ff ff       	call   c010c9f0 <put_fs>$/;"	l
c010cc23	obj/kernel.asm	/^c010cc23:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010cc28	obj/kernel.asm	/^c010cc28:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c010cc2e	obj/kernel.asm	/^c010cc2e:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010cc33	obj/kernel.asm	/^c010cc33:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010cc36	obj/kernel.asm	/^c010cc36:	89 90 8c 00 00 00    	mov    %edx,0x8c(%eax)$/;"	l
c010cc3c	obj/kernel.asm	/^c010cc3c:	e8 29 f1 ff ff       	call   c010bd6a <__intr_save>$/;"	l
c010cc41	obj/kernel.asm	/^c010cc41:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010cc44	obj/kernel.asm	/^c010cc44:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010cc49	obj/kernel.asm	/^c010cc49:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010cc4c	obj/kernel.asm	/^c010cc4c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010cc4f	obj/kernel.asm	/^c010cc4f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cc52	obj/kernel.asm	/^c010cc52:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010cc58	obj/kernel.asm	/^c010cc58:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c010cc5d	obj/kernel.asm	/^c010cc5d:	75 10                	jne    c010cc6f <do_exit+0x110>$/;"	l
c010cc5f	obj/kernel.asm	/^c010cc5f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cc62	obj/kernel.asm	/^c010cc62:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cc65	obj/kernel.asm	/^c010cc65:	e8 9f 19 00 00       	call   c010e609 <wakeup_proc>$/;"	l
c010cc6a	obj/kernel.asm	/^c010cc6a:	e9 ac 00 00 00       	jmp    c010cd1b <do_exit+0x1bc>$/;"	l
c010cc6f	obj/kernel.asm	/^c010cc6f:	e9 a7 00 00 00       	jmp    c010cd1b <do_exit+0x1bc>$/;"	l
c010cc74	obj/kernel.asm	/^c010cc74:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010cc79	obj/kernel.asm	/^c010cc79:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010cc7f	obj/kernel.asm	/^c010cc7f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010cc82	obj/kernel.asm	/^c010cc82:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010cc87	obj/kernel.asm	/^c010cc87:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010cc8a	obj/kernel.asm	/^c010cc8a:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010cc90	obj/kernel.asm	/^c010cc90:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010cc96	obj/kernel.asm	/^c010cc96:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cc99	obj/kernel.asm	/^c010cc99:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c010cca0	obj/kernel.asm	/^c010cca0:	00 00 00 $/;"	l
c010cca3	obj/kernel.asm	/^c010cca3:	a1 24 0f 15 c0       	mov    0xc0150f24,%eax$/;"	l
c010cca8	obj/kernel.asm	/^c010cca8:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx$/;"	l
c010ccae	obj/kernel.asm	/^c010ccae:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ccb1	obj/kernel.asm	/^c010ccb1:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010ccb7	obj/kernel.asm	/^c010ccb7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ccba	obj/kernel.asm	/^c010ccba:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010ccc0	obj/kernel.asm	/^c010ccc0:	85 c0                	test   %eax,%eax$/;"	l
c010ccc2	obj/kernel.asm	/^c010ccc2:	74 14                	je     c010ccd8 <do_exit+0x179>$/;"	l
c010ccc4	obj/kernel.asm	/^c010ccc4:	a1 24 0f 15 c0       	mov    0xc0150f24,%eax$/;"	l
c010ccc9	obj/kernel.asm	/^c010ccc9:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010cccf	obj/kernel.asm	/^c010cccf:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ccd2	obj/kernel.asm	/^c010ccd2:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010ccd8	obj/kernel.asm	/^c010ccd8:	8b 15 24 0f 15 c0    	mov    0xc0150f24,%edx$/;"	l
c010ccde	obj/kernel.asm	/^c010ccde:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cce1	obj/kernel.asm	/^c010cce1:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010cce4	obj/kernel.asm	/^c010cce4:	a1 24 0f 15 c0       	mov    0xc0150f24,%eax$/;"	l
c010cce9	obj/kernel.asm	/^c010cce9:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ccec	obj/kernel.asm	/^c010ccec:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010ccf2	obj/kernel.asm	/^c010ccf2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ccf5	obj/kernel.asm	/^c010ccf5:	8b 00                	mov    (%eax),%eax$/;"	l
c010ccf7	obj/kernel.asm	/^c010ccf7:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010ccfa	obj/kernel.asm	/^c010ccfa:	75 1f                	jne    c010cd1b <do_exit+0x1bc>$/;"	l
c010ccfc	obj/kernel.asm	/^c010ccfc:	a1 24 0f 15 c0       	mov    0xc0150f24,%eax$/;"	l
c010cd01	obj/kernel.asm	/^c010cd01:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010cd07	obj/kernel.asm	/^c010cd07:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c010cd0c	obj/kernel.asm	/^c010cd0c:	75 0d                	jne    c010cd1b <do_exit+0x1bc>$/;"	l
c010cd0e	obj/kernel.asm	/^c010cd0e:	a1 24 0f 15 c0       	mov    0xc0150f24,%eax$/;"	l
c010cd13	obj/kernel.asm	/^c010cd13:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cd16	obj/kernel.asm	/^c010cd16:	e8 ee 18 00 00       	call   c010e609 <wakeup_proc>$/;"	l
c010cd1b	obj/kernel.asm	/^c010cd1b:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010cd20	obj/kernel.asm	/^c010cd20:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010cd26	obj/kernel.asm	/^c010cd26:	85 c0                	test   %eax,%eax$/;"	l
c010cd28	obj/kernel.asm	/^c010cd28:	0f 85 46 ff ff ff    	jne    c010cc74 <do_exit+0x115>$/;"	l
c010cd2e	obj/kernel.asm	/^c010cd2e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010cd31	obj/kernel.asm	/^c010cd31:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cd34	obj/kernel.asm	/^c010cd34:	e8 5b f0 ff ff       	call   c010bd94 <__intr_restore>$/;"	l
c010cd39	obj/kernel.asm	/^c010cd39:	e8 67 19 00 00       	call   c010e6a5 <schedule>$/;"	l
c010cd3e	obj/kernel.asm	/^c010cd3e:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010cd43	obj/kernel.asm	/^c010cd43:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010cd46	obj/kernel.asm	/^c010cd46:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010cd4a	obj/kernel.asm	/^c010cd4a:	c7 44 24 08 d8 80 11 	movl   $0xc01180d8,0x8(%esp)$/;"	l
c010cd51	obj/kernel.asm	/^c010cd51:	c0 $/;"	l
c010cd52	obj/kernel.asm	/^c010cd52:	c7 44 24 04 3b 02 00 	movl   $0x23b,0x4(%esp)$/;"	l
c010cd59	obj/kernel.asm	/^c010cd59:	00 $/;"	l
c010cd5a	obj/kernel.asm	/^c010cd5a:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010cd61	obj/kernel.asm	/^c010cd61:	e8 62 41 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010cd66	obj/kernel.asm	/^c010cd66 <load_icode_read>:$/;"	l
c010cd66	obj/kernel.asm	/^c010cd66:	55                   	push   %ebp$/;"	l
c010cd67	obj/kernel.asm	/^c010cd67:	89 e5                	mov    %esp,%ebp$/;"	l
c010cd69	obj/kernel.asm	/^c010cd69:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010cd6c	obj/kernel.asm	/^c010cd6c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010cd73	obj/kernel.asm	/^c010cd73:	00 $/;"	l
c010cd74	obj/kernel.asm	/^c010cd74:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010cd77	obj/kernel.asm	/^c010cd77:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010cd7b	obj/kernel.asm	/^c010cd7b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cd7e	obj/kernel.asm	/^c010cd7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cd81	obj/kernel.asm	/^c010cd81:	e8 ad eb ff ff       	call   c010b933 <sysfile_seek>$/;"	l
c010cd86	obj/kernel.asm	/^c010cd86:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cd89	obj/kernel.asm	/^c010cd89:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cd8d	obj/kernel.asm	/^c010cd8d:	74 05                	je     c010cd94 <load_icode_read+0x2e>$/;"	l
c010cd8f	obj/kernel.asm	/^c010cd8f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cd92	obj/kernel.asm	/^c010cd92:	eb 38                	jmp    c010cdcc <load_icode_read+0x66>$/;"	l
c010cd94	obj/kernel.asm	/^c010cd94:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010cd97	obj/kernel.asm	/^c010cd97:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010cd9b	obj/kernel.asm	/^c010cd9b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010cd9e	obj/kernel.asm	/^c010cd9e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010cda2	obj/kernel.asm	/^c010cda2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cda5	obj/kernel.asm	/^c010cda5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cda8	obj/kernel.asm	/^c010cda8:	e8 94 e8 ff ff       	call   c010b641 <sysfile_read>$/;"	l
c010cdad	obj/kernel.asm	/^c010cdad:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cdb0	obj/kernel.asm	/^c010cdb0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cdb3	obj/kernel.asm	/^c010cdb3:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010cdb6	obj/kernel.asm	/^c010cdb6:	74 0f                	je     c010cdc7 <load_icode_read+0x61>$/;"	l
c010cdb8	obj/kernel.asm	/^c010cdb8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010cdbd	obj/kernel.asm	/^c010cdbd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cdc1	obj/kernel.asm	/^c010cdc1:	0f 48 45 f4          	cmovs  -0xc(%ebp),%eax$/;"	l
c010cdc5	obj/kernel.asm	/^c010cdc5:	eb 05                	jmp    c010cdcc <load_icode_read+0x66>$/;"	l
c010cdc7	obj/kernel.asm	/^c010cdc7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010cdcc	obj/kernel.asm	/^c010cdcc:	c9                   	leave  $/;"	l
c010cdcd	obj/kernel.asm	/^c010cdcd:	c3                   	ret    $/;"	l
c010cdce	obj/kernel.asm	/^c010cdce <load_icode>:$/;"	l
c010cdce	obj/kernel.asm	/^c010cdce:	55                   	push   %ebp$/;"	l
c010cdcf	obj/kernel.asm	/^c010cdcf:	89 e5                	mov    %esp,%ebp$/;"	l
c010cdd1	obj/kernel.asm	/^c010cdd1:	53                   	push   %ebx$/;"	l
c010cdd2	obj/kernel.asm	/^c010cdd2:	81 ec e4 00 00 00    	sub    $0xe4,%esp$/;"	l
c010cdd8	obj/kernel.asm	/^c010cdd8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010cddc	obj/kernel.asm	/^c010cddc:	78 06                	js     c010cde4 <load_icode+0x16>$/;"	l
c010cdde	obj/kernel.asm	/^c010cdde:	83 7d 0c 20          	cmpl   $0x20,0xc(%ebp)$/;"	l
c010cde2	obj/kernel.asm	/^c010cde2:	7e 24                	jle    c010ce08 <load_icode+0x3a>$/;"	l
c010cde4	obj/kernel.asm	/^c010cde4:	c7 44 24 0c f8 80 11 	movl   $0xc01180f8,0xc(%esp)$/;"	l
c010cdeb	obj/kernel.asm	/^c010cdeb:	c0 $/;"	l
c010cdec	obj/kernel.asm	/^c010cdec:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010cdf3	obj/kernel.asm	/^c010cdf3:	c0 $/;"	l
c010cdf4	obj/kernel.asm	/^c010cdf4:	c7 44 24 04 67 02 00 	movl   $0x267,0x4(%esp)$/;"	l
c010cdfb	obj/kernel.asm	/^c010cdfb:	00 $/;"	l
c010cdfc	obj/kernel.asm	/^c010cdfc:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010ce03	obj/kernel.asm	/^c010ce03:	e8 c0 40 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ce08	obj/kernel.asm	/^c010ce08:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010ce0d	obj/kernel.asm	/^c010ce0d:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ce10	obj/kernel.asm	/^c010ce10:	85 c0                	test   %eax,%eax$/;"	l
c010ce12	obj/kernel.asm	/^c010ce12:	74 1c                	je     c010ce30 <load_icode+0x62>$/;"	l
c010ce14	obj/kernel.asm	/^c010ce14:	c7 44 24 08 20 81 11 	movl   $0xc0118120,0x8(%esp)$/;"	l
c010ce1b	obj/kernel.asm	/^c010ce1b:	c0 $/;"	l
c010ce1c	obj/kernel.asm	/^c010ce1c:	c7 44 24 04 6a 02 00 	movl   $0x26a,0x4(%esp)$/;"	l
c010ce23	obj/kernel.asm	/^c010ce23:	00 $/;"	l
c010ce24	obj/kernel.asm	/^c010ce24:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010ce2b	obj/kernel.asm	/^c010ce2b:	e8 98 40 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ce30	obj/kernel.asm	/^c010ce30:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010ce37	obj/kernel.asm	/^c010ce37:	e8 15 b1 ff ff       	call   c0107f51 <mm_create>$/;"	l
c010ce3c	obj/kernel.asm	/^c010ce3c:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010ce3f	obj/kernel.asm	/^c010ce3f:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c010ce43	obj/kernel.asm	/^c010ce43:	75 06                	jne    c010ce4b <load_icode+0x7d>$/;"	l
c010ce45	obj/kernel.asm	/^c010ce45:	90                   	nop$/;"	l
c010ce46	obj/kernel.asm	/^c010ce46:	e9 85 07 00 00       	jmp    c010d5d0 <load_icode+0x802>$/;"	l
c010ce4b	obj/kernel.asm	/^c010ce4b:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010ce4e	obj/kernel.asm	/^c010ce4e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ce51	obj/kernel.asm	/^c010ce51:	e8 24 f8 ff ff       	call   c010c67a <setup_pgdir>$/;"	l
c010ce56	obj/kernel.asm	/^c010ce56:	85 c0                	test   %eax,%eax$/;"	l
c010ce58	obj/kernel.asm	/^c010ce58:	74 05                	je     c010ce5f <load_icode+0x91>$/;"	l
c010ce5a	obj/kernel.asm	/^c010ce5a:	e9 8c 07 00 00       	jmp    c010d5eb <load_icode+0x81d>$/;"	l
c010ce5f	obj/kernel.asm	/^c010ce5f:	8d 85 64 ff ff ff    	lea    -0x9c(%ebp),%eax$/;"	l
c010ce65	obj/kernel.asm	/^c010ce65:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010ce68	obj/kernel.asm	/^c010ce68:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010ce6f	obj/kernel.asm	/^c010ce6f:	00 $/;"	l
c010ce70	obj/kernel.asm	/^c010ce70:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
c010ce77	obj/kernel.asm	/^c010ce77:	00 $/;"	l
c010ce78	obj/kernel.asm	/^c010ce78:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010ce7b	obj/kernel.asm	/^c010ce7b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ce7f	obj/kernel.asm	/^c010ce7f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ce82	obj/kernel.asm	/^c010ce82:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ce85	obj/kernel.asm	/^c010ce85:	e8 dc fe ff ff       	call   c010cd66 <load_icode_read>$/;"	l
c010ce8a	obj/kernel.asm	/^c010ce8a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ce8d	obj/kernel.asm	/^c010ce8d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ce91	obj/kernel.asm	/^c010ce91:	74 05                	je     c010ce98 <load_icode+0xca>$/;"	l
c010ce93	obj/kernel.asm	/^c010ce93:	e9 48 07 00 00       	jmp    c010d5e0 <load_icode+0x812>$/;"	l
c010ce98	obj/kernel.asm	/^c010ce98:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010ce9b	obj/kernel.asm	/^c010ce9b:	8b 00                	mov    (%eax),%eax$/;"	l
c010ce9d	obj/kernel.asm	/^c010ce9d:	3d 7f 45 4c 46       	cmp    $0x464c457f,%eax$/;"	l
c010cea2	obj/kernel.asm	/^c010cea2:	74 0c                	je     c010ceb0 <load_icode+0xe2>$/;"	l
c010cea4	obj/kernel.asm	/^c010cea4:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c010ceab	obj/kernel.asm	/^c010ceab:	e9 30 07 00 00       	jmp    c010d5e0 <load_icode+0x812>$/;"	l
c010ceb0	obj/kernel.asm	/^c010ceb0:	8d 85 44 ff ff ff    	lea    -0xbc(%ebp),%eax$/;"	l
c010ceb6	obj/kernel.asm	/^c010ceb6:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010ceb9	obj/kernel.asm	/^c010ceb9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c010cec0	obj/kernel.asm	/^c010cec0:	e9 76 03 00 00       	jmp    c010d23b <load_icode+0x46d>$/;"	l
c010cec5	obj/kernel.asm	/^c010cec5:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010cec8	obj/kernel.asm	/^c010cec8:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010cecb	obj/kernel.asm	/^c010cecb:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010cece	obj/kernel.asm	/^c010cece:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c010ced1	obj/kernel.asm	/^c010ced1:	01 d0                	add    %edx,%eax$/;"	l
c010ced3	obj/kernel.asm	/^c010ced3:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010ced6	obj/kernel.asm	/^c010ced6:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c010ced9	obj/kernel.asm	/^c010ced9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010cedd	obj/kernel.asm	/^c010cedd:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%esp)$/;"	l
c010cee4	obj/kernel.asm	/^c010cee4:	00 $/;"	l
c010cee5	obj/kernel.asm	/^c010cee5:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cee8	obj/kernel.asm	/^c010cee8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ceec	obj/kernel.asm	/^c010ceec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ceef	obj/kernel.asm	/^c010ceef:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cef2	obj/kernel.asm	/^c010cef2:	e8 6f fe ff ff       	call   c010cd66 <load_icode_read>$/;"	l
c010cef7	obj/kernel.asm	/^c010cef7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cefa	obj/kernel.asm	/^c010cefa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cefe	obj/kernel.asm	/^c010cefe:	74 05                	je     c010cf05 <load_icode+0x137>$/;"	l
c010cf00	obj/kernel.asm	/^c010cf00:	e9 d0 06 00 00       	jmp    c010d5d5 <load_icode+0x807>$/;"	l
c010cf05	obj/kernel.asm	/^c010cf05:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cf08	obj/kernel.asm	/^c010cf08:	8b 00                	mov    (%eax),%eax$/;"	l
c010cf0a	obj/kernel.asm	/^c010cf0a:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010cf0d	obj/kernel.asm	/^c010cf0d:	74 05                	je     c010cf14 <load_icode+0x146>$/;"	l
c010cf0f	obj/kernel.asm	/^c010cf0f:	e9 23 03 00 00       	jmp    c010d237 <load_icode+0x469>$/;"	l
c010cf14	obj/kernel.asm	/^c010cf14:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cf17	obj/kernel.asm	/^c010cf17:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010cf1a	obj/kernel.asm	/^c010cf1a:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cf1d	obj/kernel.asm	/^c010cf1d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010cf20	obj/kernel.asm	/^c010cf20:	39 c2                	cmp    %eax,%edx$/;"	l
c010cf22	obj/kernel.asm	/^c010cf22:	76 0c                	jbe    c010cf30 <load_icode+0x162>$/;"	l
c010cf24	obj/kernel.asm	/^c010cf24:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c010cf2b	obj/kernel.asm	/^c010cf2b:	e9 a5 06 00 00       	jmp    c010d5d5 <load_icode+0x807>$/;"	l
c010cf30	obj/kernel.asm	/^c010cf30:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cf33	obj/kernel.asm	/^c010cf33:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010cf36	obj/kernel.asm	/^c010cf36:	85 c0                	test   %eax,%eax$/;"	l
c010cf38	obj/kernel.asm	/^c010cf38:	75 05                	jne    c010cf3f <load_icode+0x171>$/;"	l
c010cf3a	obj/kernel.asm	/^c010cf3a:	e9 f8 02 00 00       	jmp    c010d237 <load_icode+0x469>$/;"	l
c010cf3f	obj/kernel.asm	/^c010cf3f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010cf46	obj/kernel.asm	/^c010cf46:	c7 45 e8 04 00 00 00 	movl   $0x4,-0x18(%ebp)$/;"	l
c010cf4d	obj/kernel.asm	/^c010cf4d:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cf50	obj/kernel.asm	/^c010cf50:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010cf53	obj/kernel.asm	/^c010cf53:	83 e0 01             	and    $0x1,%eax$/;"	l
c010cf56	obj/kernel.asm	/^c010cf56:	85 c0                	test   %eax,%eax$/;"	l
c010cf58	obj/kernel.asm	/^c010cf58:	74 04                	je     c010cf5e <load_icode+0x190>$/;"	l
c010cf5a	obj/kernel.asm	/^c010cf5a:	83 4d ec 04          	orl    $0x4,-0x14(%ebp)$/;"	l
c010cf5e	obj/kernel.asm	/^c010cf5e:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cf61	obj/kernel.asm	/^c010cf61:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010cf64	obj/kernel.asm	/^c010cf64:	83 e0 02             	and    $0x2,%eax$/;"	l
c010cf67	obj/kernel.asm	/^c010cf67:	85 c0                	test   %eax,%eax$/;"	l
c010cf69	obj/kernel.asm	/^c010cf69:	74 04                	je     c010cf6f <load_icode+0x1a1>$/;"	l
c010cf6b	obj/kernel.asm	/^c010cf6b:	83 4d ec 02          	orl    $0x2,-0x14(%ebp)$/;"	l
c010cf6f	obj/kernel.asm	/^c010cf6f:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cf72	obj/kernel.asm	/^c010cf72:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010cf75	obj/kernel.asm	/^c010cf75:	83 e0 04             	and    $0x4,%eax$/;"	l
c010cf78	obj/kernel.asm	/^c010cf78:	85 c0                	test   %eax,%eax$/;"	l
c010cf7a	obj/kernel.asm	/^c010cf7a:	74 04                	je     c010cf80 <load_icode+0x1b2>$/;"	l
c010cf7c	obj/kernel.asm	/^c010cf7c:	83 4d ec 01          	orl    $0x1,-0x14(%ebp)$/;"	l
c010cf80	obj/kernel.asm	/^c010cf80:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cf83	obj/kernel.asm	/^c010cf83:	83 e0 02             	and    $0x2,%eax$/;"	l
c010cf86	obj/kernel.asm	/^c010cf86:	85 c0                	test   %eax,%eax$/;"	l
c010cf88	obj/kernel.asm	/^c010cf88:	74 04                	je     c010cf8e <load_icode+0x1c0>$/;"	l
c010cf8a	obj/kernel.asm	/^c010cf8a:	83 4d e8 02          	orl    $0x2,-0x18(%ebp)$/;"	l
c010cf8e	obj/kernel.asm	/^c010cf8e:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cf91	obj/kernel.asm	/^c010cf91:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010cf94	obj/kernel.asm	/^c010cf94:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cf97	obj/kernel.asm	/^c010cf97:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010cf9a	obj/kernel.asm	/^c010cf9a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c010cfa1	obj/kernel.asm	/^c010cfa1:	00 $/;"	l
c010cfa2	obj/kernel.asm	/^c010cfa2:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c010cfa5	obj/kernel.asm	/^c010cfa5:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c010cfa9	obj/kernel.asm	/^c010cfa9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010cfad	obj/kernel.asm	/^c010cfad:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010cfb1	obj/kernel.asm	/^c010cfb1:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010cfb4	obj/kernel.asm	/^c010cfb4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cfb7	obj/kernel.asm	/^c010cfb7:	e8 9c b3 ff ff       	call   c0108358 <mm_map>$/;"	l
c010cfbc	obj/kernel.asm	/^c010cfbc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cfbf	obj/kernel.asm	/^c010cfbf:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cfc3	obj/kernel.asm	/^c010cfc3:	74 05                	je     c010cfca <load_icode+0x1fc>$/;"	l
c010cfc5	obj/kernel.asm	/^c010cfc5:	e9 0b 06 00 00       	jmp    c010d5d5 <load_icode+0x807>$/;"	l
c010cfca	obj/kernel.asm	/^c010cfca:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cfcd	obj/kernel.asm	/^c010cfcd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010cfd0	obj/kernel.asm	/^c010cfd0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010cfd3	obj/kernel.asm	/^c010cfd3:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cfd6	obj/kernel.asm	/^c010cfd6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010cfd9	obj/kernel.asm	/^c010cfd9:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010cfdc	obj/kernel.asm	/^c010cfdc:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010cfdf	obj/kernel.asm	/^c010cfdf:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c010cfe2	obj/kernel.asm	/^c010cfe2:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c010cfe5	obj/kernel.asm	/^c010cfe5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010cfea	obj/kernel.asm	/^c010cfea:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010cfed	obj/kernel.asm	/^c010cfed:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010cff4	obj/kernel.asm	/^c010cff4:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cff7	obj/kernel.asm	/^c010cff7:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010cffa	obj/kernel.asm	/^c010cffa:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cffd	obj/kernel.asm	/^c010cffd:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010d000	obj/kernel.asm	/^c010d000:	01 d0                	add    %edx,%eax$/;"	l
c010d002	obj/kernel.asm	/^c010d002:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010d005	obj/kernel.asm	/^c010d005:	e9 b1 00 00 00       	jmp    c010d0bb <load_icode+0x2ed>$/;"	l
c010d00a	obj/kernel.asm	/^c010d00a:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d00d	obj/kernel.asm	/^c010d00d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d010	obj/kernel.asm	/^c010d010:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010d013	obj/kernel.asm	/^c010d013:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010d017	obj/kernel.asm	/^c010d017:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010d01a	obj/kernel.asm	/^c010d01a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010d01e	obj/kernel.asm	/^c010d01e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d021	obj/kernel.asm	/^c010d021:	e8 1f 90 ff ff       	call   c0106045 <pgdir_alloc_page>$/;"	l
c010d026	obj/kernel.asm	/^c010d026:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d029	obj/kernel.asm	/^c010d029:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010d02d	obj/kernel.asm	/^c010d02d:	75 0c                	jne    c010d03b <load_icode+0x26d>$/;"	l
c010d02f	obj/kernel.asm	/^c010d02f:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010d036	obj/kernel.asm	/^c010d036:	e9 9a 05 00 00       	jmp    c010d5d5 <load_icode+0x807>$/;"	l
c010d03b	obj/kernel.asm	/^c010d03b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d03e	obj/kernel.asm	/^c010d03e:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010d041	obj/kernel.asm	/^c010d041:	29 c2                	sub    %eax,%edx$/;"	l
c010d043	obj/kernel.asm	/^c010d043:	89 d0                	mov    %edx,%eax$/;"	l
c010d045	obj/kernel.asm	/^c010d045:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010d048	obj/kernel.asm	/^c010d048:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010d04d	obj/kernel.asm	/^c010d04d:	2b 45 b0             	sub    -0x50(%ebp),%eax$/;"	l
c010d050	obj/kernel.asm	/^c010d050:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010d053	obj/kernel.asm	/^c010d053:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c010d05a	obj/kernel.asm	/^c010d05a:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010d05d	obj/kernel.asm	/^c010d05d:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010d060	obj/kernel.asm	/^c010d060:	73 0d                	jae    c010d06f <load_icode+0x2a1>$/;"	l
c010d062	obj/kernel.asm	/^c010d062:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d065	obj/kernel.asm	/^c010d065:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010d068	obj/kernel.asm	/^c010d068:	29 c2                	sub    %eax,%edx$/;"	l
c010d06a	obj/kernel.asm	/^c010d06a:	89 d0                	mov    %edx,%eax$/;"	l
c010d06c	obj/kernel.asm	/^c010d06c:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010d06f	obj/kernel.asm	/^c010d06f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d072	obj/kernel.asm	/^c010d072:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d075	obj/kernel.asm	/^c010d075:	e8 ac ed ff ff       	call   c010be26 <page2kva>$/;"	l
c010d07a	obj/kernel.asm	/^c010d07a:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c010d07d	obj/kernel.asm	/^c010d07d:	01 c2                	add    %eax,%edx$/;"	l
c010d07f	obj/kernel.asm	/^c010d07f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010d082	obj/kernel.asm	/^c010d082:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d086	obj/kernel.asm	/^c010d086:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d089	obj/kernel.asm	/^c010d089:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d08d	obj/kernel.asm	/^c010d08d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010d091	obj/kernel.asm	/^c010d091:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d094	obj/kernel.asm	/^c010d094:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d097	obj/kernel.asm	/^c010d097:	e8 ca fc ff ff       	call   c010cd66 <load_icode_read>$/;"	l
c010d09c	obj/kernel.asm	/^c010d09c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d09f	obj/kernel.asm	/^c010d09f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d0a3	obj/kernel.asm	/^c010d0a3:	74 05                	je     c010d0aa <load_icode+0x2dc>$/;"	l
c010d0a5	obj/kernel.asm	/^c010d0a5:	e9 2b 05 00 00       	jmp    c010d5d5 <load_icode+0x807>$/;"	l
c010d0aa	obj/kernel.asm	/^c010d0aa:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d0ad	obj/kernel.asm	/^c010d0ad:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010d0b0	obj/kernel.asm	/^c010d0b0:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010d0b3	obj/kernel.asm	/^c010d0b3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d0b6	obj/kernel.asm	/^c010d0b6:	01 d0                	add    %edx,%eax$/;"	l
c010d0b8	obj/kernel.asm	/^c010d0b8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010d0bb	obj/kernel.asm	/^c010d0bb:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010d0be	obj/kernel.asm	/^c010d0be:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010d0c1	obj/kernel.asm	/^c010d0c1:	0f 82 43 ff ff ff    	jb     c010d00a <load_icode+0x23c>$/;"	l
c010d0c7	obj/kernel.asm	/^c010d0c7:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010d0ca	obj/kernel.asm	/^c010d0ca:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010d0cd	obj/kernel.asm	/^c010d0cd:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010d0d0	obj/kernel.asm	/^c010d0d0:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010d0d3	obj/kernel.asm	/^c010d0d3:	01 d0                	add    %edx,%eax$/;"	l
c010d0d5	obj/kernel.asm	/^c010d0d5:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010d0d8	obj/kernel.asm	/^c010d0d8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010d0db	obj/kernel.asm	/^c010d0db:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010d0de	obj/kernel.asm	/^c010d0de:	0f 83 b0 00 00 00    	jae    c010d194 <load_icode+0x3c6>$/;"	l
c010d0e4	obj/kernel.asm	/^c010d0e4:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010d0e7	obj/kernel.asm	/^c010d0e7:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010d0ea	obj/kernel.asm	/^c010d0ea:	75 05                	jne    c010d0f1 <load_icode+0x323>$/;"	l
c010d0ec	obj/kernel.asm	/^c010d0ec:	e9 46 01 00 00       	jmp    c010d237 <load_icode+0x469>$/;"	l
c010d0f1	obj/kernel.asm	/^c010d0f1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d0f4	obj/kernel.asm	/^c010d0f4:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010d0f7	obj/kernel.asm	/^c010d0f7:	29 c2                	sub    %eax,%edx$/;"	l
c010d0f9	obj/kernel.asm	/^c010d0f9:	89 d0                	mov    %edx,%eax$/;"	l
c010d0fb	obj/kernel.asm	/^c010d0fb:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c010d100	obj/kernel.asm	/^c010d100:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010d103	obj/kernel.asm	/^c010d103:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010d108	obj/kernel.asm	/^c010d108:	2b 45 b0             	sub    -0x50(%ebp),%eax$/;"	l
c010d10b	obj/kernel.asm	/^c010d10b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010d10e	obj/kernel.asm	/^c010d10e:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010d111	obj/kernel.asm	/^c010d111:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010d114	obj/kernel.asm	/^c010d114:	73 0d                	jae    c010d123 <load_icode+0x355>$/;"	l
c010d116	obj/kernel.asm	/^c010d116:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d119	obj/kernel.asm	/^c010d119:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010d11c	obj/kernel.asm	/^c010d11c:	29 c2                	sub    %eax,%edx$/;"	l
c010d11e	obj/kernel.asm	/^c010d11e:	89 d0                	mov    %edx,%eax$/;"	l
c010d120	obj/kernel.asm	/^c010d120:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010d123	obj/kernel.asm	/^c010d123:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d126	obj/kernel.asm	/^c010d126:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d129	obj/kernel.asm	/^c010d129:	e8 f8 ec ff ff       	call   c010be26 <page2kva>$/;"	l
c010d12e	obj/kernel.asm	/^c010d12e:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c010d131	obj/kernel.asm	/^c010d131:	01 c2                	add    %eax,%edx$/;"	l
c010d133	obj/kernel.asm	/^c010d133:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d136	obj/kernel.asm	/^c010d136:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d13a	obj/kernel.asm	/^c010d13a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010d141	obj/kernel.asm	/^c010d141:	00 $/;"	l
c010d142	obj/kernel.asm	/^c010d142:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010d145	obj/kernel.asm	/^c010d145:	e8 26 84 00 00       	call   c0115570 <memset>$/;"	l
c010d14a	obj/kernel.asm	/^c010d14a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d14d	obj/kernel.asm	/^c010d14d:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010d150	obj/kernel.asm	/^c010d150:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010d153	obj/kernel.asm	/^c010d153:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010d156	obj/kernel.asm	/^c010d156:	73 08                	jae    c010d160 <load_icode+0x392>$/;"	l
c010d158	obj/kernel.asm	/^c010d158:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010d15b	obj/kernel.asm	/^c010d15b:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010d15e	obj/kernel.asm	/^c010d15e:	74 34                	je     c010d194 <load_icode+0x3c6>$/;"	l
c010d160	obj/kernel.asm	/^c010d160:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010d163	obj/kernel.asm	/^c010d163:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010d166	obj/kernel.asm	/^c010d166:	72 08                	jb     c010d170 <load_icode+0x3a2>$/;"	l
c010d168	obj/kernel.asm	/^c010d168:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010d16b	obj/kernel.asm	/^c010d16b:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010d16e	obj/kernel.asm	/^c010d16e:	74 24                	je     c010d194 <load_icode+0x3c6>$/;"	l
c010d170	obj/kernel.asm	/^c010d170:	c7 44 24 0c 48 81 11 	movl   $0xc0118148,0xc(%esp)$/;"	l
c010d177	obj/kernel.asm	/^c010d177:	c0 $/;"	l
c010d178	obj/kernel.asm	/^c010d178:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010d17f	obj/kernel.asm	/^c010d17f:	c0 $/;"	l
c010d180	obj/kernel.asm	/^c010d180:	c7 44 24 04 bd 02 00 	movl   $0x2bd,0x4(%esp)$/;"	l
c010d187	obj/kernel.asm	/^c010d187:	00 $/;"	l
c010d188	obj/kernel.asm	/^c010d188:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010d18f	obj/kernel.asm	/^c010d18f:	e8 34 3d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d194	obj/kernel.asm	/^c010d194:	e9 92 00 00 00       	jmp    c010d22b <load_icode+0x45d>$/;"	l
c010d199	obj/kernel.asm	/^c010d199:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d19c	obj/kernel.asm	/^c010d19c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d19f	obj/kernel.asm	/^c010d19f:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010d1a2	obj/kernel.asm	/^c010d1a2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010d1a6	obj/kernel.asm	/^c010d1a6:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010d1a9	obj/kernel.asm	/^c010d1a9:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010d1ad	obj/kernel.asm	/^c010d1ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d1b0	obj/kernel.asm	/^c010d1b0:	e8 90 8e ff ff       	call   c0106045 <pgdir_alloc_page>$/;"	l
c010d1b5	obj/kernel.asm	/^c010d1b5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d1b8	obj/kernel.asm	/^c010d1b8:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010d1bc	obj/kernel.asm	/^c010d1bc:	75 0c                	jne    c010d1ca <load_icode+0x3fc>$/;"	l
c010d1be	obj/kernel.asm	/^c010d1be:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010d1c5	obj/kernel.asm	/^c010d1c5:	e9 0b 04 00 00       	jmp    c010d5d5 <load_icode+0x807>$/;"	l
c010d1ca	obj/kernel.asm	/^c010d1ca:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d1cd	obj/kernel.asm	/^c010d1cd:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010d1d0	obj/kernel.asm	/^c010d1d0:	29 c2                	sub    %eax,%edx$/;"	l
c010d1d2	obj/kernel.asm	/^c010d1d2:	89 d0                	mov    %edx,%eax$/;"	l
c010d1d4	obj/kernel.asm	/^c010d1d4:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010d1d7	obj/kernel.asm	/^c010d1d7:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010d1dc	obj/kernel.asm	/^c010d1dc:	2b 45 b0             	sub    -0x50(%ebp),%eax$/;"	l
c010d1df	obj/kernel.asm	/^c010d1df:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010d1e2	obj/kernel.asm	/^c010d1e2:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c010d1e9	obj/kernel.asm	/^c010d1e9:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010d1ec	obj/kernel.asm	/^c010d1ec:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010d1ef	obj/kernel.asm	/^c010d1ef:	73 0d                	jae    c010d1fe <load_icode+0x430>$/;"	l
c010d1f1	obj/kernel.asm	/^c010d1f1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d1f4	obj/kernel.asm	/^c010d1f4:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010d1f7	obj/kernel.asm	/^c010d1f7:	29 c2                	sub    %eax,%edx$/;"	l
c010d1f9	obj/kernel.asm	/^c010d1f9:	89 d0                	mov    %edx,%eax$/;"	l
c010d1fb	obj/kernel.asm	/^c010d1fb:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010d1fe	obj/kernel.asm	/^c010d1fe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d201	obj/kernel.asm	/^c010d201:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d204	obj/kernel.asm	/^c010d204:	e8 1d ec ff ff       	call   c010be26 <page2kva>$/;"	l
c010d209	obj/kernel.asm	/^c010d209:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c010d20c	obj/kernel.asm	/^c010d20c:	01 c2                	add    %eax,%edx$/;"	l
c010d20e	obj/kernel.asm	/^c010d20e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d211	obj/kernel.asm	/^c010d211:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d215	obj/kernel.asm	/^c010d215:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010d21c	obj/kernel.asm	/^c010d21c:	00 $/;"	l
c010d21d	obj/kernel.asm	/^c010d21d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010d220	obj/kernel.asm	/^c010d220:	e8 4b 83 00 00       	call   c0115570 <memset>$/;"	l
c010d225	obj/kernel.asm	/^c010d225:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d228	obj/kernel.asm	/^c010d228:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010d22b	obj/kernel.asm	/^c010d22b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010d22e	obj/kernel.asm	/^c010d22e:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010d231	obj/kernel.asm	/^c010d231:	0f 82 62 ff ff ff    	jb     c010d199 <load_icode+0x3cb>$/;"	l
c010d237	obj/kernel.asm	/^c010d237:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)$/;"	l
c010d23b	obj/kernel.asm	/^c010d23b:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010d23e	obj/kernel.asm	/^c010d23e:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c010d242	obj/kernel.asm	/^c010d242:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010d245	obj/kernel.asm	/^c010d245:	3b 45 e4             	cmp    -0x1c(%ebp),%eax$/;"	l
c010d248	obj/kernel.asm	/^c010d248:	0f 87 77 fc ff ff    	ja     c010cec5 <load_icode+0xf7>$/;"	l
c010d24e	obj/kernel.asm	/^c010d24e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d251	obj/kernel.asm	/^c010d251:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d254	obj/kernel.asm	/^c010d254:	e8 d5 e3 ff ff       	call   c010b62e <sysfile_close>$/;"	l
c010d259	obj/kernel.asm	/^c010d259:	c7 45 ec 0b 00 00 00 	movl   $0xb,-0x14(%ebp)$/;"	l
c010d260	obj/kernel.asm	/^c010d260:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c010d267	obj/kernel.asm	/^c010d267:	00 $/;"	l
c010d268	obj/kernel.asm	/^c010d268:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d26b	obj/kernel.asm	/^c010d26b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d26f	obj/kernel.asm	/^c010d26f:	c7 44 24 08 00 00 10 	movl   $0x100000,0x8(%esp)$/;"	l
c010d276	obj/kernel.asm	/^c010d276:	00 $/;"	l
c010d277	obj/kernel.asm	/^c010d277:	c7 44 24 04 00 00 f0 	movl   $0xaff00000,0x4(%esp)$/;"	l
c010d27e	obj/kernel.asm	/^c010d27e:	af $/;"	l
c010d27f	obj/kernel.asm	/^c010d27f:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d282	obj/kernel.asm	/^c010d282:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d285	obj/kernel.asm	/^c010d285:	e8 ce b0 ff ff       	call   c0108358 <mm_map>$/;"	l
c010d28a	obj/kernel.asm	/^c010d28a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d28d	obj/kernel.asm	/^c010d28d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d291	obj/kernel.asm	/^c010d291:	74 05                	je     c010d298 <load_icode+0x4ca>$/;"	l
c010d293	obj/kernel.asm	/^c010d293:	e9 3d 03 00 00       	jmp    c010d5d5 <load_icode+0x807>$/;"	l
c010d298	obj/kernel.asm	/^c010d298:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d29b	obj/kernel.asm	/^c010d29b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d29e	obj/kernel.asm	/^c010d29e:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010d2a5	obj/kernel.asm	/^c010d2a5:	00 $/;"	l
c010d2a6	obj/kernel.asm	/^c010d2a6:	c7 44 24 04 00 f0 ff 	movl   $0xaffff000,0x4(%esp)$/;"	l
c010d2ad	obj/kernel.asm	/^c010d2ad:	af $/;"	l
c010d2ae	obj/kernel.asm	/^c010d2ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d2b1	obj/kernel.asm	/^c010d2b1:	e8 8f 8d ff ff       	call   c0106045 <pgdir_alloc_page>$/;"	l
c010d2b6	obj/kernel.asm	/^c010d2b6:	85 c0                	test   %eax,%eax$/;"	l
c010d2b8	obj/kernel.asm	/^c010d2b8:	75 24                	jne    c010d2de <load_icode+0x510>$/;"	l
c010d2ba	obj/kernel.asm	/^c010d2ba:	c7 44 24 0c 84 81 11 	movl   $0xc0118184,0xc(%esp)$/;"	l
c010d2c1	obj/kernel.asm	/^c010d2c1:	c0 $/;"	l
c010d2c2	obj/kernel.asm	/^c010d2c2:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010d2c9	obj/kernel.asm	/^c010d2c9:	c0 $/;"	l
c010d2ca	obj/kernel.asm	/^c010d2ca:	c7 44 24 04 d2 02 00 	movl   $0x2d2,0x4(%esp)$/;"	l
c010d2d1	obj/kernel.asm	/^c010d2d1:	00 $/;"	l
c010d2d2	obj/kernel.asm	/^c010d2d2:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010d2d9	obj/kernel.asm	/^c010d2d9:	e8 ea 3b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d2de	obj/kernel.asm	/^c010d2de:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d2e1	obj/kernel.asm	/^c010d2e1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d2e4	obj/kernel.asm	/^c010d2e4:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010d2eb	obj/kernel.asm	/^c010d2eb:	00 $/;"	l
c010d2ec	obj/kernel.asm	/^c010d2ec:	c7 44 24 04 00 e0 ff 	movl   $0xafffe000,0x4(%esp)$/;"	l
c010d2f3	obj/kernel.asm	/^c010d2f3:	af $/;"	l
c010d2f4	obj/kernel.asm	/^c010d2f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d2f7	obj/kernel.asm	/^c010d2f7:	e8 49 8d ff ff       	call   c0106045 <pgdir_alloc_page>$/;"	l
c010d2fc	obj/kernel.asm	/^c010d2fc:	85 c0                	test   %eax,%eax$/;"	l
c010d2fe	obj/kernel.asm	/^c010d2fe:	75 24                	jne    c010d324 <load_icode+0x556>$/;"	l
c010d300	obj/kernel.asm	/^c010d300:	c7 44 24 0c c8 81 11 	movl   $0xc01181c8,0xc(%esp)$/;"	l
c010d307	obj/kernel.asm	/^c010d307:	c0 $/;"	l
c010d308	obj/kernel.asm	/^c010d308:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010d30f	obj/kernel.asm	/^c010d30f:	c0 $/;"	l
c010d310	obj/kernel.asm	/^c010d310:	c7 44 24 04 d3 02 00 	movl   $0x2d3,0x4(%esp)$/;"	l
c010d317	obj/kernel.asm	/^c010d317:	00 $/;"	l
c010d318	obj/kernel.asm	/^c010d318:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010d31f	obj/kernel.asm	/^c010d31f:	e8 a4 3b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d324	obj/kernel.asm	/^c010d324:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d327	obj/kernel.asm	/^c010d327:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d32a	obj/kernel.asm	/^c010d32a:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010d331	obj/kernel.asm	/^c010d331:	00 $/;"	l
c010d332	obj/kernel.asm	/^c010d332:	c7 44 24 04 00 d0 ff 	movl   $0xafffd000,0x4(%esp)$/;"	l
c010d339	obj/kernel.asm	/^c010d339:	af $/;"	l
c010d33a	obj/kernel.asm	/^c010d33a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d33d	obj/kernel.asm	/^c010d33d:	e8 03 8d ff ff       	call   c0106045 <pgdir_alloc_page>$/;"	l
c010d342	obj/kernel.asm	/^c010d342:	85 c0                	test   %eax,%eax$/;"	l
c010d344	obj/kernel.asm	/^c010d344:	75 24                	jne    c010d36a <load_icode+0x59c>$/;"	l
c010d346	obj/kernel.asm	/^c010d346:	c7 44 24 0c 0c 82 11 	movl   $0xc011820c,0xc(%esp)$/;"	l
c010d34d	obj/kernel.asm	/^c010d34d:	c0 $/;"	l
c010d34e	obj/kernel.asm	/^c010d34e:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010d355	obj/kernel.asm	/^c010d355:	c0 $/;"	l
c010d356	obj/kernel.asm	/^c010d356:	c7 44 24 04 d4 02 00 	movl   $0x2d4,0x4(%esp)$/;"	l
c010d35d	obj/kernel.asm	/^c010d35d:	00 $/;"	l
c010d35e	obj/kernel.asm	/^c010d35e:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010d365	obj/kernel.asm	/^c010d365:	e8 5e 3b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d36a	obj/kernel.asm	/^c010d36a:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d36d	obj/kernel.asm	/^c010d36d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d370	obj/kernel.asm	/^c010d370:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010d377	obj/kernel.asm	/^c010d377:	00 $/;"	l
c010d378	obj/kernel.asm	/^c010d378:	c7 44 24 04 00 c0 ff 	movl   $0xafffc000,0x4(%esp)$/;"	l
c010d37f	obj/kernel.asm	/^c010d37f:	af $/;"	l
c010d380	obj/kernel.asm	/^c010d380:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d383	obj/kernel.asm	/^c010d383:	e8 bd 8c ff ff       	call   c0106045 <pgdir_alloc_page>$/;"	l
c010d388	obj/kernel.asm	/^c010d388:	85 c0                	test   %eax,%eax$/;"	l
c010d38a	obj/kernel.asm	/^c010d38a:	75 24                	jne    c010d3b0 <load_icode+0x5e2>$/;"	l
c010d38c	obj/kernel.asm	/^c010d38c:	c7 44 24 0c 50 82 11 	movl   $0xc0118250,0xc(%esp)$/;"	l
c010d393	obj/kernel.asm	/^c010d393:	c0 $/;"	l
c010d394	obj/kernel.asm	/^c010d394:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010d39b	obj/kernel.asm	/^c010d39b:	c0 $/;"	l
c010d39c	obj/kernel.asm	/^c010d39c:	c7 44 24 04 d5 02 00 	movl   $0x2d5,0x4(%esp)$/;"	l
c010d3a3	obj/kernel.asm	/^c010d3a3:	00 $/;"	l
c010d3a4	obj/kernel.asm	/^c010d3a4:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010d3ab	obj/kernel.asm	/^c010d3ab:	e8 18 3b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d3b0	obj/kernel.asm	/^c010d3b0:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d3b3	obj/kernel.asm	/^c010d3b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d3b6	obj/kernel.asm	/^c010d3b6:	e8 09 eb ff ff       	call   c010bec4 <mm_count_inc>$/;"	l
c010d3bb	obj/kernel.asm	/^c010d3bb:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010d3c0	obj/kernel.asm	/^c010d3c0:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c010d3c3	obj/kernel.asm	/^c010d3c3:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010d3c6	obj/kernel.asm	/^c010d3c6:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010d3cb	obj/kernel.asm	/^c010d3cb:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c010d3ce	obj/kernel.asm	/^c010d3ce:	8b 52 0c             	mov    0xc(%edx),%edx$/;"	l
c010d3d1	obj/kernel.asm	/^c010d3d1:	89 55 ac             	mov    %edx,-0x54(%ebp)$/;"	l
c010d3d4	obj/kernel.asm	/^c010d3d4:	81 7d ac ff ff ff bf 	cmpl   $0xbfffffff,-0x54(%ebp)$/;"	l
c010d3db	obj/kernel.asm	/^c010d3db:	77 23                	ja     c010d400 <load_icode+0x632>$/;"	l
c010d3dd	obj/kernel.asm	/^c010d3dd:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c010d3e0	obj/kernel.asm	/^c010d3e0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d3e4	obj/kernel.asm	/^c010d3e4:	c7 44 24 08 3c 80 11 	movl   $0xc011803c,0x8(%esp)$/;"	l
c010d3eb	obj/kernel.asm	/^c010d3eb:	c0 $/;"	l
c010d3ec	obj/kernel.asm	/^c010d3ec:	c7 44 24 04 d9 02 00 	movl   $0x2d9,0x4(%esp)$/;"	l
c010d3f3	obj/kernel.asm	/^c010d3f3:	00 $/;"	l
c010d3f4	obj/kernel.asm	/^c010d3f4:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010d3fb	obj/kernel.asm	/^c010d3fb:	e8 c8 3a ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d400	obj/kernel.asm	/^c010d400:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c010d403	obj/kernel.asm	/^c010d403:	81 c2 00 00 00 40    	add    $0x40000000,%edx$/;"	l
c010d409	obj/kernel.asm	/^c010d409:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010d40c	obj/kernel.asm	/^c010d40c:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d40f	obj/kernel.asm	/^c010d40f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d412	obj/kernel.asm	/^c010d412:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c010d415	obj/kernel.asm	/^c010d415:	81 7d a8 ff ff ff bf 	cmpl   $0xbfffffff,-0x58(%ebp)$/;"	l
c010d41c	obj/kernel.asm	/^c010d41c:	77 23                	ja     c010d441 <load_icode+0x673>$/;"	l
c010d41e	obj/kernel.asm	/^c010d41e:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c010d421	obj/kernel.asm	/^c010d421:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d425	obj/kernel.asm	/^c010d425:	c7 44 24 08 3c 80 11 	movl   $0xc011803c,0x8(%esp)$/;"	l
c010d42c	obj/kernel.asm	/^c010d42c:	c0 $/;"	l
c010d42d	obj/kernel.asm	/^c010d42d:	c7 44 24 04 da 02 00 	movl   $0x2da,0x4(%esp)$/;"	l
c010d434	obj/kernel.asm	/^c010d434:	00 $/;"	l
c010d435	obj/kernel.asm	/^c010d435:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010d43c	obj/kernel.asm	/^c010d43c:	e8 87 3a ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d441	obj/kernel.asm	/^c010d441:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c010d444	obj/kernel.asm	/^c010d444:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010d449	obj/kernel.asm	/^c010d449:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c010d44c	obj/kernel.asm	/^c010d44c:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c010d44f	obj/kernel.asm	/^c010d44f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010d452	obj/kernel.asm	/^c010d452:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
c010d459	obj/kernel.asm	/^c010d459:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c010d460	obj/kernel.asm	/^c010d460:	eb 30                	jmp    c010d492 <load_icode+0x6c4>$/;"	l
c010d462	obj/kernel.asm	/^c010d462:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010d465	obj/kernel.asm	/^c010d465:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d46c	obj/kernel.asm	/^c010d46c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d46f	obj/kernel.asm	/^c010d46f:	01 d0                	add    %edx,%eax$/;"	l
c010d471	obj/kernel.asm	/^c010d471:	8b 00                	mov    (%eax),%eax$/;"	l
c010d473	obj/kernel.asm	/^c010d473:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c010d47a	obj/kernel.asm	/^c010d47a:	00 $/;"	l
c010d47b	obj/kernel.asm	/^c010d47b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d47e	obj/kernel.asm	/^c010d47e:	e8 bf 7d 00 00       	call   c0115242 <strnlen>$/;"	l
c010d483	obj/kernel.asm	/^c010d483:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010d486	obj/kernel.asm	/^c010d486:	01 d0                	add    %edx,%eax$/;"	l
c010d488	obj/kernel.asm	/^c010d488:	83 c0 01             	add    $0x1,%eax$/;"	l
c010d48b	obj/kernel.asm	/^c010d48b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010d48e	obj/kernel.asm	/^c010d48e:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)$/;"	l
c010d492	obj/kernel.asm	/^c010d492:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d495	obj/kernel.asm	/^c010d495:	3b 45 cc             	cmp    -0x34(%ebp),%eax$/;"	l
c010d498	obj/kernel.asm	/^c010d498:	77 c8                	ja     c010d462 <load_icode+0x694>$/;"	l
c010d49a	obj/kernel.asm	/^c010d49a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010d49d	obj/kernel.asm	/^c010d49d:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010d4a0	obj/kernel.asm	/^c010d4a0:	89 c2                	mov    %eax,%edx$/;"	l
c010d4a2	obj/kernel.asm	/^c010d4a2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d4a7	obj/kernel.asm	/^c010d4a7:	29 d0                	sub    %edx,%eax$/;"	l
c010d4a9	obj/kernel.asm	/^c010d4a9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010d4ac	obj/kernel.asm	/^c010d4ac:	2d 04 00 00 50       	sub    $0x50000004,%eax$/;"	l
c010d4b1	obj/kernel.asm	/^c010d4b1:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c010d4b4	obj/kernel.asm	/^c010d4b4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d4b7	obj/kernel.asm	/^c010d4b7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d4be	obj/kernel.asm	/^c010d4be:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c010d4c1	obj/kernel.asm	/^c010d4c1:	29 d0                	sub    %edx,%eax$/;"	l
c010d4c3	obj/kernel.asm	/^c010d4c3:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c010d4c6	obj/kernel.asm	/^c010d4c6:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
c010d4cd	obj/kernel.asm	/^c010d4cd:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c010d4d4	obj/kernel.asm	/^c010d4d4:	eb 67                	jmp    c010d53d <load_icode+0x76f>$/;"	l
c010d4d6	obj/kernel.asm	/^c010d4d6:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010d4d9	obj/kernel.asm	/^c010d4d9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d4e0	obj/kernel.asm	/^c010d4e0:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c010d4e3	obj/kernel.asm	/^c010d4e3:	8d 1c 02             	lea    (%edx,%eax,1),%ebx$/;"	l
c010d4e6	obj/kernel.asm	/^c010d4e6:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010d4e9	obj/kernel.asm	/^c010d4e9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d4f0	obj/kernel.asm	/^c010d4f0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d4f3	obj/kernel.asm	/^c010d4f3:	01 d0                	add    %edx,%eax$/;"	l
c010d4f5	obj/kernel.asm	/^c010d4f5:	8b 10                	mov    (%eax),%edx$/;"	l
c010d4f7	obj/kernel.asm	/^c010d4f7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010d4fa	obj/kernel.asm	/^c010d4fa:	8b 4d a4             	mov    -0x5c(%ebp),%ecx$/;"	l
c010d4fd	obj/kernel.asm	/^c010d4fd:	01 c8                	add    %ecx,%eax$/;"	l
c010d4ff	obj/kernel.asm	/^c010d4ff:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010d503	obj/kernel.asm	/^c010d503:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d506	obj/kernel.asm	/^c010d506:	e8 8e 7d 00 00       	call   c0115299 <strcpy>$/;"	l
c010d50b	obj/kernel.asm	/^c010d50b:	89 03                	mov    %eax,(%ebx)$/;"	l
c010d50d	obj/kernel.asm	/^c010d50d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010d510	obj/kernel.asm	/^c010d510:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d517	obj/kernel.asm	/^c010d517:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d51a	obj/kernel.asm	/^c010d51a:	01 d0                	add    %edx,%eax$/;"	l
c010d51c	obj/kernel.asm	/^c010d51c:	8b 00                	mov    (%eax),%eax$/;"	l
c010d51e	obj/kernel.asm	/^c010d51e:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c010d525	obj/kernel.asm	/^c010d525:	00 $/;"	l
c010d526	obj/kernel.asm	/^c010d526:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d529	obj/kernel.asm	/^c010d529:	e8 14 7d 00 00       	call   c0115242 <strnlen>$/;"	l
c010d52e	obj/kernel.asm	/^c010d52e:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010d531	obj/kernel.asm	/^c010d531:	01 d0                	add    %edx,%eax$/;"	l
c010d533	obj/kernel.asm	/^c010d533:	83 c0 01             	add    $0x1,%eax$/;"	l
c010d536	obj/kernel.asm	/^c010d536:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010d539	obj/kernel.asm	/^c010d539:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)$/;"	l
c010d53d	obj/kernel.asm	/^c010d53d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d540	obj/kernel.asm	/^c010d540:	3b 45 cc             	cmp    -0x34(%ebp),%eax$/;"	l
c010d543	obj/kernel.asm	/^c010d543:	77 91                	ja     c010d4d6 <load_icode+0x708>$/;"	l
c010d545	obj/kernel.asm	/^c010d545:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c010d548	obj/kernel.asm	/^c010d548:	83 e8 04             	sub    $0x4,%eax$/;"	l
c010d54b	obj/kernel.asm	/^c010d54b:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c010d54e	obj/kernel.asm	/^c010d54e:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c010d551	obj/kernel.asm	/^c010d551:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010d554	obj/kernel.asm	/^c010d554:	89 10                	mov    %edx,(%eax)$/;"	l
c010d556	obj/kernel.asm	/^c010d556:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010d55b	obj/kernel.asm	/^c010d55b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010d55e	obj/kernel.asm	/^c010d55e:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c010d561	obj/kernel.asm	/^c010d561:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)$/;"	l
c010d568	obj/kernel.asm	/^c010d568:	00 $/;"	l
c010d569	obj/kernel.asm	/^c010d569:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010d570	obj/kernel.asm	/^c010d570:	00 $/;"	l
c010d571	obj/kernel.asm	/^c010d571:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d574	obj/kernel.asm	/^c010d574:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d577	obj/kernel.asm	/^c010d577:	e8 f4 7f 00 00       	call   c0115570 <memset>$/;"	l
c010d57c	obj/kernel.asm	/^c010d57c:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d57f	obj/kernel.asm	/^c010d57f:	66 c7 40 3c 1b 00    	movw   $0x1b,0x3c(%eax)$/;"	l
c010d585	obj/kernel.asm	/^c010d585:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d588	obj/kernel.asm	/^c010d588:	66 c7 40 48 23 00    	movw   $0x23,0x48(%eax)$/;"	l
c010d58e	obj/kernel.asm	/^c010d58e:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d591	obj/kernel.asm	/^c010d591:	0f b7 50 48          	movzwl 0x48(%eax),%edx$/;"	l
c010d595	obj/kernel.asm	/^c010d595:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d598	obj/kernel.asm	/^c010d598:	66 89 50 28          	mov    %dx,0x28(%eax)$/;"	l
c010d59c	obj/kernel.asm	/^c010d59c:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d59f	obj/kernel.asm	/^c010d59f:	0f b7 50 28          	movzwl 0x28(%eax),%edx$/;"	l
c010d5a3	obj/kernel.asm	/^c010d5a3:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d5a6	obj/kernel.asm	/^c010d5a6:	66 89 50 2c          	mov    %dx,0x2c(%eax)$/;"	l
c010d5aa	obj/kernel.asm	/^c010d5aa:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d5ad	obj/kernel.asm	/^c010d5ad:	8b 55 a4             	mov    -0x5c(%ebp),%edx$/;"	l
c010d5b0	obj/kernel.asm	/^c010d5b0:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010d5b3	obj/kernel.asm	/^c010d5b3:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010d5b6	obj/kernel.asm	/^c010d5b6:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010d5b9	obj/kernel.asm	/^c010d5b9:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d5bc	obj/kernel.asm	/^c010d5bc:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c010d5bf	obj/kernel.asm	/^c010d5bf:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d5c2	obj/kernel.asm	/^c010d5c2:	c7 40 40 00 02 00 00 	movl   $0x200,0x40(%eax)$/;"	l
c010d5c9	obj/kernel.asm	/^c010d5c9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010d5d0	obj/kernel.asm	/^c010d5d0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d5d3	obj/kernel.asm	/^c010d5d3:	eb 23                	jmp    c010d5f8 <load_icode+0x82a>$/;"	l
c010d5d5	obj/kernel.asm	/^c010d5d5:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d5d8	obj/kernel.asm	/^c010d5d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d5db	obj/kernel.asm	/^c010d5db:	e8 95 af ff ff       	call   c0108575 <exit_mmap>$/;"	l
c010d5e0	obj/kernel.asm	/^c010d5e0:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d5e3	obj/kernel.asm	/^c010d5e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d5e6	obj/kernel.asm	/^c010d5e6:	e8 36 f1 ff ff       	call   c010c721 <put_pgdir>$/;"	l
c010d5eb	obj/kernel.asm	/^c010d5eb:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d5ee	obj/kernel.asm	/^c010d5ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d5f1	obj/kernel.asm	/^c010d5f1:	e8 c0 ac ff ff       	call   c01082b6 <mm_destroy>$/;"	l
c010d5f6	obj/kernel.asm	/^c010d5f6:	eb d8                	jmp    c010d5d0 <load_icode+0x802>$/;"	l
c010d5f8	obj/kernel.asm	/^c010d5f8:	81 c4 e4 00 00 00    	add    $0xe4,%esp$/;"	l
c010d5fe	obj/kernel.asm	/^c010d5fe:	5b                   	pop    %ebx$/;"	l
c010d5ff	obj/kernel.asm	/^c010d5ff:	5d                   	pop    %ebp$/;"	l
c010d600	obj/kernel.asm	/^c010d600:	c3                   	ret    $/;"	l
c010d601	obj/kernel.asm	/^c010d601 <put_kargv>:$/;"	l
c010d601	obj/kernel.asm	/^c010d601:	55                   	push   %ebp$/;"	l
c010d602	obj/kernel.asm	/^c010d602:	89 e5                	mov    %esp,%ebp$/;"	l
c010d604	obj/kernel.asm	/^c010d604:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d607	obj/kernel.asm	/^c010d607:	eb 1d                	jmp    c010d626 <put_kargv+0x25>$/;"	l
c010d609	obj/kernel.asm	/^c010d609:	83 6d 08 01          	subl   $0x1,0x8(%ebp)$/;"	l
c010d60d	obj/kernel.asm	/^c010d60d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d610	obj/kernel.asm	/^c010d610:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d617	obj/kernel.asm	/^c010d617:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d61a	obj/kernel.asm	/^c010d61a:	01 d0                	add    %edx,%eax$/;"	l
c010d61c	obj/kernel.asm	/^c010d61c:	8b 00                	mov    (%eax),%eax$/;"	l
c010d61e	obj/kernel.asm	/^c010d61e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d621	obj/kernel.asm	/^c010d621:	e8 d4 76 ff ff       	call   c0104cfa <kfree>$/;"	l
c010d626	obj/kernel.asm	/^c010d626:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010d62a	obj/kernel.asm	/^c010d62a:	7f dd                	jg     c010d609 <put_kargv+0x8>$/;"	l
c010d62c	obj/kernel.asm	/^c010d62c:	c9                   	leave  $/;"	l
c010d62d	obj/kernel.asm	/^c010d62d:	c3                   	ret    $/;"	l
c010d62e	obj/kernel.asm	/^c010d62e <copy_kargv>:$/;"	l
c010d62e	obj/kernel.asm	/^c010d62e:	55                   	push   %ebp$/;"	l
c010d62f	obj/kernel.asm	/^c010d62f:	89 e5                	mov    %esp,%ebp$/;"	l
c010d631	obj/kernel.asm	/^c010d631:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d634	obj/kernel.asm	/^c010d634:	c7 45 f0 fd ff ff ff 	movl   $0xfffffffd,-0x10(%ebp)$/;"	l
c010d63b	obj/kernel.asm	/^c010d63b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d63e	obj/kernel.asm	/^c010d63e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d645	obj/kernel.asm	/^c010d645:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010d648	obj/kernel.asm	/^c010d648:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010d64f	obj/kernel.asm	/^c010d64f:	00 $/;"	l
c010d650	obj/kernel.asm	/^c010d650:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010d654	obj/kernel.asm	/^c010d654:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d658	obj/kernel.asm	/^c010d658:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d65b	obj/kernel.asm	/^c010d65b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d65e	obj/kernel.asm	/^c010d65e:	e8 ec b9 ff ff       	call   c010904f <user_mem_check>$/;"	l
c010d663	obj/kernel.asm	/^c010d663:	85 c0                	test   %eax,%eax$/;"	l
c010d665	obj/kernel.asm	/^c010d665:	75 08                	jne    c010d66f <copy_kargv+0x41>$/;"	l
c010d667	obj/kernel.asm	/^c010d667:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d66a	obj/kernel.asm	/^c010d66a:	e9 a4 00 00 00       	jmp    c010d713 <copy_kargv+0xe5>$/;"	l
c010d66f	obj/kernel.asm	/^c010d66f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010d676	obj/kernel.asm	/^c010d676:	eb 77                	jmp    c010d6ef <copy_kargv+0xc1>$/;"	l
c010d678	obj/kernel.asm	/^c010d678:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010d67f	obj/kernel.asm	/^c010d67f:	e8 5b 76 ff ff       	call   c0104cdf <kmalloc>$/;"	l
c010d684	obj/kernel.asm	/^c010d684:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d687	obj/kernel.asm	/^c010d687:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010d68b	obj/kernel.asm	/^c010d68b:	75 0a                	jne    c010d697 <copy_kargv+0x69>$/;"	l
c010d68d	obj/kernel.asm	/^c010d68d:	90                   	nop$/;"	l
c010d68e	obj/kernel.asm	/^c010d68e:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010d695	obj/kernel.asm	/^c010d695:	eb 67                	jmp    c010d6fe <copy_kargv+0xd0>$/;"	l
c010d697	obj/kernel.asm	/^c010d697:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d69a	obj/kernel.asm	/^c010d69a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d6a1	obj/kernel.asm	/^c010d6a1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010d6a4	obj/kernel.asm	/^c010d6a4:	01 d0                	add    %edx,%eax$/;"	l
c010d6a6	obj/kernel.asm	/^c010d6a6:	8b 00                	mov    (%eax),%eax$/;"	l
c010d6a8	obj/kernel.asm	/^c010d6a8:	c7 44 24 0c 00 10 00 	movl   $0x1000,0xc(%esp)$/;"	l
c010d6af	obj/kernel.asm	/^c010d6af:	00 $/;"	l
c010d6b0	obj/kernel.asm	/^c010d6b0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d6b4	obj/kernel.asm	/^c010d6b4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d6b7	obj/kernel.asm	/^c010d6b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d6bb	obj/kernel.asm	/^c010d6bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d6be	obj/kernel.asm	/^c010d6be:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d6c1	obj/kernel.asm	/^c010d6c1:	e8 ac ba ff ff       	call   c0109172 <copy_string>$/;"	l
c010d6c6	obj/kernel.asm	/^c010d6c6:	85 c0                	test   %eax,%eax$/;"	l
c010d6c8	obj/kernel.asm	/^c010d6c8:	75 0d                	jne    c010d6d7 <copy_kargv+0xa9>$/;"	l
c010d6ca	obj/kernel.asm	/^c010d6ca:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d6cd	obj/kernel.asm	/^c010d6cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d6d0	obj/kernel.asm	/^c010d6d0:	e8 25 76 ff ff       	call   c0104cfa <kfree>$/;"	l
c010d6d5	obj/kernel.asm	/^c010d6d5:	eb 27                	jmp    c010d6fe <copy_kargv+0xd0>$/;"	l
c010d6d7	obj/kernel.asm	/^c010d6d7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d6da	obj/kernel.asm	/^c010d6da:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d6e1	obj/kernel.asm	/^c010d6e1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d6e4	obj/kernel.asm	/^c010d6e4:	01 c2                	add    %eax,%edx$/;"	l
c010d6e6	obj/kernel.asm	/^c010d6e6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d6e9	obj/kernel.asm	/^c010d6e9:	89 02                	mov    %eax,(%edx)$/;"	l
c010d6eb	obj/kernel.asm	/^c010d6eb:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010d6ef	obj/kernel.asm	/^c010d6ef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d6f2	obj/kernel.asm	/^c010d6f2:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010d6f5	obj/kernel.asm	/^c010d6f5:	7c 81                	jl     c010d678 <copy_kargv+0x4a>$/;"	l
c010d6f7	obj/kernel.asm	/^c010d6f7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d6fc	obj/kernel.asm	/^c010d6fc:	eb 15                	jmp    c010d713 <copy_kargv+0xe5>$/;"	l
c010d6fe	obj/kernel.asm	/^c010d6fe:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d701	obj/kernel.asm	/^c010d701:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d705	obj/kernel.asm	/^c010d705:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d708	obj/kernel.asm	/^c010d708:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d70b	obj/kernel.asm	/^c010d70b:	e8 f1 fe ff ff       	call   c010d601 <put_kargv>$/;"	l
c010d710	obj/kernel.asm	/^c010d710:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d713	obj/kernel.asm	/^c010d713:	c9                   	leave  $/;"	l
c010d714	obj/kernel.asm	/^c010d714:	c3                   	ret    $/;"	l
c010d715	obj/kernel.asm	/^c010d715 <do_execve>:$/;"	l
c010d715	obj/kernel.asm	/^c010d715:	55                   	push   %ebp$/;"	l
c010d716	obj/kernel.asm	/^c010d716:	89 e5                	mov    %esp,%ebp$/;"	l
c010d718	obj/kernel.asm	/^c010d718:	81 ec e8 00 00 00    	sub    $0xe8,%esp$/;"	l
c010d71e	obj/kernel.asm	/^c010d71e:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010d723	obj/kernel.asm	/^c010d723:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010d726	obj/kernel.asm	/^c010d726:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d729	obj/kernel.asm	/^c010d729:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010d72d	obj/kernel.asm	/^c010d72d:	7e 06                	jle    c010d735 <do_execve+0x20>$/;"	l
c010d72f	obj/kernel.asm	/^c010d72f:	83 7d 0c 20          	cmpl   $0x20,0xc(%ebp)$/;"	l
c010d733	obj/kernel.asm	/^c010d733:	7e 0a                	jle    c010d73f <do_execve+0x2a>$/;"	l
c010d735	obj/kernel.asm	/^c010d735:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010d73a	obj/kernel.asm	/^c010d73a:	e9 11 02 00 00       	jmp    c010d950 <do_execve+0x23b>$/;"	l
c010d73f	obj/kernel.asm	/^c010d73f:	c7 44 24 08 33 00 00 	movl   $0x33,0x8(%esp)$/;"	l
c010d746	obj/kernel.asm	/^c010d746:	00 $/;"	l
c010d747	obj/kernel.asm	/^c010d747:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010d74e	obj/kernel.asm	/^c010d74e:	00 $/;"	l
c010d74f	obj/kernel.asm	/^c010d74f:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010d752	obj/kernel.asm	/^c010d752:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d755	obj/kernel.asm	/^c010d755:	e8 16 7e 00 00       	call   c0115570 <memset>$/;"	l
c010d75a	obj/kernel.asm	/^c010d75a:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010d761	obj/kernel.asm	/^c010d761:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d764	obj/kernel.asm	/^c010d764:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d767	obj/kernel.asm	/^c010d767:	e8 8c e7 ff ff       	call   c010bef8 <lock_mm>$/;"	l
c010d76c	obj/kernel.asm	/^c010d76c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010d770	obj/kernel.asm	/^c010d770:	75 29                	jne    c010d79b <do_execve+0x86>$/;"	l
c010d772	obj/kernel.asm	/^c010d772:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010d777	obj/kernel.asm	/^c010d777:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d77a	obj/kernel.asm	/^c010d77a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d77e	obj/kernel.asm	/^c010d77e:	c7 44 24 08 93 82 11 	movl   $0xc0118293,0x8(%esp)$/;"	l
c010d785	obj/kernel.asm	/^c010d785:	c0 $/;"	l
c010d786	obj/kernel.asm	/^c010d786:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
c010d78d	obj/kernel.asm	/^c010d78d:	00 $/;"	l
c010d78e	obj/kernel.asm	/^c010d78e:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010d791	obj/kernel.asm	/^c010d791:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d794	obj/kernel.asm	/^c010d794:	e8 09 79 00 00       	call   c01150a2 <snprintf>$/;"	l
c010d799	obj/kernel.asm	/^c010d799:	eb 38                	jmp    c010d7d3 <do_execve+0xbe>$/;"	l
c010d79b	obj/kernel.asm	/^c010d79b:	c7 44 24 0c 33 00 00 	movl   $0x33,0xc(%esp)$/;"	l
c010d7a2	obj/kernel.asm	/^c010d7a2:	00 $/;"	l
c010d7a3	obj/kernel.asm	/^c010d7a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d7a6	obj/kernel.asm	/^c010d7a6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d7aa	obj/kernel.asm	/^c010d7aa:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010d7ad	obj/kernel.asm	/^c010d7ad:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d7b1	obj/kernel.asm	/^c010d7b1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d7b4	obj/kernel.asm	/^c010d7b4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d7b7	obj/kernel.asm	/^c010d7b7:	e8 b6 b9 ff ff       	call   c0109172 <copy_string>$/;"	l
c010d7bc	obj/kernel.asm	/^c010d7bc:	85 c0                	test   %eax,%eax$/;"	l
c010d7be	obj/kernel.asm	/^c010d7be:	75 13                	jne    c010d7d3 <do_execve+0xbe>$/;"	l
c010d7c0	obj/kernel.asm	/^c010d7c0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d7c3	obj/kernel.asm	/^c010d7c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d7c6	obj/kernel.asm	/^c010d7c6:	e8 60 e7 ff ff       	call   c010bf2b <unlock_mm>$/;"	l
c010d7cb	obj/kernel.asm	/^c010d7cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d7ce	obj/kernel.asm	/^c010d7ce:	e9 7d 01 00 00       	jmp    c010d950 <do_execve+0x23b>$/;"	l
c010d7d3	obj/kernel.asm	/^c010d7d3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d7d6	obj/kernel.asm	/^c010d7d6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d7da	obj/kernel.asm	/^c010d7da:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010d7e0	obj/kernel.asm	/^c010d7e0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d7e4	obj/kernel.asm	/^c010d7e4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d7e7	obj/kernel.asm	/^c010d7e7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d7eb	obj/kernel.asm	/^c010d7eb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d7ee	obj/kernel.asm	/^c010d7ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d7f1	obj/kernel.asm	/^c010d7f1:	e8 38 fe ff ff       	call   c010d62e <copy_kargv>$/;"	l
c010d7f6	obj/kernel.asm	/^c010d7f6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d7f9	obj/kernel.asm	/^c010d7f9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d7fd	obj/kernel.asm	/^c010d7fd:	74 13                	je     c010d812 <do_execve+0xfd>$/;"	l
c010d7ff	obj/kernel.asm	/^c010d7ff:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d802	obj/kernel.asm	/^c010d802:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d805	obj/kernel.asm	/^c010d805:	e8 21 e7 ff ff       	call   c010bf2b <unlock_mm>$/;"	l
c010d80a	obj/kernel.asm	/^c010d80a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d80d	obj/kernel.asm	/^c010d80d:	e9 3e 01 00 00       	jmp    c010d950 <do_execve+0x23b>$/;"	l
c010d812	obj/kernel.asm	/^c010d812:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d815	obj/kernel.asm	/^c010d815:	8b 00                	mov    (%eax),%eax$/;"	l
c010d817	obj/kernel.asm	/^c010d817:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d81a	obj/kernel.asm	/^c010d81a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d81d	obj/kernel.asm	/^c010d81d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d820	obj/kernel.asm	/^c010d820:	e8 06 e7 ff ff       	call   c010bf2b <unlock_mm>$/;"	l
c010d825	obj/kernel.asm	/^c010d825:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010d82a	obj/kernel.asm	/^c010d82a:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010d830	obj/kernel.asm	/^c010d830:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d833	obj/kernel.asm	/^c010d833:	e8 9b d9 ff ff       	call   c010b1d3 <files_closeall>$/;"	l
c010d838	obj/kernel.asm	/^c010d838:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010d83f	obj/kernel.asm	/^c010d83f:	00 $/;"	l
c010d840	obj/kernel.asm	/^c010d840:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d843	obj/kernel.asm	/^c010d843:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d846	obj/kernel.asm	/^c010d846:	e8 98 dd ff ff       	call   c010b5e3 <sysfile_open>$/;"	l
c010d84b	obj/kernel.asm	/^c010d84b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d84e	obj/kernel.asm	/^c010d84e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d851	obj/kernel.asm	/^c010d851:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d854	obj/kernel.asm	/^c010d854:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d858	obj/kernel.asm	/^c010d858:	79 05                	jns    c010d85f <do_execve+0x14a>$/;"	l
c010d85a	obj/kernel.asm	/^c010d85a:	e9 ae 00 00 00       	jmp    c010d90d <do_execve+0x1f8>$/;"	l
c010d85f	obj/kernel.asm	/^c010d85f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010d863	obj/kernel.asm	/^c010d863:	74 4a                	je     c010d8af <do_execve+0x19a>$/;"	l
c010d865	obj/kernel.asm	/^c010d865:	a1 24 40 15 c0       	mov    0xc0154024,%eax$/;"	l
c010d86a	obj/kernel.asm	/^c010d86a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010d86d	obj/kernel.asm	/^c010d86d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d870	obj/kernel.asm	/^c010d870:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010d873	obj/kernel.asm	/^c010d873:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d876	obj/kernel.asm	/^c010d876:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d879	obj/kernel.asm	/^c010d879:	e8 60 e6 ff ff       	call   c010bede <mm_count_dec>$/;"	l
c010d87e	obj/kernel.asm	/^c010d87e:	85 c0                	test   %eax,%eax$/;"	l
c010d880	obj/kernel.asm	/^c010d880:	75 21                	jne    c010d8a3 <do_execve+0x18e>$/;"	l
c010d882	obj/kernel.asm	/^c010d882:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d885	obj/kernel.asm	/^c010d885:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d888	obj/kernel.asm	/^c010d888:	e8 e8 ac ff ff       	call   c0108575 <exit_mmap>$/;"	l
c010d88d	obj/kernel.asm	/^c010d88d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d890	obj/kernel.asm	/^c010d890:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d893	obj/kernel.asm	/^c010d893:	e8 89 ee ff ff       	call   c010c721 <put_pgdir>$/;"	l
c010d898	obj/kernel.asm	/^c010d898:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d89b	obj/kernel.asm	/^c010d89b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d89e	obj/kernel.asm	/^c010d89e:	e8 13 aa ff ff       	call   c01082b6 <mm_destroy>$/;"	l
c010d8a3	obj/kernel.asm	/^c010d8a3:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010d8a8	obj/kernel.asm	/^c010d8a8:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010d8af	obj/kernel.asm	/^c010d8af:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010d8b6	obj/kernel.asm	/^c010d8b6:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010d8bc	obj/kernel.asm	/^c010d8bc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d8c0	obj/kernel.asm	/^c010d8c0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d8c3	obj/kernel.asm	/^c010d8c3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d8c7	obj/kernel.asm	/^c010d8c7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d8ca	obj/kernel.asm	/^c010d8ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d8cd	obj/kernel.asm	/^c010d8cd:	e8 fc f4 ff ff       	call   c010cdce <load_icode>$/;"	l
c010d8d2	obj/kernel.asm	/^c010d8d2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d8d5	obj/kernel.asm	/^c010d8d5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d8d9	obj/kernel.asm	/^c010d8d9:	74 02                	je     c010d8dd <do_execve+0x1c8>$/;"	l
c010d8db	obj/kernel.asm	/^c010d8db:	eb 30                	jmp    c010d90d <do_execve+0x1f8>$/;"	l
c010d8dd	obj/kernel.asm	/^c010d8dd:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010d8e3	obj/kernel.asm	/^c010d8e3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d8e7	obj/kernel.asm	/^c010d8e7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d8ea	obj/kernel.asm	/^c010d8ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d8ed	obj/kernel.asm	/^c010d8ed:	e8 0f fd ff ff       	call   c010d601 <put_kargv>$/;"	l
c010d8f2	obj/kernel.asm	/^c010d8f2:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010d8f7	obj/kernel.asm	/^c010d8f7:	8d 55 b1             	lea    -0x4f(%ebp),%edx$/;"	l
c010d8fa	obj/kernel.asm	/^c010d8fa:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010d8fe	obj/kernel.asm	/^c010d8fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d901	obj/kernel.asm	/^c010d901:	e8 13 e8 ff ff       	call   c010c119 <set_proc_name>$/;"	l
c010d906	obj/kernel.asm	/^c010d906:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d90b	obj/kernel.asm	/^c010d90b:	eb 43                	jmp    c010d950 <do_execve+0x23b>$/;"	l
c010d90d	obj/kernel.asm	/^c010d90d:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010d913	obj/kernel.asm	/^c010d913:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d917	obj/kernel.asm	/^c010d917:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d91a	obj/kernel.asm	/^c010d91a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d91d	obj/kernel.asm	/^c010d91d:	e8 df fc ff ff       	call   c010d601 <put_kargv>$/;"	l
c010d922	obj/kernel.asm	/^c010d922:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d925	obj/kernel.asm	/^c010d925:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d928	obj/kernel.asm	/^c010d928:	e8 32 f2 ff ff       	call   c010cb5f <do_exit>$/;"	l
c010d92d	obj/kernel.asm	/^c010d92d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d930	obj/kernel.asm	/^c010d930:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d934	obj/kernel.asm	/^c010d934:	c7 44 24 08 9d 82 11 	movl   $0xc011829d,0x8(%esp)$/;"	l
c010d93b	obj/kernel.asm	/^c010d93b:	c0 $/;"	l
c010d93c	obj/kernel.asm	/^c010d93c:	c7 44 24 04 61 03 00 	movl   $0x361,0x4(%esp)$/;"	l
c010d943	obj/kernel.asm	/^c010d943:	00 $/;"	l
c010d944	obj/kernel.asm	/^c010d944:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010d94b	obj/kernel.asm	/^c010d94b:	e8 78 35 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d950	obj/kernel.asm	/^c010d950:	c9                   	leave  $/;"	l
c010d951	obj/kernel.asm	/^c010d951:	c3                   	ret    $/;"	l
c010d952	obj/kernel.asm	/^c010d952 <do_yield>:$/;"	l
c010d952	obj/kernel.asm	/^c010d952:	55                   	push   %ebp$/;"	l
c010d953	obj/kernel.asm	/^c010d953:	89 e5                	mov    %esp,%ebp$/;"	l
c010d955	obj/kernel.asm	/^c010d955:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010d95a	obj/kernel.asm	/^c010d95a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010d961	obj/kernel.asm	/^c010d961:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d966	obj/kernel.asm	/^c010d966:	5d                   	pop    %ebp$/;"	l
c010d967	obj/kernel.asm	/^c010d967:	c3                   	ret    $/;"	l
c010d968	obj/kernel.asm	/^c010d968 <do_wait>:$/;"	l
c010d968	obj/kernel.asm	/^c010d968:	55                   	push   %ebp$/;"	l
c010d969	obj/kernel.asm	/^c010d969:	89 e5                	mov    %esp,%ebp$/;"	l
c010d96b	obj/kernel.asm	/^c010d96b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d96e	obj/kernel.asm	/^c010d96e:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010d973	obj/kernel.asm	/^c010d973:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010d976	obj/kernel.asm	/^c010d976:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d979	obj/kernel.asm	/^c010d979:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010d97d	obj/kernel.asm	/^c010d97d:	74 30                	je     c010d9af <do_wait+0x47>$/;"	l
c010d97f	obj/kernel.asm	/^c010d97f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d982	obj/kernel.asm	/^c010d982:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c010d989	obj/kernel.asm	/^c010d989:	00 $/;"	l
c010d98a	obj/kernel.asm	/^c010d98a:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c010d991	obj/kernel.asm	/^c010d991:	00 $/;"	l
c010d992	obj/kernel.asm	/^c010d992:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d996	obj/kernel.asm	/^c010d996:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d999	obj/kernel.asm	/^c010d999:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d99c	obj/kernel.asm	/^c010d99c:	e8 ae b6 ff ff       	call   c010904f <user_mem_check>$/;"	l
c010d9a1	obj/kernel.asm	/^c010d9a1:	85 c0                	test   %eax,%eax$/;"	l
c010d9a3	obj/kernel.asm	/^c010d9a3:	75 0a                	jne    c010d9af <do_wait+0x47>$/;"	l
c010d9a5	obj/kernel.asm	/^c010d9a5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010d9aa	obj/kernel.asm	/^c010d9aa:	e9 57 01 00 00       	jmp    c010db06 <do_wait+0x19e>$/;"	l
c010d9af	obj/kernel.asm	/^c010d9af:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010d9b6	obj/kernel.asm	/^c010d9b6:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010d9ba	obj/kernel.asm	/^c010d9ba:	74 39                	je     c010d9f5 <do_wait+0x8d>$/;"	l
c010d9bc	obj/kernel.asm	/^c010d9bc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d9bf	obj/kernel.asm	/^c010d9bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d9c2	obj/kernel.asm	/^c010d9c2:	e8 6b eb ff ff       	call   c010c532 <find_proc>$/;"	l
c010d9c7	obj/kernel.asm	/^c010d9c7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d9ca	obj/kernel.asm	/^c010d9ca:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d9ce	obj/kernel.asm	/^c010d9ce:	74 5a                	je     c010da2a <do_wait+0xc2>$/;"	l
c010d9d0	obj/kernel.asm	/^c010d9d0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d9d3	obj/kernel.asm	/^c010d9d3:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010d9d6	obj/kernel.asm	/^c010d9d6:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010d9db	obj/kernel.asm	/^c010d9db:	39 c2                	cmp    %eax,%edx$/;"	l
c010d9dd	obj/kernel.asm	/^c010d9dd:	75 4b                	jne    c010da2a <do_wait+0xc2>$/;"	l
c010d9df	obj/kernel.asm	/^c010d9df:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010d9e6	obj/kernel.asm	/^c010d9e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d9e9	obj/kernel.asm	/^c010d9e9:	8b 00                	mov    (%eax),%eax$/;"	l
c010d9eb	obj/kernel.asm	/^c010d9eb:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010d9ee	obj/kernel.asm	/^c010d9ee:	75 3a                	jne    c010da2a <do_wait+0xc2>$/;"	l
c010d9f0	obj/kernel.asm	/^c010d9f0:	e9 89 00 00 00       	jmp    c010da7e <do_wait+0x116>$/;"	l
c010d9f5	obj/kernel.asm	/^c010d9f5:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010d9fa	obj/kernel.asm	/^c010d9fa:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010da00	obj/kernel.asm	/^c010da00:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010da03	obj/kernel.asm	/^c010da03:	eb 1f                	jmp    c010da24 <do_wait+0xbc>$/;"	l
c010da05	obj/kernel.asm	/^c010da05:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010da0c	obj/kernel.asm	/^c010da0c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da0f	obj/kernel.asm	/^c010da0f:	8b 00                	mov    (%eax),%eax$/;"	l
c010da11	obj/kernel.asm	/^c010da11:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010da14	obj/kernel.asm	/^c010da14:	75 02                	jne    c010da18 <do_wait+0xb0>$/;"	l
c010da16	obj/kernel.asm	/^c010da16:	eb 66                	jmp    c010da7e <do_wait+0x116>$/;"	l
c010da18	obj/kernel.asm	/^c010da18:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da1b	obj/kernel.asm	/^c010da1b:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010da21	obj/kernel.asm	/^c010da21:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010da24	obj/kernel.asm	/^c010da24:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010da28	obj/kernel.asm	/^c010da28:	75 db                	jne    c010da05 <do_wait+0x9d>$/;"	l
c010da2a	obj/kernel.asm	/^c010da2a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010da2e	obj/kernel.asm	/^c010da2e:	74 44                	je     c010da74 <do_wait+0x10c>$/;"	l
c010da30	obj/kernel.asm	/^c010da30:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010da35	obj/kernel.asm	/^c010da35:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010da3b	obj/kernel.asm	/^c010da3b:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010da40	obj/kernel.asm	/^c010da40:	c7 80 90 00 00 00 01 	movl   $0x80000001,0x90(%eax)$/;"	l
c010da47	obj/kernel.asm	/^c010da47:	00 00 80 $/;"	l
c010da4a	obj/kernel.asm	/^c010da4a:	e8 56 0c 00 00       	call   c010e6a5 <schedule>$/;"	l
c010da4f	obj/kernel.asm	/^c010da4f:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010da54	obj/kernel.asm	/^c010da54:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010da57	obj/kernel.asm	/^c010da57:	83 e0 01             	and    $0x1,%eax$/;"	l
c010da5a	obj/kernel.asm	/^c010da5a:	85 c0                	test   %eax,%eax$/;"	l
c010da5c	obj/kernel.asm	/^c010da5c:	74 11                	je     c010da6f <do_wait+0x107>$/;"	l
c010da5e	obj/kernel.asm	/^c010da5e:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c010da65	obj/kernel.asm	/^c010da65:	e8 f5 f0 ff ff       	call   c010cb5f <do_exit>$/;"	l
c010da6a	obj/kernel.asm	/^c010da6a:	e9 40 ff ff ff       	jmp    c010d9af <do_wait+0x47>$/;"	l
c010da6f	obj/kernel.asm	/^c010da6f:	e9 3b ff ff ff       	jmp    c010d9af <do_wait+0x47>$/;"	l
c010da74	obj/kernel.asm	/^c010da74:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
c010da79	obj/kernel.asm	/^c010da79:	e9 88 00 00 00       	jmp    c010db06 <do_wait+0x19e>$/;"	l
c010da7e	obj/kernel.asm	/^c010da7e:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010da83	obj/kernel.asm	/^c010da83:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010da86	obj/kernel.asm	/^c010da86:	74 0a                	je     c010da92 <do_wait+0x12a>$/;"	l
c010da88	obj/kernel.asm	/^c010da88:	a1 24 0f 15 c0       	mov    0xc0150f24,%eax$/;"	l
c010da8d	obj/kernel.asm	/^c010da8d:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010da90	obj/kernel.asm	/^c010da90:	75 1c                	jne    c010daae <do_wait+0x146>$/;"	l
c010da92	obj/kernel.asm	/^c010da92:	c7 44 24 08 b0 82 11 	movl   $0xc01182b0,0x8(%esp)$/;"	l
c010da99	obj/kernel.asm	/^c010da99:	c0 $/;"	l
c010da9a	obj/kernel.asm	/^c010da9a:	c7 44 24 04 9a 03 00 	movl   $0x39a,0x4(%esp)$/;"	l
c010daa1	obj/kernel.asm	/^c010daa1:	00 $/;"	l
c010daa2	obj/kernel.asm	/^c010daa2:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010daa9	obj/kernel.asm	/^c010daa9:	e8 1a 34 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010daae	obj/kernel.asm	/^c010daae:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010dab2	obj/kernel.asm	/^c010dab2:	74 0e                	je     c010dac2 <do_wait+0x15a>$/;"	l
c010dab4	obj/kernel.asm	/^c010dab4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dab7	obj/kernel.asm	/^c010dab7:	8b 90 8c 00 00 00    	mov    0x8c(%eax),%edx$/;"	l
c010dabd	obj/kernel.asm	/^c010dabd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010dac0	obj/kernel.asm	/^c010dac0:	89 10                	mov    %edx,(%eax)$/;"	l
c010dac2	obj/kernel.asm	/^c010dac2:	e8 a3 e2 ff ff       	call   c010bd6a <__intr_save>$/;"	l
c010dac7	obj/kernel.asm	/^c010dac7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010daca	obj/kernel.asm	/^c010daca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dacd	obj/kernel.asm	/^c010dacd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dad0	obj/kernel.asm	/^c010dad0:	e8 28 ea ff ff       	call   c010c4fd <unhash_proc>$/;"	l
c010dad5	obj/kernel.asm	/^c010dad5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dad8	obj/kernel.asm	/^c010dad8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dadb	obj/kernel.asm	/^c010dadb:	e8 78 e7 ff ff       	call   c010c258 <remove_links>$/;"	l
c010dae0	obj/kernel.asm	/^c010dae0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010dae3	obj/kernel.asm	/^c010dae3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dae6	obj/kernel.asm	/^c010dae6:	e8 a9 e2 ff ff       	call   c010bd94 <__intr_restore>$/;"	l
c010daeb	obj/kernel.asm	/^c010daeb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010daee	obj/kernel.asm	/^c010daee:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010daf1	obj/kernel.asm	/^c010daf1:	e8 5e eb ff ff       	call   c010c654 <put_kstack>$/;"	l
c010daf6	obj/kernel.asm	/^c010daf6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010daf9	obj/kernel.asm	/^c010daf9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dafc	obj/kernel.asm	/^c010dafc:	e8 f9 71 ff ff       	call   c0104cfa <kfree>$/;"	l
c010db01	obj/kernel.asm	/^c010db01:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010db06	obj/kernel.asm	/^c010db06:	c9                   	leave  $/;"	l
c010db07	obj/kernel.asm	/^c010db07:	c3                   	ret    $/;"	l
c010db08	obj/kernel.asm	/^c010db08 <do_kill>:$/;"	l
c010db08	obj/kernel.asm	/^c010db08:	55                   	push   %ebp$/;"	l
c010db09	obj/kernel.asm	/^c010db09:	89 e5                	mov    %esp,%ebp$/;"	l
c010db0b	obj/kernel.asm	/^c010db0b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010db0e	obj/kernel.asm	/^c010db0e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010db11	obj/kernel.asm	/^c010db11:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010db14	obj/kernel.asm	/^c010db14:	e8 19 ea ff ff       	call   c010c532 <find_proc>$/;"	l
c010db19	obj/kernel.asm	/^c010db19:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010db1c	obj/kernel.asm	/^c010db1c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010db20	obj/kernel.asm	/^c010db20:	74 44                	je     c010db66 <do_kill+0x5e>$/;"	l
c010db22	obj/kernel.asm	/^c010db22:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010db25	obj/kernel.asm	/^c010db25:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010db28	obj/kernel.asm	/^c010db28:	83 e0 01             	and    $0x1,%eax$/;"	l
c010db2b	obj/kernel.asm	/^c010db2b:	85 c0                	test   %eax,%eax$/;"	l
c010db2d	obj/kernel.asm	/^c010db2d:	75 30                	jne    c010db5f <do_kill+0x57>$/;"	l
c010db2f	obj/kernel.asm	/^c010db2f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010db32	obj/kernel.asm	/^c010db32:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010db35	obj/kernel.asm	/^c010db35:	83 c8 01             	or     $0x1,%eax$/;"	l
c010db38	obj/kernel.asm	/^c010db38:	89 c2                	mov    %eax,%edx$/;"	l
c010db3a	obj/kernel.asm	/^c010db3a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010db3d	obj/kernel.asm	/^c010db3d:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010db40	obj/kernel.asm	/^c010db40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010db43	obj/kernel.asm	/^c010db43:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010db49	obj/kernel.asm	/^c010db49:	85 c0                	test   %eax,%eax$/;"	l
c010db4b	obj/kernel.asm	/^c010db4b:	79 0b                	jns    c010db58 <do_kill+0x50>$/;"	l
c010db4d	obj/kernel.asm	/^c010db4d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010db50	obj/kernel.asm	/^c010db50:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010db53	obj/kernel.asm	/^c010db53:	e8 b1 0a 00 00       	call   c010e609 <wakeup_proc>$/;"	l
c010db58	obj/kernel.asm	/^c010db58:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010db5d	obj/kernel.asm	/^c010db5d:	eb 0c                	jmp    c010db6b <do_kill+0x63>$/;"	l
c010db5f	obj/kernel.asm	/^c010db5f:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax$/;"	l
c010db64	obj/kernel.asm	/^c010db64:	eb 05                	jmp    c010db6b <do_kill+0x63>$/;"	l
c010db66	obj/kernel.asm	/^c010db66:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010db6b	obj/kernel.asm	/^c010db6b:	c9                   	leave  $/;"	l
c010db6c	obj/kernel.asm	/^c010db6c:	c3                   	ret    $/;"	l
c010db6d	obj/kernel.asm	/^c010db6d <kernel_execve>:$/;"	l
c010db6d	obj/kernel.asm	/^c010db6d:	55                   	push   %ebp$/;"	l
c010db6e	obj/kernel.asm	/^c010db6e:	89 e5                	mov    %esp,%ebp$/;"	l
c010db70	obj/kernel.asm	/^c010db70:	53                   	push   %ebx$/;"	l
c010db71	obj/kernel.asm	/^c010db71:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010db74	obj/kernel.asm	/^c010db74:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c010db7b	obj/kernel.asm	/^c010db7b:	eb 04                	jmp    c010db81 <kernel_execve+0x14>$/;"	l
c010db7d	obj/kernel.asm	/^c010db7d:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c010db81	obj/kernel.asm	/^c010db81:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010db84	obj/kernel.asm	/^c010db84:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010db8b	obj/kernel.asm	/^c010db8b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010db8e	obj/kernel.asm	/^c010db8e:	01 d0                	add    %edx,%eax$/;"	l
c010db90	obj/kernel.asm	/^c010db90:	8b 00                	mov    (%eax),%eax$/;"	l
c010db92	obj/kernel.asm	/^c010db92:	85 c0                	test   %eax,%eax$/;"	l
c010db94	obj/kernel.asm	/^c010db94:	75 e7                	jne    c010db7d <kernel_execve+0x10>$/;"	l
c010db96	obj/kernel.asm	/^c010db96:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
c010db9b	obj/kernel.asm	/^c010db9b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010db9e	obj/kernel.asm	/^c010db9e:	8b 4d f8             	mov    -0x8(%ebp),%ecx$/;"	l
c010dba1	obj/kernel.asm	/^c010dba1:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c010dba4	obj/kernel.asm	/^c010dba4:	cd 80                	int    $0x80$/;"	l
c010dba6	obj/kernel.asm	/^c010dba6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dba9	obj/kernel.asm	/^c010dba9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dbac	obj/kernel.asm	/^c010dbac:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dbaf	obj/kernel.asm	/^c010dbaf:	5b                   	pop    %ebx$/;"	l
c010dbb0	obj/kernel.asm	/^c010dbb0:	5d                   	pop    %ebp$/;"	l
c010dbb1	obj/kernel.asm	/^c010dbb1:	c3                   	ret    $/;"	l
c010dbb2	obj/kernel.asm	/^c010dbb2 <user_main>:$/;"	l
c010dbb2	obj/kernel.asm	/^c010dbb2:	55                   	push   %ebp$/;"	l
c010dbb3	obj/kernel.asm	/^c010dbb3:	89 e5                	mov    %esp,%ebp$/;"	l
c010dbb5	obj/kernel.asm	/^c010dbb5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010dbb8	obj/kernel.asm	/^c010dbb8:	c7 45 f0 cc 82 11 c0 	movl   $0xc01182cc,-0x10(%ebp)$/;"	l
c010dbbf	obj/kernel.asm	/^c010dbbf:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010dbc6	obj/kernel.asm	/^c010dbc6:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010dbcb	obj/kernel.asm	/^c010dbcb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dbce	obj/kernel.asm	/^c010dbce:	c7 44 24 08 cc 82 11 	movl   $0xc01182cc,0x8(%esp)$/;"	l
c010dbd5	obj/kernel.asm	/^c010dbd5:	c0 $/;"	l
c010dbd6	obj/kernel.asm	/^c010dbd6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010dbda	obj/kernel.asm	/^c010dbda:	c7 04 24 d0 82 11 c0 	movl   $0xc01182d0,(%esp)$/;"	l
c010dbe1	obj/kernel.asm	/^c010dbe1:	e8 7f 27 ff ff       	call   c0100365 <cprintf>$/;"	l
c010dbe6	obj/kernel.asm	/^c010dbe6:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010dbe9	obj/kernel.asm	/^c010dbe9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010dbed	obj/kernel.asm	/^c010dbed:	c7 04 24 cc 82 11 c0 	movl   $0xc01182cc,(%esp)$/;"	l
c010dbf4	obj/kernel.asm	/^c010dbf4:	e8 74 ff ff ff       	call   c010db6d <kernel_execve>$/;"	l
c010dbf9	obj/kernel.asm	/^c010dbf9:	c7 44 24 08 f7 82 11 	movl   $0xc01182f7,0x8(%esp)$/;"	l
c010dc00	obj/kernel.asm	/^c010dc00:	c0 $/;"	l
c010dc01	obj/kernel.asm	/^c010dc01:	c7 44 24 04 e5 03 00 	movl   $0x3e5,0x4(%esp)$/;"	l
c010dc08	obj/kernel.asm	/^c010dc08:	00 $/;"	l
c010dc09	obj/kernel.asm	/^c010dc09:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010dc10	obj/kernel.asm	/^c010dc10:	e8 b3 32 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010dc15	obj/kernel.asm	/^c010dc15 <init_main>:$/;"	l
c010dc15	obj/kernel.asm	/^c010dc15:	55                   	push   %ebp$/;"	l
c010dc16	obj/kernel.asm	/^c010dc16:	89 e5                	mov    %esp,%ebp$/;"	l
c010dc18	obj/kernel.asm	/^c010dc18:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010dc1b	obj/kernel.asm	/^c010dc1b:	c7 04 24 11 83 11 c0 	movl   $0xc0118311,(%esp)$/;"	l
c010dc22	obj/kernel.asm	/^c010dc22:	e8 89 18 00 00       	call   c010f4b0 <vfs_set_bootfs>$/;"	l
c010dc27	obj/kernel.asm	/^c010dc27:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dc2a	obj/kernel.asm	/^c010dc2a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010dc2e	obj/kernel.asm	/^c010dc2e:	74 23                	je     c010dc53 <init_main+0x3e>$/;"	l
c010dc30	obj/kernel.asm	/^c010dc30:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dc33	obj/kernel.asm	/^c010dc33:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010dc37	obj/kernel.asm	/^c010dc37:	c7 44 24 08 18 83 11 	movl   $0xc0118318,0x8(%esp)$/;"	l
c010dc3e	obj/kernel.asm	/^c010dc3e:	c0 $/;"	l
c010dc3f	obj/kernel.asm	/^c010dc3f:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)$/;"	l
c010dc46	obj/kernel.asm	/^c010dc46:	00 $/;"	l
c010dc47	obj/kernel.asm	/^c010dc47:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010dc4e	obj/kernel.asm	/^c010dc4e:	e8 75 32 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010dc53	obj/kernel.asm	/^c010dc53:	e8 a9 75 ff ff       	call   c0105201 <nr_free_pages>$/;"	l
c010dc58	obj/kernel.asm	/^c010dc58:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010dc5b	obj/kernel.asm	/^c010dc5b:	e8 62 6f ff ff       	call   c0104bc2 <kallocated>$/;"	l
c010dc60	obj/kernel.asm	/^c010dc60:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010dc63	obj/kernel.asm	/^c010dc63:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010dc6a	obj/kernel.asm	/^c010dc6a:	00 $/;"	l
c010dc6b	obj/kernel.asm	/^c010dc6b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010dc72	obj/kernel.asm	/^c010dc72:	00 $/;"	l
c010dc73	obj/kernel.asm	/^c010dc73:	c7 04 24 b2 db 10 c0 	movl   $0xc010dbb2,(%esp)$/;"	l
c010dc7a	obj/kernel.asm	/^c010dc7a:	e8 27 e9 ff ff       	call   c010c5a6 <kernel_thread>$/;"	l
c010dc7f	obj/kernel.asm	/^c010dc7f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010dc82	obj/kernel.asm	/^c010dc82:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010dc86	obj/kernel.asm	/^c010dc86:	7f 1c                	jg     c010dca4 <init_main+0x8f>$/;"	l
c010dc88	obj/kernel.asm	/^c010dc88:	c7 44 24 08 31 83 11 	movl   $0xc0118331,0x8(%esp)$/;"	l
c010dc8f	obj/kernel.asm	/^c010dc8f:	c0 $/;"	l
c010dc90	obj/kernel.asm	/^c010dc90:	c7 44 24 04 f5 03 00 	movl   $0x3f5,0x4(%esp)$/;"	l
c010dc97	obj/kernel.asm	/^c010dc97:	00 $/;"	l
c010dc98	obj/kernel.asm	/^c010dc98:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010dc9f	obj/kernel.asm	/^c010dc9f:	e8 24 32 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010dca4	obj/kernel.asm	/^c010dca4:	e8 9d ba ff ff       	call   c0109746 <check_sync>$/;"	l
c010dca9	obj/kernel.asm	/^c010dca9:	eb 05                	jmp    c010dcb0 <init_main+0x9b>$/;"	l
c010dcab	obj/kernel.asm	/^c010dcab:	e8 f5 09 00 00       	call   c010e6a5 <schedule>$/;"	l
c010dcb0	obj/kernel.asm	/^c010dcb0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010dcb7	obj/kernel.asm	/^c010dcb7:	00 $/;"	l
c010dcb8	obj/kernel.asm	/^c010dcb8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c010dcbf	obj/kernel.asm	/^c010dcbf:	e8 a4 fc ff ff       	call   c010d968 <do_wait>$/;"	l
c010dcc4	obj/kernel.asm	/^c010dcc4:	85 c0                	test   %eax,%eax$/;"	l
c010dcc6	obj/kernel.asm	/^c010dcc6:	74 e3                	je     c010dcab <init_main+0x96>$/;"	l
c010dcc8	obj/kernel.asm	/^c010dcc8:	e8 a2 d3 ff ff       	call   c010b06f <fs_cleanup>$/;"	l
c010dccd	obj/kernel.asm	/^c010dccd:	c7 04 24 4c 83 11 c0 	movl   $0xc011834c,(%esp)$/;"	l
c010dcd4	obj/kernel.asm	/^c010dcd4:	e8 8c 26 ff ff       	call   c0100365 <cprintf>$/;"	l
c010dcd9	obj/kernel.asm	/^c010dcd9:	a1 24 0f 15 c0       	mov    0xc0150f24,%eax$/;"	l
c010dcde	obj/kernel.asm	/^c010dcde:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010dce4	obj/kernel.asm	/^c010dce4:	85 c0                	test   %eax,%eax$/;"	l
c010dce6	obj/kernel.asm	/^c010dce6:	75 1e                	jne    c010dd06 <init_main+0xf1>$/;"	l
c010dce8	obj/kernel.asm	/^c010dce8:	a1 24 0f 15 c0       	mov    0xc0150f24,%eax$/;"	l
c010dced	obj/kernel.asm	/^c010dced:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010dcf3	obj/kernel.asm	/^c010dcf3:	85 c0                	test   %eax,%eax$/;"	l
c010dcf5	obj/kernel.asm	/^c010dcf5:	75 0f                	jne    c010dd06 <init_main+0xf1>$/;"	l
c010dcf7	obj/kernel.asm	/^c010dcf7:	a1 24 0f 15 c0       	mov    0xc0150f24,%eax$/;"	l
c010dcfc	obj/kernel.asm	/^c010dcfc:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010dd02	obj/kernel.asm	/^c010dd02:	85 c0                	test   %eax,%eax$/;"	l
c010dd04	obj/kernel.asm	/^c010dd04:	74 24                	je     c010dd2a <init_main+0x115>$/;"	l
c010dd06	obj/kernel.asm	/^c010dd06:	c7 44 24 0c 70 83 11 	movl   $0xc0118370,0xc(%esp)$/;"	l
c010dd0d	obj/kernel.asm	/^c010dd0d:	c0 $/;"	l
c010dd0e	obj/kernel.asm	/^c010dd0e:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010dd15	obj/kernel.asm	/^c010dd15:	c0 $/;"	l
c010dd16	obj/kernel.asm	/^c010dd16:	c7 44 24 04 01 04 00 	movl   $0x401,0x4(%esp)$/;"	l
c010dd1d	obj/kernel.asm	/^c010dd1d:	00 $/;"	l
c010dd1e	obj/kernel.asm	/^c010dd1e:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010dd25	obj/kernel.asm	/^c010dd25:	e8 9e 31 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010dd2a	obj/kernel.asm	/^c010dd2a:	a1 40 2f 15 c0       	mov    0xc0152f40,%eax$/;"	l
c010dd2f	obj/kernel.asm	/^c010dd2f:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010dd32	obj/kernel.asm	/^c010dd32:	74 24                	je     c010dd58 <init_main+0x143>$/;"	l
c010dd34	obj/kernel.asm	/^c010dd34:	c7 44 24 0c bb 83 11 	movl   $0xc01183bb,0xc(%esp)$/;"	l
c010dd3b	obj/kernel.asm	/^c010dd3b:	c0 $/;"	l
c010dd3c	obj/kernel.asm	/^c010dd3c:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010dd43	obj/kernel.asm	/^c010dd43:	c0 $/;"	l
c010dd44	obj/kernel.asm	/^c010dd44:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)$/;"	l
c010dd4b	obj/kernel.asm	/^c010dd4b:	00 $/;"	l
c010dd4c	obj/kernel.asm	/^c010dd4c:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010dd53	obj/kernel.asm	/^c010dd53:	e8 70 31 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010dd58	obj/kernel.asm	/^c010dd58:	c7 45 e4 fc 41 15 c0 	movl   $0xc01541fc,-0x1c(%ebp)$/;"	l
c010dd5f	obj/kernel.asm	/^c010dd5f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010dd62	obj/kernel.asm	/^c010dd62:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dd65	obj/kernel.asm	/^c010dd65:	8b 15 24 0f 15 c0    	mov    0xc0150f24,%edx$/;"	l
c010dd6b	obj/kernel.asm	/^c010dd6b:	83 c2 7c             	add    $0x7c,%edx$/;"	l
c010dd6e	obj/kernel.asm	/^c010dd6e:	39 d0                	cmp    %edx,%eax$/;"	l
c010dd70	obj/kernel.asm	/^c010dd70:	74 24                	je     c010dd96 <init_main+0x181>$/;"	l
c010dd72	obj/kernel.asm	/^c010dd72:	c7 44 24 0c cc 83 11 	movl   $0xc01183cc,0xc(%esp)$/;"	l
c010dd79	obj/kernel.asm	/^c010dd79:	c0 $/;"	l
c010dd7a	obj/kernel.asm	/^c010dd7a:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010dd81	obj/kernel.asm	/^c010dd81:	c0 $/;"	l
c010dd82	obj/kernel.asm	/^c010dd82:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)$/;"	l
c010dd89	obj/kernel.asm	/^c010dd89:	00 $/;"	l
c010dd8a	obj/kernel.asm	/^c010dd8a:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010dd91	obj/kernel.asm	/^c010dd91:	e8 32 31 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010dd96	obj/kernel.asm	/^c010dd96:	c7 45 e0 fc 41 15 c0 	movl   $0xc01541fc,-0x20(%ebp)$/;"	l
c010dd9d	obj/kernel.asm	/^c010dd9d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010dda0	obj/kernel.asm	/^c010dda0:	8b 00                	mov    (%eax),%eax$/;"	l
c010dda2	obj/kernel.asm	/^c010dda2:	8b 15 24 0f 15 c0    	mov    0xc0150f24,%edx$/;"	l
c010dda8	obj/kernel.asm	/^c010dda8:	83 c2 7c             	add    $0x7c,%edx$/;"	l
c010ddab	obj/kernel.asm	/^c010ddab:	39 d0                	cmp    %edx,%eax$/;"	l
c010ddad	obj/kernel.asm	/^c010ddad:	74 24                	je     c010ddd3 <init_main+0x1be>$/;"	l
c010ddaf	obj/kernel.asm	/^c010ddaf:	c7 44 24 0c fc 83 11 	movl   $0xc01183fc,0xc(%esp)$/;"	l
c010ddb6	obj/kernel.asm	/^c010ddb6:	c0 $/;"	l
c010ddb7	obj/kernel.asm	/^c010ddb7:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010ddbe	obj/kernel.asm	/^c010ddbe:	c0 $/;"	l
c010ddbf	obj/kernel.asm	/^c010ddbf:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)$/;"	l
c010ddc6	obj/kernel.asm	/^c010ddc6:	00 $/;"	l
c010ddc7	obj/kernel.asm	/^c010ddc7:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010ddce	obj/kernel.asm	/^c010ddce:	e8 f5 30 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ddd3	obj/kernel.asm	/^c010ddd3:	e8 29 74 ff ff       	call   c0105201 <nr_free_pages>$/;"	l
c010ddd8	obj/kernel.asm	/^c010ddd8:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010dddb	obj/kernel.asm	/^c010dddb:	74 24                	je     c010de01 <init_main+0x1ec>$/;"	l
c010dddd	obj/kernel.asm	/^c010dddd:	c7 44 24 0c 2c 84 11 	movl   $0xc011842c,0xc(%esp)$/;"	l
c010dde4	obj/kernel.asm	/^c010dde4:	c0 $/;"	l
c010dde5	obj/kernel.asm	/^c010dde5:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010ddec	obj/kernel.asm	/^c010ddec:	c0 $/;"	l
c010dded	obj/kernel.asm	/^c010dded:	c7 44 24 04 05 04 00 	movl   $0x405,0x4(%esp)$/;"	l
c010ddf4	obj/kernel.asm	/^c010ddf4:	00 $/;"	l
c010ddf5	obj/kernel.asm	/^c010ddf5:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010ddfc	obj/kernel.asm	/^c010ddfc:	e8 c7 30 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010de01	obj/kernel.asm	/^c010de01:	e8 bc 6d ff ff       	call   c0104bc2 <kallocated>$/;"	l
c010de06	obj/kernel.asm	/^c010de06:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010de09	obj/kernel.asm	/^c010de09:	74 24                	je     c010de2f <init_main+0x21a>$/;"	l
c010de0b	obj/kernel.asm	/^c010de0b:	c7 44 24 0c 54 84 11 	movl   $0xc0118454,0xc(%esp)$/;"	l
c010de12	obj/kernel.asm	/^c010de12:	c0 $/;"	l
c010de13	obj/kernel.asm	/^c010de13:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010de1a	obj/kernel.asm	/^c010de1a:	c0 $/;"	l
c010de1b	obj/kernel.asm	/^c010de1b:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)$/;"	l
c010de22	obj/kernel.asm	/^c010de22:	00 $/;"	l
c010de23	obj/kernel.asm	/^c010de23:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010de2a	obj/kernel.asm	/^c010de2a:	e8 99 30 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010de2f	obj/kernel.asm	/^c010de2f:	c7 04 24 7b 84 11 c0 	movl   $0xc011847b,(%esp)$/;"	l
c010de36	obj/kernel.asm	/^c010de36:	e8 2a 25 ff ff       	call   c0100365 <cprintf>$/;"	l
c010de3b	obj/kernel.asm	/^c010de3b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010de40	obj/kernel.asm	/^c010de40:	c9                   	leave  $/;"	l
c010de41	obj/kernel.asm	/^c010de41:	c3                   	ret    $/;"	l
c010de42	obj/kernel.asm	/^c010de42 <proc_init>:$/;"	l
c010de42	obj/kernel.asm	/^c010de42:	55                   	push   %ebp$/;"	l
c010de43	obj/kernel.asm	/^c010de43:	89 e5                	mov    %esp,%ebp$/;"	l
c010de45	obj/kernel.asm	/^c010de45:	53                   	push   %ebx$/;"	l
c010de46	obj/kernel.asm	/^c010de46:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010de49	obj/kernel.asm	/^c010de49:	c7 45 ec fc 41 15 c0 	movl   $0xc01541fc,-0x14(%ebp)$/;"	l
c010de50	obj/kernel.asm	/^c010de50:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010de53	obj/kernel.asm	/^c010de53:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010de56	obj/kernel.asm	/^c010de56:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010de59	obj/kernel.asm	/^c010de59:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010de5c	obj/kernel.asm	/^c010de5c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010de5f	obj/kernel.asm	/^c010de5f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010de62	obj/kernel.asm	/^c010de62:	89 10                	mov    %edx,(%eax)$/;"	l
c010de64	obj/kernel.asm	/^c010de64:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010de6b	obj/kernel.asm	/^c010de6b:	eb 26                	jmp    c010de93 <proc_init+0x51>$/;"	l
c010de6d	obj/kernel.asm	/^c010de6d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010de70	obj/kernel.asm	/^c010de70:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010de73	obj/kernel.asm	/^c010de73:	05 40 0f 15 c0       	add    $0xc0150f40,%eax$/;"	l
c010de78	obj/kernel.asm	/^c010de78:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010de7b	obj/kernel.asm	/^c010de7b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010de7e	obj/kernel.asm	/^c010de7e:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010de81	obj/kernel.asm	/^c010de81:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010de84	obj/kernel.asm	/^c010de84:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010de87	obj/kernel.asm	/^c010de87:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010de8a	obj/kernel.asm	/^c010de8a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010de8d	obj/kernel.asm	/^c010de8d:	89 10                	mov    %edx,(%eax)$/;"	l
c010de8f	obj/kernel.asm	/^c010de8f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010de93	obj/kernel.asm	/^c010de93:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
c010de9a	obj/kernel.asm	/^c010de9a:	7e d1                	jle    c010de6d <proc_init+0x2b>$/;"	l
c010de9c	obj/kernel.asm	/^c010de9c:	e8 e4 e0 ff ff       	call   c010bf85 <alloc_proc>$/;"	l
c010dea1	obj/kernel.asm	/^c010dea1:	a3 20 0f 15 c0       	mov    %eax,0xc0150f20$/;"	l
c010dea6	obj/kernel.asm	/^c010dea6:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010deab	obj/kernel.asm	/^c010deab:	85 c0                	test   %eax,%eax$/;"	l
c010dead	obj/kernel.asm	/^c010dead:	75 1c                	jne    c010decb <proc_init+0x89>$/;"	l
c010deaf	obj/kernel.asm	/^c010deaf:	c7 44 24 08 94 84 11 	movl   $0xc0118494,0x8(%esp)$/;"	l
c010deb6	obj/kernel.asm	/^c010deb6:	c0 $/;"	l
c010deb7	obj/kernel.asm	/^c010deb7:	c7 44 24 04 17 04 00 	movl   $0x417,0x4(%esp)$/;"	l
c010debe	obj/kernel.asm	/^c010debe:	00 $/;"	l
c010debf	obj/kernel.asm	/^c010debf:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010dec6	obj/kernel.asm	/^c010dec6:	e8 fd 2f ff ff       	call   c0100ec8 <__panic>$/;"	l
c010decb	obj/kernel.asm	/^c010decb:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010ded0	obj/kernel.asm	/^c010ded0:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010ded7	obj/kernel.asm	/^c010ded7:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010dedc	obj/kernel.asm	/^c010dedc:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010dee2	obj/kernel.asm	/^c010dee2:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010dee7	obj/kernel.asm	/^c010dee7:	ba 00 d0 14 c0       	mov    $0xc014d000,%edx$/;"	l
c010deec	obj/kernel.asm	/^c010deec:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010deef	obj/kernel.asm	/^c010deef:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010def4	obj/kernel.asm	/^c010def4:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010defb	obj/kernel.asm	/^c010defb:	8b 1d 20 0f 15 c0    	mov    0xc0150f20,%ebx$/;"	l
c010df01	obj/kernel.asm	/^c010df01:	e8 a2 d1 ff ff       	call   c010b0a8 <files_create>$/;"	l
c010df06	obj/kernel.asm	/^c010df06:	89 83 c4 00 00 00    	mov    %eax,0xc4(%ebx)$/;"	l
c010df0c	obj/kernel.asm	/^c010df0c:	8b 83 c4 00 00 00    	mov    0xc4(%ebx),%eax$/;"	l
c010df12	obj/kernel.asm	/^c010df12:	85 c0                	test   %eax,%eax$/;"	l
c010df14	obj/kernel.asm	/^c010df14:	75 1c                	jne    c010df32 <proc_init+0xf0>$/;"	l
c010df16	obj/kernel.asm	/^c010df16:	c7 44 24 08 ac 84 11 	movl   $0xc01184ac,0x8(%esp)$/;"	l
c010df1d	obj/kernel.asm	/^c010df1d:	c0 $/;"	l
c010df1e	obj/kernel.asm	/^c010df1e:	c7 44 24 04 20 04 00 	movl   $0x420,0x4(%esp)$/;"	l
c010df25	obj/kernel.asm	/^c010df25:	00 $/;"	l
c010df26	obj/kernel.asm	/^c010df26:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010df2d	obj/kernel.asm	/^c010df2d:	e8 96 2f ff ff       	call   c0100ec8 <__panic>$/;"	l
c010df32	obj/kernel.asm	/^c010df32:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010df37	obj/kernel.asm	/^c010df37:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010df3d	obj/kernel.asm	/^c010df3d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010df40	obj/kernel.asm	/^c010df40:	e8 0c e0 ff ff       	call   c010bf51 <files_count_inc>$/;"	l
c010df45	obj/kernel.asm	/^c010df45:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010df4a	obj/kernel.asm	/^c010df4a:	c7 44 24 04 ce 84 11 	movl   $0xc01184ce,0x4(%esp)$/;"	l
c010df51	obj/kernel.asm	/^c010df51:	c0 $/;"	l
c010df52	obj/kernel.asm	/^c010df52:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010df55	obj/kernel.asm	/^c010df55:	e8 bf e1 ff ff       	call   c010c119 <set_proc_name>$/;"	l
c010df5a	obj/kernel.asm	/^c010df5a:	a1 40 2f 15 c0       	mov    0xc0152f40,%eax$/;"	l
c010df5f	obj/kernel.asm	/^c010df5f:	83 c0 01             	add    $0x1,%eax$/;"	l
c010df62	obj/kernel.asm	/^c010df62:	a3 40 2f 15 c0       	mov    %eax,0xc0152f40$/;"	l
c010df67	obj/kernel.asm	/^c010df67:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010df6c	obj/kernel.asm	/^c010df6c:	a3 28 0f 15 c0       	mov    %eax,0xc0150f28$/;"	l
c010df71	obj/kernel.asm	/^c010df71:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010df78	obj/kernel.asm	/^c010df78:	00 $/;"	l
c010df79	obj/kernel.asm	/^c010df79:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010df80	obj/kernel.asm	/^c010df80:	00 $/;"	l
c010df81	obj/kernel.asm	/^c010df81:	c7 04 24 15 dc 10 c0 	movl   $0xc010dc15,(%esp)$/;"	l
c010df88	obj/kernel.asm	/^c010df88:	e8 19 e6 ff ff       	call   c010c5a6 <kernel_thread>$/;"	l
c010df8d	obj/kernel.asm	/^c010df8d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010df90	obj/kernel.asm	/^c010df90:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010df94	obj/kernel.asm	/^c010df94:	7f 1c                	jg     c010dfb2 <proc_init+0x170>$/;"	l
c010df96	obj/kernel.asm	/^c010df96:	c7 44 24 08 d3 84 11 	movl   $0xc01184d3,0x8(%esp)$/;"	l
c010df9d	obj/kernel.asm	/^c010df9d:	c0 $/;"	l
c010df9e	obj/kernel.asm	/^c010df9e:	c7 44 24 04 2b 04 00 	movl   $0x42b,0x4(%esp)$/;"	l
c010dfa5	obj/kernel.asm	/^c010dfa5:	00 $/;"	l
c010dfa6	obj/kernel.asm	/^c010dfa6:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010dfad	obj/kernel.asm	/^c010dfad:	e8 16 2f ff ff       	call   c0100ec8 <__panic>$/;"	l
c010dfb2	obj/kernel.asm	/^c010dfb2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010dfb5	obj/kernel.asm	/^c010dfb5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dfb8	obj/kernel.asm	/^c010dfb8:	e8 75 e5 ff ff       	call   c010c532 <find_proc>$/;"	l
c010dfbd	obj/kernel.asm	/^c010dfbd:	a3 24 0f 15 c0       	mov    %eax,0xc0150f24$/;"	l
c010dfc2	obj/kernel.asm	/^c010dfc2:	a1 24 0f 15 c0       	mov    0xc0150f24,%eax$/;"	l
c010dfc7	obj/kernel.asm	/^c010dfc7:	c7 44 24 04 ed 84 11 	movl   $0xc01184ed,0x4(%esp)$/;"	l
c010dfce	obj/kernel.asm	/^c010dfce:	c0 $/;"	l
c010dfcf	obj/kernel.asm	/^c010dfcf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dfd2	obj/kernel.asm	/^c010dfd2:	e8 42 e1 ff ff       	call   c010c119 <set_proc_name>$/;"	l
c010dfd7	obj/kernel.asm	/^c010dfd7:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010dfdc	obj/kernel.asm	/^c010dfdc:	85 c0                	test   %eax,%eax$/;"	l
c010dfde	obj/kernel.asm	/^c010dfde:	74 0c                	je     c010dfec <proc_init+0x1aa>$/;"	l
c010dfe0	obj/kernel.asm	/^c010dfe0:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010dfe5	obj/kernel.asm	/^c010dfe5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dfe8	obj/kernel.asm	/^c010dfe8:	85 c0                	test   %eax,%eax$/;"	l
c010dfea	obj/kernel.asm	/^c010dfea:	74 24                	je     c010e010 <proc_init+0x1ce>$/;"	l
c010dfec	obj/kernel.asm	/^c010dfec:	c7 44 24 0c f4 84 11 	movl   $0xc01184f4,0xc(%esp)$/;"	l
c010dff3	obj/kernel.asm	/^c010dff3:	c0 $/;"	l
c010dff4	obj/kernel.asm	/^c010dff4:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010dffb	obj/kernel.asm	/^c010dffb:	c0 $/;"	l
c010dffc	obj/kernel.asm	/^c010dffc:	c7 44 24 04 31 04 00 	movl   $0x431,0x4(%esp)$/;"	l
c010e003	obj/kernel.asm	/^c010e003:	00 $/;"	l
c010e004	obj/kernel.asm	/^c010e004:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010e00b	obj/kernel.asm	/^c010e00b:	e8 b8 2e ff ff       	call   c0100ec8 <__panic>$/;"	l
c010e010	obj/kernel.asm	/^c010e010:	a1 24 0f 15 c0       	mov    0xc0150f24,%eax$/;"	l
c010e015	obj/kernel.asm	/^c010e015:	85 c0                	test   %eax,%eax$/;"	l
c010e017	obj/kernel.asm	/^c010e017:	74 0d                	je     c010e026 <proc_init+0x1e4>$/;"	l
c010e019	obj/kernel.asm	/^c010e019:	a1 24 0f 15 c0       	mov    0xc0150f24,%eax$/;"	l
c010e01e	obj/kernel.asm	/^c010e01e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e021	obj/kernel.asm	/^c010e021:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010e024	obj/kernel.asm	/^c010e024:	74 24                	je     c010e04a <proc_init+0x208>$/;"	l
c010e026	obj/kernel.asm	/^c010e026:	c7 44 24 0c 1c 85 11 	movl   $0xc011851c,0xc(%esp)$/;"	l
c010e02d	obj/kernel.asm	/^c010e02d:	c0 $/;"	l
c010e02e	obj/kernel.asm	/^c010e02e:	c7 44 24 08 87 80 11 	movl   $0xc0118087,0x8(%esp)$/;"	l
c010e035	obj/kernel.asm	/^c010e035:	c0 $/;"	l
c010e036	obj/kernel.asm	/^c010e036:	c7 44 24 04 32 04 00 	movl   $0x432,0x4(%esp)$/;"	l
c010e03d	obj/kernel.asm	/^c010e03d:	00 $/;"	l
c010e03e	obj/kernel.asm	/^c010e03e:	c7 04 24 60 80 11 c0 	movl   $0xc0118060,(%esp)$/;"	l
c010e045	obj/kernel.asm	/^c010e045:	e8 7e 2e ff ff       	call   c0100ec8 <__panic>$/;"	l
c010e04a	obj/kernel.asm	/^c010e04a:	83 c4 24             	add    $0x24,%esp$/;"	l
c010e04d	obj/kernel.asm	/^c010e04d:	5b                   	pop    %ebx$/;"	l
c010e04e	obj/kernel.asm	/^c010e04e:	5d                   	pop    %ebp$/;"	l
c010e04f	obj/kernel.asm	/^c010e04f:	c3                   	ret    $/;"	l
c010e050	obj/kernel.asm	/^c010e050 <cpu_idle>:$/;"	l
c010e050	obj/kernel.asm	/^c010e050:	55                   	push   %ebp$/;"	l
c010e051	obj/kernel.asm	/^c010e051:	89 e5                	mov    %esp,%ebp$/;"	l
c010e053	obj/kernel.asm	/^c010e053:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e056	obj/kernel.asm	/^c010e056:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010e05b	obj/kernel.asm	/^c010e05b:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010e05e	obj/kernel.asm	/^c010e05e:	85 c0                	test   %eax,%eax$/;"	l
c010e060	obj/kernel.asm	/^c010e060:	74 07                	je     c010e069 <cpu_idle+0x19>$/;"	l
c010e062	obj/kernel.asm	/^c010e062:	e8 3e 06 00 00       	call   c010e6a5 <schedule>$/;"	l
c010e067	obj/kernel.asm	/^c010e067:	eb ed                	jmp    c010e056 <cpu_idle+0x6>$/;"	l
c010e069	obj/kernel.asm	/^c010e069:	eb eb                	jmp    c010e056 <cpu_idle+0x6>$/;"	l
c010e06b	obj/kernel.asm	/^c010e06b <lab6_set_priority>:$/;"	l
c010e06b	obj/kernel.asm	/^c010e06b:	55                   	push   %ebp$/;"	l
c010e06c	obj/kernel.asm	/^c010e06c:	89 e5                	mov    %esp,%ebp$/;"	l
c010e06e	obj/kernel.asm	/^c010e06e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e072	obj/kernel.asm	/^c010e072:	75 11                	jne    c010e085 <lab6_set_priority+0x1a>$/;"	l
c010e074	obj/kernel.asm	/^c010e074:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010e079	obj/kernel.asm	/^c010e079:	c7 80 c0 00 00 00 01 	movl   $0x1,0xc0(%eax)$/;"	l
c010e080	obj/kernel.asm	/^c010e080:	00 00 00 $/;"	l
c010e083	obj/kernel.asm	/^c010e083:	eb 0e                	jmp    c010e093 <lab6_set_priority+0x28>$/;"	l
c010e085	obj/kernel.asm	/^c010e085:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010e08a	obj/kernel.asm	/^c010e08a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010e08d	obj/kernel.asm	/^c010e08d:	89 90 c0 00 00 00    	mov    %edx,0xc0(%eax)$/;"	l
c010e093	obj/kernel.asm	/^c010e093:	5d                   	pop    %ebp$/;"	l
c010e094	obj/kernel.asm	/^c010e094:	c3                   	ret    $/;"	l
c010e095	obj/kernel.asm	/^c010e095 <do_sleep>:$/;"	l
c010e095	obj/kernel.asm	/^c010e095:	55                   	push   %ebp$/;"	l
c010e096	obj/kernel.asm	/^c010e096:	89 e5                	mov    %esp,%ebp$/;"	l
c010e098	obj/kernel.asm	/^c010e098:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010e09b	obj/kernel.asm	/^c010e09b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e09f	obj/kernel.asm	/^c010e09f:	75 07                	jne    c010e0a8 <do_sleep+0x13>$/;"	l
c010e0a1	obj/kernel.asm	/^c010e0a1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e0a6	obj/kernel.asm	/^c010e0a6:	eb 6b                	jmp    c010e113 <do_sleep+0x7e>$/;"	l
c010e0a8	obj/kernel.asm	/^c010e0a8:	e8 bd dc ff ff       	call   c010bd6a <__intr_save>$/;"	l
c010e0ad	obj/kernel.asm	/^c010e0ad:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e0b0	obj/kernel.asm	/^c010e0b0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010e0b3	obj/kernel.asm	/^c010e0b3:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010e0b8	obj/kernel.asm	/^c010e0b8:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010e0bc	obj/kernel.asm	/^c010e0bc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e0c0	obj/kernel.asm	/^c010e0c0:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c010e0c3	obj/kernel.asm	/^c010e0c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e0c6	obj/kernel.asm	/^c010e0c6:	e8 66 dc ff ff       	call   c010bd31 <timer_init>$/;"	l
c010e0cb	obj/kernel.asm	/^c010e0cb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e0ce	obj/kernel.asm	/^c010e0ce:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010e0d3	obj/kernel.asm	/^c010e0d3:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010e0d9	obj/kernel.asm	/^c010e0d9:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010e0de	obj/kernel.asm	/^c010e0de:	c7 80 90 00 00 00 02 	movl   $0x80000002,0x90(%eax)$/;"	l
c010e0e5	obj/kernel.asm	/^c010e0e5:	00 00 80 $/;"	l
c010e0e8	obj/kernel.asm	/^c010e0e8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e0eb	obj/kernel.asm	/^c010e0eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e0ee	obj/kernel.asm	/^c010e0ee:	e8 3d 06 00 00       	call   c010e730 <add_timer>$/;"	l
c010e0f3	obj/kernel.asm	/^c010e0f3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e0f6	obj/kernel.asm	/^c010e0f6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e0f9	obj/kernel.asm	/^c010e0f9:	e8 96 dc ff ff       	call   c010bd94 <__intr_restore>$/;"	l
c010e0fe	obj/kernel.asm	/^c010e0fe:	e8 a2 05 00 00       	call   c010e6a5 <schedule>$/;"	l
c010e103	obj/kernel.asm	/^c010e103:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e106	obj/kernel.asm	/^c010e106:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e109	obj/kernel.asm	/^c010e109:	e8 60 07 00 00       	call   c010e86e <del_timer>$/;"	l
c010e10e	obj/kernel.asm	/^c010e10e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e113	obj/kernel.asm	/^c010e113:	c9                   	leave  $/;"	l
c010e114	obj/kernel.asm	/^c010e114:	c3                   	ret    $/;"	l
c010e115	obj/kernel.asm	/^c010e115 <switch_to>:$/;"	l
c010e115	obj/kernel.asm	/^c010e115:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c010e119	obj/kernel.asm	/^c010e119:	8f 00                	popl   (%eax)$/;"	l
c010e11b	obj/kernel.asm	/^c010e11b:	89 60 04             	mov    %esp,0x4(%eax)$/;"	l
c010e11e	obj/kernel.asm	/^c010e11e:	89 58 08             	mov    %ebx,0x8(%eax)$/;"	l
c010e121	obj/kernel.asm	/^c010e121:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c010e124	obj/kernel.asm	/^c010e124:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010e127	obj/kernel.asm	/^c010e127:	89 70 14             	mov    %esi,0x14(%eax)$/;"	l
c010e12a	obj/kernel.asm	/^c010e12a:	89 78 18             	mov    %edi,0x18(%eax)$/;"	l
c010e12d	obj/kernel.asm	/^c010e12d:	89 68 1c             	mov    %ebp,0x1c(%eax)$/;"	l
c010e130	obj/kernel.asm	/^c010e130:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c010e134	obj/kernel.asm	/^c010e134:	8b 68 1c             	mov    0x1c(%eax),%ebp$/;"	l
c010e137	obj/kernel.asm	/^c010e137:	8b 78 18             	mov    0x18(%eax),%edi$/;"	l
c010e13a	obj/kernel.asm	/^c010e13a:	8b 70 14             	mov    0x14(%eax),%esi$/;"	l
c010e13d	obj/kernel.asm	/^c010e13d:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010e140	obj/kernel.asm	/^c010e140:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c010e143	obj/kernel.asm	/^c010e143:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c010e146	obj/kernel.asm	/^c010e146:	8b 60 04             	mov    0x4(%eax),%esp$/;"	l
c010e149	obj/kernel.asm	/^c010e149:	ff 30                	pushl  (%eax)$/;"	l
c010e14b	obj/kernel.asm	/^c010e14b:	c3                   	ret    $/;"	l
c010e14c	obj/kernel.asm	/^c010e14c <skew_heap_merge>:$/;"	l
c010e14c	obj/kernel.asm	/^c010e14c:	55                   	push   %ebp$/;"	l
c010e14d	obj/kernel.asm	/^c010e14d:	89 e5                	mov    %esp,%ebp$/;"	l
c010e14f	obj/kernel.asm	/^c010e14f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e152	obj/kernel.asm	/^c010e152:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e156	obj/kernel.asm	/^c010e156:	75 08                	jne    c010e160 <skew_heap_merge+0x14>$/;"	l
c010e158	obj/kernel.asm	/^c010e158:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e15b	obj/kernel.asm	/^c010e15b:	e9 bd 00 00 00       	jmp    c010e21d <skew_heap_merge+0xd1>$/;"	l
c010e160	obj/kernel.asm	/^c010e160:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010e164	obj/kernel.asm	/^c010e164:	75 08                	jne    c010e16e <skew_heap_merge+0x22>$/;"	l
c010e166	obj/kernel.asm	/^c010e166:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e169	obj/kernel.asm	/^c010e169:	e9 af 00 00 00       	jmp    c010e21d <skew_heap_merge+0xd1>$/;"	l
c010e16e	obj/kernel.asm	/^c010e16e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e171	obj/kernel.asm	/^c010e171:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e175	obj/kernel.asm	/^c010e175:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e178	obj/kernel.asm	/^c010e178:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e17b	obj/kernel.asm	/^c010e17b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010e17e	obj/kernel.asm	/^c010e17e:	ff d0                	call   *%eax$/;"	l
c010e180	obj/kernel.asm	/^c010e180:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
c010e183	obj/kernel.asm	/^c010e183:	75 4d                	jne    c010e1d2 <skew_heap_merge+0x86>$/;"	l
c010e185	obj/kernel.asm	/^c010e185:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e188	obj/kernel.asm	/^c010e188:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e18b	obj/kernel.asm	/^c010e18b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e18e	obj/kernel.asm	/^c010e18e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e191	obj/kernel.asm	/^c010e191:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e194	obj/kernel.asm	/^c010e194:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010e197	obj/kernel.asm	/^c010e197:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010e19b	obj/kernel.asm	/^c010e19b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010e19e	obj/kernel.asm	/^c010e19e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010e1a2	obj/kernel.asm	/^c010e1a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e1a5	obj/kernel.asm	/^c010e1a5:	e8 a2 ff ff ff       	call   c010e14c <skew_heap_merge>$/;"	l
c010e1aa	obj/kernel.asm	/^c010e1aa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e1ad	obj/kernel.asm	/^c010e1ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e1b0	obj/kernel.asm	/^c010e1b0:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010e1b3	obj/kernel.asm	/^c010e1b3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e1b6	obj/kernel.asm	/^c010e1b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e1b9	obj/kernel.asm	/^c010e1b9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010e1bc	obj/kernel.asm	/^c010e1bc:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e1bf	obj/kernel.asm	/^c010e1bf:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010e1c3	obj/kernel.asm	/^c010e1c3:	74 08                	je     c010e1cd <skew_heap_merge+0x81>$/;"	l
c010e1c5	obj/kernel.asm	/^c010e1c5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e1c8	obj/kernel.asm	/^c010e1c8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010e1cb	obj/kernel.asm	/^c010e1cb:	89 10                	mov    %edx,(%eax)$/;"	l
c010e1cd	obj/kernel.asm	/^c010e1cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e1d0	obj/kernel.asm	/^c010e1d0:	eb 4b                	jmp    c010e21d <skew_heap_merge+0xd1>$/;"	l
c010e1d2	obj/kernel.asm	/^c010e1d2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e1d5	obj/kernel.asm	/^c010e1d5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e1d8	obj/kernel.asm	/^c010e1d8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e1db	obj/kernel.asm	/^c010e1db:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e1de	obj/kernel.asm	/^c010e1de:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e1e1	obj/kernel.asm	/^c010e1e1:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010e1e4	obj/kernel.asm	/^c010e1e4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010e1e8	obj/kernel.asm	/^c010e1e8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e1ec	obj/kernel.asm	/^c010e1ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e1ef	obj/kernel.asm	/^c010e1ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e1f2	obj/kernel.asm	/^c010e1f2:	e8 55 ff ff ff       	call   c010e14c <skew_heap_merge>$/;"	l
c010e1f7	obj/kernel.asm	/^c010e1f7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e1fa	obj/kernel.asm	/^c010e1fa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e1fd	obj/kernel.asm	/^c010e1fd:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010e200	obj/kernel.asm	/^c010e200:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e203	obj/kernel.asm	/^c010e203:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e206	obj/kernel.asm	/^c010e206:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010e209	obj/kernel.asm	/^c010e209:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e20c	obj/kernel.asm	/^c010e20c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010e210	obj/kernel.asm	/^c010e210:	74 08                	je     c010e21a <skew_heap_merge+0xce>$/;"	l
c010e212	obj/kernel.asm	/^c010e212:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e215	obj/kernel.asm	/^c010e215:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010e218	obj/kernel.asm	/^c010e218:	89 10                	mov    %edx,(%eax)$/;"	l
c010e21a	obj/kernel.asm	/^c010e21a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e21d	obj/kernel.asm	/^c010e21d:	c9                   	leave  $/;"	l
c010e21e	obj/kernel.asm	/^c010e21e:	c3                   	ret    $/;"	l
c010e21f	obj/kernel.asm	/^c010e21f <proc_stride_comp_f>:$/;"	l
c010e21f	obj/kernel.asm	/^c010e21f:	55                   	push   %ebp$/;"	l
c010e220	obj/kernel.asm	/^c010e220:	89 e5                	mov    %esp,%ebp$/;"	l
c010e222	obj/kernel.asm	/^c010e222:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010e225	obj/kernel.asm	/^c010e225:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e228	obj/kernel.asm	/^c010e228:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010e22d	obj/kernel.asm	/^c010e22d:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010e230	obj/kernel.asm	/^c010e230:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e233	obj/kernel.asm	/^c010e233:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010e238	obj/kernel.asm	/^c010e238:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010e23b	obj/kernel.asm	/^c010e23b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010e23e	obj/kernel.asm	/^c010e23e:	8b 90 bc 00 00 00    	mov    0xbc(%eax),%edx$/;"	l
c010e244	obj/kernel.asm	/^c010e244:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e247	obj/kernel.asm	/^c010e247:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax$/;"	l
c010e24d	obj/kernel.asm	/^c010e24d:	29 c2                	sub    %eax,%edx$/;"	l
c010e24f	obj/kernel.asm	/^c010e24f:	89 d0                	mov    %edx,%eax$/;"	l
c010e251	obj/kernel.asm	/^c010e251:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e254	obj/kernel.asm	/^c010e254:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e258	obj/kernel.asm	/^c010e258:	7e 07                	jle    c010e261 <proc_stride_comp_f+0x42>$/;"	l
c010e25a	obj/kernel.asm	/^c010e25a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010e25f	obj/kernel.asm	/^c010e25f:	eb 12                	jmp    c010e273 <proc_stride_comp_f+0x54>$/;"	l
c010e261	obj/kernel.asm	/^c010e261:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e265	obj/kernel.asm	/^c010e265:	75 07                	jne    c010e26e <proc_stride_comp_f+0x4f>$/;"	l
c010e267	obj/kernel.asm	/^c010e267:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e26c	obj/kernel.asm	/^c010e26c:	eb 05                	jmp    c010e273 <proc_stride_comp_f+0x54>$/;"	l
c010e26e	obj/kernel.asm	/^c010e26e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010e273	obj/kernel.asm	/^c010e273:	c9                   	leave  $/;"	l
c010e274	obj/kernel.asm	/^c010e274:	c3                   	ret    $/;"	l
c010e275	obj/kernel.asm	/^c010e275 <stride_init>:$/;"	l
c010e275	obj/kernel.asm	/^c010e275:	55                   	push   %ebp$/;"	l
c010e276	obj/kernel.asm	/^c010e276:	89 e5                	mov    %esp,%ebp$/;"	l
c010e278	obj/kernel.asm	/^c010e278:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010e27b	obj/kernel.asm	/^c010e27b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e27e	obj/kernel.asm	/^c010e27e:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010e281	obj/kernel.asm	/^c010e281:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010e284	obj/kernel.asm	/^c010e284:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010e287	obj/kernel.asm	/^c010e287:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e28a	obj/kernel.asm	/^c010e28a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010e28d	obj/kernel.asm	/^c010e28d:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010e290	obj/kernel.asm	/^c010e290:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010e293	obj/kernel.asm	/^c010e293:	89 10                	mov    %edx,(%eax)$/;"	l
c010e295	obj/kernel.asm	/^c010e295:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e298	obj/kernel.asm	/^c010e298:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010e29f	obj/kernel.asm	/^c010e29f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e2a2	obj/kernel.asm	/^c010e2a2:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010e2a9	obj/kernel.asm	/^c010e2a9:	c9                   	leave  $/;"	l
c010e2aa	obj/kernel.asm	/^c010e2aa:	c3                   	ret    $/;"	l
c010e2ab	obj/kernel.asm	/^c010e2ab <stride_enqueue>:$/;"	l
c010e2ab	obj/kernel.asm	/^c010e2ab:	55                   	push   %ebp$/;"	l
c010e2ac	obj/kernel.asm	/^c010e2ac:	89 e5                	mov    %esp,%ebp$/;"	l
c010e2ae	obj/kernel.asm	/^c010e2ae:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e2b1	obj/kernel.asm	/^c010e2b1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e2b4	obj/kernel.asm	/^c010e2b4:	8d 90 b0 00 00 00    	lea    0xb0(%eax),%edx$/;"	l
c010e2ba	obj/kernel.asm	/^c010e2ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e2bd	obj/kernel.asm	/^c010e2bd:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010e2c0	obj/kernel.asm	/^c010e2c0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e2c3	obj/kernel.asm	/^c010e2c3:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010e2c6	obj/kernel.asm	/^c010e2c6:	c7 45 ec 1f e2 10 c0 	movl   $0xc010e21f,-0x14(%ebp)$/;"	l
c010e2cd	obj/kernel.asm	/^c010e2cd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e2d0	obj/kernel.asm	/^c010e2d0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e2d3	obj/kernel.asm	/^c010e2d3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e2d6	obj/kernel.asm	/^c010e2d6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010e2dc	obj/kernel.asm	/^c010e2dc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e2df	obj/kernel.asm	/^c010e2df:	8b 10                	mov    (%eax),%edx$/;"	l
c010e2e1	obj/kernel.asm	/^c010e2e1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e2e4	obj/kernel.asm	/^c010e2e4:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e2e7	obj/kernel.asm	/^c010e2e7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e2ea	obj/kernel.asm	/^c010e2ea:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010e2ed	obj/kernel.asm	/^c010e2ed:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e2f0	obj/kernel.asm	/^c010e2f0:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e2f3	obj/kernel.asm	/^c010e2f3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e2f6	obj/kernel.asm	/^c010e2f6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010e2fa	obj/kernel.asm	/^c010e2fa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e2fd	obj/kernel.asm	/^c010e2fd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e301	obj/kernel.asm	/^c010e301:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e304	obj/kernel.asm	/^c010e304:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e307	obj/kernel.asm	/^c010e307:	e8 40 fe ff ff       	call   c010e14c <skew_heap_merge>$/;"	l
c010e30c	obj/kernel.asm	/^c010e30c:	89 c2                	mov    %eax,%edx$/;"	l
c010e30e	obj/kernel.asm	/^c010e30e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e311	obj/kernel.asm	/^c010e311:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010e314	obj/kernel.asm	/^c010e314:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e317	obj/kernel.asm	/^c010e317:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010e31d	obj/kernel.asm	/^c010e31d:	85 c0                	test   %eax,%eax$/;"	l
c010e31f	obj/kernel.asm	/^c010e31f:	74 13                	je     c010e334 <stride_enqueue+0x89>$/;"	l
c010e321	obj/kernel.asm	/^c010e321:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e324	obj/kernel.asm	/^c010e324:	8b 90 ac 00 00 00    	mov    0xac(%eax),%edx$/;"	l
c010e32a	obj/kernel.asm	/^c010e32a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e32d	obj/kernel.asm	/^c010e32d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e330	obj/kernel.asm	/^c010e330:	39 c2                	cmp    %eax,%edx$/;"	l
c010e332	obj/kernel.asm	/^c010e332:	7e 0f                	jle    c010e343 <stride_enqueue+0x98>$/;"	l
c010e334	obj/kernel.asm	/^c010e334:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e337	obj/kernel.asm	/^c010e337:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010e33a	obj/kernel.asm	/^c010e33a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e33d	obj/kernel.asm	/^c010e33d:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)$/;"	l
c010e343	obj/kernel.asm	/^c010e343:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e346	obj/kernel.asm	/^c010e346:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010e349	obj/kernel.asm	/^c010e349:	89 90 a0 00 00 00    	mov    %edx,0xa0(%eax)$/;"	l
c010e34f	obj/kernel.asm	/^c010e34f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e352	obj/kernel.asm	/^c010e352:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e355	obj/kernel.asm	/^c010e355:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010e358	obj/kernel.asm	/^c010e358:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e35b	obj/kernel.asm	/^c010e35b:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e35e	obj/kernel.asm	/^c010e35e:	c9                   	leave  $/;"	l
c010e35f	obj/kernel.asm	/^c010e35f:	c3                   	ret    $/;"	l
c010e360	obj/kernel.asm	/^c010e360 <stride_dequeue>:$/;"	l
c010e360	obj/kernel.asm	/^c010e360:	55                   	push   %ebp$/;"	l
c010e361	obj/kernel.asm	/^c010e361:	89 e5                	mov    %esp,%ebp$/;"	l
c010e363	obj/kernel.asm	/^c010e363:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010e366	obj/kernel.asm	/^c010e366:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e369	obj/kernel.asm	/^c010e369:	8d 90 b0 00 00 00    	lea    0xb0(%eax),%edx$/;"	l
c010e36f	obj/kernel.asm	/^c010e36f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e372	obj/kernel.asm	/^c010e372:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010e375	obj/kernel.asm	/^c010e375:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e378	obj/kernel.asm	/^c010e378:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010e37b	obj/kernel.asm	/^c010e37b:	c7 45 ec 1f e2 10 c0 	movl   $0xc010e21f,-0x14(%ebp)$/;"	l
c010e382	obj/kernel.asm	/^c010e382:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e385	obj/kernel.asm	/^c010e385:	8b 00                	mov    (%eax),%eax$/;"	l
c010e387	obj/kernel.asm	/^c010e387:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e38a	obj/kernel.asm	/^c010e38a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e38d	obj/kernel.asm	/^c010e38d:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010e390	obj/kernel.asm	/^c010e390:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e393	obj/kernel.asm	/^c010e393:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e396	obj/kernel.asm	/^c010e396:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c010e399	obj/kernel.asm	/^c010e399:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c010e39d	obj/kernel.asm	/^c010e39d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010e3a1	obj/kernel.asm	/^c010e3a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e3a4	obj/kernel.asm	/^c010e3a4:	e8 a3 fd ff ff       	call   c010e14c <skew_heap_merge>$/;"	l
c010e3a9	obj/kernel.asm	/^c010e3a9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010e3ac	obj/kernel.asm	/^c010e3ac:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010e3b0	obj/kernel.asm	/^c010e3b0:	74 08                	je     c010e3ba <stride_dequeue+0x5a>$/;"	l
c010e3b2	obj/kernel.asm	/^c010e3b2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e3b5	obj/kernel.asm	/^c010e3b5:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010e3b8	obj/kernel.asm	/^c010e3b8:	89 10                	mov    %edx,(%eax)$/;"	l
c010e3ba	obj/kernel.asm	/^c010e3ba:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010e3be	obj/kernel.asm	/^c010e3be:	74 24                	je     c010e3e4 <stride_dequeue+0x84>$/;"	l
c010e3c0	obj/kernel.asm	/^c010e3c0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e3c3	obj/kernel.asm	/^c010e3c3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e3c6	obj/kernel.asm	/^c010e3c6:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010e3c9	obj/kernel.asm	/^c010e3c9:	75 0b                	jne    c010e3d6 <stride_dequeue+0x76>$/;"	l
c010e3cb	obj/kernel.asm	/^c010e3cb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e3ce	obj/kernel.asm	/^c010e3ce:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010e3d1	obj/kernel.asm	/^c010e3d1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e3d4	obj/kernel.asm	/^c010e3d4:	eb 09                	jmp    c010e3df <stride_dequeue+0x7f>$/;"	l
c010e3d6	obj/kernel.asm	/^c010e3d6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e3d9	obj/kernel.asm	/^c010e3d9:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010e3dc	obj/kernel.asm	/^c010e3dc:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e3df	obj/kernel.asm	/^c010e3df:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e3e2	obj/kernel.asm	/^c010e3e2:	eb 03                	jmp    c010e3e7 <stride_dequeue+0x87>$/;"	l
c010e3e4	obj/kernel.asm	/^c010e3e4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e3e7	obj/kernel.asm	/^c010e3e7:	89 c2                	mov    %eax,%edx$/;"	l
c010e3e9	obj/kernel.asm	/^c010e3e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e3ec	obj/kernel.asm	/^c010e3ec:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010e3ef	obj/kernel.asm	/^c010e3ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e3f2	obj/kernel.asm	/^c010e3f2:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e3f5	obj/kernel.asm	/^c010e3f5:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010e3f8	obj/kernel.asm	/^c010e3f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e3fb	obj/kernel.asm	/^c010e3fb:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e3fe	obj/kernel.asm	/^c010e3fe:	c9                   	leave  $/;"	l
c010e3ff	obj/kernel.asm	/^c010e3ff:	c3                   	ret    $/;"	l
c010e400	obj/kernel.asm	/^c010e400 <stride_pick_next>:$/;"	l
c010e400	obj/kernel.asm	/^c010e400:	55                   	push   %ebp$/;"	l
c010e401	obj/kernel.asm	/^c010e401:	89 e5                	mov    %esp,%ebp$/;"	l
c010e403	obj/kernel.asm	/^c010e403:	53                   	push   %ebx$/;"	l
c010e404	obj/kernel.asm	/^c010e404:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010e407	obj/kernel.asm	/^c010e407:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e40a	obj/kernel.asm	/^c010e40a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010e40d	obj/kernel.asm	/^c010e40d:	85 c0                	test   %eax,%eax$/;"	l
c010e40f	obj/kernel.asm	/^c010e40f:	75 07                	jne    c010e418 <stride_pick_next+0x18>$/;"	l
c010e411	obj/kernel.asm	/^c010e411:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e416	obj/kernel.asm	/^c010e416:	eb 62                	jmp    c010e47a <stride_pick_next+0x7a>$/;"	l
c010e418	obj/kernel.asm	/^c010e418:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e41b	obj/kernel.asm	/^c010e41b:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010e41e	obj/kernel.asm	/^c010e41e:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010e423	obj/kernel.asm	/^c010e423:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010e426	obj/kernel.asm	/^c010e426:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e429	obj/kernel.asm	/^c010e429:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax$/;"	l
c010e42f	obj/kernel.asm	/^c010e42f:	85 c0                	test   %eax,%eax$/;"	l
c010e431	obj/kernel.asm	/^c010e431:	75 1a                	jne    c010e44d <stride_pick_next+0x4d>$/;"	l
c010e433	obj/kernel.asm	/^c010e433:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e436	obj/kernel.asm	/^c010e436:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax$/;"	l
c010e43c	obj/kernel.asm	/^c010e43c:	8d 90 ff ff ff 7f    	lea    0x7fffffff(%eax),%edx$/;"	l
c010e442	obj/kernel.asm	/^c010e442:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e445	obj/kernel.asm	/^c010e445:	89 90 bc 00 00 00    	mov    %edx,0xbc(%eax)$/;"	l
c010e44b	obj/kernel.asm	/^c010e44b:	eb 2a                	jmp    c010e477 <stride_pick_next+0x77>$/;"	l
c010e44d	obj/kernel.asm	/^c010e44d:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e450	obj/kernel.asm	/^c010e450:	8b 88 bc 00 00 00    	mov    0xbc(%eax),%ecx$/;"	l
c010e456	obj/kernel.asm	/^c010e456:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e459	obj/kernel.asm	/^c010e459:	8b 98 c0 00 00 00    	mov    0xc0(%eax),%ebx$/;"	l
c010e45f	obj/kernel.asm	/^c010e45f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax$/;"	l
c010e464	obj/kernel.asm	/^c010e464:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010e469	obj/kernel.asm	/^c010e469:	f7 f3                	div    %ebx$/;"	l
c010e46b	obj/kernel.asm	/^c010e46b:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c010e46e	obj/kernel.asm	/^c010e46e:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e471	obj/kernel.asm	/^c010e471:	89 90 bc 00 00 00    	mov    %edx,0xbc(%eax)$/;"	l
c010e477	obj/kernel.asm	/^c010e477:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e47a	obj/kernel.asm	/^c010e47a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e47d	obj/kernel.asm	/^c010e47d:	5b                   	pop    %ebx$/;"	l
c010e47e	obj/kernel.asm	/^c010e47e:	5d                   	pop    %ebp$/;"	l
c010e47f	obj/kernel.asm	/^c010e47f:	c3                   	ret    $/;"	l
c010e480	obj/kernel.asm	/^c010e480 <stride_proc_tick>:$/;"	l
c010e480	obj/kernel.asm	/^c010e480:	55                   	push   %ebp$/;"	l
c010e481	obj/kernel.asm	/^c010e481:	89 e5                	mov    %esp,%ebp$/;"	l
c010e483	obj/kernel.asm	/^c010e483:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e486	obj/kernel.asm	/^c010e486:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010e48c	obj/kernel.asm	/^c010e48c:	85 c0                	test   %eax,%eax$/;"	l
c010e48e	obj/kernel.asm	/^c010e48e:	7e 15                	jle    c010e4a5 <stride_proc_tick+0x25>$/;"	l
c010e490	obj/kernel.asm	/^c010e490:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e493	obj/kernel.asm	/^c010e493:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010e499	obj/kernel.asm	/^c010e499:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010e49c	obj/kernel.asm	/^c010e49c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e49f	obj/kernel.asm	/^c010e49f:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)$/;"	l
c010e4a5	obj/kernel.asm	/^c010e4a5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e4a8	obj/kernel.asm	/^c010e4a8:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010e4ae	obj/kernel.asm	/^c010e4ae:	85 c0                	test   %eax,%eax$/;"	l
c010e4b0	obj/kernel.asm	/^c010e4b0:	75 0a                	jne    c010e4bc <stride_proc_tick+0x3c>$/;"	l
c010e4b2	obj/kernel.asm	/^c010e4b2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e4b5	obj/kernel.asm	/^c010e4b5:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010e4bc	obj/kernel.asm	/^c010e4bc:	5d                   	pop    %ebp$/;"	l
c010e4bd	obj/kernel.asm	/^c010e4bd:	c3                   	ret    $/;"	l
c010e4be	obj/kernel.asm	/^c010e4be <__intr_save>:$/;"	l
c010e4be	obj/kernel.asm	/^c010e4be:	55                   	push   %ebp$/;"	l
c010e4bf	obj/kernel.asm	/^c010e4bf:	89 e5                	mov    %esp,%ebp$/;"	l
c010e4c1	obj/kernel.asm	/^c010e4c1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e4c4	obj/kernel.asm	/^c010e4c4:	9c                   	pushf  $/;"	l
c010e4c5	obj/kernel.asm	/^c010e4c5:	58                   	pop    %eax$/;"	l
c010e4c6	obj/kernel.asm	/^c010e4c6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e4c9	obj/kernel.asm	/^c010e4c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e4cc	obj/kernel.asm	/^c010e4cc:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010e4d1	obj/kernel.asm	/^c010e4d1:	85 c0                	test   %eax,%eax$/;"	l
c010e4d3	obj/kernel.asm	/^c010e4d3:	74 0c                	je     c010e4e1 <__intr_save+0x23>$/;"	l
c010e4d5	obj/kernel.asm	/^c010e4d5:	e8 50 3c ff ff       	call   c010212a <intr_disable>$/;"	l
c010e4da	obj/kernel.asm	/^c010e4da:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010e4df	obj/kernel.asm	/^c010e4df:	eb 05                	jmp    c010e4e6 <__intr_save+0x28>$/;"	l
c010e4e1	obj/kernel.asm	/^c010e4e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e4e6	obj/kernel.asm	/^c010e4e6:	c9                   	leave  $/;"	l
c010e4e7	obj/kernel.asm	/^c010e4e7:	c3                   	ret    $/;"	l
c010e4e8	obj/kernel.asm	/^c010e4e8 <__intr_restore>:$/;"	l
c010e4e8	obj/kernel.asm	/^c010e4e8:	55                   	push   %ebp$/;"	l
c010e4e9	obj/kernel.asm	/^c010e4e9:	89 e5                	mov    %esp,%ebp$/;"	l
c010e4eb	obj/kernel.asm	/^c010e4eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e4ee	obj/kernel.asm	/^c010e4ee:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e4f2	obj/kernel.asm	/^c010e4f2:	74 05                	je     c010e4f9 <__intr_restore+0x11>$/;"	l
c010e4f4	obj/kernel.asm	/^c010e4f4:	e8 2b 3c ff ff       	call   c0102124 <intr_enable>$/;"	l
c010e4f9	obj/kernel.asm	/^c010e4f9:	c9                   	leave  $/;"	l
c010e4fa	obj/kernel.asm	/^c010e4fa:	c3                   	ret    $/;"	l
c010e4fb	obj/kernel.asm	/^c010e4fb <sched_class_enqueue>:$/;"	l
c010e4fb	obj/kernel.asm	/^c010e4fb:	55                   	push   %ebp$/;"	l
c010e4fc	obj/kernel.asm	/^c010e4fc:	89 e5                	mov    %esp,%ebp$/;"	l
c010e4fe	obj/kernel.asm	/^c010e4fe:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e501	obj/kernel.asm	/^c010e501:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010e506	obj/kernel.asm	/^c010e506:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010e509	obj/kernel.asm	/^c010e509:	74 1a                	je     c010e525 <sched_class_enqueue+0x2a>$/;"	l
c010e50b	obj/kernel.asm	/^c010e50b:	a1 9c 2f 15 c0       	mov    0xc0152f9c,%eax$/;"	l
c010e510	obj/kernel.asm	/^c010e510:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e513	obj/kernel.asm	/^c010e513:	8b 15 a0 2f 15 c0    	mov    0xc0152fa0,%edx$/;"	l
c010e519	obj/kernel.asm	/^c010e519:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c010e51c	obj/kernel.asm	/^c010e51c:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010e520	obj/kernel.asm	/^c010e520:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010e523	obj/kernel.asm	/^c010e523:	ff d0                	call   *%eax$/;"	l
c010e525	obj/kernel.asm	/^c010e525:	c9                   	leave  $/;"	l
c010e526	obj/kernel.asm	/^c010e526:	c3                   	ret    $/;"	l
c010e527	obj/kernel.asm	/^c010e527 <sched_class_dequeue>:$/;"	l
c010e527	obj/kernel.asm	/^c010e527:	55                   	push   %ebp$/;"	l
c010e528	obj/kernel.asm	/^c010e528:	89 e5                	mov    %esp,%ebp$/;"	l
c010e52a	obj/kernel.asm	/^c010e52a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e52d	obj/kernel.asm	/^c010e52d:	a1 9c 2f 15 c0       	mov    0xc0152f9c,%eax$/;"	l
c010e532	obj/kernel.asm	/^c010e532:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e535	obj/kernel.asm	/^c010e535:	8b 15 a0 2f 15 c0    	mov    0xc0152fa0,%edx$/;"	l
c010e53b	obj/kernel.asm	/^c010e53b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c010e53e	obj/kernel.asm	/^c010e53e:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010e542	obj/kernel.asm	/^c010e542:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010e545	obj/kernel.asm	/^c010e545:	ff d0                	call   *%eax$/;"	l
c010e547	obj/kernel.asm	/^c010e547:	c9                   	leave  $/;"	l
c010e548	obj/kernel.asm	/^c010e548:	c3                   	ret    $/;"	l
c010e549	obj/kernel.asm	/^c010e549 <sched_class_pick_next>:$/;"	l
c010e549	obj/kernel.asm	/^c010e549:	55                   	push   %ebp$/;"	l
c010e54a	obj/kernel.asm	/^c010e54a:	89 e5                	mov    %esp,%ebp$/;"	l
c010e54c	obj/kernel.asm	/^c010e54c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e54f	obj/kernel.asm	/^c010e54f:	a1 9c 2f 15 c0       	mov    0xc0152f9c,%eax$/;"	l
c010e554	obj/kernel.asm	/^c010e554:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010e557	obj/kernel.asm	/^c010e557:	8b 15 a0 2f 15 c0    	mov    0xc0152fa0,%edx$/;"	l
c010e55d	obj/kernel.asm	/^c010e55d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010e560	obj/kernel.asm	/^c010e560:	ff d0                	call   *%eax$/;"	l
c010e562	obj/kernel.asm	/^c010e562:	c9                   	leave  $/;"	l
c010e563	obj/kernel.asm	/^c010e563:	c3                   	ret    $/;"	l
c010e564	obj/kernel.asm	/^c010e564 <sched_class_proc_tick>:$/;"	l
c010e564	obj/kernel.asm	/^c010e564:	55                   	push   %ebp$/;"	l
c010e565	obj/kernel.asm	/^c010e565:	89 e5                	mov    %esp,%ebp$/;"	l
c010e567	obj/kernel.asm	/^c010e567:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e56a	obj/kernel.asm	/^c010e56a:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010e56f	obj/kernel.asm	/^c010e56f:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010e572	obj/kernel.asm	/^c010e572:	74 1c                	je     c010e590 <sched_class_proc_tick+0x2c>$/;"	l
c010e574	obj/kernel.asm	/^c010e574:	a1 9c 2f 15 c0       	mov    0xc0152f9c,%eax$/;"	l
c010e579	obj/kernel.asm	/^c010e579:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010e57c	obj/kernel.asm	/^c010e57c:	8b 15 a0 2f 15 c0    	mov    0xc0152fa0,%edx$/;"	l
c010e582	obj/kernel.asm	/^c010e582:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c010e585	obj/kernel.asm	/^c010e585:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010e589	obj/kernel.asm	/^c010e589:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010e58c	obj/kernel.asm	/^c010e58c:	ff d0                	call   *%eax$/;"	l
c010e58e	obj/kernel.asm	/^c010e58e:	eb 0a                	jmp    c010e59a <sched_class_proc_tick+0x36>$/;"	l
c010e590	obj/kernel.asm	/^c010e590:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e593	obj/kernel.asm	/^c010e593:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010e59a	obj/kernel.asm	/^c010e59a:	c9                   	leave  $/;"	l
c010e59b	obj/kernel.asm	/^c010e59b:	c3                   	ret    $/;"	l
c010e59c	obj/kernel.asm	/^c010e59c <sched_init>:$/;"	l
c010e59c	obj/kernel.asm	/^c010e59c:	55                   	push   %ebp$/;"	l
c010e59d	obj/kernel.asm	/^c010e59d:	89 e5                	mov    %esp,%ebp$/;"	l
c010e59f	obj/kernel.asm	/^c010e59f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e5a2	obj/kernel.asm	/^c010e5a2:	c7 45 f4 94 2f 15 c0 	movl   $0xc0152f94,-0xc(%ebp)$/;"	l
c010e5a9	obj/kernel.asm	/^c010e5a9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e5ac	obj/kernel.asm	/^c010e5ac:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010e5af	obj/kernel.asm	/^c010e5af:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e5b2	obj/kernel.asm	/^c010e5b2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e5b5	obj/kernel.asm	/^c010e5b5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010e5b8	obj/kernel.asm	/^c010e5b8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e5bb	obj/kernel.asm	/^c010e5bb:	89 10                	mov    %edx,(%eax)$/;"	l
c010e5bd	obj/kernel.asm	/^c010e5bd:	c7 05 9c 2f 15 c0 8c 	movl   $0xc014fa8c,0xc0152f9c$/;"	l
c010e5c4	obj/kernel.asm	/^c010e5c4:	fa 14 c0 $/;"	l
c010e5c7	obj/kernel.asm	/^c010e5c7:	c7 05 a0 2f 15 c0 a4 	movl   $0xc0152fa4,0xc0152fa0$/;"	l
c010e5ce	obj/kernel.asm	/^c010e5ce:	2f 15 c0 $/;"	l
c010e5d1	obj/kernel.asm	/^c010e5d1:	a1 a0 2f 15 c0       	mov    0xc0152fa0,%eax$/;"	l
c010e5d6	obj/kernel.asm	/^c010e5d6:	c7 40 0c 05 00 00 00 	movl   $0x5,0xc(%eax)$/;"	l
c010e5dd	obj/kernel.asm	/^c010e5dd:	a1 9c 2f 15 c0       	mov    0xc0152f9c,%eax$/;"	l
c010e5e2	obj/kernel.asm	/^c010e5e2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e5e5	obj/kernel.asm	/^c010e5e5:	8b 15 a0 2f 15 c0    	mov    0xc0152fa0,%edx$/;"	l
c010e5eb	obj/kernel.asm	/^c010e5eb:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010e5ee	obj/kernel.asm	/^c010e5ee:	ff d0                	call   *%eax$/;"	l
c010e5f0	obj/kernel.asm	/^c010e5f0:	a1 9c 2f 15 c0       	mov    0xc0152f9c,%eax$/;"	l
c010e5f5	obj/kernel.asm	/^c010e5f5:	8b 00                	mov    (%eax),%eax$/;"	l
c010e5f7	obj/kernel.asm	/^c010e5f7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e5fb	obj/kernel.asm	/^c010e5fb:	c7 04 24 54 85 11 c0 	movl   $0xc0118554,(%esp)$/;"	l
c010e602	obj/kernel.asm	/^c010e602:	e8 5e 1d ff ff       	call   c0100365 <cprintf>$/;"	l
c010e607	obj/kernel.asm	/^c010e607:	c9                   	leave  $/;"	l
c010e608	obj/kernel.asm	/^c010e608:	c3                   	ret    $/;"	l
c010e609	obj/kernel.asm	/^c010e609 <wakeup_proc>:$/;"	l
c010e609	obj/kernel.asm	/^c010e609:	55                   	push   %ebp$/;"	l
c010e60a	obj/kernel.asm	/^c010e60a:	89 e5                	mov    %esp,%ebp$/;"	l
c010e60c	obj/kernel.asm	/^c010e60c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e60f	obj/kernel.asm	/^c010e60f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e612	obj/kernel.asm	/^c010e612:	8b 00                	mov    (%eax),%eax$/;"	l
c010e614	obj/kernel.asm	/^c010e614:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010e617	obj/kernel.asm	/^c010e617:	75 24                	jne    c010e63d <wakeup_proc+0x34>$/;"	l
c010e619	obj/kernel.asm	/^c010e619:	c7 44 24 0c 65 85 11 	movl   $0xc0118565,0xc(%esp)$/;"	l
c010e620	obj/kernel.asm	/^c010e620:	c0 $/;"	l
c010e621	obj/kernel.asm	/^c010e621:	c7 44 24 08 80 85 11 	movl   $0xc0118580,0x8(%esp)$/;"	l
c010e628	obj/kernel.asm	/^c010e628:	c0 $/;"	l
c010e629	obj/kernel.asm	/^c010e629:	c7 44 24 04 3b 00 00 	movl   $0x3b,0x4(%esp)$/;"	l
c010e630	obj/kernel.asm	/^c010e630:	00 $/;"	l
c010e631	obj/kernel.asm	/^c010e631:	c7 04 24 95 85 11 c0 	movl   $0xc0118595,(%esp)$/;"	l
c010e638	obj/kernel.asm	/^c010e638:	e8 8b 28 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010e63d	obj/kernel.asm	/^c010e63d:	e8 7c fe ff ff       	call   c010e4be <__intr_save>$/;"	l
c010e642	obj/kernel.asm	/^c010e642:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e645	obj/kernel.asm	/^c010e645:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e648	obj/kernel.asm	/^c010e648:	8b 00                	mov    (%eax),%eax$/;"	l
c010e64a	obj/kernel.asm	/^c010e64a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010e64d	obj/kernel.asm	/^c010e64d:	74 2d                	je     c010e67c <wakeup_proc+0x73>$/;"	l
c010e64f	obj/kernel.asm	/^c010e64f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e652	obj/kernel.asm	/^c010e652:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010e658	obj/kernel.asm	/^c010e658:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e65b	obj/kernel.asm	/^c010e65b:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%eax)$/;"	l
c010e662	obj/kernel.asm	/^c010e662:	00 00 00 $/;"	l
c010e665	obj/kernel.asm	/^c010e665:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010e66a	obj/kernel.asm	/^c010e66a:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010e66d	obj/kernel.asm	/^c010e66d:	74 29                	je     c010e698 <wakeup_proc+0x8f>$/;"	l
c010e66f	obj/kernel.asm	/^c010e66f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e672	obj/kernel.asm	/^c010e672:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e675	obj/kernel.asm	/^c010e675:	e8 81 fe ff ff       	call   c010e4fb <sched_class_enqueue>$/;"	l
c010e67a	obj/kernel.asm	/^c010e67a:	eb 1c                	jmp    c010e698 <wakeup_proc+0x8f>$/;"	l
c010e67c	obj/kernel.asm	/^c010e67c:	c7 44 24 08 ab 85 11 	movl   $0xc01185ab,0x8(%esp)$/;"	l
c010e683	obj/kernel.asm	/^c010e683:	c0 $/;"	l
c010e684	obj/kernel.asm	/^c010e684:	c7 44 24 04 47 00 00 	movl   $0x47,0x4(%esp)$/;"	l
c010e68b	obj/kernel.asm	/^c010e68b:	00 $/;"	l
c010e68c	obj/kernel.asm	/^c010e68c:	c7 04 24 95 85 11 c0 	movl   $0xc0118595,(%esp)$/;"	l
c010e693	obj/kernel.asm	/^c010e693:	e8 9c 28 ff ff       	call   c0100f34 <__warn>$/;"	l
c010e698	obj/kernel.asm	/^c010e698:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e69b	obj/kernel.asm	/^c010e69b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e69e	obj/kernel.asm	/^c010e69e:	e8 45 fe ff ff       	call   c010e4e8 <__intr_restore>$/;"	l
c010e6a3	obj/kernel.asm	/^c010e6a3:	c9                   	leave  $/;"	l
c010e6a4	obj/kernel.asm	/^c010e6a4:	c3                   	ret    $/;"	l
c010e6a5	obj/kernel.asm	/^c010e6a5 <schedule>:$/;"	l
c010e6a5	obj/kernel.asm	/^c010e6a5:	55                   	push   %ebp$/;"	l
c010e6a6	obj/kernel.asm	/^c010e6a6:	89 e5                	mov    %esp,%ebp$/;"	l
c010e6a8	obj/kernel.asm	/^c010e6a8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e6ab	obj/kernel.asm	/^c010e6ab:	e8 0e fe ff ff       	call   c010e4be <__intr_save>$/;"	l
c010e6b0	obj/kernel.asm	/^c010e6b0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e6b3	obj/kernel.asm	/^c010e6b3:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010e6b8	obj/kernel.asm	/^c010e6b8:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010e6bf	obj/kernel.asm	/^c010e6bf:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010e6c4	obj/kernel.asm	/^c010e6c4:	8b 00                	mov    (%eax),%eax$/;"	l
c010e6c6	obj/kernel.asm	/^c010e6c6:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010e6c9	obj/kernel.asm	/^c010e6c9:	75 0d                	jne    c010e6d8 <schedule+0x33>$/;"	l
c010e6cb	obj/kernel.asm	/^c010e6cb:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010e6d0	obj/kernel.asm	/^c010e6d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e6d3	obj/kernel.asm	/^c010e6d3:	e8 23 fe ff ff       	call   c010e4fb <sched_class_enqueue>$/;"	l
c010e6d8	obj/kernel.asm	/^c010e6d8:	e8 6c fe ff ff       	call   c010e549 <sched_class_pick_next>$/;"	l
c010e6dd	obj/kernel.asm	/^c010e6dd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e6e0	obj/kernel.asm	/^c010e6e0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e6e4	obj/kernel.asm	/^c010e6e4:	74 0b                	je     c010e6f1 <schedule+0x4c>$/;"	l
c010e6e6	obj/kernel.asm	/^c010e6e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e6e9	obj/kernel.asm	/^c010e6e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e6ec	obj/kernel.asm	/^c010e6ec:	e8 36 fe ff ff       	call   c010e527 <sched_class_dequeue>$/;"	l
c010e6f1	obj/kernel.asm	/^c010e6f1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e6f5	obj/kernel.asm	/^c010e6f5:	75 08                	jne    c010e6ff <schedule+0x5a>$/;"	l
c010e6f7	obj/kernel.asm	/^c010e6f7:	a1 20 0f 15 c0       	mov    0xc0150f20,%eax$/;"	l
c010e6fc	obj/kernel.asm	/^c010e6fc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e6ff	obj/kernel.asm	/^c010e6ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e702	obj/kernel.asm	/^c010e702:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e705	obj/kernel.asm	/^c010e705:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010e708	obj/kernel.asm	/^c010e708:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e70b	obj/kernel.asm	/^c010e70b:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e70e	obj/kernel.asm	/^c010e70e:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010e713	obj/kernel.asm	/^c010e713:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010e716	obj/kernel.asm	/^c010e716:	74 0b                	je     c010e723 <schedule+0x7e>$/;"	l
c010e718	obj/kernel.asm	/^c010e718:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e71b	obj/kernel.asm	/^c010e71b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e71e	obj/kernel.asm	/^c010e71e:	e8 ce dc ff ff       	call   c010c3f1 <proc_run>$/;"	l
c010e723	obj/kernel.asm	/^c010e723:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e726	obj/kernel.asm	/^c010e726:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e729	obj/kernel.asm	/^c010e729:	e8 ba fd ff ff       	call   c010e4e8 <__intr_restore>$/;"	l
c010e72e	obj/kernel.asm	/^c010e72e:	c9                   	leave  $/;"	l
c010e72f	obj/kernel.asm	/^c010e72f:	c3                   	ret    $/;"	l
c010e730	obj/kernel.asm	/^c010e730 <add_timer>:$/;"	l
c010e730	obj/kernel.asm	/^c010e730:	55                   	push   %ebp$/;"	l
c010e731	obj/kernel.asm	/^c010e731:	89 e5                	mov    %esp,%ebp$/;"	l
c010e733	obj/kernel.asm	/^c010e733:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010e736	obj/kernel.asm	/^c010e736:	e8 83 fd ff ff       	call   c010e4be <__intr_save>$/;"	l
c010e73b	obj/kernel.asm	/^c010e73b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e73e	obj/kernel.asm	/^c010e73e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e741	obj/kernel.asm	/^c010e741:	8b 00                	mov    (%eax),%eax$/;"	l
c010e743	obj/kernel.asm	/^c010e743:	85 c0                	test   %eax,%eax$/;"	l
c010e745	obj/kernel.asm	/^c010e745:	74 0a                	je     c010e751 <add_timer+0x21>$/;"	l
c010e747	obj/kernel.asm	/^c010e747:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e74a	obj/kernel.asm	/^c010e74a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e74d	obj/kernel.asm	/^c010e74d:	85 c0                	test   %eax,%eax$/;"	l
c010e74f	obj/kernel.asm	/^c010e74f:	75 24                	jne    c010e775 <add_timer+0x45>$/;"	l
c010e751	obj/kernel.asm	/^c010e751:	c7 44 24 0c c8 85 11 	movl   $0xc01185c8,0xc(%esp)$/;"	l
c010e758	obj/kernel.asm	/^c010e758:	c0 $/;"	l
c010e759	obj/kernel.asm	/^c010e759:	c7 44 24 08 80 85 11 	movl   $0xc0118580,0x8(%esp)$/;"	l
c010e760	obj/kernel.asm	/^c010e760:	c0 $/;"	l
c010e761	obj/kernel.asm	/^c010e761:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c010e768	obj/kernel.asm	/^c010e768:	00 $/;"	l
c010e769	obj/kernel.asm	/^c010e769:	c7 04 24 95 85 11 c0 	movl   $0xc0118595,(%esp)$/;"	l
c010e770	obj/kernel.asm	/^c010e770:	e8 53 27 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010e775	obj/kernel.asm	/^c010e775:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e778	obj/kernel.asm	/^c010e778:	83 c0 08             	add    $0x8,%eax$/;"	l
c010e77b	obj/kernel.asm	/^c010e77b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e77e	obj/kernel.asm	/^c010e77e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e781	obj/kernel.asm	/^c010e781:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e784	obj/kernel.asm	/^c010e784:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010e787	obj/kernel.asm	/^c010e787:	0f 94 c0             	sete   %al$/;"	l
c010e78a	obj/kernel.asm	/^c010e78a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010e78d	obj/kernel.asm	/^c010e78d:	85 c0                	test   %eax,%eax$/;"	l
c010e78f	obj/kernel.asm	/^c010e78f:	75 24                	jne    c010e7b5 <add_timer+0x85>$/;"	l
c010e791	obj/kernel.asm	/^c010e791:	c7 44 24 0c f4 85 11 	movl   $0xc01185f4,0xc(%esp)$/;"	l
c010e798	obj/kernel.asm	/^c010e798:	c0 $/;"	l
c010e799	obj/kernel.asm	/^c010e799:	c7 44 24 08 80 85 11 	movl   $0xc0118580,0x8(%esp)$/;"	l
c010e7a0	obj/kernel.asm	/^c010e7a0:	c0 $/;"	l
c010e7a1	obj/kernel.asm	/^c010e7a1:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)$/;"	l
c010e7a8	obj/kernel.asm	/^c010e7a8:	00 $/;"	l
c010e7a9	obj/kernel.asm	/^c010e7a9:	c7 04 24 95 85 11 c0 	movl   $0xc0118595,(%esp)$/;"	l
c010e7b0	obj/kernel.asm	/^c010e7b0:	e8 13 27 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010e7b5	obj/kernel.asm	/^c010e7b5:	c7 45 e4 94 2f 15 c0 	movl   $0xc0152f94,-0x1c(%ebp)$/;"	l
c010e7bc	obj/kernel.asm	/^c010e7bc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e7bf	obj/kernel.asm	/^c010e7bf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e7c2	obj/kernel.asm	/^c010e7c2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e7c5	obj/kernel.asm	/^c010e7c5:	eb 4a                	jmp    c010e811 <add_timer+0xe1>$/;"	l
c010e7c7	obj/kernel.asm	/^c010e7c7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e7ca	obj/kernel.asm	/^c010e7ca:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010e7cd	obj/kernel.asm	/^c010e7cd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e7d0	obj/kernel.asm	/^c010e7d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e7d3	obj/kernel.asm	/^c010e7d3:	8b 10                	mov    (%eax),%edx$/;"	l
c010e7d5	obj/kernel.asm	/^c010e7d5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e7d8	obj/kernel.asm	/^c010e7d8:	8b 00                	mov    (%eax),%eax$/;"	l
c010e7da	obj/kernel.asm	/^c010e7da:	39 c2                	cmp    %eax,%edx$/;"	l
c010e7dc	obj/kernel.asm	/^c010e7dc:	73 13                	jae    c010e7f1 <add_timer+0xc1>$/;"	l
c010e7de	obj/kernel.asm	/^c010e7de:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e7e1	obj/kernel.asm	/^c010e7e1:	8b 10                	mov    (%eax),%edx$/;"	l
c010e7e3	obj/kernel.asm	/^c010e7e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e7e6	obj/kernel.asm	/^c010e7e6:	8b 00                	mov    (%eax),%eax$/;"	l
c010e7e8	obj/kernel.asm	/^c010e7e8:	29 c2                	sub    %eax,%edx$/;"	l
c010e7ea	obj/kernel.asm	/^c010e7ea:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e7ed	obj/kernel.asm	/^c010e7ed:	89 10                	mov    %edx,(%eax)$/;"	l
c010e7ef	obj/kernel.asm	/^c010e7ef:	eb 29                	jmp    c010e81a <add_timer+0xea>$/;"	l
c010e7f1	obj/kernel.asm	/^c010e7f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e7f4	obj/kernel.asm	/^c010e7f4:	8b 10                	mov    (%eax),%edx$/;"	l
c010e7f6	obj/kernel.asm	/^c010e7f6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e7f9	obj/kernel.asm	/^c010e7f9:	8b 00                	mov    (%eax),%eax$/;"	l
c010e7fb	obj/kernel.asm	/^c010e7fb:	29 c2                	sub    %eax,%edx$/;"	l
c010e7fd	obj/kernel.asm	/^c010e7fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e800	obj/kernel.asm	/^c010e800:	89 10                	mov    %edx,(%eax)$/;"	l
c010e802	obj/kernel.asm	/^c010e802:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e805	obj/kernel.asm	/^c010e805:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010e808	obj/kernel.asm	/^c010e808:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010e80b	obj/kernel.asm	/^c010e80b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e80e	obj/kernel.asm	/^c010e80e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e811	obj/kernel.asm	/^c010e811:	81 7d f4 94 2f 15 c0 	cmpl   $0xc0152f94,-0xc(%ebp)$/;"	l
c010e818	obj/kernel.asm	/^c010e818:	75 ad                	jne    c010e7c7 <add_timer+0x97>$/;"	l
c010e81a	obj/kernel.asm	/^c010e81a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e81d	obj/kernel.asm	/^c010e81d:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
c010e820	obj/kernel.asm	/^c010e820:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e823	obj/kernel.asm	/^c010e823:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010e826	obj/kernel.asm	/^c010e826:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010e829	obj/kernel.asm	/^c010e829:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010e82c	obj/kernel.asm	/^c010e82c:	8b 00                	mov    (%eax),%eax$/;"	l
c010e82e	obj/kernel.asm	/^c010e82e:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010e831	obj/kernel.asm	/^c010e831:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010e834	obj/kernel.asm	/^c010e834:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010e837	obj/kernel.asm	/^c010e837:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010e83a	obj/kernel.asm	/^c010e83a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010e83d	obj/kernel.asm	/^c010e83d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010e840	obj/kernel.asm	/^c010e840:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010e843	obj/kernel.asm	/^c010e843:	89 10                	mov    %edx,(%eax)$/;"	l
c010e845	obj/kernel.asm	/^c010e845:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010e848	obj/kernel.asm	/^c010e848:	8b 10                	mov    (%eax),%edx$/;"	l
c010e84a	obj/kernel.asm	/^c010e84a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010e84d	obj/kernel.asm	/^c010e84d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e850	obj/kernel.asm	/^c010e850:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010e853	obj/kernel.asm	/^c010e853:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010e856	obj/kernel.asm	/^c010e856:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e859	obj/kernel.asm	/^c010e859:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010e85c	obj/kernel.asm	/^c010e85c:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010e85f	obj/kernel.asm	/^c010e85f:	89 10                	mov    %edx,(%eax)$/;"	l
c010e861	obj/kernel.asm	/^c010e861:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e864	obj/kernel.asm	/^c010e864:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e867	obj/kernel.asm	/^c010e867:	e8 7c fc ff ff       	call   c010e4e8 <__intr_restore>$/;"	l
c010e86c	obj/kernel.asm	/^c010e86c:	c9                   	leave  $/;"	l
c010e86d	obj/kernel.asm	/^c010e86d:	c3                   	ret    $/;"	l
c010e86e	obj/kernel.asm	/^c010e86e <del_timer>:$/;"	l
c010e86e	obj/kernel.asm	/^c010e86e:	55                   	push   %ebp$/;"	l
c010e86f	obj/kernel.asm	/^c010e86f:	89 e5                	mov    %esp,%ebp$/;"	l
c010e871	obj/kernel.asm	/^c010e871:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010e874	obj/kernel.asm	/^c010e874:	e8 45 fc ff ff       	call   c010e4be <__intr_save>$/;"	l
c010e879	obj/kernel.asm	/^c010e879:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e87c	obj/kernel.asm	/^c010e87c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e87f	obj/kernel.asm	/^c010e87f:	83 c0 08             	add    $0x8,%eax$/;"	l
c010e882	obj/kernel.asm	/^c010e882:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e885	obj/kernel.asm	/^c010e885:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e888	obj/kernel.asm	/^c010e888:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e88b	obj/kernel.asm	/^c010e88b:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010e88e	obj/kernel.asm	/^c010e88e:	0f 94 c0             	sete   %al$/;"	l
c010e891	obj/kernel.asm	/^c010e891:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010e894	obj/kernel.asm	/^c010e894:	85 c0                	test   %eax,%eax$/;"	l
c010e896	obj/kernel.asm	/^c010e896:	0f 85 89 00 00 00    	jne    c010e925 <del_timer+0xb7>$/;"	l
c010e89c	obj/kernel.asm	/^c010e89c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e89f	obj/kernel.asm	/^c010e89f:	8b 00                	mov    (%eax),%eax$/;"	l
c010e8a1	obj/kernel.asm	/^c010e8a1:	85 c0                	test   %eax,%eax$/;"	l
c010e8a3	obj/kernel.asm	/^c010e8a3:	74 35                	je     c010e8da <del_timer+0x6c>$/;"	l
c010e8a5	obj/kernel.asm	/^c010e8a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e8a8	obj/kernel.asm	/^c010e8a8:	83 c0 08             	add    $0x8,%eax$/;"	l
c010e8ab	obj/kernel.asm	/^c010e8ab:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010e8ae	obj/kernel.asm	/^c010e8ae:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e8b1	obj/kernel.asm	/^c010e8b1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e8b4	obj/kernel.asm	/^c010e8b4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e8b7	obj/kernel.asm	/^c010e8b7:	81 7d f0 94 2f 15 c0 	cmpl   $0xc0152f94,-0x10(%ebp)$/;"	l
c010e8be	obj/kernel.asm	/^c010e8be:	74 1a                	je     c010e8da <del_timer+0x6c>$/;"	l
c010e8c0	obj/kernel.asm	/^c010e8c0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e8c3	obj/kernel.asm	/^c010e8c3:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010e8c6	obj/kernel.asm	/^c010e8c6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e8c9	obj/kernel.asm	/^c010e8c9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e8cc	obj/kernel.asm	/^c010e8cc:	8b 10                	mov    (%eax),%edx$/;"	l
c010e8ce	obj/kernel.asm	/^c010e8ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e8d1	obj/kernel.asm	/^c010e8d1:	8b 00                	mov    (%eax),%eax$/;"	l
c010e8d3	obj/kernel.asm	/^c010e8d3:	01 c2                	add    %eax,%edx$/;"	l
c010e8d5	obj/kernel.asm	/^c010e8d5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e8d8	obj/kernel.asm	/^c010e8d8:	89 10                	mov    %edx,(%eax)$/;"	l
c010e8da	obj/kernel.asm	/^c010e8da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e8dd	obj/kernel.asm	/^c010e8dd:	83 c0 08             	add    $0x8,%eax$/;"	l
c010e8e0	obj/kernel.asm	/^c010e8e0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010e8e3	obj/kernel.asm	/^c010e8e3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010e8e6	obj/kernel.asm	/^c010e8e6:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010e8e9	obj/kernel.asm	/^c010e8e9:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010e8ec	obj/kernel.asm	/^c010e8ec:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e8ef	obj/kernel.asm	/^c010e8ef:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010e8f2	obj/kernel.asm	/^c010e8f2:	8b 12                	mov    (%edx),%edx$/;"	l
c010e8f4	obj/kernel.asm	/^c010e8f4:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010e8f7	obj/kernel.asm	/^c010e8f7:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010e8fa	obj/kernel.asm	/^c010e8fa:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010e8fd	obj/kernel.asm	/^c010e8fd:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010e900	obj/kernel.asm	/^c010e900:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e903	obj/kernel.asm	/^c010e903:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010e906	obj/kernel.asm	/^c010e906:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010e909	obj/kernel.asm	/^c010e909:	89 10                	mov    %edx,(%eax)$/;"	l
c010e90b	obj/kernel.asm	/^c010e90b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010e90e	obj/kernel.asm	/^c010e90e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010e911	obj/kernel.asm	/^c010e911:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010e914	obj/kernel.asm	/^c010e914:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010e917	obj/kernel.asm	/^c010e917:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e91a	obj/kernel.asm	/^c010e91a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010e91d	obj/kernel.asm	/^c010e91d:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010e920	obj/kernel.asm	/^c010e920:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010e923	obj/kernel.asm	/^c010e923:	89 10                	mov    %edx,(%eax)$/;"	l
c010e925	obj/kernel.asm	/^c010e925:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e928	obj/kernel.asm	/^c010e928:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e92b	obj/kernel.asm	/^c010e92b:	e8 b8 fb ff ff       	call   c010e4e8 <__intr_restore>$/;"	l
c010e930	obj/kernel.asm	/^c010e930:	c9                   	leave  $/;"	l
c010e931	obj/kernel.asm	/^c010e931:	c3                   	ret    $/;"	l
c010e932	obj/kernel.asm	/^c010e932 <run_timer_list>:$/;"	l
c010e932	obj/kernel.asm	/^c010e932:	55                   	push   %ebp$/;"	l
c010e933	obj/kernel.asm	/^c010e933:	89 e5                	mov    %esp,%ebp$/;"	l
c010e935	obj/kernel.asm	/^c010e935:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010e938	obj/kernel.asm	/^c010e938:	e8 81 fb ff ff       	call   c010e4be <__intr_save>$/;"	l
c010e93d	obj/kernel.asm	/^c010e93d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e940	obj/kernel.asm	/^c010e940:	c7 45 e4 94 2f 15 c0 	movl   $0xc0152f94,-0x1c(%ebp)$/;"	l
c010e947	obj/kernel.asm	/^c010e947:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e94a	obj/kernel.asm	/^c010e94a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e94d	obj/kernel.asm	/^c010e94d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e950	obj/kernel.asm	/^c010e950:	81 7d f4 94 2f 15 c0 	cmpl   $0xc0152f94,-0xc(%ebp)$/;"	l
c010e957	obj/kernel.asm	/^c010e957:	0f 84 fb 00 00 00    	je     c010ea58 <run_timer_list+0x126>$/;"	l
c010e95d	obj/kernel.asm	/^c010e95d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e960	obj/kernel.asm	/^c010e960:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010e963	obj/kernel.asm	/^c010e963:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e966	obj/kernel.asm	/^c010e966:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e969	obj/kernel.asm	/^c010e969:	8b 00                	mov    (%eax),%eax$/;"	l
c010e96b	obj/kernel.asm	/^c010e96b:	85 c0                	test   %eax,%eax$/;"	l
c010e96d	obj/kernel.asm	/^c010e96d:	75 24                	jne    c010e993 <run_timer_list+0x61>$/;"	l
c010e96f	obj/kernel.asm	/^c010e96f:	c7 44 24 0c 15 86 11 	movl   $0xc0118615,0xc(%esp)$/;"	l
c010e976	obj/kernel.asm	/^c010e976:	c0 $/;"	l
c010e977	obj/kernel.asm	/^c010e977:	c7 44 24 08 80 85 11 	movl   $0xc0118580,0x8(%esp)$/;"	l
c010e97e	obj/kernel.asm	/^c010e97e:	c0 $/;"	l
c010e97f	obj/kernel.asm	/^c010e97f:	c7 44 24 04 96 00 00 	movl   $0x96,0x4(%esp)$/;"	l
c010e986	obj/kernel.asm	/^c010e986:	00 $/;"	l
c010e987	obj/kernel.asm	/^c010e987:	c7 04 24 95 85 11 c0 	movl   $0xc0118595,(%esp)$/;"	l
c010e98e	obj/kernel.asm	/^c010e98e:	e8 35 25 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010e993	obj/kernel.asm	/^c010e993:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e996	obj/kernel.asm	/^c010e996:	8b 00                	mov    (%eax),%eax$/;"	l
c010e998	obj/kernel.asm	/^c010e998:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010e99b	obj/kernel.asm	/^c010e99b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e99e	obj/kernel.asm	/^c010e99e:	89 10                	mov    %edx,(%eax)$/;"	l
c010e9a0	obj/kernel.asm	/^c010e9a0:	e9 a6 00 00 00       	jmp    c010ea4b <run_timer_list+0x119>$/;"	l
c010e9a5	obj/kernel.asm	/^c010e9a5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e9a8	obj/kernel.asm	/^c010e9a8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010e9ab	obj/kernel.asm	/^c010e9ab:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010e9ae	obj/kernel.asm	/^c010e9ae:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e9b1	obj/kernel.asm	/^c010e9b1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e9b4	obj/kernel.asm	/^c010e9b4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e9b7	obj/kernel.asm	/^c010e9b7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e9ba	obj/kernel.asm	/^c010e9ba:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e9bd	obj/kernel.asm	/^c010e9bd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e9c0	obj/kernel.asm	/^c010e9c0:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010e9c6	obj/kernel.asm	/^c010e9c6:	85 c0                	test   %eax,%eax$/;"	l
c010e9c8	obj/kernel.asm	/^c010e9c8:	74 31                	je     c010e9fb <run_timer_list+0xc9>$/;"	l
c010e9ca	obj/kernel.asm	/^c010e9ca:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e9cd	obj/kernel.asm	/^c010e9cd:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010e9d3	obj/kernel.asm	/^c010e9d3:	85 c0                	test   %eax,%eax$/;"	l
c010e9d5	obj/kernel.asm	/^c010e9d5:	78 4a                	js     c010ea21 <run_timer_list+0xef>$/;"	l
c010e9d7	obj/kernel.asm	/^c010e9d7:	c7 44 24 0c 2c 86 11 	movl   $0xc011862c,0xc(%esp)$/;"	l
c010e9de	obj/kernel.asm	/^c010e9de:	c0 $/;"	l
c010e9df	obj/kernel.asm	/^c010e9df:	c7 44 24 08 80 85 11 	movl   $0xc0118580,0x8(%esp)$/;"	l
c010e9e6	obj/kernel.asm	/^c010e9e6:	c0 $/;"	l
c010e9e7	obj/kernel.asm	/^c010e9e7:	c7 44 24 04 9c 00 00 	movl   $0x9c,0x4(%esp)$/;"	l
c010e9ee	obj/kernel.asm	/^c010e9ee:	00 $/;"	l
c010e9ef	obj/kernel.asm	/^c010e9ef:	c7 04 24 95 85 11 c0 	movl   $0xc0118595,(%esp)$/;"	l
c010e9f6	obj/kernel.asm	/^c010e9f6:	e8 cd 24 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010e9fb	obj/kernel.asm	/^c010e9fb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e9fe	obj/kernel.asm	/^c010e9fe:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ea01	obj/kernel.asm	/^c010ea01:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010ea05	obj/kernel.asm	/^c010ea05:	c7 44 24 08 50 86 11 	movl   $0xc0118650,0x8(%esp)$/;"	l
c010ea0c	obj/kernel.asm	/^c010ea0c:	c0 $/;"	l
c010ea0d	obj/kernel.asm	/^c010ea0d:	c7 44 24 04 9f 00 00 	movl   $0x9f,0x4(%esp)$/;"	l
c010ea14	obj/kernel.asm	/^c010ea14:	00 $/;"	l
c010ea15	obj/kernel.asm	/^c010ea15:	c7 04 24 95 85 11 c0 	movl   $0xc0118595,(%esp)$/;"	l
c010ea1c	obj/kernel.asm	/^c010ea1c:	e8 13 25 ff ff       	call   c0100f34 <__warn>$/;"	l
c010ea21	obj/kernel.asm	/^c010ea21:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ea24	obj/kernel.asm	/^c010ea24:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ea27	obj/kernel.asm	/^c010ea27:	e8 dd fb ff ff       	call   c010e609 <wakeup_proc>$/;"	l
c010ea2c	obj/kernel.asm	/^c010ea2c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ea2f	obj/kernel.asm	/^c010ea2f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ea32	obj/kernel.asm	/^c010ea32:	e8 37 fe ff ff       	call   c010e86e <del_timer>$/;"	l
c010ea37	obj/kernel.asm	/^c010ea37:	81 7d f4 94 2f 15 c0 	cmpl   $0xc0152f94,-0xc(%ebp)$/;"	l
c010ea3e	obj/kernel.asm	/^c010ea3e:	75 02                	jne    c010ea42 <run_timer_list+0x110>$/;"	l
c010ea40	obj/kernel.asm	/^c010ea40:	eb 16                	jmp    c010ea58 <run_timer_list+0x126>$/;"	l
c010ea42	obj/kernel.asm	/^c010ea42:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ea45	obj/kernel.asm	/^c010ea45:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010ea48	obj/kernel.asm	/^c010ea48:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ea4b	obj/kernel.asm	/^c010ea4b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ea4e	obj/kernel.asm	/^c010ea4e:	8b 00                	mov    (%eax),%eax$/;"	l
c010ea50	obj/kernel.asm	/^c010ea50:	85 c0                	test   %eax,%eax$/;"	l
c010ea52	obj/kernel.asm	/^c010ea52:	0f 84 4d ff ff ff    	je     c010e9a5 <run_timer_list+0x73>$/;"	l
c010ea58	obj/kernel.asm	/^c010ea58:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010ea5d	obj/kernel.asm	/^c010ea5d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ea60	obj/kernel.asm	/^c010ea60:	e8 ff fa ff ff       	call   c010e564 <sched_class_proc_tick>$/;"	l
c010ea65	obj/kernel.asm	/^c010ea65:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ea68	obj/kernel.asm	/^c010ea68:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ea6b	obj/kernel.asm	/^c010ea6b:	e8 78 fa ff ff       	call   c010e4e8 <__intr_restore>$/;"	l
c010ea70	obj/kernel.asm	/^c010ea70:	c9                   	leave  $/;"	l
c010ea71	obj/kernel.asm	/^c010ea71:	c3                   	ret    $/;"	l
c010ea72	obj/kernel.asm	/^c010ea72 <sys_exit>:$/;"	l
c010ea72	obj/kernel.asm	/^c010ea72:	55                   	push   %ebp$/;"	l
c010ea73	obj/kernel.asm	/^c010ea73:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea75	obj/kernel.asm	/^c010ea75:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ea78	obj/kernel.asm	/^c010ea78:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ea7b	obj/kernel.asm	/^c010ea7b:	8b 00                	mov    (%eax),%eax$/;"	l
c010ea7d	obj/kernel.asm	/^c010ea7d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ea80	obj/kernel.asm	/^c010ea80:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ea83	obj/kernel.asm	/^c010ea83:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ea86	obj/kernel.asm	/^c010ea86:	e8 d4 e0 ff ff       	call   c010cb5f <do_exit>$/;"	l
c010ea8b	obj/kernel.asm	/^c010ea8b:	c9                   	leave  $/;"	l
c010ea8c	obj/kernel.asm	/^c010ea8c:	c3                   	ret    $/;"	l
c010ea8d	obj/kernel.asm	/^c010ea8d <sys_fork>:$/;"	l
c010ea8d	obj/kernel.asm	/^c010ea8d:	55                   	push   %ebp$/;"	l
c010ea8e	obj/kernel.asm	/^c010ea8e:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea90	obj/kernel.asm	/^c010ea90:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ea93	obj/kernel.asm	/^c010ea93:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010ea98	obj/kernel.asm	/^c010ea98:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ea9b	obj/kernel.asm	/^c010ea9b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ea9e	obj/kernel.asm	/^c010ea9e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eaa1	obj/kernel.asm	/^c010eaa1:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010eaa4	obj/kernel.asm	/^c010eaa4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010eaa7	obj/kernel.asm	/^c010eaa7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eaaa	obj/kernel.asm	/^c010eaaa:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010eaae	obj/kernel.asm	/^c010eaae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010eab1	obj/kernel.asm	/^c010eab1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010eab5	obj/kernel.asm	/^c010eab5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c010eabc	obj/kernel.asm	/^c010eabc:	e8 63 df ff ff       	call   c010ca24 <do_fork>$/;"	l
c010eac1	obj/kernel.asm	/^c010eac1:	c9                   	leave  $/;"	l
c010eac2	obj/kernel.asm	/^c010eac2:	c3                   	ret    $/;"	l
c010eac3	obj/kernel.asm	/^c010eac3 <sys_wait>:$/;"	l
c010eac3	obj/kernel.asm	/^c010eac3:	55                   	push   %ebp$/;"	l
c010eac4	obj/kernel.asm	/^c010eac4:	89 e5                	mov    %esp,%ebp$/;"	l
c010eac6	obj/kernel.asm	/^c010eac6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010eac9	obj/kernel.asm	/^c010eac9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eacc	obj/kernel.asm	/^c010eacc:	8b 00                	mov    (%eax),%eax$/;"	l
c010eace	obj/kernel.asm	/^c010eace:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ead1	obj/kernel.asm	/^c010ead1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ead4	obj/kernel.asm	/^c010ead4:	83 c0 04             	add    $0x4,%eax$/;"	l
c010ead7	obj/kernel.asm	/^c010ead7:	8b 00                	mov    (%eax),%eax$/;"	l
c010ead9	obj/kernel.asm	/^c010ead9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010eadc	obj/kernel.asm	/^c010eadc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010eadf	obj/kernel.asm	/^c010eadf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010eae3	obj/kernel.asm	/^c010eae3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eae6	obj/kernel.asm	/^c010eae6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010eae9	obj/kernel.asm	/^c010eae9:	e8 7a ee ff ff       	call   c010d968 <do_wait>$/;"	l
c010eaee	obj/kernel.asm	/^c010eaee:	c9                   	leave  $/;"	l
c010eaef	obj/kernel.asm	/^c010eaef:	c3                   	ret    $/;"	l
c010eaf0	obj/kernel.asm	/^c010eaf0 <sys_exec>:$/;"	l
c010eaf0	obj/kernel.asm	/^c010eaf0:	55                   	push   %ebp$/;"	l
c010eaf1	obj/kernel.asm	/^c010eaf1:	89 e5                	mov    %esp,%ebp$/;"	l
c010eaf3	obj/kernel.asm	/^c010eaf3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010eaf6	obj/kernel.asm	/^c010eaf6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eaf9	obj/kernel.asm	/^c010eaf9:	8b 00                	mov    (%eax),%eax$/;"	l
c010eafb	obj/kernel.asm	/^c010eafb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eafe	obj/kernel.asm	/^c010eafe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb01	obj/kernel.asm	/^c010eb01:	83 c0 04             	add    $0x4,%eax$/;"	l
c010eb04	obj/kernel.asm	/^c010eb04:	8b 00                	mov    (%eax),%eax$/;"	l
c010eb06	obj/kernel.asm	/^c010eb06:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010eb09	obj/kernel.asm	/^c010eb09:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb0c	obj/kernel.asm	/^c010eb0c:	83 c0 08             	add    $0x8,%eax$/;"	l
c010eb0f	obj/kernel.asm	/^c010eb0f:	8b 00                	mov    (%eax),%eax$/;"	l
c010eb11	obj/kernel.asm	/^c010eb11:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010eb14	obj/kernel.asm	/^c010eb14:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010eb17	obj/kernel.asm	/^c010eb17:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010eb1b	obj/kernel.asm	/^c010eb1b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010eb1e	obj/kernel.asm	/^c010eb1e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010eb22	obj/kernel.asm	/^c010eb22:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eb25	obj/kernel.asm	/^c010eb25:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010eb28	obj/kernel.asm	/^c010eb28:	e8 e8 eb ff ff       	call   c010d715 <do_execve>$/;"	l
c010eb2d	obj/kernel.asm	/^c010eb2d:	c9                   	leave  $/;"	l
c010eb2e	obj/kernel.asm	/^c010eb2e:	c3                   	ret    $/;"	l
c010eb2f	obj/kernel.asm	/^c010eb2f <sys_yield>:$/;"	l
c010eb2f	obj/kernel.asm	/^c010eb2f:	55                   	push   %ebp$/;"	l
c010eb30	obj/kernel.asm	/^c010eb30:	89 e5                	mov    %esp,%ebp$/;"	l
c010eb32	obj/kernel.asm	/^c010eb32:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010eb35	obj/kernel.asm	/^c010eb35:	e8 18 ee ff ff       	call   c010d952 <do_yield>$/;"	l
c010eb3a	obj/kernel.asm	/^c010eb3a:	c9                   	leave  $/;"	l
c010eb3b	obj/kernel.asm	/^c010eb3b:	c3                   	ret    $/;"	l
c010eb3c	obj/kernel.asm	/^c010eb3c <sys_kill>:$/;"	l
c010eb3c	obj/kernel.asm	/^c010eb3c:	55                   	push   %ebp$/;"	l
c010eb3d	obj/kernel.asm	/^c010eb3d:	89 e5                	mov    %esp,%ebp$/;"	l
c010eb3f	obj/kernel.asm	/^c010eb3f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010eb42	obj/kernel.asm	/^c010eb42:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb45	obj/kernel.asm	/^c010eb45:	8b 00                	mov    (%eax),%eax$/;"	l
c010eb47	obj/kernel.asm	/^c010eb47:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eb4a	obj/kernel.asm	/^c010eb4a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eb4d	obj/kernel.asm	/^c010eb4d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010eb50	obj/kernel.asm	/^c010eb50:	e8 b3 ef ff ff       	call   c010db08 <do_kill>$/;"	l
c010eb55	obj/kernel.asm	/^c010eb55:	c9                   	leave  $/;"	l
c010eb56	obj/kernel.asm	/^c010eb56:	c3                   	ret    $/;"	l
c010eb57	obj/kernel.asm	/^c010eb57 <sys_getpid>:$/;"	l
c010eb57	obj/kernel.asm	/^c010eb57:	55                   	push   %ebp$/;"	l
c010eb58	obj/kernel.asm	/^c010eb58:	89 e5                	mov    %esp,%ebp$/;"	l
c010eb5a	obj/kernel.asm	/^c010eb5a:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010eb5f	obj/kernel.asm	/^c010eb5f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010eb62	obj/kernel.asm	/^c010eb62:	5d                   	pop    %ebp$/;"	l
c010eb63	obj/kernel.asm	/^c010eb63:	c3                   	ret    $/;"	l
c010eb64	obj/kernel.asm	/^c010eb64 <sys_putc>:$/;"	l
c010eb64	obj/kernel.asm	/^c010eb64:	55                   	push   %ebp$/;"	l
c010eb65	obj/kernel.asm	/^c010eb65:	89 e5                	mov    %esp,%ebp$/;"	l
c010eb67	obj/kernel.asm	/^c010eb67:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010eb6a	obj/kernel.asm	/^c010eb6a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb6d	obj/kernel.asm	/^c010eb6d:	8b 00                	mov    (%eax),%eax$/;"	l
c010eb6f	obj/kernel.asm	/^c010eb6f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eb72	obj/kernel.asm	/^c010eb72:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eb75	obj/kernel.asm	/^c010eb75:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010eb78	obj/kernel.asm	/^c010eb78:	e8 0e 18 ff ff       	call   c010038b <cputchar>$/;"	l
c010eb7d	obj/kernel.asm	/^c010eb7d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010eb82	obj/kernel.asm	/^c010eb82:	c9                   	leave  $/;"	l
c010eb83	obj/kernel.asm	/^c010eb83:	c3                   	ret    $/;"	l
c010eb84	obj/kernel.asm	/^c010eb84 <sys_pgdir>:$/;"	l
c010eb84	obj/kernel.asm	/^c010eb84:	55                   	push   %ebp$/;"	l
c010eb85	obj/kernel.asm	/^c010eb85:	89 e5                	mov    %esp,%ebp$/;"	l
c010eb87	obj/kernel.asm	/^c010eb87:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010eb8a	obj/kernel.asm	/^c010eb8a:	e8 d0 80 ff ff       	call   c0106c5f <print_pgdir>$/;"	l
c010eb8f	obj/kernel.asm	/^c010eb8f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010eb94	obj/kernel.asm	/^c010eb94:	c9                   	leave  $/;"	l
c010eb95	obj/kernel.asm	/^c010eb95:	c3                   	ret    $/;"	l
c010eb96	obj/kernel.asm	/^c010eb96 <sys_gettime>:$/;"	l
c010eb96	obj/kernel.asm	/^c010eb96:	55                   	push   %ebp$/;"	l
c010eb97	obj/kernel.asm	/^c010eb97:	89 e5                	mov    %esp,%ebp$/;"	l
c010eb99	obj/kernel.asm	/^c010eb99:	a1 10 40 15 c0       	mov    0xc0154010,%eax$/;"	l
c010eb9e	obj/kernel.asm	/^c010eb9e:	5d                   	pop    %ebp$/;"	l
c010eb9f	obj/kernel.asm	/^c010eb9f:	c3                   	ret    $/;"	l
c010eba0	obj/kernel.asm	/^c010eba0 <sys_lab6_set_priority>:$/;"	l
c010eba0	obj/kernel.asm	/^c010eba0:	55                   	push   %ebp$/;"	l
c010eba1	obj/kernel.asm	/^c010eba1:	89 e5                	mov    %esp,%ebp$/;"	l
c010eba3	obj/kernel.asm	/^c010eba3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010eba6	obj/kernel.asm	/^c010eba6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eba9	obj/kernel.asm	/^c010eba9:	8b 00                	mov    (%eax),%eax$/;"	l
c010ebab	obj/kernel.asm	/^c010ebab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ebae	obj/kernel.asm	/^c010ebae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ebb1	obj/kernel.asm	/^c010ebb1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ebb4	obj/kernel.asm	/^c010ebb4:	e8 b2 f4 ff ff       	call   c010e06b <lab6_set_priority>$/;"	l
c010ebb9	obj/kernel.asm	/^c010ebb9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ebbe	obj/kernel.asm	/^c010ebbe:	c9                   	leave  $/;"	l
c010ebbf	obj/kernel.asm	/^c010ebbf:	c3                   	ret    $/;"	l
c010ebc0	obj/kernel.asm	/^c010ebc0 <sys_sleep>:$/;"	l
c010ebc0	obj/kernel.asm	/^c010ebc0:	55                   	push   %ebp$/;"	l
c010ebc1	obj/kernel.asm	/^c010ebc1:	89 e5                	mov    %esp,%ebp$/;"	l
c010ebc3	obj/kernel.asm	/^c010ebc3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ebc6	obj/kernel.asm	/^c010ebc6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ebc9	obj/kernel.asm	/^c010ebc9:	8b 00                	mov    (%eax),%eax$/;"	l
c010ebcb	obj/kernel.asm	/^c010ebcb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ebce	obj/kernel.asm	/^c010ebce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ebd1	obj/kernel.asm	/^c010ebd1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ebd4	obj/kernel.asm	/^c010ebd4:	e8 bc f4 ff ff       	call   c010e095 <do_sleep>$/;"	l
c010ebd9	obj/kernel.asm	/^c010ebd9:	c9                   	leave  $/;"	l
c010ebda	obj/kernel.asm	/^c010ebda:	c3                   	ret    $/;"	l
c010ebdb	obj/kernel.asm	/^c010ebdb <sys_open>:$/;"	l
c010ebdb	obj/kernel.asm	/^c010ebdb:	55                   	push   %ebp$/;"	l
c010ebdc	obj/kernel.asm	/^c010ebdc:	89 e5                	mov    %esp,%ebp$/;"	l
c010ebde	obj/kernel.asm	/^c010ebde:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ebe1	obj/kernel.asm	/^c010ebe1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ebe4	obj/kernel.asm	/^c010ebe4:	8b 00                	mov    (%eax),%eax$/;"	l
c010ebe6	obj/kernel.asm	/^c010ebe6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ebe9	obj/kernel.asm	/^c010ebe9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ebec	obj/kernel.asm	/^c010ebec:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ebef	obj/kernel.asm	/^c010ebef:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ebf2	obj/kernel.asm	/^c010ebf2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ebf5	obj/kernel.asm	/^c010ebf5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ebf9	obj/kernel.asm	/^c010ebf9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ebfc	obj/kernel.asm	/^c010ebfc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ebff	obj/kernel.asm	/^c010ebff:	e8 df c9 ff ff       	call   c010b5e3 <sysfile_open>$/;"	l
c010ec04	obj/kernel.asm	/^c010ec04:	c9                   	leave  $/;"	l
c010ec05	obj/kernel.asm	/^c010ec05:	c3                   	ret    $/;"	l
c010ec06	obj/kernel.asm	/^c010ec06 <sys_close>:$/;"	l
c010ec06	obj/kernel.asm	/^c010ec06:	55                   	push   %ebp$/;"	l
c010ec07	obj/kernel.asm	/^c010ec07:	89 e5                	mov    %esp,%ebp$/;"	l
c010ec09	obj/kernel.asm	/^c010ec09:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ec0c	obj/kernel.asm	/^c010ec0c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ec0f	obj/kernel.asm	/^c010ec0f:	8b 00                	mov    (%eax),%eax$/;"	l
c010ec11	obj/kernel.asm	/^c010ec11:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ec14	obj/kernel.asm	/^c010ec14:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ec17	obj/kernel.asm	/^c010ec17:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ec1a	obj/kernel.asm	/^c010ec1a:	e8 0f ca ff ff       	call   c010b62e <sysfile_close>$/;"	l
c010ec1f	obj/kernel.asm	/^c010ec1f:	c9                   	leave  $/;"	l
c010ec20	obj/kernel.asm	/^c010ec20:	c3                   	ret    $/;"	l
c010ec21	obj/kernel.asm	/^c010ec21 <sys_read>:$/;"	l
c010ec21	obj/kernel.asm	/^c010ec21:	55                   	push   %ebp$/;"	l
c010ec22	obj/kernel.asm	/^c010ec22:	89 e5                	mov    %esp,%ebp$/;"	l
c010ec24	obj/kernel.asm	/^c010ec24:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ec27	obj/kernel.asm	/^c010ec27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ec2a	obj/kernel.asm	/^c010ec2a:	8b 00                	mov    (%eax),%eax$/;"	l
c010ec2c	obj/kernel.asm	/^c010ec2c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ec2f	obj/kernel.asm	/^c010ec2f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ec32	obj/kernel.asm	/^c010ec32:	83 c0 04             	add    $0x4,%eax$/;"	l
c010ec35	obj/kernel.asm	/^c010ec35:	8b 00                	mov    (%eax),%eax$/;"	l
c010ec37	obj/kernel.asm	/^c010ec37:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ec3a	obj/kernel.asm	/^c010ec3a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ec3d	obj/kernel.asm	/^c010ec3d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010ec40	obj/kernel.asm	/^c010ec40:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ec43	obj/kernel.asm	/^c010ec43:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ec46	obj/kernel.asm	/^c010ec46:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010ec4a	obj/kernel.asm	/^c010ec4a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ec4d	obj/kernel.asm	/^c010ec4d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ec51	obj/kernel.asm	/^c010ec51:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ec54	obj/kernel.asm	/^c010ec54:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ec57	obj/kernel.asm	/^c010ec57:	e8 e5 c9 ff ff       	call   c010b641 <sysfile_read>$/;"	l
c010ec5c	obj/kernel.asm	/^c010ec5c:	c9                   	leave  $/;"	l
c010ec5d	obj/kernel.asm	/^c010ec5d:	c3                   	ret    $/;"	l
c010ec5e	obj/kernel.asm	/^c010ec5e <sys_write>:$/;"	l
c010ec5e	obj/kernel.asm	/^c010ec5e:	55                   	push   %ebp$/;"	l
c010ec5f	obj/kernel.asm	/^c010ec5f:	89 e5                	mov    %esp,%ebp$/;"	l
c010ec61	obj/kernel.asm	/^c010ec61:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ec64	obj/kernel.asm	/^c010ec64:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ec67	obj/kernel.asm	/^c010ec67:	8b 00                	mov    (%eax),%eax$/;"	l
c010ec69	obj/kernel.asm	/^c010ec69:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ec6c	obj/kernel.asm	/^c010ec6c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ec6f	obj/kernel.asm	/^c010ec6f:	83 c0 04             	add    $0x4,%eax$/;"	l
c010ec72	obj/kernel.asm	/^c010ec72:	8b 00                	mov    (%eax),%eax$/;"	l
c010ec74	obj/kernel.asm	/^c010ec74:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ec77	obj/kernel.asm	/^c010ec77:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ec7a	obj/kernel.asm	/^c010ec7a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010ec7d	obj/kernel.asm	/^c010ec7d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ec80	obj/kernel.asm	/^c010ec80:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ec83	obj/kernel.asm	/^c010ec83:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010ec87	obj/kernel.asm	/^c010ec87:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ec8a	obj/kernel.asm	/^c010ec8a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ec8e	obj/kernel.asm	/^c010ec8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ec91	obj/kernel.asm	/^c010ec91:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ec94	obj/kernel.asm	/^c010ec94:	e8 20 cb ff ff       	call   c010b7b9 <sysfile_write>$/;"	l
c010ec99	obj/kernel.asm	/^c010ec99:	c9                   	leave  $/;"	l
c010ec9a	obj/kernel.asm	/^c010ec9a:	c3                   	ret    $/;"	l
c010ec9b	obj/kernel.asm	/^c010ec9b <sys_seek>:$/;"	l
c010ec9b	obj/kernel.asm	/^c010ec9b:	55                   	push   %ebp$/;"	l
c010ec9c	obj/kernel.asm	/^c010ec9c:	89 e5                	mov    %esp,%ebp$/;"	l
c010ec9e	obj/kernel.asm	/^c010ec9e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010eca1	obj/kernel.asm	/^c010eca1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eca4	obj/kernel.asm	/^c010eca4:	8b 00                	mov    (%eax),%eax$/;"	l
c010eca6	obj/kernel.asm	/^c010eca6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eca9	obj/kernel.asm	/^c010eca9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ecac	obj/kernel.asm	/^c010ecac:	83 c0 04             	add    $0x4,%eax$/;"	l
c010ecaf	obj/kernel.asm	/^c010ecaf:	8b 00                	mov    (%eax),%eax$/;"	l
c010ecb1	obj/kernel.asm	/^c010ecb1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ecb4	obj/kernel.asm	/^c010ecb4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ecb7	obj/kernel.asm	/^c010ecb7:	83 c0 08             	add    $0x8,%eax$/;"	l
c010ecba	obj/kernel.asm	/^c010ecba:	8b 00                	mov    (%eax),%eax$/;"	l
c010ecbc	obj/kernel.asm	/^c010ecbc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ecbf	obj/kernel.asm	/^c010ecbf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ecc2	obj/kernel.asm	/^c010ecc2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010ecc6	obj/kernel.asm	/^c010ecc6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ecc9	obj/kernel.asm	/^c010ecc9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010eccd	obj/kernel.asm	/^c010eccd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ecd0	obj/kernel.asm	/^c010ecd0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ecd3	obj/kernel.asm	/^c010ecd3:	e8 5b cc ff ff       	call   c010b933 <sysfile_seek>$/;"	l
c010ecd8	obj/kernel.asm	/^c010ecd8:	c9                   	leave  $/;"	l
c010ecd9	obj/kernel.asm	/^c010ecd9:	c3                   	ret    $/;"	l
c010ecda	obj/kernel.asm	/^c010ecda <sys_fstat>:$/;"	l
c010ecda	obj/kernel.asm	/^c010ecda:	55                   	push   %ebp$/;"	l
c010ecdb	obj/kernel.asm	/^c010ecdb:	89 e5                	mov    %esp,%ebp$/;"	l
c010ecdd	obj/kernel.asm	/^c010ecdd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ece0	obj/kernel.asm	/^c010ece0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ece3	obj/kernel.asm	/^c010ece3:	8b 00                	mov    (%eax),%eax$/;"	l
c010ece5	obj/kernel.asm	/^c010ece5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ece8	obj/kernel.asm	/^c010ece8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eceb	obj/kernel.asm	/^c010eceb:	83 c0 04             	add    $0x4,%eax$/;"	l
c010ecee	obj/kernel.asm	/^c010ecee:	8b 00                	mov    (%eax),%eax$/;"	l
c010ecf0	obj/kernel.asm	/^c010ecf0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ecf3	obj/kernel.asm	/^c010ecf3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ecf6	obj/kernel.asm	/^c010ecf6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ecfa	obj/kernel.asm	/^c010ecfa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ecfd	obj/kernel.asm	/^c010ecfd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ed00	obj/kernel.asm	/^c010ed00:	e8 4f cc ff ff       	call   c010b954 <sysfile_fstat>$/;"	l
c010ed05	obj/kernel.asm	/^c010ed05:	c9                   	leave  $/;"	l
c010ed06	obj/kernel.asm	/^c010ed06:	c3                   	ret    $/;"	l
c010ed07	obj/kernel.asm	/^c010ed07 <sys_fsync>:$/;"	l
c010ed07	obj/kernel.asm	/^c010ed07:	55                   	push   %ebp$/;"	l
c010ed08	obj/kernel.asm	/^c010ed08:	89 e5                	mov    %esp,%ebp$/;"	l
c010ed0a	obj/kernel.asm	/^c010ed0a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ed0d	obj/kernel.asm	/^c010ed0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ed10	obj/kernel.asm	/^c010ed10:	8b 00                	mov    (%eax),%eax$/;"	l
c010ed12	obj/kernel.asm	/^c010ed12:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ed15	obj/kernel.asm	/^c010ed15:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ed18	obj/kernel.asm	/^c010ed18:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ed1b	obj/kernel.asm	/^c010ed1b:	e8 b2 cc ff ff       	call   c010b9d2 <sysfile_fsync>$/;"	l
c010ed20	obj/kernel.asm	/^c010ed20:	c9                   	leave  $/;"	l
c010ed21	obj/kernel.asm	/^c010ed21:	c3                   	ret    $/;"	l
c010ed22	obj/kernel.asm	/^c010ed22 <sys_getcwd>:$/;"	l
c010ed22	obj/kernel.asm	/^c010ed22:	55                   	push   %ebp$/;"	l
c010ed23	obj/kernel.asm	/^c010ed23:	89 e5                	mov    %esp,%ebp$/;"	l
c010ed25	obj/kernel.asm	/^c010ed25:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ed28	obj/kernel.asm	/^c010ed28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ed2b	obj/kernel.asm	/^c010ed2b:	8b 00                	mov    (%eax),%eax$/;"	l
c010ed2d	obj/kernel.asm	/^c010ed2d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ed30	obj/kernel.asm	/^c010ed30:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ed33	obj/kernel.asm	/^c010ed33:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ed36	obj/kernel.asm	/^c010ed36:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ed39	obj/kernel.asm	/^c010ed39:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ed3c	obj/kernel.asm	/^c010ed3c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ed40	obj/kernel.asm	/^c010ed40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ed43	obj/kernel.asm	/^c010ed43:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ed46	obj/kernel.asm	/^c010ed46:	e8 24 ce ff ff       	call   c010bb6f <sysfile_getcwd>$/;"	l
c010ed4b	obj/kernel.asm	/^c010ed4b:	c9                   	leave  $/;"	l
c010ed4c	obj/kernel.asm	/^c010ed4c:	c3                   	ret    $/;"	l
c010ed4d	obj/kernel.asm	/^c010ed4d <sys_getdirentry>:$/;"	l
c010ed4d	obj/kernel.asm	/^c010ed4d:	55                   	push   %ebp$/;"	l
c010ed4e	obj/kernel.asm	/^c010ed4e:	89 e5                	mov    %esp,%ebp$/;"	l
c010ed50	obj/kernel.asm	/^c010ed50:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ed53	obj/kernel.asm	/^c010ed53:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ed56	obj/kernel.asm	/^c010ed56:	8b 00                	mov    (%eax),%eax$/;"	l
c010ed58	obj/kernel.asm	/^c010ed58:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ed5b	obj/kernel.asm	/^c010ed5b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ed5e	obj/kernel.asm	/^c010ed5e:	83 c0 04             	add    $0x4,%eax$/;"	l
c010ed61	obj/kernel.asm	/^c010ed61:	8b 00                	mov    (%eax),%eax$/;"	l
c010ed63	obj/kernel.asm	/^c010ed63:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ed66	obj/kernel.asm	/^c010ed66:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ed69	obj/kernel.asm	/^c010ed69:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ed6d	obj/kernel.asm	/^c010ed6d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ed70	obj/kernel.asm	/^c010ed70:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ed73	obj/kernel.asm	/^c010ed73:	e8 8e ce ff ff       	call   c010bc06 <sysfile_getdirentry>$/;"	l
c010ed78	obj/kernel.asm	/^c010ed78:	c9                   	leave  $/;"	l
c010ed79	obj/kernel.asm	/^c010ed79:	c3                   	ret    $/;"	l
c010ed7a	obj/kernel.asm	/^c010ed7a <sys_dup>:$/;"	l
c010ed7a	obj/kernel.asm	/^c010ed7a:	55                   	push   %ebp$/;"	l
c010ed7b	obj/kernel.asm	/^c010ed7b:	89 e5                	mov    %esp,%ebp$/;"	l
c010ed7d	obj/kernel.asm	/^c010ed7d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ed80	obj/kernel.asm	/^c010ed80:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ed83	obj/kernel.asm	/^c010ed83:	8b 00                	mov    (%eax),%eax$/;"	l
c010ed85	obj/kernel.asm	/^c010ed85:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ed88	obj/kernel.asm	/^c010ed88:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ed8b	obj/kernel.asm	/^c010ed8b:	83 c0 04             	add    $0x4,%eax$/;"	l
c010ed8e	obj/kernel.asm	/^c010ed8e:	8b 00                	mov    (%eax),%eax$/;"	l
c010ed90	obj/kernel.asm	/^c010ed90:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ed93	obj/kernel.asm	/^c010ed93:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ed96	obj/kernel.asm	/^c010ed96:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ed9a	obj/kernel.asm	/^c010ed9a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ed9d	obj/kernel.asm	/^c010ed9d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010eda0	obj/kernel.asm	/^c010eda0:	e8 55 cf ff ff       	call   c010bcfa <sysfile_dup>$/;"	l
c010eda5	obj/kernel.asm	/^c010eda5:	c9                   	leave  $/;"	l
c010eda6	obj/kernel.asm	/^c010eda6:	c3                   	ret    $/;"	l
c010eda7	obj/kernel.asm	/^c010eda7 <syscall>:$/;"	l
c010eda7	obj/kernel.asm	/^c010eda7:	55                   	push   %ebp$/;"	l
c010eda8	obj/kernel.asm	/^c010eda8:	89 e5                	mov    %esp,%ebp$/;"	l
c010edaa	obj/kernel.asm	/^c010edaa:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010edad	obj/kernel.asm	/^c010edad:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010edb2	obj/kernel.asm	/^c010edb2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010edb5	obj/kernel.asm	/^c010edb5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010edb8	obj/kernel.asm	/^c010edb8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010edbb	obj/kernel.asm	/^c010edbb:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010edbe	obj/kernel.asm	/^c010edbe:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010edc1	obj/kernel.asm	/^c010edc1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010edc5	obj/kernel.asm	/^c010edc5:	78 60                	js     c010ee27 <syscall+0x80>$/;"	l
c010edc7	obj/kernel.asm	/^c010edc7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010edca	obj/kernel.asm	/^c010edca:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c010edcf	obj/kernel.asm	/^c010edcf:	77 56                	ja     c010ee27 <syscall+0x80>$/;"	l
c010edd1	obj/kernel.asm	/^c010edd1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010edd4	obj/kernel.asm	/^c010edd4:	8b 04 85 c0 fa 14 c0 	mov    -0x3feb0540(,%eax,4),%eax$/;"	l
c010eddb	obj/kernel.asm	/^c010eddb:	85 c0                	test   %eax,%eax$/;"	l
c010eddd	obj/kernel.asm	/^c010eddd:	74 48                	je     c010ee27 <syscall+0x80>$/;"	l
c010eddf	obj/kernel.asm	/^c010eddf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ede2	obj/kernel.asm	/^c010ede2:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ede5	obj/kernel.asm	/^c010ede5:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010ede8	obj/kernel.asm	/^c010ede8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010edeb	obj/kernel.asm	/^c010edeb:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010edee	obj/kernel.asm	/^c010edee:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010edf1	obj/kernel.asm	/^c010edf1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010edf4	obj/kernel.asm	/^c010edf4:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010edf7	obj/kernel.asm	/^c010edf7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010edfa	obj/kernel.asm	/^c010edfa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010edfd	obj/kernel.asm	/^c010edfd:	8b 00                	mov    (%eax),%eax$/;"	l
c010edff	obj/kernel.asm	/^c010edff:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ee02	obj/kernel.asm	/^c010ee02:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ee05	obj/kernel.asm	/^c010ee05:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ee08	obj/kernel.asm	/^c010ee08:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ee0b	obj/kernel.asm	/^c010ee0b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ee0e	obj/kernel.asm	/^c010ee0e:	8b 04 85 c0 fa 14 c0 	mov    -0x3feb0540(,%eax,4),%eax$/;"	l
c010ee15	obj/kernel.asm	/^c010ee15:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c010ee18	obj/kernel.asm	/^c010ee18:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ee1b	obj/kernel.asm	/^c010ee1b:	ff d0                	call   *%eax$/;"	l
c010ee1d	obj/kernel.asm	/^c010ee1d:	89 c2                	mov    %eax,%edx$/;"	l
c010ee1f	obj/kernel.asm	/^c010ee1f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ee22	obj/kernel.asm	/^c010ee22:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010ee25	obj/kernel.asm	/^c010ee25:	eb 46                	jmp    c010ee6d <syscall+0xc6>$/;"	l
c010ee27	obj/kernel.asm	/^c010ee27:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ee2a	obj/kernel.asm	/^c010ee2a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ee2d	obj/kernel.asm	/^c010ee2d:	e8 90 36 ff ff       	call   c01024c2 <print_trapframe>$/;"	l
c010ee32	obj/kernel.asm	/^c010ee32:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010ee37	obj/kernel.asm	/^c010ee37:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c010ee3a	obj/kernel.asm	/^c010ee3a:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c010ee3f	obj/kernel.asm	/^c010ee3f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ee42	obj/kernel.asm	/^c010ee42:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
c010ee46	obj/kernel.asm	/^c010ee46:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c010ee4a	obj/kernel.asm	/^c010ee4a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ee4d	obj/kernel.asm	/^c010ee4d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010ee51	obj/kernel.asm	/^c010ee51:	c7 44 24 08 70 86 11 	movl   $0xc0118670,0x8(%esp)$/;"	l
c010ee58	obj/kernel.asm	/^c010ee58:	c0 $/;"	l
c010ee59	obj/kernel.asm	/^c010ee59:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
c010ee60	obj/kernel.asm	/^c010ee60:	00 $/;"	l
c010ee61	obj/kernel.asm	/^c010ee61:	c7 04 24 9c 86 11 c0 	movl   $0xc011869c,(%esp)$/;"	l
c010ee68	obj/kernel.asm	/^c010ee68:	e8 5b 20 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ee6d	obj/kernel.asm	/^c010ee6d:	c9                   	leave  $/;"	l
c010ee6e	obj/kernel.asm	/^c010ee6e:	c3                   	ret    $/;"	l
c010ee6f	obj/kernel.asm	/^c010ee6f <page2ppn>:$/;"	l
c010ee6f	obj/kernel.asm	/^c010ee6f:	55                   	push   %ebp$/;"	l
c010ee70	obj/kernel.asm	/^c010ee70:	89 e5                	mov    %esp,%ebp$/;"	l
c010ee72	obj/kernel.asm	/^c010ee72:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ee75	obj/kernel.asm	/^c010ee75:	a1 28 40 15 c0       	mov    0xc0154028,%eax$/;"	l
c010ee7a	obj/kernel.asm	/^c010ee7a:	29 c2                	sub    %eax,%edx$/;"	l
c010ee7c	obj/kernel.asm	/^c010ee7c:	89 d0                	mov    %edx,%eax$/;"	l
c010ee7e	obj/kernel.asm	/^c010ee7e:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c010ee81	obj/kernel.asm	/^c010ee81:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c010ee87	obj/kernel.asm	/^c010ee87:	5d                   	pop    %ebp$/;"	l
c010ee88	obj/kernel.asm	/^c010ee88:	c3                   	ret    $/;"	l
c010ee89	obj/kernel.asm	/^c010ee89 <page2pa>:$/;"	l
c010ee89	obj/kernel.asm	/^c010ee89:	55                   	push   %ebp$/;"	l
c010ee8a	obj/kernel.asm	/^c010ee8a:	89 e5                	mov    %esp,%ebp$/;"	l
c010ee8c	obj/kernel.asm	/^c010ee8c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ee8f	obj/kernel.asm	/^c010ee8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ee92	obj/kernel.asm	/^c010ee92:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ee95	obj/kernel.asm	/^c010ee95:	e8 d5 ff ff ff       	call   c010ee6f <page2ppn>$/;"	l
c010ee9a	obj/kernel.asm	/^c010ee9a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010ee9d	obj/kernel.asm	/^c010ee9d:	c9                   	leave  $/;"	l
c010ee9e	obj/kernel.asm	/^c010ee9e:	c3                   	ret    $/;"	l
c010ee9f	obj/kernel.asm	/^c010ee9f <page2kva>:$/;"	l
c010ee9f	obj/kernel.asm	/^c010ee9f:	55                   	push   %ebp$/;"	l
c010eea0	obj/kernel.asm	/^c010eea0:	89 e5                	mov    %esp,%ebp$/;"	l
c010eea2	obj/kernel.asm	/^c010eea2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010eea5	obj/kernel.asm	/^c010eea5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eea8	obj/kernel.asm	/^c010eea8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010eeab	obj/kernel.asm	/^c010eeab:	e8 d9 ff ff ff       	call   c010ee89 <page2pa>$/;"	l
c010eeb0	obj/kernel.asm	/^c010eeb0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eeb3	obj/kernel.asm	/^c010eeb3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eeb6	obj/kernel.asm	/^c010eeb6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010eeb9	obj/kernel.asm	/^c010eeb9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010eebc	obj/kernel.asm	/^c010eebc:	a1 80 0e 15 c0       	mov    0xc0150e80,%eax$/;"	l
c010eec1	obj/kernel.asm	/^c010eec1:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010eec4	obj/kernel.asm	/^c010eec4:	72 23                	jb     c010eee9 <page2kva+0x4a>$/;"	l
c010eec6	obj/kernel.asm	/^c010eec6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eec9	obj/kernel.asm	/^c010eec9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010eecd	obj/kernel.asm	/^c010eecd:	c7 44 24 08 b4 86 11 	movl   $0xc01186b4,0x8(%esp)$/;"	l
c010eed4	obj/kernel.asm	/^c010eed4:	c0 $/;"	l
c010eed5	obj/kernel.asm	/^c010eed5:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c010eedc	obj/kernel.asm	/^c010eedc:	00 $/;"	l
c010eedd	obj/kernel.asm	/^c010eedd:	c7 04 24 d7 86 11 c0 	movl   $0xc01186d7,(%esp)$/;"	l
c010eee4	obj/kernel.asm	/^c010eee4:	e8 df 1f ff ff       	call   c0100ec8 <__panic>$/;"	l
c010eee9	obj/kernel.asm	/^c010eee9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eeec	obj/kernel.asm	/^c010eeec:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010eef1	obj/kernel.asm	/^c010eef1:	c9                   	leave  $/;"	l
c010eef2	obj/kernel.asm	/^c010eef2:	c3                   	ret    $/;"	l
c010eef3	obj/kernel.asm	/^c010eef3 <swapfs_init>:$/;"	l
c010eef3	obj/kernel.asm	/^c010eef3:	55                   	push   %ebp$/;"	l
c010eef4	obj/kernel.asm	/^c010eef4:	89 e5                	mov    %esp,%ebp$/;"	l
c010eef6	obj/kernel.asm	/^c010eef6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010eef9	obj/kernel.asm	/^c010eef9:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010ef00	obj/kernel.asm	/^c010ef00:	e8 1d 2d ff ff       	call   c0101c22 <ide_device_valid>$/;"	l
c010ef05	obj/kernel.asm	/^c010ef05:	85 c0                	test   %eax,%eax$/;"	l
c010ef07	obj/kernel.asm	/^c010ef07:	75 1c                	jne    c010ef25 <swapfs_init+0x32>$/;"	l
c010ef09	obj/kernel.asm	/^c010ef09:	c7 44 24 08 e5 86 11 	movl   $0xc01186e5,0x8(%esp)$/;"	l
c010ef10	obj/kernel.asm	/^c010ef10:	c0 $/;"	l
c010ef11	obj/kernel.asm	/^c010ef11:	c7 44 24 04 0d 00 00 	movl   $0xd,0x4(%esp)$/;"	l
c010ef18	obj/kernel.asm	/^c010ef18:	00 $/;"	l
c010ef19	obj/kernel.asm	/^c010ef19:	c7 04 24 ff 86 11 c0 	movl   $0xc01186ff,(%esp)$/;"	l
c010ef20	obj/kernel.asm	/^c010ef20:	e8 a3 1f ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ef25	obj/kernel.asm	/^c010ef25:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010ef2c	obj/kernel.asm	/^c010ef2c:	e8 30 2d ff ff       	call   c0101c61 <ide_device_size>$/;"	l
c010ef31	obj/kernel.asm	/^c010ef31:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c010ef34	obj/kernel.asm	/^c010ef34:	a3 dc 40 15 c0       	mov    %eax,0xc01540dc$/;"	l
c010ef39	obj/kernel.asm	/^c010ef39:	c9                   	leave  $/;"	l
c010ef3a	obj/kernel.asm	/^c010ef3a:	c3                   	ret    $/;"	l
c010ef3b	obj/kernel.asm	/^c010ef3b <swapfs_read>:$/;"	l
c010ef3b	obj/kernel.asm	/^c010ef3b:	55                   	push   %ebp$/;"	l
c010ef3c	obj/kernel.asm	/^c010ef3c:	89 e5                	mov    %esp,%ebp$/;"	l
c010ef3e	obj/kernel.asm	/^c010ef3e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ef41	obj/kernel.asm	/^c010ef41:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ef44	obj/kernel.asm	/^c010ef44:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ef47	obj/kernel.asm	/^c010ef47:	e8 53 ff ff ff       	call   c010ee9f <page2kva>$/;"	l
c010ef4c	obj/kernel.asm	/^c010ef4c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ef4f	obj/kernel.asm	/^c010ef4f:	c1 ea 08             	shr    $0x8,%edx$/;"	l
c010ef52	obj/kernel.asm	/^c010ef52:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010ef55	obj/kernel.asm	/^c010ef55:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ef59	obj/kernel.asm	/^c010ef59:	74 0b                	je     c010ef66 <swapfs_read+0x2b>$/;"	l
c010ef5b	obj/kernel.asm	/^c010ef5b:	8b 15 dc 40 15 c0    	mov    0xc01540dc,%edx$/;"	l
c010ef61	obj/kernel.asm	/^c010ef61:	39 55 f4             	cmp    %edx,-0xc(%ebp)$/;"	l
c010ef64	obj/kernel.asm	/^c010ef64:	72 23                	jb     c010ef89 <swapfs_read+0x4e>$/;"	l
c010ef66	obj/kernel.asm	/^c010ef66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ef69	obj/kernel.asm	/^c010ef69:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010ef6d	obj/kernel.asm	/^c010ef6d:	c7 44 24 08 15 87 11 	movl   $0xc0118715,0x8(%esp)$/;"	l
c010ef74	obj/kernel.asm	/^c010ef74:	c0 $/;"	l
c010ef75	obj/kernel.asm	/^c010ef75:	c7 44 24 04 14 00 00 	movl   $0x14,0x4(%esp)$/;"	l
c010ef7c	obj/kernel.asm	/^c010ef7c:	00 $/;"	l
c010ef7d	obj/kernel.asm	/^c010ef7d:	c7 04 24 ff 86 11 c0 	movl   $0xc01186ff,(%esp)$/;"	l
c010ef84	obj/kernel.asm	/^c010ef84:	e8 3f 1f ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ef89	obj/kernel.asm	/^c010ef89:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010ef8c	obj/kernel.asm	/^c010ef8c:	c1 e2 03             	shl    $0x3,%edx$/;"	l
c010ef8f	obj/kernel.asm	/^c010ef8f:	c7 44 24 0c 08 00 00 	movl   $0x8,0xc(%esp)$/;"	l
c010ef96	obj/kernel.asm	/^c010ef96:	00 $/;"	l
c010ef97	obj/kernel.asm	/^c010ef97:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010ef9b	obj/kernel.asm	/^c010ef9b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010ef9f	obj/kernel.asm	/^c010ef9f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010efa6	obj/kernel.asm	/^c010efa6:	e8 f5 2c ff ff       	call   c0101ca0 <ide_read_secs>$/;"	l
c010efab	obj/kernel.asm	/^c010efab:	c9                   	leave  $/;"	l
c010efac	obj/kernel.asm	/^c010efac:	c3                   	ret    $/;"	l
c010efad	obj/kernel.asm	/^c010efad <swapfs_write>:$/;"	l
c010efad	obj/kernel.asm	/^c010efad:	55                   	push   %ebp$/;"	l
c010efae	obj/kernel.asm	/^c010efae:	89 e5                	mov    %esp,%ebp$/;"	l
c010efb0	obj/kernel.asm	/^c010efb0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010efb3	obj/kernel.asm	/^c010efb3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010efb6	obj/kernel.asm	/^c010efb6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010efb9	obj/kernel.asm	/^c010efb9:	e8 e1 fe ff ff       	call   c010ee9f <page2kva>$/;"	l
c010efbe	obj/kernel.asm	/^c010efbe:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010efc1	obj/kernel.asm	/^c010efc1:	c1 ea 08             	shr    $0x8,%edx$/;"	l
c010efc4	obj/kernel.asm	/^c010efc4:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010efc7	obj/kernel.asm	/^c010efc7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010efcb	obj/kernel.asm	/^c010efcb:	74 0b                	je     c010efd8 <swapfs_write+0x2b>$/;"	l
c010efcd	obj/kernel.asm	/^c010efcd:	8b 15 dc 40 15 c0    	mov    0xc01540dc,%edx$/;"	l
c010efd3	obj/kernel.asm	/^c010efd3:	39 55 f4             	cmp    %edx,-0xc(%ebp)$/;"	l
c010efd6	obj/kernel.asm	/^c010efd6:	72 23                	jb     c010effb <swapfs_write+0x4e>$/;"	l
c010efd8	obj/kernel.asm	/^c010efd8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010efdb	obj/kernel.asm	/^c010efdb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010efdf	obj/kernel.asm	/^c010efdf:	c7 44 24 08 15 87 11 	movl   $0xc0118715,0x8(%esp)$/;"	l
c010efe6	obj/kernel.asm	/^c010efe6:	c0 $/;"	l
c010efe7	obj/kernel.asm	/^c010efe7:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%esp)$/;"	l
c010efee	obj/kernel.asm	/^c010efee:	00 $/;"	l
c010efef	obj/kernel.asm	/^c010efef:	c7 04 24 ff 86 11 c0 	movl   $0xc01186ff,(%esp)$/;"	l
c010eff6	obj/kernel.asm	/^c010eff6:	e8 cd 1e ff ff       	call   c0100ec8 <__panic>$/;"	l
c010effb	obj/kernel.asm	/^c010effb:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010effe	obj/kernel.asm	/^c010effe:	c1 e2 03             	shl    $0x3,%edx$/;"	l
c010f001	obj/kernel.asm	/^c010f001:	c7 44 24 0c 08 00 00 	movl   $0x8,0xc(%esp)$/;"	l
c010f008	obj/kernel.asm	/^c010f008:	00 $/;"	l
c010f009	obj/kernel.asm	/^c010f009:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010f00d	obj/kernel.asm	/^c010f00d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010f011	obj/kernel.asm	/^c010f011:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010f018	obj/kernel.asm	/^c010f018:	e8 c5 2e ff ff       	call   c0101ee2 <ide_write_secs>$/;"	l
c010f01d	obj/kernel.asm	/^c010f01d:	c9                   	leave  $/;"	l
c010f01e	obj/kernel.asm	/^c010f01e:	c3                   	ret    $/;"	l
c010f01f	obj/kernel.asm	/^c010f01f <inode_ref_count>:$/;"	l
c010f01f	obj/kernel.asm	/^c010f01f:	55                   	push   %ebp$/;"	l
c010f020	obj/kernel.asm	/^c010f020:	89 e5                	mov    %esp,%ebp$/;"	l
c010f022	obj/kernel.asm	/^c010f022:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f025	obj/kernel.asm	/^c010f025:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010f028	obj/kernel.asm	/^c010f028:	5d                   	pop    %ebp$/;"	l
c010f029	obj/kernel.asm	/^c010f029:	c3                   	ret    $/;"	l
c010f02a	obj/kernel.asm	/^c010f02a <inode_open_count>:$/;"	l
c010f02a	obj/kernel.asm	/^c010f02a:	55                   	push   %ebp$/;"	l
c010f02b	obj/kernel.asm	/^c010f02b:	89 e5                	mov    %esp,%ebp$/;"	l
c010f02d	obj/kernel.asm	/^c010f02d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f030	obj/kernel.asm	/^c010f030:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f033	obj/kernel.asm	/^c010f033:	5d                   	pop    %ebp$/;"	l
c010f034	obj/kernel.asm	/^c010f034:	c3                   	ret    $/;"	l
c010f035	obj/kernel.asm	/^c010f035 <__alloc_inode>:$/;"	l
c010f035	obj/kernel.asm	/^c010f035:	55                   	push   %ebp$/;"	l
c010f036	obj/kernel.asm	/^c010f036:	89 e5                	mov    %esp,%ebp$/;"	l
c010f038	obj/kernel.asm	/^c010f038:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f03b	obj/kernel.asm	/^c010f03b:	c7 04 24 40 00 00 00 	movl   $0x40,(%esp)$/;"	l
c010f042	obj/kernel.asm	/^c010f042:	e8 98 5c ff ff       	call   c0104cdf <kmalloc>$/;"	l
c010f047	obj/kernel.asm	/^c010f047:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f04a	obj/kernel.asm	/^c010f04a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f04e	obj/kernel.asm	/^c010f04e:	74 09                	je     c010f059 <__alloc_inode+0x24>$/;"	l
c010f050	obj/kernel.asm	/^c010f050:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f053	obj/kernel.asm	/^c010f053:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f056	obj/kernel.asm	/^c010f056:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
c010f059	obj/kernel.asm	/^c010f059:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f05c	obj/kernel.asm	/^c010f05c:	c9                   	leave  $/;"	l
c010f05d	obj/kernel.asm	/^c010f05d:	c3                   	ret    $/;"	l
c010f05e	obj/kernel.asm	/^c010f05e <inode_init>:$/;"	l
c010f05e	obj/kernel.asm	/^c010f05e:	55                   	push   %ebp$/;"	l
c010f05f	obj/kernel.asm	/^c010f05f:	89 e5                	mov    %esp,%ebp$/;"	l
c010f061	obj/kernel.asm	/^c010f061:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f064	obj/kernel.asm	/^c010f064:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f067	obj/kernel.asm	/^c010f067:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)$/;"	l
c010f06e	obj/kernel.asm	/^c010f06e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f071	obj/kernel.asm	/^c010f071:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c010f078	obj/kernel.asm	/^c010f078:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f07b	obj/kernel.asm	/^c010f07b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010f07e	obj/kernel.asm	/^c010f07e:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c010f081	obj/kernel.asm	/^c010f081:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f084	obj/kernel.asm	/^c010f084:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010f087	obj/kernel.asm	/^c010f087:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c010f08a	obj/kernel.asm	/^c010f08a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f08d	obj/kernel.asm	/^c010f08d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f090	obj/kernel.asm	/^c010f090:	e8 7b 00 00 00       	call   c010f110 <inode_ref_inc>$/;"	l
c010f095	obj/kernel.asm	/^c010f095:	c9                   	leave  $/;"	l
c010f096	obj/kernel.asm	/^c010f096:	c3                   	ret    $/;"	l
c010f097	obj/kernel.asm	/^c010f097 <inode_kill>:$/;"	l
c010f097	obj/kernel.asm	/^c010f097:	55                   	push   %ebp$/;"	l
c010f098	obj/kernel.asm	/^c010f098:	89 e5                	mov    %esp,%ebp$/;"	l
c010f09a	obj/kernel.asm	/^c010f09a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f09d	obj/kernel.asm	/^c010f09d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f0a0	obj/kernel.asm	/^c010f0a0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f0a3	obj/kernel.asm	/^c010f0a3:	e8 77 ff ff ff       	call   c010f01f <inode_ref_count>$/;"	l
c010f0a8	obj/kernel.asm	/^c010f0a8:	85 c0                	test   %eax,%eax$/;"	l
c010f0aa	obj/kernel.asm	/^c010f0aa:	74 24                	je     c010f0d0 <inode_kill+0x39>$/;"	l
c010f0ac	obj/kernel.asm	/^c010f0ac:	c7 44 24 0c 34 87 11 	movl   $0xc0118734,0xc(%esp)$/;"	l
c010f0b3	obj/kernel.asm	/^c010f0b3:	c0 $/;"	l
c010f0b4	obj/kernel.asm	/^c010f0b4:	c7 44 24 08 4f 87 11 	movl   $0xc011874f,0x8(%esp)$/;"	l
c010f0bb	obj/kernel.asm	/^c010f0bb:	c0 $/;"	l
c010f0bc	obj/kernel.asm	/^c010f0bc:	c7 44 24 04 29 00 00 	movl   $0x29,0x4(%esp)$/;"	l
c010f0c3	obj/kernel.asm	/^c010f0c3:	00 $/;"	l
c010f0c4	obj/kernel.asm	/^c010f0c4:	c7 04 24 64 87 11 c0 	movl   $0xc0118764,(%esp)$/;"	l
c010f0cb	obj/kernel.asm	/^c010f0cb:	e8 f8 1d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f0d0	obj/kernel.asm	/^c010f0d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f0d3	obj/kernel.asm	/^c010f0d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f0d6	obj/kernel.asm	/^c010f0d6:	e8 4f ff ff ff       	call   c010f02a <inode_open_count>$/;"	l
c010f0db	obj/kernel.asm	/^c010f0db:	85 c0                	test   %eax,%eax$/;"	l
c010f0dd	obj/kernel.asm	/^c010f0dd:	74 24                	je     c010f103 <inode_kill+0x6c>$/;"	l
c010f0df	obj/kernel.asm	/^c010f0df:	c7 44 24 0c 78 87 11 	movl   $0xc0118778,0xc(%esp)$/;"	l
c010f0e6	obj/kernel.asm	/^c010f0e6:	c0 $/;"	l
c010f0e7	obj/kernel.asm	/^c010f0e7:	c7 44 24 08 4f 87 11 	movl   $0xc011874f,0x8(%esp)$/;"	l
c010f0ee	obj/kernel.asm	/^c010f0ee:	c0 $/;"	l
c010f0ef	obj/kernel.asm	/^c010f0ef:	c7 44 24 04 2a 00 00 	movl   $0x2a,0x4(%esp)$/;"	l
c010f0f6	obj/kernel.asm	/^c010f0f6:	00 $/;"	l
c010f0f7	obj/kernel.asm	/^c010f0f7:	c7 04 24 64 87 11 c0 	movl   $0xc0118764,(%esp)$/;"	l
c010f0fe	obj/kernel.asm	/^c010f0fe:	e8 c5 1d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f103	obj/kernel.asm	/^c010f103:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f106	obj/kernel.asm	/^c010f106:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f109	obj/kernel.asm	/^c010f109:	e8 ec 5b ff ff       	call   c0104cfa <kfree>$/;"	l
c010f10e	obj/kernel.asm	/^c010f10e:	c9                   	leave  $/;"	l
c010f10f	obj/kernel.asm	/^c010f10f:	c3                   	ret    $/;"	l
c010f110	obj/kernel.asm	/^c010f110 <inode_ref_inc>:$/;"	l
c010f110	obj/kernel.asm	/^c010f110:	55                   	push   %ebp$/;"	l
c010f111	obj/kernel.asm	/^c010f111:	89 e5                	mov    %esp,%ebp$/;"	l
c010f113	obj/kernel.asm	/^c010f113:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f116	obj/kernel.asm	/^c010f116:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010f119	obj/kernel.asm	/^c010f119:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010f11c	obj/kernel.asm	/^c010f11c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f11f	obj/kernel.asm	/^c010f11f:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c010f122	obj/kernel.asm	/^c010f122:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f125	obj/kernel.asm	/^c010f125:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010f128	obj/kernel.asm	/^c010f128:	5d                   	pop    %ebp$/;"	l
c010f129	obj/kernel.asm	/^c010f129:	c3                   	ret    $/;"	l
c010f12a	obj/kernel.asm	/^c010f12a <inode_ref_dec>:$/;"	l
c010f12a	obj/kernel.asm	/^c010f12a:	55                   	push   %ebp$/;"	l
c010f12b	obj/kernel.asm	/^c010f12b:	89 e5                	mov    %esp,%ebp$/;"	l
c010f12d	obj/kernel.asm	/^c010f12d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f130	obj/kernel.asm	/^c010f130:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f133	obj/kernel.asm	/^c010f133:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f136	obj/kernel.asm	/^c010f136:	e8 e4 fe ff ff       	call   c010f01f <inode_ref_count>$/;"	l
c010f13b	obj/kernel.asm	/^c010f13b:	85 c0                	test   %eax,%eax$/;"	l
c010f13d	obj/kernel.asm	/^c010f13d:	7f 24                	jg     c010f163 <inode_ref_dec+0x39>$/;"	l
c010f13f	obj/kernel.asm	/^c010f13f:	c7 44 24 0c 94 87 11 	movl   $0xc0118794,0xc(%esp)$/;"	l
c010f146	obj/kernel.asm	/^c010f146:	c0 $/;"	l
c010f147	obj/kernel.asm	/^c010f147:	c7 44 24 08 4f 87 11 	movl   $0xc011874f,0x8(%esp)$/;"	l
c010f14e	obj/kernel.asm	/^c010f14e:	c0 $/;"	l
c010f14f	obj/kernel.asm	/^c010f14f:	c7 44 24 04 3f 00 00 	movl   $0x3f,0x4(%esp)$/;"	l
c010f156	obj/kernel.asm	/^c010f156:	00 $/;"	l
c010f157	obj/kernel.asm	/^c010f157:	c7 04 24 64 87 11 c0 	movl   $0xc0118764,(%esp)$/;"	l
c010f15e	obj/kernel.asm	/^c010f15e:	e8 65 1d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f163	obj/kernel.asm	/^c010f163:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f166	obj/kernel.asm	/^c010f166:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010f169	obj/kernel.asm	/^c010f169:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010f16c	obj/kernel.asm	/^c010f16c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f16f	obj/kernel.asm	/^c010f16f:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c010f172	obj/kernel.asm	/^c010f172:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f175	obj/kernel.asm	/^c010f175:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010f178	obj/kernel.asm	/^c010f178:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f17b	obj/kernel.asm	/^c010f17b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f17f	obj/kernel.asm	/^c010f17f:	0f 85 8d 00 00 00    	jne    c010f212 <inode_ref_dec+0xe8>$/;"	l
c010f185	obj/kernel.asm	/^c010f185:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f188	obj/kernel.asm	/^c010f188:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f18b	obj/kernel.asm	/^c010f18b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f18f	obj/kernel.asm	/^c010f18f:	74 17                	je     c010f1a8 <inode_ref_dec+0x7e>$/;"	l
c010f191	obj/kernel.asm	/^c010f191:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f194	obj/kernel.asm	/^c010f194:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f197	obj/kernel.asm	/^c010f197:	85 c0                	test   %eax,%eax$/;"	l
c010f199	obj/kernel.asm	/^c010f199:	74 0d                	je     c010f1a8 <inode_ref_dec+0x7e>$/;"	l
c010f19b	obj/kernel.asm	/^c010f19b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f19e	obj/kernel.asm	/^c010f19e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f1a1	obj/kernel.asm	/^c010f1a1:	8b 40 24             	mov    0x24(%eax),%eax$/;"	l
c010f1a4	obj/kernel.asm	/^c010f1a4:	85 c0                	test   %eax,%eax$/;"	l
c010f1a6	obj/kernel.asm	/^c010f1a6:	75 24                	jne    c010f1cc <inode_ref_dec+0xa2>$/;"	l
c010f1a8	obj/kernel.asm	/^c010f1a8:	c7 44 24 0c b0 87 11 	movl   $0xc01187b0,0xc(%esp)$/;"	l
c010f1af	obj/kernel.asm	/^c010f1af:	c0 $/;"	l
c010f1b0	obj/kernel.asm	/^c010f1b0:	c7 44 24 08 4f 87 11 	movl   $0xc011874f,0x8(%esp)$/;"	l
c010f1b7	obj/kernel.asm	/^c010f1b7:	c0 $/;"	l
c010f1b8	obj/kernel.asm	/^c010f1b8:	c7 44 24 04 44 00 00 	movl   $0x44,0x4(%esp)$/;"	l
c010f1bf	obj/kernel.asm	/^c010f1bf:	00 $/;"	l
c010f1c0	obj/kernel.asm	/^c010f1c0:	c7 04 24 64 87 11 c0 	movl   $0xc0118764,(%esp)$/;"	l
c010f1c7	obj/kernel.asm	/^c010f1c7:	e8 fc 1c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f1cc	obj/kernel.asm	/^c010f1cc:	c7 44 24 04 00 88 11 	movl   $0xc0118800,0x4(%esp)$/;"	l
c010f1d3	obj/kernel.asm	/^c010f1d3:	c0 $/;"	l
c010f1d4	obj/kernel.asm	/^c010f1d4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f1d7	obj/kernel.asm	/^c010f1d7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f1da	obj/kernel.asm	/^c010f1da:	e8 39 01 00 00       	call   c010f318 <inode_check>$/;"	l
c010f1df	obj/kernel.asm	/^c010f1df:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f1e2	obj/kernel.asm	/^c010f1e2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f1e5	obj/kernel.asm	/^c010f1e5:	8b 40 24             	mov    0x24(%eax),%eax$/;"	l
c010f1e8	obj/kernel.asm	/^c010f1e8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f1eb	obj/kernel.asm	/^c010f1eb:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010f1ee	obj/kernel.asm	/^c010f1ee:	ff d0                	call   *%eax$/;"	l
c010f1f0	obj/kernel.asm	/^c010f1f0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f1f3	obj/kernel.asm	/^c010f1f3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f1f7	obj/kernel.asm	/^c010f1f7:	74 19                	je     c010f212 <inode_ref_dec+0xe8>$/;"	l
c010f1f9	obj/kernel.asm	/^c010f1f9:	83 7d ec f1          	cmpl   $0xfffffff1,-0x14(%ebp)$/;"	l
c010f1fd	obj/kernel.asm	/^c010f1fd:	74 13                	je     c010f212 <inode_ref_dec+0xe8>$/;"	l
c010f1ff	obj/kernel.asm	/^c010f1ff:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f202	obj/kernel.asm	/^c010f202:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f206	obj/kernel.asm	/^c010f206:	c7 04 24 08 88 11 c0 	movl   $0xc0118808,(%esp)$/;"	l
c010f20d	obj/kernel.asm	/^c010f20d:	e8 53 11 ff ff       	call   c0100365 <cprintf>$/;"	l
c010f212	obj/kernel.asm	/^c010f212:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f215	obj/kernel.asm	/^c010f215:	c9                   	leave  $/;"	l
c010f216	obj/kernel.asm	/^c010f216:	c3                   	ret    $/;"	l
c010f217	obj/kernel.asm	/^c010f217 <inode_open_inc>:$/;"	l
c010f217	obj/kernel.asm	/^c010f217:	55                   	push   %ebp$/;"	l
c010f218	obj/kernel.asm	/^c010f218:	89 e5                	mov    %esp,%ebp$/;"	l
c010f21a	obj/kernel.asm	/^c010f21a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f21d	obj/kernel.asm	/^c010f21d:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f220	obj/kernel.asm	/^c010f220:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010f223	obj/kernel.asm	/^c010f223:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f226	obj/kernel.asm	/^c010f226:	89 50 34             	mov    %edx,0x34(%eax)$/;"	l
c010f229	obj/kernel.asm	/^c010f229:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f22c	obj/kernel.asm	/^c010f22c:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f22f	obj/kernel.asm	/^c010f22f:	5d                   	pop    %ebp$/;"	l
c010f230	obj/kernel.asm	/^c010f230:	c3                   	ret    $/;"	l
c010f231	obj/kernel.asm	/^c010f231 <inode_open_dec>:$/;"	l
c010f231	obj/kernel.asm	/^c010f231:	55                   	push   %ebp$/;"	l
c010f232	obj/kernel.asm	/^c010f232:	89 e5                	mov    %esp,%ebp$/;"	l
c010f234	obj/kernel.asm	/^c010f234:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f237	obj/kernel.asm	/^c010f237:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f23a	obj/kernel.asm	/^c010f23a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f23d	obj/kernel.asm	/^c010f23d:	e8 e8 fd ff ff       	call   c010f02a <inode_open_count>$/;"	l
c010f242	obj/kernel.asm	/^c010f242:	85 c0                	test   %eax,%eax$/;"	l
c010f244	obj/kernel.asm	/^c010f244:	7f 24                	jg     c010f26a <inode_open_dec+0x39>$/;"	l
c010f246	obj/kernel.asm	/^c010f246:	c7 44 24 0c 28 88 11 	movl   $0xc0118828,0xc(%esp)$/;"	l
c010f24d	obj/kernel.asm	/^c010f24d:	c0 $/;"	l
c010f24e	obj/kernel.asm	/^c010f24e:	c7 44 24 08 4f 87 11 	movl   $0xc011874f,0x8(%esp)$/;"	l
c010f255	obj/kernel.asm	/^c010f255:	c0 $/;"	l
c010f256	obj/kernel.asm	/^c010f256:	c7 44 24 04 5c 00 00 	movl   $0x5c,0x4(%esp)$/;"	l
c010f25d	obj/kernel.asm	/^c010f25d:	00 $/;"	l
c010f25e	obj/kernel.asm	/^c010f25e:	c7 04 24 64 87 11 c0 	movl   $0xc0118764,(%esp)$/;"	l
c010f265	obj/kernel.asm	/^c010f265:	e8 5e 1c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f26a	obj/kernel.asm	/^c010f26a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f26d	obj/kernel.asm	/^c010f26d:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f270	obj/kernel.asm	/^c010f270:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010f273	obj/kernel.asm	/^c010f273:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f276	obj/kernel.asm	/^c010f276:	89 50 34             	mov    %edx,0x34(%eax)$/;"	l
c010f279	obj/kernel.asm	/^c010f279:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f27c	obj/kernel.asm	/^c010f27c:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f27f	obj/kernel.asm	/^c010f27f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f282	obj/kernel.asm	/^c010f282:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f286	obj/kernel.asm	/^c010f286:	0f 85 87 00 00 00    	jne    c010f313 <inode_open_dec+0xe2>$/;"	l
c010f28c	obj/kernel.asm	/^c010f28c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f28f	obj/kernel.asm	/^c010f28f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f292	obj/kernel.asm	/^c010f292:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f296	obj/kernel.asm	/^c010f296:	74 17                	je     c010f2af <inode_open_dec+0x7e>$/;"	l
c010f298	obj/kernel.asm	/^c010f298:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f29b	obj/kernel.asm	/^c010f29b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f29e	obj/kernel.asm	/^c010f29e:	85 c0                	test   %eax,%eax$/;"	l
c010f2a0	obj/kernel.asm	/^c010f2a0:	74 0d                	je     c010f2af <inode_open_dec+0x7e>$/;"	l
c010f2a2	obj/kernel.asm	/^c010f2a2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f2a5	obj/kernel.asm	/^c010f2a5:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f2a8	obj/kernel.asm	/^c010f2a8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f2ab	obj/kernel.asm	/^c010f2ab:	85 c0                	test   %eax,%eax$/;"	l
c010f2ad	obj/kernel.asm	/^c010f2ad:	75 24                	jne    c010f2d3 <inode_open_dec+0xa2>$/;"	l
c010f2af	obj/kernel.asm	/^c010f2af:	c7 44 24 0c 44 88 11 	movl   $0xc0118844,0xc(%esp)$/;"	l
c010f2b6	obj/kernel.asm	/^c010f2b6:	c0 $/;"	l
c010f2b7	obj/kernel.asm	/^c010f2b7:	c7 44 24 08 4f 87 11 	movl   $0xc011874f,0x8(%esp)$/;"	l
c010f2be	obj/kernel.asm	/^c010f2be:	c0 $/;"	l
c010f2bf	obj/kernel.asm	/^c010f2bf:	c7 44 24 04 61 00 00 	movl   $0x61,0x4(%esp)$/;"	l
c010f2c6	obj/kernel.asm	/^c010f2c6:	00 $/;"	l
c010f2c7	obj/kernel.asm	/^c010f2c7:	c7 04 24 64 87 11 c0 	movl   $0xc0118764,(%esp)$/;"	l
c010f2ce	obj/kernel.asm	/^c010f2ce:	e8 f5 1b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f2d3	obj/kernel.asm	/^c010f2d3:	c7 44 24 04 92 88 11 	movl   $0xc0118892,0x4(%esp)$/;"	l
c010f2da	obj/kernel.asm	/^c010f2da:	c0 $/;"	l
c010f2db	obj/kernel.asm	/^c010f2db:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f2de	obj/kernel.asm	/^c010f2de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f2e1	obj/kernel.asm	/^c010f2e1:	e8 32 00 00 00       	call   c010f318 <inode_check>$/;"	l
c010f2e6	obj/kernel.asm	/^c010f2e6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f2e9	obj/kernel.asm	/^c010f2e9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f2ec	obj/kernel.asm	/^c010f2ec:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f2ef	obj/kernel.asm	/^c010f2ef:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f2f2	obj/kernel.asm	/^c010f2f2:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010f2f5	obj/kernel.asm	/^c010f2f5:	ff d0                	call   *%eax$/;"	l
c010f2f7	obj/kernel.asm	/^c010f2f7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f2fa	obj/kernel.asm	/^c010f2fa:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f2fe	obj/kernel.asm	/^c010f2fe:	74 13                	je     c010f313 <inode_open_dec+0xe2>$/;"	l
c010f300	obj/kernel.asm	/^c010f300:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f303	obj/kernel.asm	/^c010f303:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f307	obj/kernel.asm	/^c010f307:	c7 04 24 98 88 11 c0 	movl   $0xc0118898,(%esp)$/;"	l
c010f30e	obj/kernel.asm	/^c010f30e:	e8 52 10 ff ff       	call   c0100365 <cprintf>$/;"	l
c010f313	obj/kernel.asm	/^c010f313:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f316	obj/kernel.asm	/^c010f316:	c9                   	leave  $/;"	l
c010f317	obj/kernel.asm	/^c010f317:	c3                   	ret    $/;"	l
c010f318	obj/kernel.asm	/^c010f318 <inode_check>:$/;"	l
c010f318	obj/kernel.asm	/^c010f318:	55                   	push   %ebp$/;"	l
c010f319	obj/kernel.asm	/^c010f319:	89 e5                	mov    %esp,%ebp$/;"	l
c010f31b	obj/kernel.asm	/^c010f31b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f31e	obj/kernel.asm	/^c010f31e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f322	obj/kernel.asm	/^c010f322:	74 0a                	je     c010f32e <inode_check+0x16>$/;"	l
c010f324	obj/kernel.asm	/^c010f324:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f327	obj/kernel.asm	/^c010f327:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f32a	obj/kernel.asm	/^c010f32a:	85 c0                	test   %eax,%eax$/;"	l
c010f32c	obj/kernel.asm	/^c010f32c:	75 24                	jne    c010f352 <inode_check+0x3a>$/;"	l
c010f32e	obj/kernel.asm	/^c010f32e:	c7 44 24 0c b8 88 11 	movl   $0xc01188b8,0xc(%esp)$/;"	l
c010f335	obj/kernel.asm	/^c010f335:	c0 $/;"	l
c010f336	obj/kernel.asm	/^c010f336:	c7 44 24 08 4f 87 11 	movl   $0xc011874f,0x8(%esp)$/;"	l
c010f33d	obj/kernel.asm	/^c010f33d:	c0 $/;"	l
c010f33e	obj/kernel.asm	/^c010f33e:	c7 44 24 04 6e 00 00 	movl   $0x6e,0x4(%esp)$/;"	l
c010f345	obj/kernel.asm	/^c010f345:	00 $/;"	l
c010f346	obj/kernel.asm	/^c010f346:	c7 04 24 64 87 11 c0 	movl   $0xc0118764,(%esp)$/;"	l
c010f34d	obj/kernel.asm	/^c010f34d:	e8 76 1b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f352	obj/kernel.asm	/^c010f352:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f355	obj/kernel.asm	/^c010f355:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f358	obj/kernel.asm	/^c010f358:	8b 00                	mov    (%eax),%eax$/;"	l
c010f35a	obj/kernel.asm	/^c010f35a:	3d 76 a4 4b 8c       	cmp    $0x8c4ba476,%eax$/;"	l
c010f35f	obj/kernel.asm	/^c010f35f:	74 24                	je     c010f385 <inode_check+0x6d>$/;"	l
c010f361	obj/kernel.asm	/^c010f361:	c7 44 24 0c e0 88 11 	movl   $0xc01188e0,0xc(%esp)$/;"	l
c010f368	obj/kernel.asm	/^c010f368:	c0 $/;"	l
c010f369	obj/kernel.asm	/^c010f369:	c7 44 24 08 4f 87 11 	movl   $0xc011874f,0x8(%esp)$/;"	l
c010f370	obj/kernel.asm	/^c010f370:	c0 $/;"	l
c010f371	obj/kernel.asm	/^c010f371:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
c010f378	obj/kernel.asm	/^c010f378:	00 $/;"	l
c010f379	obj/kernel.asm	/^c010f379:	c7 04 24 64 87 11 c0 	movl   $0xc0118764,(%esp)$/;"	l
c010f380	obj/kernel.asm	/^c010f380:	e8 43 1b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f385	obj/kernel.asm	/^c010f385:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f388	obj/kernel.asm	/^c010f388:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f38b	obj/kernel.asm	/^c010f38b:	e8 8f fc ff ff       	call   c010f01f <inode_ref_count>$/;"	l
c010f390	obj/kernel.asm	/^c010f390:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f393	obj/kernel.asm	/^c010f393:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f396	obj/kernel.asm	/^c010f396:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f399	obj/kernel.asm	/^c010f399:	e8 8c fc ff ff       	call   c010f02a <inode_open_count>$/;"	l
c010f39e	obj/kernel.asm	/^c010f39e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f3a1	obj/kernel.asm	/^c010f3a1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f3a4	obj/kernel.asm	/^c010f3a4:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010f3a7	obj/kernel.asm	/^c010f3a7:	7c 06                	jl     c010f3af <inode_check+0x97>$/;"	l
c010f3a9	obj/kernel.asm	/^c010f3a9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f3ad	obj/kernel.asm	/^c010f3ad:	79 24                	jns    c010f3d3 <inode_check+0xbb>$/;"	l
c010f3af	obj/kernel.asm	/^c010f3af:	c7 44 24 0c 08 89 11 	movl   $0xc0118908,0xc(%esp)$/;"	l
c010f3b6	obj/kernel.asm	/^c010f3b6:	c0 $/;"	l
c010f3b7	obj/kernel.asm	/^c010f3b7:	c7 44 24 08 4f 87 11 	movl   $0xc011874f,0x8(%esp)$/;"	l
c010f3be	obj/kernel.asm	/^c010f3be:	c0 $/;"	l
c010f3bf	obj/kernel.asm	/^c010f3bf:	c7 44 24 04 71 00 00 	movl   $0x71,0x4(%esp)$/;"	l
c010f3c6	obj/kernel.asm	/^c010f3c6:	00 $/;"	l
c010f3c7	obj/kernel.asm	/^c010f3c7:	c7 04 24 64 87 11 c0 	movl   $0xc0118764,(%esp)$/;"	l
c010f3ce	obj/kernel.asm	/^c010f3ce:	e8 f5 1a ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f3d3	obj/kernel.asm	/^c010f3d3:	81 7d f4 ff ff 00 00 	cmpl   $0xffff,-0xc(%ebp)$/;"	l
c010f3da	obj/kernel.asm	/^c010f3da:	7f 09                	jg     c010f3e5 <inode_check+0xcd>$/;"	l
c010f3dc	obj/kernel.asm	/^c010f3dc:	81 7d f0 ff ff 00 00 	cmpl   $0xffff,-0x10(%ebp)$/;"	l
c010f3e3	obj/kernel.asm	/^c010f3e3:	7e 24                	jle    c010f409 <inode_check+0xf1>$/;"	l
c010f3e5	obj/kernel.asm	/^c010f3e5:	c7 44 24 0c 34 89 11 	movl   $0xc0118934,0xc(%esp)$/;"	l
c010f3ec	obj/kernel.asm	/^c010f3ec:	c0 $/;"	l
c010f3ed	obj/kernel.asm	/^c010f3ed:	c7 44 24 08 4f 87 11 	movl   $0xc011874f,0x8(%esp)$/;"	l
c010f3f4	obj/kernel.asm	/^c010f3f4:	c0 $/;"	l
c010f3f5	obj/kernel.asm	/^c010f3f5:	c7 44 24 04 72 00 00 	movl   $0x72,0x4(%esp)$/;"	l
c010f3fc	obj/kernel.asm	/^c010f3fc:	00 $/;"	l
c010f3fd	obj/kernel.asm	/^c010f3fd:	c7 04 24 64 87 11 c0 	movl   $0xc0118764,(%esp)$/;"	l
c010f404	obj/kernel.asm	/^c010f404:	e8 bf 1a ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f409	obj/kernel.asm	/^c010f409:	c9                   	leave  $/;"	l
c010f40a	obj/kernel.asm	/^c010f40a:	c3                   	ret    $/;"	l
c010f40b	obj/kernel.asm	/^c010f40b <__alloc_fs>:$/;"	l
c010f40b	obj/kernel.asm	/^c010f40b:	55                   	push   %ebp$/;"	l
c010f40c	obj/kernel.asm	/^c010f40c:	89 e5                	mov    %esp,%ebp$/;"	l
c010f40e	obj/kernel.asm	/^c010f40e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f411	obj/kernel.asm	/^c010f411:	c7 04 24 80 00 00 00 	movl   $0x80,(%esp)$/;"	l
c010f418	obj/kernel.asm	/^c010f418:	e8 c2 58 ff ff       	call   c0104cdf <kmalloc>$/;"	l
c010f41d	obj/kernel.asm	/^c010f41d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f420	obj/kernel.asm	/^c010f420:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f424	obj/kernel.asm	/^c010f424:	74 09                	je     c010f42f <__alloc_fs+0x24>$/;"	l
c010f426	obj/kernel.asm	/^c010f426:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f429	obj/kernel.asm	/^c010f429:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f42c	obj/kernel.asm	/^c010f42c:	89 50 6c             	mov    %edx,0x6c(%eax)$/;"	l
c010f42f	obj/kernel.asm	/^c010f42f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f432	obj/kernel.asm	/^c010f432:	c9                   	leave  $/;"	l
c010f433	obj/kernel.asm	/^c010f433:	c3                   	ret    $/;"	l
c010f434	obj/kernel.asm	/^c010f434 <vfs_init>:$/;"	l
c010f434	obj/kernel.asm	/^c010f434:	55                   	push   %ebp$/;"	l
c010f435	obj/kernel.asm	/^c010f435:	89 e5                	mov    %esp,%ebp$/;"	l
c010f437	obj/kernel.asm	/^c010f437:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f43a	obj/kernel.asm	/^c010f43a:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010f441	obj/kernel.asm	/^c010f441:	00 $/;"	l
c010f442	obj/kernel.asm	/^c010f442:	c7 04 24 b8 2f 15 c0 	movl   $0xc0152fb8,(%esp)$/;"	l
c010f449	obj/kernel.asm	/^c010f449:	e8 23 a7 ff ff       	call   c0109b71 <sem_init>$/;"	l
c010f44e	obj/kernel.asm	/^c010f44e:	e8 63 01 00 00       	call   c010f5b6 <vfs_devlist_init>$/;"	l
c010f453	obj/kernel.asm	/^c010f453:	c9                   	leave  $/;"	l
c010f454	obj/kernel.asm	/^c010f454:	c3                   	ret    $/;"	l
c010f455	obj/kernel.asm	/^c010f455 <lock_bootfs>:$/;"	l
c010f455	obj/kernel.asm	/^c010f455:	55                   	push   %ebp$/;"	l
c010f456	obj/kernel.asm	/^c010f456:	89 e5                	mov    %esp,%ebp$/;"	l
c010f458	obj/kernel.asm	/^c010f458:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f45b	obj/kernel.asm	/^c010f45b:	c7 04 24 b8 2f 15 c0 	movl   $0xc0152fb8,(%esp)$/;"	l
c010f462	obj/kernel.asm	/^c010f462:	e8 98 a8 ff ff       	call   c0109cff <down>$/;"	l
c010f467	obj/kernel.asm	/^c010f467:	c9                   	leave  $/;"	l
c010f468	obj/kernel.asm	/^c010f468:	c3                   	ret    $/;"	l
c010f469	obj/kernel.asm	/^c010f469 <unlock_bootfs>:$/;"	l
c010f469	obj/kernel.asm	/^c010f469:	55                   	push   %ebp$/;"	l
c010f46a	obj/kernel.asm	/^c010f46a:	89 e5                	mov    %esp,%ebp$/;"	l
c010f46c	obj/kernel.asm	/^c010f46c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f46f	obj/kernel.asm	/^c010f46f:	c7 04 24 b8 2f 15 c0 	movl   $0xc0152fb8,(%esp)$/;"	l
c010f476	obj/kernel.asm	/^c010f476:	e8 69 a8 ff ff       	call   c0109ce4 <up>$/;"	l
c010f47b	obj/kernel.asm	/^c010f47b:	c9                   	leave  $/;"	l
c010f47c	obj/kernel.asm	/^c010f47c:	c3                   	ret    $/;"	l
c010f47d	obj/kernel.asm	/^c010f47d <change_bootfs>:$/;"	l
c010f47d	obj/kernel.asm	/^c010f47d:	55                   	push   %ebp$/;"	l
c010f47e	obj/kernel.asm	/^c010f47e:	89 e5                	mov    %esp,%ebp$/;"	l
c010f480	obj/kernel.asm	/^c010f480:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f483	obj/kernel.asm	/^c010f483:	e8 cd ff ff ff       	call   c010f455 <lock_bootfs>$/;"	l
c010f488	obj/kernel.asm	/^c010f488:	a1 c4 2f 15 c0       	mov    0xc0152fc4,%eax$/;"	l
c010f48d	obj/kernel.asm	/^c010f48d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f490	obj/kernel.asm	/^c010f490:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f493	obj/kernel.asm	/^c010f493:	a3 c4 2f 15 c0       	mov    %eax,0xc0152fc4$/;"	l
c010f498	obj/kernel.asm	/^c010f498:	e8 cc ff ff ff       	call   c010f469 <unlock_bootfs>$/;"	l
c010f49d	obj/kernel.asm	/^c010f49d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f4a1	obj/kernel.asm	/^c010f4a1:	74 0b                	je     c010f4ae <change_bootfs+0x31>$/;"	l
c010f4a3	obj/kernel.asm	/^c010f4a3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f4a6	obj/kernel.asm	/^c010f4a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f4a9	obj/kernel.asm	/^c010f4a9:	e8 7c fc ff ff       	call   c010f12a <inode_ref_dec>$/;"	l
c010f4ae	obj/kernel.asm	/^c010f4ae:	c9                   	leave  $/;"	l
c010f4af	obj/kernel.asm	/^c010f4af:	c3                   	ret    $/;"	l
c010f4b0	obj/kernel.asm	/^c010f4b0 <vfs_set_bootfs>:$/;"	l
c010f4b0	obj/kernel.asm	/^c010f4b0:	55                   	push   %ebp$/;"	l
c010f4b1	obj/kernel.asm	/^c010f4b1:	89 e5                	mov    %esp,%ebp$/;"	l
c010f4b3	obj/kernel.asm	/^c010f4b3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f4b6	obj/kernel.asm	/^c010f4b6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010f4bd	obj/kernel.asm	/^c010f4bd:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f4c1	obj/kernel.asm	/^c010f4c1:	74 62                	je     c010f525 <vfs_set_bootfs+0x75>$/;"	l
c010f4c3	obj/kernel.asm	/^c010f4c3:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
c010f4ca	obj/kernel.asm	/^c010f4ca:	00 $/;"	l
c010f4cb	obj/kernel.asm	/^c010f4cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f4ce	obj/kernel.asm	/^c010f4ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f4d1	obj/kernel.asm	/^c010f4d1:	e8 db 5e 00 00       	call   c01153b1 <strchr>$/;"	l
c010f4d6	obj/kernel.asm	/^c010f4d6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f4d9	obj/kernel.asm	/^c010f4d9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f4dd	obj/kernel.asm	/^c010f4dd:	74 0d                	je     c010f4ec <vfs_set_bootfs+0x3c>$/;"	l
c010f4df	obj/kernel.asm	/^c010f4df:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f4e2	obj/kernel.asm	/^c010f4e2:	83 c0 01             	add    $0x1,%eax$/;"	l
c010f4e5	obj/kernel.asm	/^c010f4e5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010f4e8	obj/kernel.asm	/^c010f4e8:	84 c0                	test   %al,%al$/;"	l
c010f4ea	obj/kernel.asm	/^c010f4ea:	74 07                	je     c010f4f3 <vfs_set_bootfs+0x43>$/;"	l
c010f4ec	obj/kernel.asm	/^c010f4ec:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f4f1	obj/kernel.asm	/^c010f4f1:	eb 42                	jmp    c010f535 <vfs_set_bootfs+0x85>$/;"	l
c010f4f3	obj/kernel.asm	/^c010f4f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f4f6	obj/kernel.asm	/^c010f4f6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f4f9	obj/kernel.asm	/^c010f4f9:	e8 99 10 00 00       	call   c0110597 <vfs_chdir>$/;"	l
c010f4fe	obj/kernel.asm	/^c010f4fe:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f501	obj/kernel.asm	/^c010f501:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f505	obj/kernel.asm	/^c010f505:	74 05                	je     c010f50c <vfs_set_bootfs+0x5c>$/;"	l
c010f507	obj/kernel.asm	/^c010f507:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f50a	obj/kernel.asm	/^c010f50a:	eb 29                	jmp    c010f535 <vfs_set_bootfs+0x85>$/;"	l
c010f50c	obj/kernel.asm	/^c010f50c:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010f50f	obj/kernel.asm	/^c010f50f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f512	obj/kernel.asm	/^c010f512:	e8 54 0f 00 00       	call   c011046b <vfs_get_curdir>$/;"	l
c010f517	obj/kernel.asm	/^c010f517:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f51a	obj/kernel.asm	/^c010f51a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f51e	obj/kernel.asm	/^c010f51e:	74 05                	je     c010f525 <vfs_set_bootfs+0x75>$/;"	l
c010f520	obj/kernel.asm	/^c010f520:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f523	obj/kernel.asm	/^c010f523:	eb 10                	jmp    c010f535 <vfs_set_bootfs+0x85>$/;"	l
c010f525	obj/kernel.asm	/^c010f525:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f528	obj/kernel.asm	/^c010f528:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f52b	obj/kernel.asm	/^c010f52b:	e8 4d ff ff ff       	call   c010f47d <change_bootfs>$/;"	l
c010f530	obj/kernel.asm	/^c010f530:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f535	obj/kernel.asm	/^c010f535:	c9                   	leave  $/;"	l
c010f536	obj/kernel.asm	/^c010f536:	c3                   	ret    $/;"	l
c010f537	obj/kernel.asm	/^c010f537 <vfs_get_bootfs>:$/;"	l
c010f537	obj/kernel.asm	/^c010f537:	55                   	push   %ebp$/;"	l
c010f538	obj/kernel.asm	/^c010f538:	89 e5                	mov    %esp,%ebp$/;"	l
c010f53a	obj/kernel.asm	/^c010f53a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f53d	obj/kernel.asm	/^c010f53d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010f544	obj/kernel.asm	/^c010f544:	a1 c4 2f 15 c0       	mov    0xc0152fc4,%eax$/;"	l
c010f549	obj/kernel.asm	/^c010f549:	85 c0                	test   %eax,%eax$/;"	l
c010f54b	obj/kernel.asm	/^c010f54b:	74 25                	je     c010f572 <vfs_get_bootfs+0x3b>$/;"	l
c010f54d	obj/kernel.asm	/^c010f54d:	e8 03 ff ff ff       	call   c010f455 <lock_bootfs>$/;"	l
c010f552	obj/kernel.asm	/^c010f552:	a1 c4 2f 15 c0       	mov    0xc0152fc4,%eax$/;"	l
c010f557	obj/kernel.asm	/^c010f557:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f55a	obj/kernel.asm	/^c010f55a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f55e	obj/kernel.asm	/^c010f55e:	74 0d                	je     c010f56d <vfs_get_bootfs+0x36>$/;"	l
c010f560	obj/kernel.asm	/^c010f560:	a1 c4 2f 15 c0       	mov    0xc0152fc4,%eax$/;"	l
c010f565	obj/kernel.asm	/^c010f565:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f568	obj/kernel.asm	/^c010f568:	e8 a3 fb ff ff       	call   c010f110 <inode_ref_inc>$/;"	l
c010f56d	obj/kernel.asm	/^c010f56d:	e8 f7 fe ff ff       	call   c010f469 <unlock_bootfs>$/;"	l
c010f572	obj/kernel.asm	/^c010f572:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f576	obj/kernel.asm	/^c010f576:	75 07                	jne    c010f57f <vfs_get_bootfs+0x48>$/;"	l
c010f578	obj/kernel.asm	/^c010f578:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c010f57d	obj/kernel.asm	/^c010f57d:	eb 0d                	jmp    c010f58c <vfs_get_bootfs+0x55>$/;"	l
c010f57f	obj/kernel.asm	/^c010f57f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f582	obj/kernel.asm	/^c010f582:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010f585	obj/kernel.asm	/^c010f585:	89 10                	mov    %edx,(%eax)$/;"	l
c010f587	obj/kernel.asm	/^c010f587:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f58c	obj/kernel.asm	/^c010f58c:	c9                   	leave  $/;"	l
c010f58d	obj/kernel.asm	/^c010f58d:	c3                   	ret    $/;"	l
c010f58e	obj/kernel.asm	/^c010f58e <lock_vdev_list>:$/;"	l
c010f58e	obj/kernel.asm	/^c010f58e:	55                   	push   %ebp$/;"	l
c010f58f	obj/kernel.asm	/^c010f58f:	89 e5                	mov    %esp,%ebp$/;"	l
c010f591	obj/kernel.asm	/^c010f591:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f594	obj/kernel.asm	/^c010f594:	c7 04 24 d0 2f 15 c0 	movl   $0xc0152fd0,(%esp)$/;"	l
c010f59b	obj/kernel.asm	/^c010f59b:	e8 5f a7 ff ff       	call   c0109cff <down>$/;"	l
c010f5a0	obj/kernel.asm	/^c010f5a0:	c9                   	leave  $/;"	l
c010f5a1	obj/kernel.asm	/^c010f5a1:	c3                   	ret    $/;"	l
c010f5a2	obj/kernel.asm	/^c010f5a2 <unlock_vdev_list>:$/;"	l
c010f5a2	obj/kernel.asm	/^c010f5a2:	55                   	push   %ebp$/;"	l
c010f5a3	obj/kernel.asm	/^c010f5a3:	89 e5                	mov    %esp,%ebp$/;"	l
c010f5a5	obj/kernel.asm	/^c010f5a5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f5a8	obj/kernel.asm	/^c010f5a8:	c7 04 24 d0 2f 15 c0 	movl   $0xc0152fd0,(%esp)$/;"	l
c010f5af	obj/kernel.asm	/^c010f5af:	e8 30 a7 ff ff       	call   c0109ce4 <up>$/;"	l
c010f5b4	obj/kernel.asm	/^c010f5b4:	c9                   	leave  $/;"	l
c010f5b5	obj/kernel.asm	/^c010f5b5:	c3                   	ret    $/;"	l
c010f5b6	obj/kernel.asm	/^c010f5b6 <vfs_devlist_init>:$/;"	l
c010f5b6	obj/kernel.asm	/^c010f5b6:	55                   	push   %ebp$/;"	l
c010f5b7	obj/kernel.asm	/^c010f5b7:	89 e5                	mov    %esp,%ebp$/;"	l
c010f5b9	obj/kernel.asm	/^c010f5b9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f5bc	obj/kernel.asm	/^c010f5bc:	c7 45 f4 c8 2f 15 c0 	movl   $0xc0152fc8,-0xc(%ebp)$/;"	l
c010f5c3	obj/kernel.asm	/^c010f5c3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f5c6	obj/kernel.asm	/^c010f5c6:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010f5c9	obj/kernel.asm	/^c010f5c9:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f5cc	obj/kernel.asm	/^c010f5cc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f5cf	obj/kernel.asm	/^c010f5cf:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010f5d2	obj/kernel.asm	/^c010f5d2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f5d5	obj/kernel.asm	/^c010f5d5:	89 10                	mov    %edx,(%eax)$/;"	l
c010f5d7	obj/kernel.asm	/^c010f5d7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010f5de	obj/kernel.asm	/^c010f5de:	00 $/;"	l
c010f5df	obj/kernel.asm	/^c010f5df:	c7 04 24 d0 2f 15 c0 	movl   $0xc0152fd0,(%esp)$/;"	l
c010f5e6	obj/kernel.asm	/^c010f5e6:	e8 86 a5 ff ff       	call   c0109b71 <sem_init>$/;"	l
c010f5eb	obj/kernel.asm	/^c010f5eb:	c9                   	leave  $/;"	l
c010f5ec	obj/kernel.asm	/^c010f5ec:	c3                   	ret    $/;"	l
c010f5ed	obj/kernel.asm	/^c010f5ed <vfs_cleanup>:$/;"	l
c010f5ed	obj/kernel.asm	/^c010f5ed:	55                   	push   %ebp$/;"	l
c010f5ee	obj/kernel.asm	/^c010f5ee:	89 e5                	mov    %esp,%ebp$/;"	l
c010f5f0	obj/kernel.asm	/^c010f5f0:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010f5f3	obj/kernel.asm	/^c010f5f3:	c7 45 e8 c8 2f 15 c0 	movl   $0xc0152fc8,-0x18(%ebp)$/;"	l
c010f5fa	obj/kernel.asm	/^c010f5fa:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f5fd	obj/kernel.asm	/^c010f5fd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f600	obj/kernel.asm	/^c010f600:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010f603	obj/kernel.asm	/^c010f603:	0f 94 c0             	sete   %al$/;"	l
c010f606	obj/kernel.asm	/^c010f606:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010f609	obj/kernel.asm	/^c010f609:	85 c0                	test   %eax,%eax$/;"	l
c010f60b	obj/kernel.asm	/^c010f60b:	75 57                	jne    c010f664 <vfs_cleanup+0x77>$/;"	l
c010f60d	obj/kernel.asm	/^c010f60d:	e8 7c ff ff ff       	call   c010f58e <lock_vdev_list>$/;"	l
c010f612	obj/kernel.asm	/^c010f612:	c7 45 f0 c8 2f 15 c0 	movl   $0xc0152fc8,-0x10(%ebp)$/;"	l
c010f619	obj/kernel.asm	/^c010f619:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f61c	obj/kernel.asm	/^c010f61c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f61f	obj/kernel.asm	/^c010f61f:	eb 27                	jmp    c010f648 <vfs_cleanup+0x5b>$/;"	l
c010f621	obj/kernel.asm	/^c010f621:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f624	obj/kernel.asm	/^c010f624:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010f627	obj/kernel.asm	/^c010f627:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f62a	obj/kernel.asm	/^c010f62a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f62d	obj/kernel.asm	/^c010f62d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f630	obj/kernel.asm	/^c010f630:	85 c0                	test   %eax,%eax$/;"	l
c010f632	obj/kernel.asm	/^c010f632:	74 14                	je     c010f648 <vfs_cleanup+0x5b>$/;"	l
c010f634	obj/kernel.asm	/^c010f634:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f637	obj/kernel.asm	/^c010f637:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f63a	obj/kernel.asm	/^c010f63a:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
c010f63d	obj/kernel.asm	/^c010f63d:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010f640	obj/kernel.asm	/^c010f640:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010f643	obj/kernel.asm	/^c010f643:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010f646	obj/kernel.asm	/^c010f646:	ff d0                	call   *%eax$/;"	l
c010f648	obj/kernel.asm	/^c010f648:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f64b	obj/kernel.asm	/^c010f64b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010f64e	obj/kernel.asm	/^c010f64e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f651	obj/kernel.asm	/^c010f651:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f654	obj/kernel.asm	/^c010f654:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f657	obj/kernel.asm	/^c010f657:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f65a	obj/kernel.asm	/^c010f65a:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010f65d	obj/kernel.asm	/^c010f65d:	75 c2                	jne    c010f621 <vfs_cleanup+0x34>$/;"	l
c010f65f	obj/kernel.asm	/^c010f65f:	e8 3e ff ff ff       	call   c010f5a2 <unlock_vdev_list>$/;"	l
c010f664	obj/kernel.asm	/^c010f664:	c9                   	leave  $/;"	l
c010f665	obj/kernel.asm	/^c010f665:	c3                   	ret    $/;"	l
c010f666	obj/kernel.asm	/^c010f666 <vfs_get_root>:$/;"	l
c010f666	obj/kernel.asm	/^c010f666:	55                   	push   %ebp$/;"	l
c010f667	obj/kernel.asm	/^c010f667:	89 e5                	mov    %esp,%ebp$/;"	l
c010f669	obj/kernel.asm	/^c010f669:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010f66c	obj/kernel.asm	/^c010f66c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f670	obj/kernel.asm	/^c010f670:	75 24                	jne    c010f696 <vfs_get_root+0x30>$/;"	l
c010f672	obj/kernel.asm	/^c010f672:	c7 44 24 0c 70 89 11 	movl   $0xc0118970,0xc(%esp)$/;"	l
c010f679	obj/kernel.asm	/^c010f679:	c0 $/;"	l
c010f67a	obj/kernel.asm	/^c010f67a:	c7 44 24 08 80 89 11 	movl   $0xc0118980,0x8(%esp)$/;"	l
c010f681	obj/kernel.asm	/^c010f681:	c0 $/;"	l
c010f682	obj/kernel.asm	/^c010f682:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c010f689	obj/kernel.asm	/^c010f689:	00 $/;"	l
c010f68a	obj/kernel.asm	/^c010f68a:	c7 04 24 95 89 11 c0 	movl   $0xc0118995,(%esp)$/;"	l
c010f691	obj/kernel.asm	/^c010f691:	e8 32 18 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f696	obj/kernel.asm	/^c010f696:	c7 45 f4 f3 ff ff ff 	movl   $0xfffffff3,-0xc(%ebp)$/;"	l
c010f69d	obj/kernel.asm	/^c010f69d:	c7 45 e0 c8 2f 15 c0 	movl   $0xc0152fc8,-0x20(%ebp)$/;"	l
c010f6a4	obj/kernel.asm	/^c010f6a4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f6a7	obj/kernel.asm	/^c010f6a7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f6aa	obj/kernel.asm	/^c010f6aa:	39 45 e0             	cmp    %eax,-0x20(%ebp)$/;"	l
c010f6ad	obj/kernel.asm	/^c010f6ad:	0f 94 c0             	sete   %al$/;"	l
c010f6b0	obj/kernel.asm	/^c010f6b0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010f6b3	obj/kernel.asm	/^c010f6b3:	85 c0                	test   %eax,%eax$/;"	l
c010f6b5	obj/kernel.asm	/^c010f6b5:	0f 85 c3 00 00 00    	jne    c010f77e <vfs_get_root+0x118>$/;"	l
c010f6bb	obj/kernel.asm	/^c010f6bb:	e8 ce fe ff ff       	call   c010f58e <lock_vdev_list>$/;"	l
c010f6c0	obj/kernel.asm	/^c010f6c0:	c7 45 e8 c8 2f 15 c0 	movl   $0xc0152fc8,-0x18(%ebp)$/;"	l
c010f6c7	obj/kernel.asm	/^c010f6c7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f6ca	obj/kernel.asm	/^c010f6ca:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f6cd	obj/kernel.asm	/^c010f6cd:	e9 8c 00 00 00       	jmp    c010f75e <vfs_get_root+0xf8>$/;"	l
c010f6d2	obj/kernel.asm	/^c010f6d2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f6d5	obj/kernel.asm	/^c010f6d5:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010f6d8	obj/kernel.asm	/^c010f6d8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010f6db	obj/kernel.asm	/^c010f6db:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f6de	obj/kernel.asm	/^c010f6de:	8b 00                	mov    (%eax),%eax$/;"	l
c010f6e0	obj/kernel.asm	/^c010f6e0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f6e4	obj/kernel.asm	/^c010f6e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f6e7	obj/kernel.asm	/^c010f6e7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f6ea	obj/kernel.asm	/^c010f6ea:	e8 23 5c 00 00       	call   c0115312 <strcmp>$/;"	l
c010f6ef	obj/kernel.asm	/^c010f6ef:	85 c0                	test   %eax,%eax$/;"	l
c010f6f1	obj/kernel.asm	/^c010f6f1:	75 6b                	jne    c010f75e <vfs_get_root+0xf8>$/;"	l
c010f6f3	obj/kernel.asm	/^c010f6f3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010f6fa	obj/kernel.asm	/^c010f6fa:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f6fd	obj/kernel.asm	/^c010f6fd:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f700	obj/kernel.asm	/^c010f700:	85 c0                	test   %eax,%eax$/;"	l
c010f702	obj/kernel.asm	/^c010f702:	74 19                	je     c010f71d <vfs_get_root+0xb7>$/;"	l
c010f704	obj/kernel.asm	/^c010f704:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f707	obj/kernel.asm	/^c010f707:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f70a	obj/kernel.asm	/^c010f70a:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c010f70d	obj/kernel.asm	/^c010f70d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010f710	obj/kernel.asm	/^c010f710:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010f713	obj/kernel.asm	/^c010f713:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010f716	obj/kernel.asm	/^c010f716:	ff d0                	call   *%eax$/;"	l
c010f718	obj/kernel.asm	/^c010f718:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f71b	obj/kernel.asm	/^c010f71b:	eb 21                	jmp    c010f73e <vfs_get_root+0xd8>$/;"	l
c010f71d	obj/kernel.asm	/^c010f71d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f720	obj/kernel.asm	/^c010f720:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010f723	obj/kernel.asm	/^c010f723:	85 c0                	test   %eax,%eax$/;"	l
c010f725	obj/kernel.asm	/^c010f725:	75 17                	jne    c010f73e <vfs_get_root+0xd8>$/;"	l
c010f727	obj/kernel.asm	/^c010f727:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f72a	obj/kernel.asm	/^c010f72a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f72d	obj/kernel.asm	/^c010f72d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f730	obj/kernel.asm	/^c010f730:	e8 db f9 ff ff       	call   c010f110 <inode_ref_inc>$/;"	l
c010f735	obj/kernel.asm	/^c010f735:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f738	obj/kernel.asm	/^c010f738:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f73b	obj/kernel.asm	/^c010f73b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f73e	obj/kernel.asm	/^c010f73e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f742	obj/kernel.asm	/^c010f742:	74 11                	je     c010f755 <vfs_get_root+0xef>$/;"	l
c010f744	obj/kernel.asm	/^c010f744:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010f74b	obj/kernel.asm	/^c010f74b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f74e	obj/kernel.asm	/^c010f74e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010f751	obj/kernel.asm	/^c010f751:	89 10                	mov    %edx,(%eax)$/;"	l
c010f753	obj/kernel.asm	/^c010f753:	eb 24                	jmp    c010f779 <vfs_get_root+0x113>$/;"	l
c010f755	obj/kernel.asm	/^c010f755:	c7 45 f4 f2 ff ff ff 	movl   $0xfffffff2,-0xc(%ebp)$/;"	l
c010f75c	obj/kernel.asm	/^c010f75c:	eb 1b                	jmp    c010f779 <vfs_get_root+0x113>$/;"	l
c010f75e	obj/kernel.asm	/^c010f75e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f761	obj/kernel.asm	/^c010f761:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010f764	obj/kernel.asm	/^c010f764:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010f767	obj/kernel.asm	/^c010f767:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f76a	obj/kernel.asm	/^c010f76a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f76d	obj/kernel.asm	/^c010f76d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f770	obj/kernel.asm	/^c010f770:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c010f773	obj/kernel.asm	/^c010f773:	0f 85 59 ff ff ff    	jne    c010f6d2 <vfs_get_root+0x6c>$/;"	l
c010f779	obj/kernel.asm	/^c010f779:	e8 24 fe ff ff       	call   c010f5a2 <unlock_vdev_list>$/;"	l
c010f77e	obj/kernel.asm	/^c010f77e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f781	obj/kernel.asm	/^c010f781:	c9                   	leave  $/;"	l
c010f782	obj/kernel.asm	/^c010f782:	c3                   	ret    $/;"	l
c010f783	obj/kernel.asm	/^c010f783 <vfs_get_devname>:$/;"	l
c010f783	obj/kernel.asm	/^c010f783:	55                   	push   %ebp$/;"	l
c010f784	obj/kernel.asm	/^c010f784:	89 e5                	mov    %esp,%ebp$/;"	l
c010f786	obj/kernel.asm	/^c010f786:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f789	obj/kernel.asm	/^c010f789:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f78d	obj/kernel.asm	/^c010f78d:	75 24                	jne    c010f7b3 <vfs_get_devname+0x30>$/;"	l
c010f78f	obj/kernel.asm	/^c010f78f:	c7 44 24 0c aa 89 11 	movl   $0xc01189aa,0xc(%esp)$/;"	l
c010f796	obj/kernel.asm	/^c010f796:	c0 $/;"	l
c010f797	obj/kernel.asm	/^c010f797:	c7 44 24 08 80 89 11 	movl   $0xc0118980,0x8(%esp)$/;"	l
c010f79e	obj/kernel.asm	/^c010f79e:	c0 $/;"	l
c010f79f	obj/kernel.asm	/^c010f79f:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c010f7a6	obj/kernel.asm	/^c010f7a6:	00 $/;"	l
c010f7a7	obj/kernel.asm	/^c010f7a7:	c7 04 24 95 89 11 c0 	movl   $0xc0118995,(%esp)$/;"	l
c010f7ae	obj/kernel.asm	/^c010f7ae:	e8 15 17 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f7b3	obj/kernel.asm	/^c010f7b3:	c7 45 f0 c8 2f 15 c0 	movl   $0xc0152fc8,-0x10(%ebp)$/;"	l
c010f7ba	obj/kernel.asm	/^c010f7ba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f7bd	obj/kernel.asm	/^c010f7bd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f7c0	obj/kernel.asm	/^c010f7c0:	eb 1b                	jmp    c010f7dd <vfs_get_devname+0x5a>$/;"	l
c010f7c2	obj/kernel.asm	/^c010f7c2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f7c5	obj/kernel.asm	/^c010f7c5:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010f7c8	obj/kernel.asm	/^c010f7c8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f7cb	obj/kernel.asm	/^c010f7cb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f7ce	obj/kernel.asm	/^c010f7ce:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f7d1	obj/kernel.asm	/^c010f7d1:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010f7d4	obj/kernel.asm	/^c010f7d4:	75 07                	jne    c010f7dd <vfs_get_devname+0x5a>$/;"	l
c010f7d6	obj/kernel.asm	/^c010f7d6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f7d9	obj/kernel.asm	/^c010f7d9:	8b 00                	mov    (%eax),%eax$/;"	l
c010f7db	obj/kernel.asm	/^c010f7db:	eb 1c                	jmp    c010f7f9 <vfs_get_devname+0x76>$/;"	l
c010f7dd	obj/kernel.asm	/^c010f7dd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f7e0	obj/kernel.asm	/^c010f7e0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f7e3	obj/kernel.asm	/^c010f7e3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f7e6	obj/kernel.asm	/^c010f7e6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f7e9	obj/kernel.asm	/^c010f7e9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f7ec	obj/kernel.asm	/^c010f7ec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f7ef	obj/kernel.asm	/^c010f7ef:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010f7f2	obj/kernel.asm	/^c010f7f2:	75 ce                	jne    c010f7c2 <vfs_get_devname+0x3f>$/;"	l
c010f7f4	obj/kernel.asm	/^c010f7f4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f7f9	obj/kernel.asm	/^c010f7f9:	c9                   	leave  $/;"	l
c010f7fa	obj/kernel.asm	/^c010f7fa:	c3                   	ret    $/;"	l
c010f7fb	obj/kernel.asm	/^c010f7fb <check_devname_conflict>:$/;"	l
c010f7fb	obj/kernel.asm	/^c010f7fb:	55                   	push   %ebp$/;"	l
c010f7fc	obj/kernel.asm	/^c010f7fc:	89 e5                	mov    %esp,%ebp$/;"	l
c010f7fe	obj/kernel.asm	/^c010f7fe:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f801	obj/kernel.asm	/^c010f801:	c7 45 f0 c8 2f 15 c0 	movl   $0xc0152fc8,-0x10(%ebp)$/;"	l
c010f808	obj/kernel.asm	/^c010f808:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f80b	obj/kernel.asm	/^c010f80b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f80e	obj/kernel.asm	/^c010f80e:	eb 28                	jmp    c010f838 <check_devname_conflict+0x3d>$/;"	l
c010f810	obj/kernel.asm	/^c010f810:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f813	obj/kernel.asm	/^c010f813:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010f816	obj/kernel.asm	/^c010f816:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f819	obj/kernel.asm	/^c010f819:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f81c	obj/kernel.asm	/^c010f81c:	8b 00                	mov    (%eax),%eax$/;"	l
c010f81e	obj/kernel.asm	/^c010f81e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f821	obj/kernel.asm	/^c010f821:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010f825	obj/kernel.asm	/^c010f825:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f828	obj/kernel.asm	/^c010f828:	e8 e5 5a 00 00       	call   c0115312 <strcmp>$/;"	l
c010f82d	obj/kernel.asm	/^c010f82d:	85 c0                	test   %eax,%eax$/;"	l
c010f82f	obj/kernel.asm	/^c010f82f:	75 07                	jne    c010f838 <check_devname_conflict+0x3d>$/;"	l
c010f831	obj/kernel.asm	/^c010f831:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f836	obj/kernel.asm	/^c010f836:	eb 1c                	jmp    c010f854 <check_devname_conflict+0x59>$/;"	l
c010f838	obj/kernel.asm	/^c010f838:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f83b	obj/kernel.asm	/^c010f83b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f83e	obj/kernel.asm	/^c010f83e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f841	obj/kernel.asm	/^c010f841:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f844	obj/kernel.asm	/^c010f844:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f847	obj/kernel.asm	/^c010f847:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f84a	obj/kernel.asm	/^c010f84a:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010f84d	obj/kernel.asm	/^c010f84d:	75 c1                	jne    c010f810 <check_devname_conflict+0x15>$/;"	l
c010f84f	obj/kernel.asm	/^c010f84f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010f854	obj/kernel.asm	/^c010f854:	c9                   	leave  $/;"	l
c010f855	obj/kernel.asm	/^c010f855:	c3                   	ret    $/;"	l
c010f856	obj/kernel.asm	/^c010f856 <vfs_do_add>:$/;"	l
c010f856	obj/kernel.asm	/^c010f856:	55                   	push   %ebp$/;"	l
c010f857	obj/kernel.asm	/^c010f857:	89 e5                	mov    %esp,%ebp$/;"	l
c010f859	obj/kernel.asm	/^c010f859:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010f85c	obj/kernel.asm	/^c010f85c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f860	obj/kernel.asm	/^c010f860:	75 24                	jne    c010f886 <vfs_do_add+0x30>$/;"	l
c010f862	obj/kernel.asm	/^c010f862:	c7 44 24 0c 70 89 11 	movl   $0xc0118970,0xc(%esp)$/;"	l
c010f869	obj/kernel.asm	/^c010f869:	c0 $/;"	l
c010f86a	obj/kernel.asm	/^c010f86a:	c7 44 24 08 80 89 11 	movl   $0xc0118980,0x8(%esp)$/;"	l
c010f871	obj/kernel.asm	/^c010f871:	c0 $/;"	l
c010f872	obj/kernel.asm	/^c010f872:	c7 44 24 04 8e 00 00 	movl   $0x8e,0x4(%esp)$/;"	l
c010f879	obj/kernel.asm	/^c010f879:	00 $/;"	l
c010f87a	obj/kernel.asm	/^c010f87a:	c7 04 24 95 89 11 c0 	movl   $0xc0118995,(%esp)$/;"	l
c010f881	obj/kernel.asm	/^c010f881:	e8 42 16 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f886	obj/kernel.asm	/^c010f886:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010f88a	obj/kernel.asm	/^c010f88a:	75 06                	jne    c010f892 <vfs_do_add+0x3c>$/;"	l
c010f88c	obj/kernel.asm	/^c010f88c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010f890	obj/kernel.asm	/^c010f890:	74 37                	je     c010f8c9 <vfs_do_add+0x73>$/;"	l
c010f892	obj/kernel.asm	/^c010f892:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010f896	obj/kernel.asm	/^c010f896:	74 0d                	je     c010f8a5 <vfs_do_add+0x4f>$/;"	l
c010f898	obj/kernel.asm	/^c010f898:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f89b	obj/kernel.asm	/^c010f89b:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010f89e	obj/kernel.asm	/^c010f89e:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010f8a3	obj/kernel.asm	/^c010f8a3:	74 24                	je     c010f8c9 <vfs_do_add+0x73>$/;"	l
c010f8a5	obj/kernel.asm	/^c010f8a5:	c7 44 24 0c b8 89 11 	movl   $0xc01189b8,0xc(%esp)$/;"	l
c010f8ac	obj/kernel.asm	/^c010f8ac:	c0 $/;"	l
c010f8ad	obj/kernel.asm	/^c010f8ad:	c7 44 24 08 80 89 11 	movl   $0xc0118980,0x8(%esp)$/;"	l
c010f8b4	obj/kernel.asm	/^c010f8b4:	c0 $/;"	l
c010f8b5	obj/kernel.asm	/^c010f8b5:	c7 44 24 04 8f 00 00 	movl   $0x8f,0x4(%esp)$/;"	l
c010f8bc	obj/kernel.asm	/^c010f8bc:	00 $/;"	l
c010f8bd	obj/kernel.asm	/^c010f8bd:	c7 04 24 95 89 11 c0 	movl   $0xc0118995,(%esp)$/;"	l
c010f8c4	obj/kernel.asm	/^c010f8c4:	e8 ff 15 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f8c9	obj/kernel.asm	/^c010f8c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f8cc	obj/kernel.asm	/^c010f8cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f8cf	obj/kernel.asm	/^c010f8cf:	e8 46 59 00 00       	call   c011521a <strlen>$/;"	l
c010f8d4	obj/kernel.asm	/^c010f8d4:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
c010f8d7	obj/kernel.asm	/^c010f8d7:	76 0a                	jbe    c010f8e3 <vfs_do_add+0x8d>$/;"	l
c010f8d9	obj/kernel.asm	/^c010f8d9:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax$/;"	l
c010f8de	obj/kernel.asm	/^c010f8de:	e9 00 01 00 00       	jmp    c010f9e3 <vfs_do_add+0x18d>$/;"	l
c010f8e3	obj/kernel.asm	/^c010f8e3:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010f8ea	obj/kernel.asm	/^c010f8ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f8ed	obj/kernel.asm	/^c010f8ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f8f0	obj/kernel.asm	/^c010f8f0:	e8 11 0b ff ff       	call   c0100406 <strdup>$/;"	l
c010f8f5	obj/kernel.asm	/^c010f8f5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f8f8	obj/kernel.asm	/^c010f8f8:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f8fc	obj/kernel.asm	/^c010f8fc:	75 08                	jne    c010f906 <vfs_do_add+0xb0>$/;"	l
c010f8fe	obj/kernel.asm	/^c010f8fe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f901	obj/kernel.asm	/^c010f901:	e9 dd 00 00 00       	jmp    c010f9e3 <vfs_do_add+0x18d>$/;"	l
c010f906	obj/kernel.asm	/^c010f906:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
c010f90d	obj/kernel.asm	/^c010f90d:	e8 cd 53 ff ff       	call   c0104cdf <kmalloc>$/;"	l
c010f912	obj/kernel.asm	/^c010f912:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f915	obj/kernel.asm	/^c010f915:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f919	obj/kernel.asm	/^c010f919:	75 05                	jne    c010f920 <vfs_do_add+0xca>$/;"	l
c010f91b	obj/kernel.asm	/^c010f91b:	e9 b5 00 00 00       	jmp    c010f9d5 <vfs_do_add+0x17f>$/;"	l
c010f920	obj/kernel.asm	/^c010f920:	c7 45 f4 e9 ff ff ff 	movl   $0xffffffe9,-0xc(%ebp)$/;"	l
c010f927	obj/kernel.asm	/^c010f927:	e8 62 fc ff ff       	call   c010f58e <lock_vdev_list>$/;"	l
c010f92c	obj/kernel.asm	/^c010f92c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f92f	obj/kernel.asm	/^c010f92f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f932	obj/kernel.asm	/^c010f932:	e8 c4 fe ff ff       	call   c010f7fb <check_devname_conflict>$/;"	l
c010f937	obj/kernel.asm	/^c010f937:	85 c0                	test   %eax,%eax$/;"	l
c010f939	obj/kernel.asm	/^c010f939:	75 16                	jne    c010f951 <vfs_do_add+0xfb>$/;"	l
c010f93b	obj/kernel.asm	/^c010f93b:	e8 62 fc ff ff       	call   c010f5a2 <unlock_vdev_list>$/;"	l
c010f940	obj/kernel.asm	/^c010f940:	90                   	nop$/;"	l
c010f941	obj/kernel.asm	/^c010f941:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f944	obj/kernel.asm	/^c010f944:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f947	obj/kernel.asm	/^c010f947:	e8 ae 53 ff ff       	call   c0104cfa <kfree>$/;"	l
c010f94c	obj/kernel.asm	/^c010f94c:	e9 84 00 00 00       	jmp    c010f9d5 <vfs_do_add+0x17f>$/;"	l
c010f951	obj/kernel.asm	/^c010f951:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f954	obj/kernel.asm	/^c010f954:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010f957	obj/kernel.asm	/^c010f957:	89 10                	mov    %edx,(%eax)$/;"	l
c010f959	obj/kernel.asm	/^c010f959:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f95c	obj/kernel.asm	/^c010f95c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010f95f	obj/kernel.asm	/^c010f95f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f962	obj/kernel.asm	/^c010f962:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f965	obj/kernel.asm	/^c010f965:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010f968	obj/kernel.asm	/^c010f968:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010f96b	obj/kernel.asm	/^c010f96b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f96e	obj/kernel.asm	/^c010f96e:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010f971	obj/kernel.asm	/^c010f971:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010f974	obj/kernel.asm	/^c010f974:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f977	obj/kernel.asm	/^c010f977:	83 c0 10             	add    $0x10,%eax$/;"	l
c010f97a	obj/kernel.asm	/^c010f97a:	c7 45 e8 c8 2f 15 c0 	movl   $0xc0152fc8,-0x18(%ebp)$/;"	l
c010f981	obj/kernel.asm	/^c010f981:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010f984	obj/kernel.asm	/^c010f984:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f987	obj/kernel.asm	/^c010f987:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010f98a	obj/kernel.asm	/^c010f98a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f98d	obj/kernel.asm	/^c010f98d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010f990	obj/kernel.asm	/^c010f990:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f993	obj/kernel.asm	/^c010f993:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f996	obj/kernel.asm	/^c010f996:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010f999	obj/kernel.asm	/^c010f999:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010f99c	obj/kernel.asm	/^c010f99c:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010f99f	obj/kernel.asm	/^c010f99f:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010f9a2	obj/kernel.asm	/^c010f9a2:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010f9a5	obj/kernel.asm	/^c010f9a5:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010f9a8	obj/kernel.asm	/^c010f9a8:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010f9ab	obj/kernel.asm	/^c010f9ab:	89 10                	mov    %edx,(%eax)$/;"	l
c010f9ad	obj/kernel.asm	/^c010f9ad:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010f9b0	obj/kernel.asm	/^c010f9b0:	8b 10                	mov    (%eax),%edx$/;"	l
c010f9b2	obj/kernel.asm	/^c010f9b2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010f9b5	obj/kernel.asm	/^c010f9b5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f9b8	obj/kernel.asm	/^c010f9b8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010f9bb	obj/kernel.asm	/^c010f9bb:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010f9be	obj/kernel.asm	/^c010f9be:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f9c1	obj/kernel.asm	/^c010f9c1:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010f9c4	obj/kernel.asm	/^c010f9c4:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010f9c7	obj/kernel.asm	/^c010f9c7:	89 10                	mov    %edx,(%eax)$/;"	l
c010f9c9	obj/kernel.asm	/^c010f9c9:	e8 d4 fb ff ff       	call   c010f5a2 <unlock_vdev_list>$/;"	l
c010f9ce	obj/kernel.asm	/^c010f9ce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f9d3	obj/kernel.asm	/^c010f9d3:	eb 0e                	jmp    c010f9e3 <vfs_do_add+0x18d>$/;"	l
c010f9d5	obj/kernel.asm	/^c010f9d5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f9d8	obj/kernel.asm	/^c010f9d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f9db	obj/kernel.asm	/^c010f9db:	e8 1a 53 ff ff       	call   c0104cfa <kfree>$/;"	l
c010f9e0	obj/kernel.asm	/^c010f9e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f9e3	obj/kernel.asm	/^c010f9e3:	c9                   	leave  $/;"	l
c010f9e4	obj/kernel.asm	/^c010f9e4:	c3                   	ret    $/;"	l
c010f9e5	obj/kernel.asm	/^c010f9e5 <vfs_add_fs>:$/;"	l
c010f9e5	obj/kernel.asm	/^c010f9e5:	55                   	push   %ebp$/;"	l
c010f9e6	obj/kernel.asm	/^c010f9e6:	89 e5                	mov    %esp,%ebp$/;"	l
c010f9e8	obj/kernel.asm	/^c010f9e8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f9eb	obj/kernel.asm	/^c010f9eb:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010f9f2	obj/kernel.asm	/^c010f9f2:	00 $/;"	l
c010f9f3	obj/kernel.asm	/^c010f9f3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f9f6	obj/kernel.asm	/^c010f9f6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010f9fa	obj/kernel.asm	/^c010f9fa:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010fa01	obj/kernel.asm	/^c010fa01:	00 $/;"	l
c010fa02	obj/kernel.asm	/^c010fa02:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa05	obj/kernel.asm	/^c010fa05:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fa08	obj/kernel.asm	/^c010fa08:	e8 49 fe ff ff       	call   c010f856 <vfs_do_add>$/;"	l
c010fa0d	obj/kernel.asm	/^c010fa0d:	c9                   	leave  $/;"	l
c010fa0e	obj/kernel.asm	/^c010fa0e:	c3                   	ret    $/;"	l
c010fa0f	obj/kernel.asm	/^c010fa0f <vfs_add_dev>:$/;"	l
c010fa0f	obj/kernel.asm	/^c010fa0f:	55                   	push   %ebp$/;"	l
c010fa10	obj/kernel.asm	/^c010fa10:	89 e5                	mov    %esp,%ebp$/;"	l
c010fa12	obj/kernel.asm	/^c010fa12:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fa15	obj/kernel.asm	/^c010fa15:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010fa18	obj/kernel.asm	/^c010fa18:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010fa1c	obj/kernel.asm	/^c010fa1c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010fa23	obj/kernel.asm	/^c010fa23:	00 $/;"	l
c010fa24	obj/kernel.asm	/^c010fa24:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fa27	obj/kernel.asm	/^c010fa27:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fa2b	obj/kernel.asm	/^c010fa2b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa2e	obj/kernel.asm	/^c010fa2e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fa31	obj/kernel.asm	/^c010fa31:	e8 20 fe ff ff       	call   c010f856 <vfs_do_add>$/;"	l
c010fa36	obj/kernel.asm	/^c010fa36:	c9                   	leave  $/;"	l
c010fa37	obj/kernel.asm	/^c010fa37:	c3                   	ret    $/;"	l
c010fa38	obj/kernel.asm	/^c010fa38 <find_mount>:$/;"	l
c010fa38	obj/kernel.asm	/^c010fa38:	55                   	push   %ebp$/;"	l
c010fa39	obj/kernel.asm	/^c010fa39:	89 e5                	mov    %esp,%ebp$/;"	l
c010fa3b	obj/kernel.asm	/^c010fa3b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fa3e	obj/kernel.asm	/^c010fa3e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010fa42	obj/kernel.asm	/^c010fa42:	75 24                	jne    c010fa68 <find_mount+0x30>$/;"	l
c010fa44	obj/kernel.asm	/^c010fa44:	c7 44 24 0c 70 89 11 	movl   $0xc0118970,0xc(%esp)$/;"	l
c010fa4b	obj/kernel.asm	/^c010fa4b:	c0 $/;"	l
c010fa4c	obj/kernel.asm	/^c010fa4c:	c7 44 24 08 80 89 11 	movl   $0xc0118980,0x8(%esp)$/;"	l
c010fa53	obj/kernel.asm	/^c010fa53:	c0 $/;"	l
c010fa54	obj/kernel.asm	/^c010fa54:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
c010fa5b	obj/kernel.asm	/^c010fa5b:	00 $/;"	l
c010fa5c	obj/kernel.asm	/^c010fa5c:	c7 04 24 95 89 11 c0 	movl   $0xc0118995,(%esp)$/;"	l
c010fa63	obj/kernel.asm	/^c010fa63:	e8 60 14 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010fa68	obj/kernel.asm	/^c010fa68:	c7 45 f0 c8 2f 15 c0 	movl   $0xc0152fc8,-0x10(%ebp)$/;"	l
c010fa6f	obj/kernel.asm	/^c010fa6f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fa72	obj/kernel.asm	/^c010fa72:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fa75	obj/kernel.asm	/^c010fa75:	eb 3a                	jmp    c010fab1 <find_mount+0x79>$/;"	l
c010fa77	obj/kernel.asm	/^c010fa77:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fa7a	obj/kernel.asm	/^c010fa7a:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010fa7d	obj/kernel.asm	/^c010fa7d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fa80	obj/kernel.asm	/^c010fa80:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fa83	obj/kernel.asm	/^c010fa83:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010fa86	obj/kernel.asm	/^c010fa86:	85 c0                	test   %eax,%eax$/;"	l
c010fa88	obj/kernel.asm	/^c010fa88:	74 27                	je     c010fab1 <find_mount+0x79>$/;"	l
c010fa8a	obj/kernel.asm	/^c010fa8a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fa8d	obj/kernel.asm	/^c010fa8d:	8b 00                	mov    (%eax),%eax$/;"	l
c010fa8f	obj/kernel.asm	/^c010fa8f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010fa92	obj/kernel.asm	/^c010fa92:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010fa96	obj/kernel.asm	/^c010fa96:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fa99	obj/kernel.asm	/^c010fa99:	e8 74 58 00 00       	call   c0115312 <strcmp>$/;"	l
c010fa9e	obj/kernel.asm	/^c010fa9e:	85 c0                	test   %eax,%eax$/;"	l
c010faa0	obj/kernel.asm	/^c010faa0:	75 0f                	jne    c010fab1 <find_mount+0x79>$/;"	l
c010faa2	obj/kernel.asm	/^c010faa2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010faa5	obj/kernel.asm	/^c010faa5:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010faa8	obj/kernel.asm	/^c010faa8:	89 10                	mov    %edx,(%eax)$/;"	l
c010faaa	obj/kernel.asm	/^c010faaa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010faaf	obj/kernel.asm	/^c010faaf:	eb 1c                	jmp    c010facd <find_mount+0x95>$/;"	l
c010fab1	obj/kernel.asm	/^c010fab1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fab4	obj/kernel.asm	/^c010fab4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010fab7	obj/kernel.asm	/^c010fab7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010faba	obj/kernel.asm	/^c010faba:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fabd	obj/kernel.asm	/^c010fabd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fac0	obj/kernel.asm	/^c010fac0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fac3	obj/kernel.asm	/^c010fac3:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010fac6	obj/kernel.asm	/^c010fac6:	75 af                	jne    c010fa77 <find_mount+0x3f>$/;"	l
c010fac8	obj/kernel.asm	/^c010fac8:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax$/;"	l
c010facd	obj/kernel.asm	/^c010facd:	c9                   	leave  $/;"	l
c010face	obj/kernel.asm	/^c010face:	c3                   	ret    $/;"	l
c010facf	obj/kernel.asm	/^c010facf <vfs_mount>:$/;"	l
c010facf	obj/kernel.asm	/^c010facf:	55                   	push   %ebp$/;"	l
c010fad0	obj/kernel.asm	/^c010fad0:	89 e5                	mov    %esp,%ebp$/;"	l
c010fad2	obj/kernel.asm	/^c010fad2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fad5	obj/kernel.asm	/^c010fad5:	e8 b4 fa ff ff       	call   c010f58e <lock_vdev_list>$/;"	l
c010fada	obj/kernel.asm	/^c010fada:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c010fadd	obj/kernel.asm	/^c010fadd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fae1	obj/kernel.asm	/^c010fae1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fae4	obj/kernel.asm	/^c010fae4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fae7	obj/kernel.asm	/^c010fae7:	e8 4c ff ff ff       	call   c010fa38 <find_mount>$/;"	l
c010faec	obj/kernel.asm	/^c010faec:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010faef	obj/kernel.asm	/^c010faef:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010faf3	obj/kernel.asm	/^c010faf3:	74 05                	je     c010fafa <vfs_mount+0x2b>$/;"	l
c010faf5	obj/kernel.asm	/^c010faf5:	e9 f4 00 00 00       	jmp    c010fbee <vfs_mount+0x11f>$/;"	l
c010fafa	obj/kernel.asm	/^c010fafa:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fafd	obj/kernel.asm	/^c010fafd:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fb00	obj/kernel.asm	/^c010fb00:	85 c0                	test   %eax,%eax$/;"	l
c010fb02	obj/kernel.asm	/^c010fb02:	74 0c                	je     c010fb10 <vfs_mount+0x41>$/;"	l
c010fb04	obj/kernel.asm	/^c010fb04:	c7 45 f4 f1 ff ff ff 	movl   $0xfffffff1,-0xc(%ebp)$/;"	l
c010fb0b	obj/kernel.asm	/^c010fb0b:	e9 de 00 00 00       	jmp    c010fbee <vfs_mount+0x11f>$/;"	l
c010fb10	obj/kernel.asm	/^c010fb10:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fb13	obj/kernel.asm	/^c010fb13:	8b 00                	mov    (%eax),%eax$/;"	l
c010fb15	obj/kernel.asm	/^c010fb15:	85 c0                	test   %eax,%eax$/;"	l
c010fb17	obj/kernel.asm	/^c010fb17:	74 0a                	je     c010fb23 <vfs_mount+0x54>$/;"	l
c010fb19	obj/kernel.asm	/^c010fb19:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fb1c	obj/kernel.asm	/^c010fb1c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010fb1f	obj/kernel.asm	/^c010fb1f:	85 c0                	test   %eax,%eax$/;"	l
c010fb21	obj/kernel.asm	/^c010fb21:	75 24                	jne    c010fb47 <vfs_mount+0x78>$/;"	l
c010fb23	obj/kernel.asm	/^c010fb23:	c7 44 24 0c 14 8a 11 	movl   $0xc0118a14,0xc(%esp)$/;"	l
c010fb2a	obj/kernel.asm	/^c010fb2a:	c0 $/;"	l
c010fb2b	obj/kernel.asm	/^c010fb2b:	c7 44 24 08 80 89 11 	movl   $0xc0118980,0x8(%esp)$/;"	l
c010fb32	obj/kernel.asm	/^c010fb32:	c0 $/;"	l
c010fb33	obj/kernel.asm	/^c010fb33:	c7 44 24 04 eb 00 00 	movl   $0xeb,0x4(%esp)$/;"	l
c010fb3a	obj/kernel.asm	/^c010fb3a:	00 $/;"	l
c010fb3b	obj/kernel.asm	/^c010fb3b:	c7 04 24 95 89 11 c0 	movl   $0xc0118995,(%esp)$/;"	l
c010fb42	obj/kernel.asm	/^c010fb42:	e8 81 13 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010fb47	obj/kernel.asm	/^c010fb47:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fb4a	obj/kernel.asm	/^c010fb4a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fb4d	obj/kernel.asm	/^c010fb4d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fb50	obj/kernel.asm	/^c010fb50:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010fb54	obj/kernel.asm	/^c010fb54:	74 0d                	je     c010fb63 <vfs_mount+0x94>$/;"	l
c010fb56	obj/kernel.asm	/^c010fb56:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fb59	obj/kernel.asm	/^c010fb59:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010fb5c	obj/kernel.asm	/^c010fb5c:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010fb61	obj/kernel.asm	/^c010fb61:	74 24                	je     c010fb87 <vfs_mount+0xb8>$/;"	l
c010fb63	obj/kernel.asm	/^c010fb63:	c7 44 24 0c 40 8a 11 	movl   $0xc0118a40,0xc(%esp)$/;"	l
c010fb6a	obj/kernel.asm	/^c010fb6a:	c0 $/;"	l
c010fb6b	obj/kernel.asm	/^c010fb6b:	c7 44 24 08 80 89 11 	movl   $0xc0118980,0x8(%esp)$/;"	l
c010fb72	obj/kernel.asm	/^c010fb72:	c0 $/;"	l
c010fb73	obj/kernel.asm	/^c010fb73:	c7 44 24 04 ed 00 00 	movl   $0xed,0x4(%esp)$/;"	l
c010fb7a	obj/kernel.asm	/^c010fb7a:	00 $/;"	l
c010fb7b	obj/kernel.asm	/^c010fb7b:	c7 04 24 95 89 11 c0 	movl   $0xc0118995,(%esp)$/;"	l
c010fb82	obj/kernel.asm	/^c010fb82:	e8 41 13 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010fb87	obj/kernel.asm	/^c010fb87:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fb8a	obj/kernel.asm	/^c010fb8a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fb8d	obj/kernel.asm	/^c010fb8d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fb90	obj/kernel.asm	/^c010fb90:	83 c0 08             	add    $0x8,%eax$/;"	l
c010fb93	obj/kernel.asm	/^c010fb93:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fb97	obj/kernel.asm	/^c010fb97:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fb9a	obj/kernel.asm	/^c010fb9a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fb9d	obj/kernel.asm	/^c010fb9d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fba0	obj/kernel.asm	/^c010fba0:	ff d0                	call   *%eax$/;"	l
c010fba2	obj/kernel.asm	/^c010fba2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fba5	obj/kernel.asm	/^c010fba5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fba9	obj/kernel.asm	/^c010fba9:	75 43                	jne    c010fbee <vfs_mount+0x11f>$/;"	l
c010fbab	obj/kernel.asm	/^c010fbab:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fbae	obj/kernel.asm	/^c010fbae:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fbb1	obj/kernel.asm	/^c010fbb1:	85 c0                	test   %eax,%eax$/;"	l
c010fbb3	obj/kernel.asm	/^c010fbb3:	75 24                	jne    c010fbd9 <vfs_mount+0x10a>$/;"	l
c010fbb5	obj/kernel.asm	/^c010fbb5:	c7 44 24 0c 73 8a 11 	movl   $0xc0118a73,0xc(%esp)$/;"	l
c010fbbc	obj/kernel.asm	/^c010fbbc:	c0 $/;"	l
c010fbbd	obj/kernel.asm	/^c010fbbd:	c7 44 24 08 80 89 11 	movl   $0xc0118980,0x8(%esp)$/;"	l
c010fbc4	obj/kernel.asm	/^c010fbc4:	c0 $/;"	l
c010fbc5	obj/kernel.asm	/^c010fbc5:	c7 44 24 04 ef 00 00 	movl   $0xef,0x4(%esp)$/;"	l
c010fbcc	obj/kernel.asm	/^c010fbcc:	00 $/;"	l
c010fbcd	obj/kernel.asm	/^c010fbcd:	c7 04 24 95 89 11 c0 	movl   $0xc0118995,(%esp)$/;"	l
c010fbd4	obj/kernel.asm	/^c010fbd4:	e8 ef 12 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010fbd9	obj/kernel.asm	/^c010fbd9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fbdc	obj/kernel.asm	/^c010fbdc:	8b 00                	mov    (%eax),%eax$/;"	l
c010fbde	obj/kernel.asm	/^c010fbde:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fbe2	obj/kernel.asm	/^c010fbe2:	c7 04 24 84 8a 11 c0 	movl   $0xc0118a84,(%esp)$/;"	l
c010fbe9	obj/kernel.asm	/^c010fbe9:	e8 77 07 ff ff       	call   c0100365 <cprintf>$/;"	l
c010fbee	obj/kernel.asm	/^c010fbee:	e8 af f9 ff ff       	call   c010f5a2 <unlock_vdev_list>$/;"	l
c010fbf3	obj/kernel.asm	/^c010fbf3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fbf6	obj/kernel.asm	/^c010fbf6:	c9                   	leave  $/;"	l
c010fbf7	obj/kernel.asm	/^c010fbf7:	c3                   	ret    $/;"	l
c010fbf8	obj/kernel.asm	/^c010fbf8 <vfs_unmount>:$/;"	l
c010fbf8	obj/kernel.asm	/^c010fbf8:	55                   	push   %ebp$/;"	l
c010fbf9	obj/kernel.asm	/^c010fbf9:	89 e5                	mov    %esp,%ebp$/;"	l
c010fbfb	obj/kernel.asm	/^c010fbfb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fbfe	obj/kernel.asm	/^c010fbfe:	e8 8b f9 ff ff       	call   c010f58e <lock_vdev_list>$/;"	l
c010fc03	obj/kernel.asm	/^c010fc03:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010fc06	obj/kernel.asm	/^c010fc06:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fc0a	obj/kernel.asm	/^c010fc0a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fc0d	obj/kernel.asm	/^c010fc0d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fc10	obj/kernel.asm	/^c010fc10:	e8 23 fe ff ff       	call   c010fa38 <find_mount>$/;"	l
c010fc15	obj/kernel.asm	/^c010fc15:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fc18	obj/kernel.asm	/^c010fc18:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fc1c	obj/kernel.asm	/^c010fc1c:	74 05                	je     c010fc23 <vfs_unmount+0x2b>$/;"	l
c010fc1e	obj/kernel.asm	/^c010fc1e:	e9 a8 00 00 00       	jmp    c010fccb <vfs_unmount+0xd3>$/;"	l
c010fc23	obj/kernel.asm	/^c010fc23:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fc26	obj/kernel.asm	/^c010fc26:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fc29	obj/kernel.asm	/^c010fc29:	85 c0                	test   %eax,%eax$/;"	l
c010fc2b	obj/kernel.asm	/^c010fc2b:	75 0c                	jne    c010fc39 <vfs_unmount+0x41>$/;"	l
c010fc2d	obj/kernel.asm	/^c010fc2d:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010fc34	obj/kernel.asm	/^c010fc34:	e9 92 00 00 00       	jmp    c010fccb <vfs_unmount+0xd3>$/;"	l
c010fc39	obj/kernel.asm	/^c010fc39:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fc3c	obj/kernel.asm	/^c010fc3c:	8b 00                	mov    (%eax),%eax$/;"	l
c010fc3e	obj/kernel.asm	/^c010fc3e:	85 c0                	test   %eax,%eax$/;"	l
c010fc40	obj/kernel.asm	/^c010fc40:	74 0a                	je     c010fc4c <vfs_unmount+0x54>$/;"	l
c010fc42	obj/kernel.asm	/^c010fc42:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fc45	obj/kernel.asm	/^c010fc45:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010fc48	obj/kernel.asm	/^c010fc48:	85 c0                	test   %eax,%eax$/;"	l
c010fc4a	obj/kernel.asm	/^c010fc4a:	75 24                	jne    c010fc70 <vfs_unmount+0x78>$/;"	l
c010fc4c	obj/kernel.asm	/^c010fc4c:	c7 44 24 0c 14 8a 11 	movl   $0xc0118a14,0xc(%esp)$/;"	l
c010fc53	obj/kernel.asm	/^c010fc53:	c0 $/;"	l
c010fc54	obj/kernel.asm	/^c010fc54:	c7 44 24 08 80 89 11 	movl   $0xc0118980,0x8(%esp)$/;"	l
c010fc5b	obj/kernel.asm	/^c010fc5b:	c0 $/;"	l
c010fc5c	obj/kernel.asm	/^c010fc5c:	c7 44 24 04 08 01 00 	movl   $0x108,0x4(%esp)$/;"	l
c010fc63	obj/kernel.asm	/^c010fc63:	00 $/;"	l
c010fc64	obj/kernel.asm	/^c010fc64:	c7 04 24 95 89 11 c0 	movl   $0xc0118995,(%esp)$/;"	l
c010fc6b	obj/kernel.asm	/^c010fc6b:	e8 58 12 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010fc70	obj/kernel.asm	/^c010fc70:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fc73	obj/kernel.asm	/^c010fc73:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fc76	obj/kernel.asm	/^c010fc76:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010fc79	obj/kernel.asm	/^c010fc79:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010fc7c	obj/kernel.asm	/^c010fc7c:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010fc7f	obj/kernel.asm	/^c010fc7f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010fc82	obj/kernel.asm	/^c010fc82:	ff d0                	call   *%eax$/;"	l
c010fc84	obj/kernel.asm	/^c010fc84:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fc87	obj/kernel.asm	/^c010fc87:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fc8b	obj/kernel.asm	/^c010fc8b:	74 02                	je     c010fc8f <vfs_unmount+0x97>$/;"	l
c010fc8d	obj/kernel.asm	/^c010fc8d:	eb 3c                	jmp    c010fccb <vfs_unmount+0xd3>$/;"	l
c010fc8f	obj/kernel.asm	/^c010fc8f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fc92	obj/kernel.asm	/^c010fc92:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fc95	obj/kernel.asm	/^c010fc95:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010fc98	obj/kernel.asm	/^c010fc98:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010fc9b	obj/kernel.asm	/^c010fc9b:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010fc9e	obj/kernel.asm	/^c010fc9e:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010fca1	obj/kernel.asm	/^c010fca1:	ff d0                	call   *%eax$/;"	l
c010fca3	obj/kernel.asm	/^c010fca3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fca6	obj/kernel.asm	/^c010fca6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fcaa	obj/kernel.asm	/^c010fcaa:	75 1f                	jne    c010fccb <vfs_unmount+0xd3>$/;"	l
c010fcac	obj/kernel.asm	/^c010fcac:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fcaf	obj/kernel.asm	/^c010fcaf:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010fcb6	obj/kernel.asm	/^c010fcb6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fcb9	obj/kernel.asm	/^c010fcb9:	8b 00                	mov    (%eax),%eax$/;"	l
c010fcbb	obj/kernel.asm	/^c010fcbb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fcbf	obj/kernel.asm	/^c010fcbf:	c7 04 24 94 8a 11 c0 	movl   $0xc0118a94,(%esp)$/;"	l
c010fcc6	obj/kernel.asm	/^c010fcc6:	e8 9a 06 ff ff       	call   c0100365 <cprintf>$/;"	l
c010fccb	obj/kernel.asm	/^c010fccb:	e8 d2 f8 ff ff       	call   c010f5a2 <unlock_vdev_list>$/;"	l
c010fcd0	obj/kernel.asm	/^c010fcd0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fcd3	obj/kernel.asm	/^c010fcd3:	c9                   	leave  $/;"	l
c010fcd4	obj/kernel.asm	/^c010fcd4:	c3                   	ret    $/;"	l
c010fcd5	obj/kernel.asm	/^c010fcd5 <vfs_unmount_all>:$/;"	l
c010fcd5	obj/kernel.asm	/^c010fcd5:	55                   	push   %ebp$/;"	l
c010fcd6	obj/kernel.asm	/^c010fcd6:	89 e5                	mov    %esp,%ebp$/;"	l
c010fcd8	obj/kernel.asm	/^c010fcd8:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010fcdb	obj/kernel.asm	/^c010fcdb:	c7 45 e4 c8 2f 15 c0 	movl   $0xc0152fc8,-0x1c(%ebp)$/;"	l
c010fce2	obj/kernel.asm	/^c010fce2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010fce5	obj/kernel.asm	/^c010fce5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fce8	obj/kernel.asm	/^c010fce8:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c010fceb	obj/kernel.asm	/^c010fceb:	0f 94 c0             	sete   %al$/;"	l
c010fcee	obj/kernel.asm	/^c010fcee:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010fcf1	obj/kernel.asm	/^c010fcf1:	85 c0                	test   %eax,%eax$/;"	l
c010fcf3	obj/kernel.asm	/^c010fcf3:	0f 85 f1 00 00 00    	jne    c010fdea <vfs_unmount_all+0x115>$/;"	l
c010fcf9	obj/kernel.asm	/^c010fcf9:	e8 90 f8 ff ff       	call   c010f58e <lock_vdev_list>$/;"	l
c010fcfe	obj/kernel.asm	/^c010fcfe:	c7 45 f0 c8 2f 15 c0 	movl   $0xc0152fc8,-0x10(%ebp)$/;"	l
c010fd05	obj/kernel.asm	/^c010fd05:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fd08	obj/kernel.asm	/^c010fd08:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fd0b	obj/kernel.asm	/^c010fd0b:	e9 ba 00 00 00       	jmp    c010fdca <vfs_unmount_all+0xf5>$/;"	l
c010fd10	obj/kernel.asm	/^c010fd10:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fd13	obj/kernel.asm	/^c010fd13:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010fd16	obj/kernel.asm	/^c010fd16:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fd19	obj/kernel.asm	/^c010fd19:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fd1c	obj/kernel.asm	/^c010fd1c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010fd1f	obj/kernel.asm	/^c010fd1f:	85 c0                	test   %eax,%eax$/;"	l
c010fd21	obj/kernel.asm	/^c010fd21:	0f 84 a3 00 00 00    	je     c010fdca <vfs_unmount_all+0xf5>$/;"	l
c010fd27	obj/kernel.asm	/^c010fd27:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fd2a	obj/kernel.asm	/^c010fd2a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fd2d	obj/kernel.asm	/^c010fd2d:	85 c0                	test   %eax,%eax$/;"	l
c010fd2f	obj/kernel.asm	/^c010fd2f:	0f 84 95 00 00 00    	je     c010fdca <vfs_unmount_all+0xf5>$/;"	l
c010fd35	obj/kernel.asm	/^c010fd35:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fd38	obj/kernel.asm	/^c010fd38:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fd3b	obj/kernel.asm	/^c010fd3b:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010fd3e	obj/kernel.asm	/^c010fd3e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010fd41	obj/kernel.asm	/^c010fd41:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010fd44	obj/kernel.asm	/^c010fd44:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010fd47	obj/kernel.asm	/^c010fd47:	ff d0                	call   *%eax$/;"	l
c010fd49	obj/kernel.asm	/^c010fd49:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010fd4c	obj/kernel.asm	/^c010fd4c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010fd50	obj/kernel.asm	/^c010fd50:	74 1e                	je     c010fd70 <vfs_unmount_all+0x9b>$/;"	l
c010fd52	obj/kernel.asm	/^c010fd52:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fd55	obj/kernel.asm	/^c010fd55:	8b 00                	mov    (%eax),%eax$/;"	l
c010fd57	obj/kernel.asm	/^c010fd57:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010fd5a	obj/kernel.asm	/^c010fd5a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010fd5e	obj/kernel.asm	/^c010fd5e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fd62	obj/kernel.asm	/^c010fd62:	c7 04 24 a8 8a 11 c0 	movl   $0xc0118aa8,(%esp)$/;"	l
c010fd69	obj/kernel.asm	/^c010fd69:	e8 f7 05 ff ff       	call   c0100365 <cprintf>$/;"	l
c010fd6e	obj/kernel.asm	/^c010fd6e:	eb 5a                	jmp    c010fdca <vfs_unmount_all+0xf5>$/;"	l
c010fd70	obj/kernel.asm	/^c010fd70:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fd73	obj/kernel.asm	/^c010fd73:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fd76	obj/kernel.asm	/^c010fd76:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010fd79	obj/kernel.asm	/^c010fd79:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010fd7c	obj/kernel.asm	/^c010fd7c:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010fd7f	obj/kernel.asm	/^c010fd7f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010fd82	obj/kernel.asm	/^c010fd82:	ff d0                	call   *%eax$/;"	l
c010fd84	obj/kernel.asm	/^c010fd84:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010fd87	obj/kernel.asm	/^c010fd87:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010fd8b	obj/kernel.asm	/^c010fd8b:	74 1e                	je     c010fdab <vfs_unmount_all+0xd6>$/;"	l
c010fd8d	obj/kernel.asm	/^c010fd8d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fd90	obj/kernel.asm	/^c010fd90:	8b 00                	mov    (%eax),%eax$/;"	l
c010fd92	obj/kernel.asm	/^c010fd92:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010fd95	obj/kernel.asm	/^c010fd95:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010fd99	obj/kernel.asm	/^c010fd99:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fd9d	obj/kernel.asm	/^c010fd9d:	c7 04 24 d0 8a 11 c0 	movl   $0xc0118ad0,(%esp)$/;"	l
c010fda4	obj/kernel.asm	/^c010fda4:	e8 bc 05 ff ff       	call   c0100365 <cprintf>$/;"	l
c010fda9	obj/kernel.asm	/^c010fda9:	eb 1f                	jmp    c010fdca <vfs_unmount_all+0xf5>$/;"	l
c010fdab	obj/kernel.asm	/^c010fdab:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fdae	obj/kernel.asm	/^c010fdae:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010fdb5	obj/kernel.asm	/^c010fdb5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fdb8	obj/kernel.asm	/^c010fdb8:	8b 00                	mov    (%eax),%eax$/;"	l
c010fdba	obj/kernel.asm	/^c010fdba:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fdbe	obj/kernel.asm	/^c010fdbe:	c7 04 24 94 8a 11 c0 	movl   $0xc0118a94,(%esp)$/;"	l
c010fdc5	obj/kernel.asm	/^c010fdc5:	e8 9b 05 ff ff       	call   c0100365 <cprintf>$/;"	l
c010fdca	obj/kernel.asm	/^c010fdca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fdcd	obj/kernel.asm	/^c010fdcd:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010fdd0	obj/kernel.asm	/^c010fdd0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010fdd3	obj/kernel.asm	/^c010fdd3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fdd6	obj/kernel.asm	/^c010fdd6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fdd9	obj/kernel.asm	/^c010fdd9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fddc	obj/kernel.asm	/^c010fddc:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010fddf	obj/kernel.asm	/^c010fddf:	0f 85 2b ff ff ff    	jne    c010fd10 <vfs_unmount_all+0x3b>$/;"	l
c010fde5	obj/kernel.asm	/^c010fde5:	e8 b8 f7 ff ff       	call   c010f5a2 <unlock_vdev_list>$/;"	l
c010fdea	obj/kernel.asm	/^c010fdea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010fdef	obj/kernel.asm	/^c010fdef:	c9                   	leave  $/;"	l
c010fdf0	obj/kernel.asm	/^c010fdf0:	c3                   	ret    $/;"	l
c010fdf1	obj/kernel.asm	/^c010fdf1 <vfs_open>:$/;"	l
c010fdf1	obj/kernel.asm	/^c010fdf1:	55                   	push   %ebp$/;"	l
c010fdf2	obj/kernel.asm	/^c010fdf2:	89 e5                	mov    %esp,%ebp$/;"	l
c010fdf4	obj/kernel.asm	/^c010fdf4:	53                   	push   %ebx$/;"	l
c010fdf5	obj/kernel.asm	/^c010fdf5:	83 ec 44             	sub    $0x44,%esp$/;"	l
c010fdf8	obj/kernel.asm	/^c010fdf8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010fdff	obj/kernel.asm	/^c010fdff:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fe02	obj/kernel.asm	/^c010fe02:	83 e0 03             	and    $0x3,%eax$/;"	l
c010fe05	obj/kernel.asm	/^c010fe05:	85 c0                	test   %eax,%eax$/;"	l
c010fe07	obj/kernel.asm	/^c010fe07:	74 18                	je     c010fe21 <vfs_open+0x30>$/;"	l
c010fe09	obj/kernel.asm	/^c010fe09:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010fe0c	obj/kernel.asm	/^c010fe0c:	77 09                	ja     c010fe17 <vfs_open+0x26>$/;"	l
c010fe0e	obj/kernel.asm	/^c010fe0e:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010fe15	obj/kernel.asm	/^c010fe15:	eb 0b                	jmp    c010fe22 <vfs_open+0x31>$/;"	l
c010fe17	obj/kernel.asm	/^c010fe17:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010fe1c	obj/kernel.asm	/^c010fe1c:	e9 ba 02 00 00       	jmp    c01100db <vfs_open+0x2ea>$/;"	l
c010fe21	obj/kernel.asm	/^c010fe21:	90                   	nop$/;"	l
c010fe22	obj/kernel.asm	/^c010fe22:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fe25	obj/kernel.asm	/^c010fe25:	83 e0 10             	and    $0x10,%eax$/;"	l
c010fe28	obj/kernel.asm	/^c010fe28:	85 c0                	test   %eax,%eax$/;"	l
c010fe2a	obj/kernel.asm	/^c010fe2a:	74 10                	je     c010fe3c <vfs_open+0x4b>$/;"	l
c010fe2c	obj/kernel.asm	/^c010fe2c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fe30	obj/kernel.asm	/^c010fe30:	75 0a                	jne    c010fe3c <vfs_open+0x4b>$/;"	l
c010fe32	obj/kernel.asm	/^c010fe32:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010fe37	obj/kernel.asm	/^c010fe37:	e9 9f 02 00 00       	jmp    c01100db <vfs_open+0x2ea>$/;"	l
c010fe3c	obj/kernel.asm	/^c010fe3c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fe3f	obj/kernel.asm	/^c010fe3f:	83 e0 08             	and    $0x8,%eax$/;"	l
c010fe42	obj/kernel.asm	/^c010fe42:	85 c0                	test   %eax,%eax$/;"	l
c010fe44	obj/kernel.asm	/^c010fe44:	0f 95 c0             	setne  %al$/;"	l
c010fe47	obj/kernel.asm	/^c010fe47:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010fe4a	obj/kernel.asm	/^c010fe4a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fe4d	obj/kernel.asm	/^c010fe4d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fe50	obj/kernel.asm	/^c010fe50:	83 e0 04             	and    $0x4,%eax$/;"	l
c010fe53	obj/kernel.asm	/^c010fe53:	85 c0                	test   %eax,%eax$/;"	l
c010fe55	obj/kernel.asm	/^c010fe55:	0f 95 c0             	setne  %al$/;"	l
c010fe58	obj/kernel.asm	/^c010fe58:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010fe5b	obj/kernel.asm	/^c010fe5b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fe5e	obj/kernel.asm	/^c010fe5e:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010fe61	obj/kernel.asm	/^c010fe61:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fe65	obj/kernel.asm	/^c010fe65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fe68	obj/kernel.asm	/^c010fe68:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fe6b	obj/kernel.asm	/^c010fe6b:	e8 7a 04 00 00       	call   c01102ea <vfs_lookup>$/;"	l
c010fe70	obj/kernel.asm	/^c010fe70:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010fe73	obj/kernel.asm	/^c010fe73:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010fe77	obj/kernel.asm	/^c010fe77:	0f 84 cc 00 00 00    	je     c010ff49 <vfs_open+0x158>$/;"	l
c010fe7d	obj/kernel.asm	/^c010fe7d:	83 7d e8 f0          	cmpl   $0xfffffff0,-0x18(%ebp)$/;"	l
c010fe81	obj/kernel.asm	/^c010fe81:	0f 85 ba 00 00 00    	jne    c010ff41 <vfs_open+0x150>$/;"	l
c010fe87	obj/kernel.asm	/^c010fe87:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010fe8b	obj/kernel.asm	/^c010fe8b:	0f 84 b0 00 00 00    	je     c010ff41 <vfs_open+0x150>$/;"	l
c010fe91	obj/kernel.asm	/^c010fe91:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010fe94	obj/kernel.asm	/^c010fe94:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010fe98	obj/kernel.asm	/^c010fe98:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c010fe9b	obj/kernel.asm	/^c010fe9b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fe9f	obj/kernel.asm	/^c010fe9f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fea2	obj/kernel.asm	/^c010fea2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fea5	obj/kernel.asm	/^c010fea5:	e8 20 05 00 00       	call   c01103ca <vfs_lookup_parent>$/;"	l
c010feaa	obj/kernel.asm	/^c010feaa:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010fead	obj/kernel.asm	/^c010fead:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010feb1	obj/kernel.asm	/^c010feb1:	74 08                	je     c010febb <vfs_open+0xca>$/;"	l
c010feb3	obj/kernel.asm	/^c010feb3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010feb6	obj/kernel.asm	/^c010feb6:	e9 20 02 00 00       	jmp    c01100db <vfs_open+0x2ea>$/;"	l
c010febb	obj/kernel.asm	/^c010febb:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010febe	obj/kernel.asm	/^c010febe:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010fec1	obj/kernel.asm	/^c010fec1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010fec5	obj/kernel.asm	/^c010fec5:	74 17                	je     c010fede <vfs_open+0xed>$/;"	l
c010fec7	obj/kernel.asm	/^c010fec7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010feca	obj/kernel.asm	/^c010feca:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010fecd	obj/kernel.asm	/^c010fecd:	85 c0                	test   %eax,%eax$/;"	l
c010fecf	obj/kernel.asm	/^c010fecf:	74 0d                	je     c010fede <vfs_open+0xed>$/;"	l
c010fed1	obj/kernel.asm	/^c010fed1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010fed4	obj/kernel.asm	/^c010fed4:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010fed7	obj/kernel.asm	/^c010fed7:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010feda	obj/kernel.asm	/^c010feda:	85 c0                	test   %eax,%eax$/;"	l
c010fedc	obj/kernel.asm	/^c010fedc:	75 24                	jne    c010ff02 <vfs_open+0x111>$/;"	l
c010fede	obj/kernel.asm	/^c010fede:	c7 44 24 0c fc 8a 11 	movl   $0xc0118afc,0xc(%esp)$/;"	l
c010fee5	obj/kernel.asm	/^c010fee5:	c0 $/;"	l
c010fee6	obj/kernel.asm	/^c010fee6:	c7 44 24 08 4b 8b 11 	movl   $0xc0118b4b,0x8(%esp)$/;"	l
c010feed	obj/kernel.asm	/^c010feed:	c0 $/;"	l
c010feee	obj/kernel.asm	/^c010feee:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
c010fef5	obj/kernel.asm	/^c010fef5:	00 $/;"	l
c010fef6	obj/kernel.asm	/^c010fef6:	c7 04 24 60 8b 11 c0 	movl   $0xc0118b60,(%esp)$/;"	l
c010fefd	obj/kernel.asm	/^c010fefd:	e8 c6 0f ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ff02	obj/kernel.asm	/^c010ff02:	c7 44 24 04 76 8b 11 	movl   $0xc0118b76,0x4(%esp)$/;"	l
c010ff09	obj/kernel.asm	/^c010ff09:	c0 $/;"	l
c010ff0a	obj/kernel.asm	/^c010ff0a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ff0d	obj/kernel.asm	/^c010ff0d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ff10	obj/kernel.asm	/^c010ff10:	e8 03 f4 ff ff       	call   c010f318 <inode_check>$/;"	l
c010ff15	obj/kernel.asm	/^c010ff15:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ff18	obj/kernel.asm	/^c010ff18:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ff1b	obj/kernel.asm	/^c010ff1b:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010ff1e	obj/kernel.asm	/^c010ff1e:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
c010ff21	obj/kernel.asm	/^c010ff21:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010ff24	obj/kernel.asm	/^c010ff24:	8d 5d d8             	lea    -0x28(%ebp),%ebx$/;"	l
c010ff27	obj/kernel.asm	/^c010ff27:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c010ff2b	obj/kernel.asm	/^c010ff2b:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c010ff2e	obj/kernel.asm	/^c010ff2e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
c010ff32	obj/kernel.asm	/^c010ff32:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010ff36	obj/kernel.asm	/^c010ff36:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ff39	obj/kernel.asm	/^c010ff39:	ff d0                	call   *%eax$/;"	l
c010ff3b	obj/kernel.asm	/^c010ff3b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ff3e	obj/kernel.asm	/^c010ff3e:	90                   	nop$/;"	l
c010ff3f	obj/kernel.asm	/^c010ff3f:	eb 1e                	jmp    c010ff5f <vfs_open+0x16e>$/;"	l
c010ff41	obj/kernel.asm	/^c010ff41:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ff44	obj/kernel.asm	/^c010ff44:	e9 92 01 00 00       	jmp    c01100db <vfs_open+0x2ea>$/;"	l
c010ff49	obj/kernel.asm	/^c010ff49:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ff4d	obj/kernel.asm	/^c010ff4d:	74 10                	je     c010ff5f <vfs_open+0x16e>$/;"	l
c010ff4f	obj/kernel.asm	/^c010ff4f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ff53	obj/kernel.asm	/^c010ff53:	74 0a                	je     c010ff5f <vfs_open+0x16e>$/;"	l
c010ff55	obj/kernel.asm	/^c010ff55:	b8 e9 ff ff ff       	mov    $0xffffffe9,%eax$/;"	l
c010ff5a	obj/kernel.asm	/^c010ff5a:	e9 7c 01 00 00       	jmp    c01100db <vfs_open+0x2ea>$/;"	l
c010ff5f	obj/kernel.asm	/^c010ff5f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010ff62	obj/kernel.asm	/^c010ff62:	85 c0                	test   %eax,%eax$/;"	l
c010ff64	obj/kernel.asm	/^c010ff64:	75 24                	jne    c010ff8a <vfs_open+0x199>$/;"	l
c010ff66	obj/kernel.asm	/^c010ff66:	c7 44 24 0c 7d 8b 11 	movl   $0xc0118b7d,0xc(%esp)$/;"	l
c010ff6d	obj/kernel.asm	/^c010ff6d:	c0 $/;"	l
c010ff6e	obj/kernel.asm	/^c010ff6e:	c7 44 24 08 4b 8b 11 	movl   $0xc0118b4b,0x8(%esp)$/;"	l
c010ff75	obj/kernel.asm	/^c010ff75:	c0 $/;"	l
c010ff76	obj/kernel.asm	/^c010ff76:	c7 44 24 04 31 00 00 	movl   $0x31,0x4(%esp)$/;"	l
c010ff7d	obj/kernel.asm	/^c010ff7d:	00 $/;"	l
c010ff7e	obj/kernel.asm	/^c010ff7e:	c7 04 24 60 8b 11 c0 	movl   $0xc0118b60,(%esp)$/;"	l
c010ff85	obj/kernel.asm	/^c010ff85:	e8 3e 0f ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ff8a	obj/kernel.asm	/^c010ff8a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010ff8d	obj/kernel.asm	/^c010ff8d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010ff90	obj/kernel.asm	/^c010ff90:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c010ff94	obj/kernel.asm	/^c010ff94:	74 17                	je     c010ffad <vfs_open+0x1bc>$/;"	l
c010ff96	obj/kernel.asm	/^c010ff96:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ff99	obj/kernel.asm	/^c010ff99:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ff9c	obj/kernel.asm	/^c010ff9c:	85 c0                	test   %eax,%eax$/;"	l
c010ff9e	obj/kernel.asm	/^c010ff9e:	74 0d                	je     c010ffad <vfs_open+0x1bc>$/;"	l
c010ffa0	obj/kernel.asm	/^c010ffa0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ffa3	obj/kernel.asm	/^c010ffa3:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ffa6	obj/kernel.asm	/^c010ffa6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ffa9	obj/kernel.asm	/^c010ffa9:	85 c0                	test   %eax,%eax$/;"	l
c010ffab	obj/kernel.asm	/^c010ffab:	75 24                	jne    c010ffd1 <vfs_open+0x1e0>$/;"	l
c010ffad	obj/kernel.asm	/^c010ffad:	c7 44 24 0c 8c 8b 11 	movl   $0xc0118b8c,0xc(%esp)$/;"	l
c010ffb4	obj/kernel.asm	/^c010ffb4:	c0 $/;"	l
c010ffb5	obj/kernel.asm	/^c010ffb5:	c7 44 24 08 4b 8b 11 	movl   $0xc0118b4b,0x8(%esp)$/;"	l
c010ffbc	obj/kernel.asm	/^c010ffbc:	c0 $/;"	l
c010ffbd	obj/kernel.asm	/^c010ffbd:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
c010ffc4	obj/kernel.asm	/^c010ffc4:	00 $/;"	l
c010ffc5	obj/kernel.asm	/^c010ffc5:	c7 04 24 60 8b 11 c0 	movl   $0xc0118b60,(%esp)$/;"	l
c010ffcc	obj/kernel.asm	/^c010ffcc:	e8 f7 0e ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ffd1	obj/kernel.asm	/^c010ffd1:	c7 44 24 04 d9 8b 11 	movl   $0xc0118bd9,0x4(%esp)$/;"	l
c010ffd8	obj/kernel.asm	/^c010ffd8:	c0 $/;"	l
c010ffd9	obj/kernel.asm	/^c010ffd9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ffdc	obj/kernel.asm	/^c010ffdc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ffdf	obj/kernel.asm	/^c010ffdf:	e8 34 f3 ff ff       	call   c010f318 <inode_check>$/;"	l
c010ffe4	obj/kernel.asm	/^c010ffe4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ffe7	obj/kernel.asm	/^c010ffe7:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ffea	obj/kernel.asm	/^c010ffea:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ffed	obj/kernel.asm	/^c010ffed:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010fff0	obj/kernel.asm	/^c010fff0:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c010fff3	obj/kernel.asm	/^c010fff3:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010fff7	obj/kernel.asm	/^c010fff7:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010fffa	obj/kernel.asm	/^c010fffa:	ff d0                	call   *%eax$/;"	l
c010fffc	obj/kernel.asm	/^c010fffc:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ffff	obj/kernel.asm	/^c010ffff:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0110003	obj/kernel.asm	/^c0110003:	74 13                	je     c0110018 <vfs_open+0x227>$/;"	l
c0110005	obj/kernel.asm	/^c0110005:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0110008	obj/kernel.asm	/^c0110008:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011000b	obj/kernel.asm	/^c011000b:	e8 1a f1 ff ff       	call   c010f12a <inode_ref_dec>$/;"	l
c0110010	obj/kernel.asm	/^c0110010:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110013	obj/kernel.asm	/^c0110013:	e9 c3 00 00 00       	jmp    c01100db <vfs_open+0x2ea>$/;"	l
c0110018	obj/kernel.asm	/^c0110018:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011001b	obj/kernel.asm	/^c011001b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011001e	obj/kernel.asm	/^c011001e:	e8 f4 f1 ff ff       	call   c010f217 <inode_open_inc>$/;"	l
c0110023	obj/kernel.asm	/^c0110023:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110026	obj/kernel.asm	/^c0110026:	83 e0 10             	and    $0x10,%eax$/;"	l
c0110029	obj/kernel.asm	/^c0110029:	85 c0                	test   %eax,%eax$/;"	l
c011002b	obj/kernel.asm	/^c011002b:	75 0a                	jne    c0110037 <vfs_open+0x246>$/;"	l
c011002d	obj/kernel.asm	/^c011002d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110031	obj/kernel.asm	/^c0110031:	0f 84 97 00 00 00    	je     c01100ce <vfs_open+0x2dd>$/;"	l
c0110037	obj/kernel.asm	/^c0110037:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011003a	obj/kernel.asm	/^c011003a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c011003d	obj/kernel.asm	/^c011003d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0110041	obj/kernel.asm	/^c0110041:	74 17                	je     c011005a <vfs_open+0x269>$/;"	l
c0110043	obj/kernel.asm	/^c0110043:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0110046	obj/kernel.asm	/^c0110046:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110049	obj/kernel.asm	/^c0110049:	85 c0                	test   %eax,%eax$/;"	l
c011004b	obj/kernel.asm	/^c011004b:	74 0d                	je     c011005a <vfs_open+0x269>$/;"	l
c011004d	obj/kernel.asm	/^c011004d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0110050	obj/kernel.asm	/^c0110050:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110053	obj/kernel.asm	/^c0110053:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0110056	obj/kernel.asm	/^c0110056:	85 c0                	test   %eax,%eax$/;"	l
c0110058	obj/kernel.asm	/^c0110058:	75 24                	jne    c011007e <vfs_open+0x28d>$/;"	l
c011005a	obj/kernel.asm	/^c011005a:	c7 44 24 0c e0 8b 11 	movl   $0xc0118be0,0xc(%esp)$/;"	l
c0110061	obj/kernel.asm	/^c0110061:	c0 $/;"	l
c0110062	obj/kernel.asm	/^c0110062:	c7 44 24 08 4b 8b 11 	movl   $0xc0118b4b,0x8(%esp)$/;"	l
c0110069	obj/kernel.asm	/^c0110069:	c0 $/;"	l
c011006a	obj/kernel.asm	/^c011006a:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
c0110071	obj/kernel.asm	/^c0110071:	00 $/;"	l
c0110072	obj/kernel.asm	/^c0110072:	c7 04 24 60 8b 11 c0 	movl   $0xc0118b60,(%esp)$/;"	l
c0110079	obj/kernel.asm	/^c0110079:	e8 4a 0e ff ff       	call   c0100ec8 <__panic>$/;"	l
c011007e	obj/kernel.asm	/^c011007e:	c7 44 24 04 31 8c 11 	movl   $0xc0118c31,0x4(%esp)$/;"	l
c0110085	obj/kernel.asm	/^c0110085:	c0 $/;"	l
c0110086	obj/kernel.asm	/^c0110086:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0110089	obj/kernel.asm	/^c0110089:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011008c	obj/kernel.asm	/^c011008c:	e8 87 f2 ff ff       	call   c010f318 <inode_check>$/;"	l
c0110091	obj/kernel.asm	/^c0110091:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0110094	obj/kernel.asm	/^c0110094:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110097	obj/kernel.asm	/^c0110097:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c011009a	obj/kernel.asm	/^c011009a:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c011009d	obj/kernel.asm	/^c011009d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01100a4	obj/kernel.asm	/^c01100a4:	00 $/;"	l
c01100a5	obj/kernel.asm	/^c01100a5:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01100a8	obj/kernel.asm	/^c01100a8:	ff d0                	call   *%eax$/;"	l
c01100aa	obj/kernel.asm	/^c01100aa:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01100ad	obj/kernel.asm	/^c01100ad:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01100b1	obj/kernel.asm	/^c01100b1:	74 1b                	je     c01100ce <vfs_open+0x2dd>$/;"	l
c01100b3	obj/kernel.asm	/^c01100b3:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01100b6	obj/kernel.asm	/^c01100b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01100b9	obj/kernel.asm	/^c01100b9:	e8 73 f1 ff ff       	call   c010f231 <inode_open_dec>$/;"	l
c01100be	obj/kernel.asm	/^c01100be:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01100c1	obj/kernel.asm	/^c01100c1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01100c4	obj/kernel.asm	/^c01100c4:	e8 61 f0 ff ff       	call   c010f12a <inode_ref_dec>$/;"	l
c01100c9	obj/kernel.asm	/^c01100c9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01100cc	obj/kernel.asm	/^c01100cc:	eb 0d                	jmp    c01100db <vfs_open+0x2ea>$/;"	l
c01100ce	obj/kernel.asm	/^c01100ce:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01100d1	obj/kernel.asm	/^c01100d1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01100d4	obj/kernel.asm	/^c01100d4:	89 10                	mov    %edx,(%eax)$/;"	l
c01100d6	obj/kernel.asm	/^c01100d6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01100db	obj/kernel.asm	/^c01100db:	83 c4 44             	add    $0x44,%esp$/;"	l
c01100de	obj/kernel.asm	/^c01100de:	5b                   	pop    %ebx$/;"	l
c01100df	obj/kernel.asm	/^c01100df:	5d                   	pop    %ebp$/;"	l
c01100e0	obj/kernel.asm	/^c01100e0:	c3                   	ret    $/;"	l
c01100e1	obj/kernel.asm	/^c01100e1 <vfs_close>:$/;"	l
c01100e1	obj/kernel.asm	/^c01100e1:	55                   	push   %ebp$/;"	l
c01100e2	obj/kernel.asm	/^c01100e2:	89 e5                	mov    %esp,%ebp$/;"	l
c01100e4	obj/kernel.asm	/^c01100e4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01100e7	obj/kernel.asm	/^c01100e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01100ea	obj/kernel.asm	/^c01100ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01100ed	obj/kernel.asm	/^c01100ed:	e8 3f f1 ff ff       	call   c010f231 <inode_open_dec>$/;"	l
c01100f2	obj/kernel.asm	/^c01100f2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01100f5	obj/kernel.asm	/^c01100f5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01100f8	obj/kernel.asm	/^c01100f8:	e8 2d f0 ff ff       	call   c010f12a <inode_ref_dec>$/;"	l
c01100fd	obj/kernel.asm	/^c01100fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110102	obj/kernel.asm	/^c0110102:	c9                   	leave  $/;"	l
c0110103	obj/kernel.asm	/^c0110103:	c3                   	ret    $/;"	l
c0110104	obj/kernel.asm	/^c0110104 <vfs_unlink>:$/;"	l
c0110104	obj/kernel.asm	/^c0110104:	55                   	push   %ebp$/;"	l
c0110105	obj/kernel.asm	/^c0110105:	89 e5                	mov    %esp,%ebp$/;"	l
c0110107	obj/kernel.asm	/^c0110107:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c011010c	obj/kernel.asm	/^c011010c:	5d                   	pop    %ebp$/;"	l
c011010d	obj/kernel.asm	/^c011010d:	c3                   	ret    $/;"	l
c011010e	obj/kernel.asm	/^c011010e <vfs_rename>:$/;"	l
c011010e	obj/kernel.asm	/^c011010e:	55                   	push   %ebp$/;"	l
c011010f	obj/kernel.asm	/^c011010f:	89 e5                	mov    %esp,%ebp$/;"	l
c0110111	obj/kernel.asm	/^c0110111:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c0110116	obj/kernel.asm	/^c0110116:	5d                   	pop    %ebp$/;"	l
c0110117	obj/kernel.asm	/^c0110117:	c3                   	ret    $/;"	l
c0110118	obj/kernel.asm	/^c0110118 <vfs_link>:$/;"	l
c0110118	obj/kernel.asm	/^c0110118:	55                   	push   %ebp$/;"	l
c0110119	obj/kernel.asm	/^c0110119:	89 e5                	mov    %esp,%ebp$/;"	l
c011011b	obj/kernel.asm	/^c011011b:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c0110120	obj/kernel.asm	/^c0110120:	5d                   	pop    %ebp$/;"	l
c0110121	obj/kernel.asm	/^c0110121:	c3                   	ret    $/;"	l
c0110122	obj/kernel.asm	/^c0110122 <vfs_symlink>:$/;"	l
c0110122	obj/kernel.asm	/^c0110122:	55                   	push   %ebp$/;"	l
c0110123	obj/kernel.asm	/^c0110123:	89 e5                	mov    %esp,%ebp$/;"	l
c0110125	obj/kernel.asm	/^c0110125:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c011012a	obj/kernel.asm	/^c011012a:	5d                   	pop    %ebp$/;"	l
c011012b	obj/kernel.asm	/^c011012b:	c3                   	ret    $/;"	l
c011012c	obj/kernel.asm	/^c011012c <vfs_readlink>:$/;"	l
c011012c	obj/kernel.asm	/^c011012c:	55                   	push   %ebp$/;"	l
c011012d	obj/kernel.asm	/^c011012d:	89 e5                	mov    %esp,%ebp$/;"	l
c011012f	obj/kernel.asm	/^c011012f:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c0110134	obj/kernel.asm	/^c0110134:	5d                   	pop    %ebp$/;"	l
c0110135	obj/kernel.asm	/^c0110135:	c3                   	ret    $/;"	l
c0110136	obj/kernel.asm	/^c0110136 <vfs_mkdir>:$/;"	l
c0110136	obj/kernel.asm	/^c0110136:	55                   	push   %ebp$/;"	l
c0110137	obj/kernel.asm	/^c0110137:	89 e5                	mov    %esp,%ebp$/;"	l
c0110139	obj/kernel.asm	/^c0110139:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c011013e	obj/kernel.asm	/^c011013e:	5d                   	pop    %ebp$/;"	l
c011013f	obj/kernel.asm	/^c011013f:	c3                   	ret    $/;"	l
c0110140	obj/kernel.asm	/^c0110140 <get_device>:$/;"	l
c0110140	obj/kernel.asm	/^c0110140:	55                   	push   %ebp$/;"	l
c0110141	obj/kernel.asm	/^c0110141:	89 e5                	mov    %esp,%ebp$/;"	l
c0110143	obj/kernel.asm	/^c0110143:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0110146	obj/kernel.asm	/^c0110146:	c7 45 f0 ff ff ff ff 	movl   $0xffffffff,-0x10(%ebp)$/;"	l
c011014d	obj/kernel.asm	/^c011014d:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%ebp)$/;"	l
c0110154	obj/kernel.asm	/^c0110154:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c011015b	obj/kernel.asm	/^c011015b:	eb 32                	jmp    c011018f <get_device+0x4f>$/;"	l
c011015d	obj/kernel.asm	/^c011015d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0110160	obj/kernel.asm	/^c0110160:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110163	obj/kernel.asm	/^c0110163:	01 d0                	add    %edx,%eax$/;"	l
c0110165	obj/kernel.asm	/^c0110165:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110168	obj/kernel.asm	/^c0110168:	3c 3a                	cmp    $0x3a,%al$/;"	l
c011016a	obj/kernel.asm	/^c011016a:	75 08                	jne    c0110174 <get_device+0x34>$/;"	l
c011016c	obj/kernel.asm	/^c011016c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011016f	obj/kernel.asm	/^c011016f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110172	obj/kernel.asm	/^c0110172:	eb 2a                	jmp    c011019e <get_device+0x5e>$/;"	l
c0110174	obj/kernel.asm	/^c0110174:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0110177	obj/kernel.asm	/^c0110177:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011017a	obj/kernel.asm	/^c011017a:	01 d0                	add    %edx,%eax$/;"	l
c011017c	obj/kernel.asm	/^c011017c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011017f	obj/kernel.asm	/^c011017f:	3c 2f                	cmp    $0x2f,%al$/;"	l
c0110181	obj/kernel.asm	/^c0110181:	75 08                	jne    c011018b <get_device+0x4b>$/;"	l
c0110183	obj/kernel.asm	/^c0110183:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110186	obj/kernel.asm	/^c0110186:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110189	obj/kernel.asm	/^c0110189:	eb 13                	jmp    c011019e <get_device+0x5e>$/;"	l
c011018b	obj/kernel.asm	/^c011018b:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c011018f	obj/kernel.asm	/^c011018f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0110192	obj/kernel.asm	/^c0110192:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110195	obj/kernel.asm	/^c0110195:	01 d0                	add    %edx,%eax$/;"	l
c0110197	obj/kernel.asm	/^c0110197:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011019a	obj/kernel.asm	/^c011019a:	84 c0                	test   %al,%al$/;"	l
c011019c	obj/kernel.asm	/^c011019c:	75 bf                	jne    c011015d <get_device+0x1d>$/;"	l
c011019e	obj/kernel.asm	/^c011019e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01101a2	obj/kernel.asm	/^c01101a2:	79 1e                	jns    c01101c2 <get_device+0x82>$/;"	l
c01101a4	obj/kernel.asm	/^c01101a4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01101a8	obj/kernel.asm	/^c01101a8:	74 18                	je     c01101c2 <get_device+0x82>$/;"	l
c01101aa	obj/kernel.asm	/^c01101aa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01101ad	obj/kernel.asm	/^c01101ad:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01101b0	obj/kernel.asm	/^c01101b0:	89 10                	mov    %edx,(%eax)$/;"	l
c01101b2	obj/kernel.asm	/^c01101b2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01101b5	obj/kernel.asm	/^c01101b5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01101b8	obj/kernel.asm	/^c01101b8:	e8 ae 02 00 00       	call   c011046b <vfs_get_curdir>$/;"	l
c01101bd	obj/kernel.asm	/^c01101bd:	e9 26 01 00 00       	jmp    c01102e8 <get_device+0x1a8>$/;"	l
c01101c2	obj/kernel.asm	/^c01101c2:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01101c6	obj/kernel.asm	/^c01101c6:	7e 42                	jle    c011020a <get_device+0xca>$/;"	l
c01101c8	obj/kernel.asm	/^c01101c8:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01101cb	obj/kernel.asm	/^c01101cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01101ce	obj/kernel.asm	/^c01101ce:	01 d0                	add    %edx,%eax$/;"	l
c01101d0	obj/kernel.asm	/^c01101d0:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01101d3	obj/kernel.asm	/^c01101d3:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c01101d7	obj/kernel.asm	/^c01101d7:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01101da	obj/kernel.asm	/^c01101da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01101dd	obj/kernel.asm	/^c01101dd:	01 d0                	add    %edx,%eax$/;"	l
c01101df	obj/kernel.asm	/^c01101df:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01101e2	obj/kernel.asm	/^c01101e2:	3c 2f                	cmp    $0x2f,%al$/;"	l
c01101e4	obj/kernel.asm	/^c01101e4:	74 ed                	je     c01101d3 <get_device+0x93>$/;"	l
c01101e6	obj/kernel.asm	/^c01101e6:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01101e9	obj/kernel.asm	/^c01101e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01101ec	obj/kernel.asm	/^c01101ec:	01 c2                	add    %eax,%edx$/;"	l
c01101ee	obj/kernel.asm	/^c01101ee:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01101f1	obj/kernel.asm	/^c01101f1:	89 10                	mov    %edx,(%eax)$/;"	l
c01101f3	obj/kernel.asm	/^c01101f3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01101f6	obj/kernel.asm	/^c01101f6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01101fa	obj/kernel.asm	/^c01101fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01101fd	obj/kernel.asm	/^c01101fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110200	obj/kernel.asm	/^c0110200:	e8 61 f4 ff ff       	call   c010f666 <vfs_get_root>$/;"	l
c0110205	obj/kernel.asm	/^c0110205:	e9 de 00 00 00       	jmp    c01102e8 <get_device+0x1a8>$/;"	l
c011020a	obj/kernel.asm	/^c011020a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011020d	obj/kernel.asm	/^c011020d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110210	obj/kernel.asm	/^c0110210:	3c 2f                	cmp    $0x2f,%al$/;"	l
c0110212	obj/kernel.asm	/^c0110212:	75 20                	jne    c0110234 <get_device+0xf4>$/;"	l
c0110214	obj/kernel.asm	/^c0110214:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0110217	obj/kernel.asm	/^c0110217:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011021a	obj/kernel.asm	/^c011021a:	e8 18 f3 ff ff       	call   c010f537 <vfs_get_bootfs>$/;"	l
c011021f	obj/kernel.asm	/^c011021f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110222	obj/kernel.asm	/^c0110222:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0110226	obj/kernel.asm	/^c0110226:	0f 84 a1 00 00 00    	je     c01102cd <get_device+0x18d>$/;"	l
c011022c	obj/kernel.asm	/^c011022c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011022f	obj/kernel.asm	/^c011022f:	e9 b4 00 00 00       	jmp    c01102e8 <get_device+0x1a8>$/;"	l
c0110234	obj/kernel.asm	/^c0110234:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110237	obj/kernel.asm	/^c0110237:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011023a	obj/kernel.asm	/^c011023a:	3c 3a                	cmp    $0x3a,%al$/;"	l
c011023c	obj/kernel.asm	/^c011023c:	74 24                	je     c0110262 <get_device+0x122>$/;"	l
c011023e	obj/kernel.asm	/^c011023e:	c7 44 24 0c 3c 8c 11 	movl   $0xc0118c3c,0xc(%esp)$/;"	l
c0110245	obj/kernel.asm	/^c0110245:	c0 $/;"	l
c0110246	obj/kernel.asm	/^c0110246:	c7 44 24 08 49 8c 11 	movl   $0xc0118c49,0x8(%esp)$/;"	l
c011024d	obj/kernel.asm	/^c011024d:	c0 $/;"	l
c011024e	obj/kernel.asm	/^c011024e:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
c0110255	obj/kernel.asm	/^c0110255:	00 $/;"	l
c0110256	obj/kernel.asm	/^c0110256:	c7 04 24 5e 8c 11 c0 	movl   $0xc0118c5e,(%esp)$/;"	l
c011025d	obj/kernel.asm	/^c011025d:	e8 66 0c ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110262	obj/kernel.asm	/^c0110262:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c0110265	obj/kernel.asm	/^c0110265:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110268	obj/kernel.asm	/^c0110268:	e8 fe 01 00 00       	call   c011046b <vfs_get_curdir>$/;"	l
c011026d	obj/kernel.asm	/^c011026d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110270	obj/kernel.asm	/^c0110270:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0110274	obj/kernel.asm	/^c0110274:	74 05                	je     c011027b <get_device+0x13b>$/;"	l
c0110276	obj/kernel.asm	/^c0110276:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110279	obj/kernel.asm	/^c0110279:	eb 6d                	jmp    c01102e8 <get_device+0x1a8>$/;"	l
c011027b	obj/kernel.asm	/^c011027b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011027e	obj/kernel.asm	/^c011027e:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0110281	obj/kernel.asm	/^c0110281:	85 c0                	test   %eax,%eax$/;"	l
c0110283	obj/kernel.asm	/^c0110283:	75 24                	jne    c01102a9 <get_device+0x169>$/;"	l
c0110285	obj/kernel.asm	/^c0110285:	c7 44 24 0c 76 8c 11 	movl   $0xc0118c76,0xc(%esp)$/;"	l
c011028c	obj/kernel.asm	/^c011028c:	c0 $/;"	l
c011028d	obj/kernel.asm	/^c011028d:	c7 44 24 08 49 8c 11 	movl   $0xc0118c49,0x8(%esp)$/;"	l
c0110294	obj/kernel.asm	/^c0110294:	c0 $/;"	l
c0110295	obj/kernel.asm	/^c0110295:	c7 44 24 04 39 00 00 	movl   $0x39,0x4(%esp)$/;"	l
c011029c	obj/kernel.asm	/^c011029c:	00 $/;"	l
c011029d	obj/kernel.asm	/^c011029d:	c7 04 24 5e 8c 11 c0 	movl   $0xc0118c5e,(%esp)$/;"	l
c01102a4	obj/kernel.asm	/^c01102a4:	e8 1f 0c ff ff       	call   c0100ec8 <__panic>$/;"	l
c01102a9	obj/kernel.asm	/^c01102a9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01102ac	obj/kernel.asm	/^c01102ac:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01102af	obj/kernel.asm	/^c01102af:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c01102b2	obj/kernel.asm	/^c01102b2:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01102b5	obj/kernel.asm	/^c01102b5:	8b 52 38             	mov    0x38(%edx),%edx$/;"	l
c01102b8	obj/kernel.asm	/^c01102b8:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01102bb	obj/kernel.asm	/^c01102bb:	ff d0                	call   *%eax$/;"	l
c01102bd	obj/kernel.asm	/^c01102bd:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01102c0	obj/kernel.asm	/^c01102c0:	89 02                	mov    %eax,(%edx)$/;"	l
c01102c2	obj/kernel.asm	/^c01102c2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01102c5	obj/kernel.asm	/^c01102c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01102c8	obj/kernel.asm	/^c01102c8:	e8 5d ee ff ff       	call   c010f12a <inode_ref_dec>$/;"	l
c01102cd	obj/kernel.asm	/^c01102cd:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c01102d1	obj/kernel.asm	/^c01102d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01102d4	obj/kernel.asm	/^c01102d4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01102d7	obj/kernel.asm	/^c01102d7:	3c 2f                	cmp    $0x2f,%al$/;"	l
c01102d9	obj/kernel.asm	/^c01102d9:	74 f2                	je     c01102cd <get_device+0x18d>$/;"	l
c01102db	obj/kernel.asm	/^c01102db:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01102de	obj/kernel.asm	/^c01102de:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01102e1	obj/kernel.asm	/^c01102e1:	89 10                	mov    %edx,(%eax)$/;"	l
c01102e3	obj/kernel.asm	/^c01102e3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01102e8	obj/kernel.asm	/^c01102e8:	c9                   	leave  $/;"	l
c01102e9	obj/kernel.asm	/^c01102e9:	c3                   	ret    $/;"	l
c01102ea	obj/kernel.asm	/^c01102ea <vfs_lookup>:$/;"	l
c01102ea	obj/kernel.asm	/^c01102ea:	55                   	push   %ebp$/;"	l
c01102eb	obj/kernel.asm	/^c01102eb:	89 e5                	mov    %esp,%ebp$/;"	l
c01102ed	obj/kernel.asm	/^c01102ed:	56                   	push   %esi$/;"	l
c01102ee	obj/kernel.asm	/^c01102ee:	53                   	push   %ebx$/;"	l
c01102ef	obj/kernel.asm	/^c01102ef:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01102f2	obj/kernel.asm	/^c01102f2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01102f5	obj/kernel.asm	/^c01102f5:	8d 55 ec             	lea    -0x14(%ebp),%edx$/;"	l
c01102f8	obj/kernel.asm	/^c01102f8:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01102fc	obj/kernel.asm	/^c01102fc:	8d 75 08             	lea    0x8(%ebp),%esi$/;"	l
c01102ff	obj/kernel.asm	/^c01102ff:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
c0110303	obj/kernel.asm	/^c0110303:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110306	obj/kernel.asm	/^c0110306:	e8 35 fe ff ff       	call   c0110140 <get_device>$/;"	l
c011030b	obj/kernel.asm	/^c011030b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011030e	obj/kernel.asm	/^c011030e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110312	obj/kernel.asm	/^c0110312:	74 08                	je     c011031c <vfs_lookup+0x32>$/;"	l
c0110314	obj/kernel.asm	/^c0110314:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110317	obj/kernel.asm	/^c0110317:	e9 a7 00 00 00       	jmp    c01103c3 <vfs_lookup+0xd9>$/;"	l
c011031c	obj/kernel.asm	/^c011031c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011031f	obj/kernel.asm	/^c011031f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110322	obj/kernel.asm	/^c0110322:	84 c0                	test   %al,%al$/;"	l
c0110324	obj/kernel.asm	/^c0110324:	0f 84 8c 00 00 00    	je     c01103b6 <vfs_lookup+0xcc>$/;"	l
c011032a	obj/kernel.asm	/^c011032a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011032d	obj/kernel.asm	/^c011032d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110330	obj/kernel.asm	/^c0110330:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110334	obj/kernel.asm	/^c0110334:	74 17                	je     c011034d <vfs_lookup+0x63>$/;"	l
c0110336	obj/kernel.asm	/^c0110336:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110339	obj/kernel.asm	/^c0110339:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011033c	obj/kernel.asm	/^c011033c:	85 c0                	test   %eax,%eax$/;"	l
c011033e	obj/kernel.asm	/^c011033e:	74 0d                	je     c011034d <vfs_lookup+0x63>$/;"	l
c0110340	obj/kernel.asm	/^c0110340:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110343	obj/kernel.asm	/^c0110343:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110346	obj/kernel.asm	/^c0110346:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0110349	obj/kernel.asm	/^c0110349:	85 c0                	test   %eax,%eax$/;"	l
c011034b	obj/kernel.asm	/^c011034b:	75 24                	jne    c0110371 <vfs_lookup+0x87>$/;"	l
c011034d	obj/kernel.asm	/^c011034d:	c7 44 24 0c 8c 8c 11 	movl   $0xc0118c8c,0xc(%esp)$/;"	l
c0110354	obj/kernel.asm	/^c0110354:	c0 $/;"	l
c0110355	obj/kernel.asm	/^c0110355:	c7 44 24 08 49 8c 11 	movl   $0xc0118c49,0x8(%esp)$/;"	l
c011035c	obj/kernel.asm	/^c011035c:	c0 $/;"	l
c011035d	obj/kernel.asm	/^c011035d:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
c0110364	obj/kernel.asm	/^c0110364:	00 $/;"	l
c0110365	obj/kernel.asm	/^c0110365:	c7 04 24 5e 8c 11 c0 	movl   $0xc0118c5e,(%esp)$/;"	l
c011036c	obj/kernel.asm	/^c011036c:	e8 57 0b ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110371	obj/kernel.asm	/^c0110371:	c7 44 24 04 db 8c 11 	movl   $0xc0118cdb,0x4(%esp)$/;"	l
c0110378	obj/kernel.asm	/^c0110378:	c0 $/;"	l
c0110379	obj/kernel.asm	/^c0110379:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011037c	obj/kernel.asm	/^c011037c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011037f	obj/kernel.asm	/^c011037f:	e8 94 ef ff ff       	call   c010f318 <inode_check>$/;"	l
c0110384	obj/kernel.asm	/^c0110384:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110387	obj/kernel.asm	/^c0110387:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011038a	obj/kernel.asm	/^c011038a:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011038d	obj/kernel.asm	/^c011038d:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c0110390	obj/kernel.asm	/^c0110390:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110393	obj/kernel.asm	/^c0110393:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c0110396	obj/kernel.asm	/^c0110396:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
c011039a	obj/kernel.asm	/^c011039a:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c011039e	obj/kernel.asm	/^c011039e:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01103a1	obj/kernel.asm	/^c01103a1:	ff d0                	call   *%eax$/;"	l
c01103a3	obj/kernel.asm	/^c01103a3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01103a6	obj/kernel.asm	/^c01103a6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01103a9	obj/kernel.asm	/^c01103a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01103ac	obj/kernel.asm	/^c01103ac:	e8 79 ed ff ff       	call   c010f12a <inode_ref_dec>$/;"	l
c01103b1	obj/kernel.asm	/^c01103b1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01103b4	obj/kernel.asm	/^c01103b4:	eb 0d                	jmp    c01103c3 <vfs_lookup+0xd9>$/;"	l
c01103b6	obj/kernel.asm	/^c01103b6:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01103b9	obj/kernel.asm	/^c01103b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01103bc	obj/kernel.asm	/^c01103bc:	89 10                	mov    %edx,(%eax)$/;"	l
c01103be	obj/kernel.asm	/^c01103be:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01103c3	obj/kernel.asm	/^c01103c3:	83 c4 20             	add    $0x20,%esp$/;"	l
c01103c6	obj/kernel.asm	/^c01103c6:	5b                   	pop    %ebx$/;"	l
c01103c7	obj/kernel.asm	/^c01103c7:	5e                   	pop    %esi$/;"	l
c01103c8	obj/kernel.asm	/^c01103c8:	5d                   	pop    %ebp$/;"	l
c01103c9	obj/kernel.asm	/^c01103c9:	c3                   	ret    $/;"	l
c01103ca	obj/kernel.asm	/^c01103ca <vfs_lookup_parent>:$/;"	l
c01103ca	obj/kernel.asm	/^c01103ca:	55                   	push   %ebp$/;"	l
c01103cb	obj/kernel.asm	/^c01103cb:	89 e5                	mov    %esp,%ebp$/;"	l
c01103cd	obj/kernel.asm	/^c01103cd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01103d0	obj/kernel.asm	/^c01103d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01103d3	obj/kernel.asm	/^c01103d3:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c01103d6	obj/kernel.asm	/^c01103d6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01103da	obj/kernel.asm	/^c01103da:	8d 4d 08             	lea    0x8(%ebp),%ecx$/;"	l
c01103dd	obj/kernel.asm	/^c01103dd:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c01103e1	obj/kernel.asm	/^c01103e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01103e4	obj/kernel.asm	/^c01103e4:	e8 57 fd ff ff       	call   c0110140 <get_device>$/;"	l
c01103e9	obj/kernel.asm	/^c01103e9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01103ec	obj/kernel.asm	/^c01103ec:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01103f0	obj/kernel.asm	/^c01103f0:	74 05                	je     c01103f7 <vfs_lookup_parent+0x2d>$/;"	l
c01103f2	obj/kernel.asm	/^c01103f2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01103f5	obj/kernel.asm	/^c01103f5:	eb 15                	jmp    c011040c <vfs_lookup_parent+0x42>$/;"	l
c01103f7	obj/kernel.asm	/^c01103f7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01103fa	obj/kernel.asm	/^c01103fa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01103fd	obj/kernel.asm	/^c01103fd:	89 10                	mov    %edx,(%eax)$/;"	l
c01103ff	obj/kernel.asm	/^c01103ff:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0110402	obj/kernel.asm	/^c0110402:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110405	obj/kernel.asm	/^c0110405:	89 10                	mov    %edx,(%eax)$/;"	l
c0110407	obj/kernel.asm	/^c0110407:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011040c	obj/kernel.asm	/^c011040c:	c9                   	leave  $/;"	l
c011040d	obj/kernel.asm	/^c011040d:	c3                   	ret    $/;"	l
c011040e	obj/kernel.asm	/^c011040e <get_cwd_nolock>:$/;"	l
c011040e	obj/kernel.asm	/^c011040e:	55                   	push   %ebp$/;"	l
c011040f	obj/kernel.asm	/^c011040f:	89 e5                	mov    %esp,%ebp$/;"	l
c0110411	obj/kernel.asm	/^c0110411:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c0110416	obj/kernel.asm	/^c0110416:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c011041c	obj/kernel.asm	/^c011041c:	8b 00                	mov    (%eax),%eax$/;"	l
c011041e	obj/kernel.asm	/^c011041e:	5d                   	pop    %ebp$/;"	l
c011041f	obj/kernel.asm	/^c011041f:	c3                   	ret    $/;"	l
c0110420	obj/kernel.asm	/^c0110420 <set_cwd_nolock>:$/;"	l
c0110420	obj/kernel.asm	/^c0110420:	55                   	push   %ebp$/;"	l
c0110421	obj/kernel.asm	/^c0110421:	89 e5                	mov    %esp,%ebp$/;"	l
c0110423	obj/kernel.asm	/^c0110423:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c0110428	obj/kernel.asm	/^c0110428:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c011042e	obj/kernel.asm	/^c011042e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110431	obj/kernel.asm	/^c0110431:	89 10                	mov    %edx,(%eax)$/;"	l
c0110433	obj/kernel.asm	/^c0110433:	5d                   	pop    %ebp$/;"	l
c0110434	obj/kernel.asm	/^c0110434:	c3                   	ret    $/;"	l
c0110435	obj/kernel.asm	/^c0110435 <lock_cfs>:$/;"	l
c0110435	obj/kernel.asm	/^c0110435:	55                   	push   %ebp$/;"	l
c0110436	obj/kernel.asm	/^c0110436:	89 e5                	mov    %esp,%ebp$/;"	l
c0110438	obj/kernel.asm	/^c0110438:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011043b	obj/kernel.asm	/^c011043b:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c0110440	obj/kernel.asm	/^c0110440:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c0110446	obj/kernel.asm	/^c0110446:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110449	obj/kernel.asm	/^c0110449:	e8 2e ac ff ff       	call   c010b07c <lock_files>$/;"	l
c011044e	obj/kernel.asm	/^c011044e:	c9                   	leave  $/;"	l
c011044f	obj/kernel.asm	/^c011044f:	c3                   	ret    $/;"	l
c0110450	obj/kernel.asm	/^c0110450 <unlock_cfs>:$/;"	l
c0110450	obj/kernel.asm	/^c0110450:	55                   	push   %ebp$/;"	l
c0110451	obj/kernel.asm	/^c0110451:	89 e5                	mov    %esp,%ebp$/;"	l
c0110453	obj/kernel.asm	/^c0110453:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110456	obj/kernel.asm	/^c0110456:	a1 28 0f 15 c0       	mov    0xc0150f28,%eax$/;"	l
c011045b	obj/kernel.asm	/^c011045b:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c0110461	obj/kernel.asm	/^c0110461:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110464	obj/kernel.asm	/^c0110464:	e8 29 ac ff ff       	call   c010b092 <unlock_files>$/;"	l
c0110469	obj/kernel.asm	/^c0110469:	c9                   	leave  $/;"	l
c011046a	obj/kernel.asm	/^c011046a:	c3                   	ret    $/;"	l
c011046b	obj/kernel.asm	/^c011046b <vfs_get_curdir>:$/;"	l
c011046b	obj/kernel.asm	/^c011046b:	55                   	push   %ebp$/;"	l
c011046c	obj/kernel.asm	/^c011046c:	89 e5                	mov    %esp,%ebp$/;"	l
c011046e	obj/kernel.asm	/^c011046e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110471	obj/kernel.asm	/^c0110471:	e8 98 ff ff ff       	call   c011040e <get_cwd_nolock>$/;"	l
c0110476	obj/kernel.asm	/^c0110476:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110479	obj/kernel.asm	/^c0110479:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011047d	obj/kernel.asm	/^c011047d:	74 1a                	je     c0110499 <vfs_get_curdir+0x2e>$/;"	l
c011047f	obj/kernel.asm	/^c011047f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110482	obj/kernel.asm	/^c0110482:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110485	obj/kernel.asm	/^c0110485:	e8 86 ec ff ff       	call   c010f110 <inode_ref_inc>$/;"	l
c011048a	obj/kernel.asm	/^c011048a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011048d	obj/kernel.asm	/^c011048d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0110490	obj/kernel.asm	/^c0110490:	89 10                	mov    %edx,(%eax)$/;"	l
c0110492	obj/kernel.asm	/^c0110492:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110497	obj/kernel.asm	/^c0110497:	eb 05                	jmp    c011049e <vfs_get_curdir+0x33>$/;"	l
c0110499	obj/kernel.asm	/^c0110499:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c011049e	obj/kernel.asm	/^c011049e:	c9                   	leave  $/;"	l
c011049f	obj/kernel.asm	/^c011049f:	c3                   	ret    $/;"	l
c01104a0	obj/kernel.asm	/^c01104a0 <vfs_set_curdir>:$/;"	l
c01104a0	obj/kernel.asm	/^c01104a0:	55                   	push   %ebp$/;"	l
c01104a1	obj/kernel.asm	/^c01104a1:	89 e5                	mov    %esp,%ebp$/;"	l
c01104a3	obj/kernel.asm	/^c01104a3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01104a6	obj/kernel.asm	/^c01104a6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01104ad	obj/kernel.asm	/^c01104ad:	e8 83 ff ff ff       	call   c0110435 <lock_cfs>$/;"	l
c01104b2	obj/kernel.asm	/^c01104b2:	e8 57 ff ff ff       	call   c011040e <get_cwd_nolock>$/;"	l
c01104b7	obj/kernel.asm	/^c01104b7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01104ba	obj/kernel.asm	/^c01104ba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01104bd	obj/kernel.asm	/^c01104bd:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01104c0	obj/kernel.asm	/^c01104c0:	0f 84 c7 00 00 00    	je     c011058d <vfs_set_curdir+0xed>$/;"	l
c01104c6	obj/kernel.asm	/^c01104c6:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01104ca	obj/kernel.asm	/^c01104ca:	0f 84 a1 00 00 00    	je     c0110571 <vfs_set_curdir+0xd1>$/;"	l
c01104d0	obj/kernel.asm	/^c01104d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01104d3	obj/kernel.asm	/^c01104d3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01104d6	obj/kernel.asm	/^c01104d6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01104da	obj/kernel.asm	/^c01104da:	74 17                	je     c01104f3 <vfs_set_curdir+0x53>$/;"	l
c01104dc	obj/kernel.asm	/^c01104dc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01104df	obj/kernel.asm	/^c01104df:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01104e2	obj/kernel.asm	/^c01104e2:	85 c0                	test   %eax,%eax$/;"	l
c01104e4	obj/kernel.asm	/^c01104e4:	74 0d                	je     c01104f3 <vfs_set_curdir+0x53>$/;"	l
c01104e6	obj/kernel.asm	/^c01104e6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01104e9	obj/kernel.asm	/^c01104e9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01104ec	obj/kernel.asm	/^c01104ec:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c01104ef	obj/kernel.asm	/^c01104ef:	85 c0                	test   %eax,%eax$/;"	l
c01104f1	obj/kernel.asm	/^c01104f1:	75 24                	jne    c0110517 <vfs_set_curdir+0x77>$/;"	l
c01104f3	obj/kernel.asm	/^c01104f3:	c7 44 24 0c e4 8c 11 	movl   $0xc0118ce4,0xc(%esp)$/;"	l
c01104fa	obj/kernel.asm	/^c01104fa:	c0 $/;"	l
c01104fb	obj/kernel.asm	/^c01104fb:	c7 44 24 08 34 8d 11 	movl   $0xc0118d34,0x8(%esp)$/;"	l
c0110502	obj/kernel.asm	/^c0110502:	c0 $/;"	l
c0110503	obj/kernel.asm	/^c0110503:	c7 44 24 04 43 00 00 	movl   $0x43,0x4(%esp)$/;"	l
c011050a	obj/kernel.asm	/^c011050a:	00 $/;"	l
c011050b	obj/kernel.asm	/^c011050b:	c7 04 24 49 8d 11 c0 	movl   $0xc0118d49,(%esp)$/;"	l
c0110512	obj/kernel.asm	/^c0110512:	e8 b1 09 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110517	obj/kernel.asm	/^c0110517:	c7 44 24 04 5f 8d 11 	movl   $0xc0118d5f,0x4(%esp)$/;"	l
c011051e	obj/kernel.asm	/^c011051e:	c0 $/;"	l
c011051f	obj/kernel.asm	/^c011051f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110522	obj/kernel.asm	/^c0110522:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110525	obj/kernel.asm	/^c0110525:	e8 ee ed ff ff       	call   c010f318 <inode_check>$/;"	l
c011052a	obj/kernel.asm	/^c011052a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011052d	obj/kernel.asm	/^c011052d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110530	obj/kernel.asm	/^c0110530:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c0110533	obj/kernel.asm	/^c0110533:	8d 55 e8             	lea    -0x18(%ebp),%edx$/;"	l
c0110536	obj/kernel.asm	/^c0110536:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011053a	obj/kernel.asm	/^c011053a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011053d	obj/kernel.asm	/^c011053d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110540	obj/kernel.asm	/^c0110540:	ff d0                	call   *%eax$/;"	l
c0110542	obj/kernel.asm	/^c0110542:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110545	obj/kernel.asm	/^c0110545:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110549	obj/kernel.asm	/^c0110549:	74 02                	je     c011054d <vfs_set_curdir+0xad>$/;"	l
c011054b	obj/kernel.asm	/^c011054b:	eb 40                	jmp    c011058d <vfs_set_curdir+0xed>$/;"	l
c011054d	obj/kernel.asm	/^c011054d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110550	obj/kernel.asm	/^c0110550:	25 00 70 00 00       	and    $0x7000,%eax$/;"	l
c0110555	obj/kernel.asm	/^c0110555:	3d 00 20 00 00       	cmp    $0x2000,%eax$/;"	l
c011055a	obj/kernel.asm	/^c011055a:	74 0a                	je     c0110566 <vfs_set_curdir+0xc6>$/;"	l
c011055c	obj/kernel.asm	/^c011055c:	c7 45 f4 ee ff ff ff 	movl   $0xffffffee,-0xc(%ebp)$/;"	l
c0110563	obj/kernel.asm	/^c0110563:	90                   	nop$/;"	l
c0110564	obj/kernel.asm	/^c0110564:	eb 27                	jmp    c011058d <vfs_set_curdir+0xed>$/;"	l
c0110566	obj/kernel.asm	/^c0110566:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110569	obj/kernel.asm	/^c0110569:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011056c	obj/kernel.asm	/^c011056c:	e8 9f eb ff ff       	call   c010f110 <inode_ref_inc>$/;"	l
c0110571	obj/kernel.asm	/^c0110571:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110574	obj/kernel.asm	/^c0110574:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110577	obj/kernel.asm	/^c0110577:	e8 a4 fe ff ff       	call   c0110420 <set_cwd_nolock>$/;"	l
c011057c	obj/kernel.asm	/^c011057c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110580	obj/kernel.asm	/^c0110580:	74 0b                	je     c011058d <vfs_set_curdir+0xed>$/;"	l
c0110582	obj/kernel.asm	/^c0110582:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110585	obj/kernel.asm	/^c0110585:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110588	obj/kernel.asm	/^c0110588:	e8 9d eb ff ff       	call   c010f12a <inode_ref_dec>$/;"	l
c011058d	obj/kernel.asm	/^c011058d:	e8 be fe ff ff       	call   c0110450 <unlock_cfs>$/;"	l
c0110592	obj/kernel.asm	/^c0110592:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110595	obj/kernel.asm	/^c0110595:	c9                   	leave  $/;"	l
c0110596	obj/kernel.asm	/^c0110596:	c3                   	ret    $/;"	l
c0110597	obj/kernel.asm	/^c0110597 <vfs_chdir>:$/;"	l
c0110597	obj/kernel.asm	/^c0110597:	55                   	push   %ebp$/;"	l
c0110598	obj/kernel.asm	/^c0110598:	89 e5                	mov    %esp,%ebp$/;"	l
c011059a	obj/kernel.asm	/^c011059a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011059d	obj/kernel.asm	/^c011059d:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c01105a0	obj/kernel.asm	/^c01105a0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01105a4	obj/kernel.asm	/^c01105a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01105a7	obj/kernel.asm	/^c01105a7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01105aa	obj/kernel.asm	/^c01105aa:	e8 3b fd ff ff       	call   c01102ea <vfs_lookup>$/;"	l
c01105af	obj/kernel.asm	/^c01105af:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01105b2	obj/kernel.asm	/^c01105b2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01105b6	obj/kernel.asm	/^c01105b6:	75 19                	jne    c01105d1 <vfs_chdir+0x3a>$/;"	l
c01105b8	obj/kernel.asm	/^c01105b8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01105bb	obj/kernel.asm	/^c01105bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01105be	obj/kernel.asm	/^c01105be:	e8 dd fe ff ff       	call   c01104a0 <vfs_set_curdir>$/;"	l
c01105c3	obj/kernel.asm	/^c01105c3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01105c6	obj/kernel.asm	/^c01105c6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01105c9	obj/kernel.asm	/^c01105c9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01105cc	obj/kernel.asm	/^c01105cc:	e8 59 eb ff ff       	call   c010f12a <inode_ref_dec>$/;"	l
c01105d1	obj/kernel.asm	/^c01105d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01105d4	obj/kernel.asm	/^c01105d4:	c9                   	leave  $/;"	l
c01105d5	obj/kernel.asm	/^c01105d5:	c3                   	ret    $/;"	l
c01105d6	obj/kernel.asm	/^c01105d6 <vfs_getcwd>:$/;"	l
c01105d6	obj/kernel.asm	/^c01105d6:	55                   	push   %ebp$/;"	l
c01105d7	obj/kernel.asm	/^c01105d7:	89 e5                	mov    %esp,%ebp$/;"	l
c01105d9	obj/kernel.asm	/^c01105d9:	83 ec 48             	sub    $0x48,%esp$/;"	l
c01105dc	obj/kernel.asm	/^c01105dc:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c01105df	obj/kernel.asm	/^c01105df:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01105e2	obj/kernel.asm	/^c01105e2:	e8 84 fe ff ff       	call   c011046b <vfs_get_curdir>$/;"	l
c01105e7	obj/kernel.asm	/^c01105e7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01105ea	obj/kernel.asm	/^c01105ea:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01105ee	obj/kernel.asm	/^c01105ee:	74 08                	je     c01105f8 <vfs_getcwd+0x22>$/;"	l
c01105f0	obj/kernel.asm	/^c01105f0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01105f3	obj/kernel.asm	/^c01105f3:	e9 3a 01 00 00       	jmp    c0110732 <vfs_getcwd+0x15c>$/;"	l
c01105f8	obj/kernel.asm	/^c01105f8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01105fb	obj/kernel.asm	/^c01105fb:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01105fe	obj/kernel.asm	/^c01105fe:	85 c0                	test   %eax,%eax$/;"	l
c0110600	obj/kernel.asm	/^c0110600:	75 24                	jne    c0110626 <vfs_getcwd+0x50>$/;"	l
c0110602	obj/kernel.asm	/^c0110602:	c7 44 24 0c 67 8d 11 	movl   $0xc0118d67,0xc(%esp)$/;"	l
c0110609	obj/kernel.asm	/^c0110609:	c0 $/;"	l
c011060a	obj/kernel.asm	/^c011060a:	c7 44 24 08 34 8d 11 	movl   $0xc0118d34,0x8(%esp)$/;"	l
c0110611	obj/kernel.asm	/^c0110611:	c0 $/;"	l
c0110612	obj/kernel.asm	/^c0110612:	c7 44 24 04 6e 00 00 	movl   $0x6e,0x4(%esp)$/;"	l
c0110619	obj/kernel.asm	/^c0110619:	00 $/;"	l
c011061a	obj/kernel.asm	/^c011061a:	c7 04 24 49 8d 11 c0 	movl   $0xc0118d49,(%esp)$/;"	l
c0110621	obj/kernel.asm	/^c0110621:	e8 a2 08 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110626	obj/kernel.asm	/^c0110626:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110629	obj/kernel.asm	/^c0110629:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011062c	obj/kernel.asm	/^c011062c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011062f	obj/kernel.asm	/^c011062f:	e8 4f f1 ff ff       	call   c010f783 <vfs_get_devname>$/;"	l
c0110634	obj/kernel.asm	/^c0110634:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110637	obj/kernel.asm	/^c0110637:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011063a	obj/kernel.asm	/^c011063a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011063d	obj/kernel.asm	/^c011063d:	e8 d8 4b 00 00       	call   c011521a <strlen>$/;"	l
c0110642	obj/kernel.asm	/^c0110642:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0110649	obj/kernel.asm	/^c0110649:	00 $/;"	l
c011064a	obj/kernel.asm	/^c011064a:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0110651	obj/kernel.asm	/^c0110651:	00 $/;"	l
c0110652	obj/kernel.asm	/^c0110652:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0110656	obj/kernel.asm	/^c0110656:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110659	obj/kernel.asm	/^c0110659:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011065d	obj/kernel.asm	/^c011065d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110660	obj/kernel.asm	/^c0110660:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110663	obj/kernel.asm	/^c0110663:	e8 0c ad ff ff       	call   c010b374 <iobuf_move>$/;"	l
c0110668	obj/kernel.asm	/^c0110668:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011066b	obj/kernel.asm	/^c011066b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011066f	obj/kernel.asm	/^c011066f:	74 05                	je     c0110676 <vfs_getcwd+0xa0>$/;"	l
c0110671	obj/kernel.asm	/^c0110671:	e9 ae 00 00 00       	jmp    c0110724 <vfs_getcwd+0x14e>$/;"	l
c0110676	obj/kernel.asm	/^c0110676:	c6 45 e7 3a          	movb   $0x3a,-0x19(%ebp)$/;"	l
c011067a	obj/kernel.asm	/^c011067a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0110681	obj/kernel.asm	/^c0110681:	00 $/;"	l
c0110682	obj/kernel.asm	/^c0110682:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0110689	obj/kernel.asm	/^c0110689:	00 $/;"	l
c011068a	obj/kernel.asm	/^c011068a:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0110691	obj/kernel.asm	/^c0110691:	00 $/;"	l
c0110692	obj/kernel.asm	/^c0110692:	8d 45 e7             	lea    -0x19(%ebp),%eax$/;"	l
c0110695	obj/kernel.asm	/^c0110695:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110699	obj/kernel.asm	/^c0110699:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011069c	obj/kernel.asm	/^c011069c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011069f	obj/kernel.asm	/^c011069f:	e8 d0 ac ff ff       	call   c010b374 <iobuf_move>$/;"	l
c01106a4	obj/kernel.asm	/^c01106a4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01106a7	obj/kernel.asm	/^c01106a7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01106ab	obj/kernel.asm	/^c01106ab:	74 02                	je     c01106af <vfs_getcwd+0xd9>$/;"	l
c01106ad	obj/kernel.asm	/^c01106ad:	eb 75                	jmp    c0110724 <vfs_getcwd+0x14e>$/;"	l
c01106af	obj/kernel.asm	/^c01106af:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01106b2	obj/kernel.asm	/^c01106b2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01106b5	obj/kernel.asm	/^c01106b5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01106b9	obj/kernel.asm	/^c01106b9:	74 17                	je     c01106d2 <vfs_getcwd+0xfc>$/;"	l
c01106bb	obj/kernel.asm	/^c01106bb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01106be	obj/kernel.asm	/^c01106be:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01106c1	obj/kernel.asm	/^c01106c1:	85 c0                	test   %eax,%eax$/;"	l
c01106c3	obj/kernel.asm	/^c01106c3:	74 0d                	je     c01106d2 <vfs_getcwd+0xfc>$/;"	l
c01106c5	obj/kernel.asm	/^c01106c5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01106c8	obj/kernel.asm	/^c01106c8:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01106cb	obj/kernel.asm	/^c01106cb:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01106ce	obj/kernel.asm	/^c01106ce:	85 c0                	test   %eax,%eax$/;"	l
c01106d0	obj/kernel.asm	/^c01106d0:	75 24                	jne    c01106f6 <vfs_getcwd+0x120>$/;"	l
c01106d2	obj/kernel.asm	/^c01106d2:	c7 44 24 0c 7c 8d 11 	movl   $0xc0118d7c,0xc(%esp)$/;"	l
c01106d9	obj/kernel.asm	/^c01106d9:	c0 $/;"	l
c01106da	obj/kernel.asm	/^c01106da:	c7 44 24 08 34 8d 11 	movl   $0xc0118d34,0x8(%esp)$/;"	l
c01106e1	obj/kernel.asm	/^c01106e1:	c0 $/;"	l
c01106e2	obj/kernel.asm	/^c01106e2:	c7 44 24 04 78 00 00 	movl   $0x78,0x4(%esp)$/;"	l
c01106e9	obj/kernel.asm	/^c01106e9:	00 $/;"	l
c01106ea	obj/kernel.asm	/^c01106ea:	c7 04 24 49 8d 11 c0 	movl   $0xc0118d49,(%esp)$/;"	l
c01106f1	obj/kernel.asm	/^c01106f1:	e8 d2 07 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01106f6	obj/kernel.asm	/^c01106f6:	c7 44 24 04 cd 8d 11 	movl   $0xc0118dcd,0x4(%esp)$/;"	l
c01106fd	obj/kernel.asm	/^c01106fd:	c0 $/;"	l
c01106fe	obj/kernel.asm	/^c01106fe:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110701	obj/kernel.asm	/^c0110701:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110704	obj/kernel.asm	/^c0110704:	e8 0f ec ff ff       	call   c010f318 <inode_check>$/;"	l
c0110709	obj/kernel.asm	/^c0110709:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011070c	obj/kernel.asm	/^c011070c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011070f	obj/kernel.asm	/^c011070f:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0110712	obj/kernel.asm	/^c0110712:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0110715	obj/kernel.asm	/^c0110715:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c0110718	obj/kernel.asm	/^c0110718:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c011071c	obj/kernel.asm	/^c011071c:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011071f	obj/kernel.asm	/^c011071f:	ff d0                	call   *%eax$/;"	l
c0110721	obj/kernel.asm	/^c0110721:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110724	obj/kernel.asm	/^c0110724:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110727	obj/kernel.asm	/^c0110727:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011072a	obj/kernel.asm	/^c011072a:	e8 fb e9 ff ff       	call   c010f12a <inode_ref_dec>$/;"	l
c011072f	obj/kernel.asm	/^c011072f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110732	obj/kernel.asm	/^c0110732:	c9                   	leave  $/;"	l
c0110733	obj/kernel.asm	/^c0110733:	c3                   	ret    $/;"	l
c0110734	obj/kernel.asm	/^c0110734 <dev_open>:$/;"	l
c0110734	obj/kernel.asm	/^c0110734:	55                   	push   %ebp$/;"	l
c0110735	obj/kernel.asm	/^c0110735:	89 e5                	mov    %esp,%ebp$/;"	l
c0110737	obj/kernel.asm	/^c0110737:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011073a	obj/kernel.asm	/^c011073a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011073d	obj/kernel.asm	/^c011073d:	83 e0 3c             	and    $0x3c,%eax$/;"	l
c0110740	obj/kernel.asm	/^c0110740:	85 c0                	test   %eax,%eax$/;"	l
c0110742	obj/kernel.asm	/^c0110742:	74 07                	je     c011074b <dev_open+0x17>$/;"	l
c0110744	obj/kernel.asm	/^c0110744:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0110749	obj/kernel.asm	/^c0110749:	eb 58                	jmp    c01107a3 <dev_open+0x6f>$/;"	l
c011074b	obj/kernel.asm	/^c011074b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011074e	obj/kernel.asm	/^c011074e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110751	obj/kernel.asm	/^c0110751:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110755	obj/kernel.asm	/^c0110755:	74 0d                	je     c0110764 <dev_open+0x30>$/;"	l
c0110757	obj/kernel.asm	/^c0110757:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011075a	obj/kernel.asm	/^c011075a:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011075d	obj/kernel.asm	/^c011075d:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0110762	obj/kernel.asm	/^c0110762:	74 24                	je     c0110788 <dev_open+0x54>$/;"	l
c0110764	obj/kernel.asm	/^c0110764:	c7 44 24 0c e0 8d 11 	movl   $0xc0118de0,0xc(%esp)$/;"	l
c011076b	obj/kernel.asm	/^c011076b:	c0 $/;"	l
c011076c	obj/kernel.asm	/^c011076c:	c7 44 24 08 13 8e 11 	movl   $0xc0118e13,0x8(%esp)$/;"	l
c0110773	obj/kernel.asm	/^c0110773:	c0 $/;"	l
c0110774	obj/kernel.asm	/^c0110774:	c7 44 24 04 11 00 00 	movl   $0x11,0x4(%esp)$/;"	l
c011077b	obj/kernel.asm	/^c011077b:	00 $/;"	l
c011077c	obj/kernel.asm	/^c011077c:	c7 04 24 28 8e 11 c0 	movl   $0xc0118e28,(%esp)$/;"	l
c0110783	obj/kernel.asm	/^c0110783:	e8 40 07 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110788	obj/kernel.asm	/^c0110788:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011078b	obj/kernel.asm	/^c011078b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011078e	obj/kernel.asm	/^c011078e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110791	obj/kernel.asm	/^c0110791:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0110794	obj/kernel.asm	/^c0110794:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0110797	obj/kernel.asm	/^c0110797:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011079b	obj/kernel.asm	/^c011079b:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c011079e	obj/kernel.asm	/^c011079e:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01107a1	obj/kernel.asm	/^c01107a1:	ff d0                	call   *%eax$/;"	l
c01107a3	obj/kernel.asm	/^c01107a3:	c9                   	leave  $/;"	l
c01107a4	obj/kernel.asm	/^c01107a4:	c3                   	ret    $/;"	l
c01107a5	obj/kernel.asm	/^c01107a5 <dev_close>:$/;"	l
c01107a5	obj/kernel.asm	/^c01107a5:	55                   	push   %ebp$/;"	l
c01107a6	obj/kernel.asm	/^c01107a6:	89 e5                	mov    %esp,%ebp$/;"	l
c01107a8	obj/kernel.asm	/^c01107a8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01107ab	obj/kernel.asm	/^c01107ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01107ae	obj/kernel.asm	/^c01107ae:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01107b1	obj/kernel.asm	/^c01107b1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01107b5	obj/kernel.asm	/^c01107b5:	74 0d                	je     c01107c4 <dev_close+0x1f>$/;"	l
c01107b7	obj/kernel.asm	/^c01107b7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01107ba	obj/kernel.asm	/^c01107ba:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01107bd	obj/kernel.asm	/^c01107bd:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c01107c2	obj/kernel.asm	/^c01107c2:	74 24                	je     c01107e8 <dev_close+0x43>$/;"	l
c01107c4	obj/kernel.asm	/^c01107c4:	c7 44 24 0c e0 8d 11 	movl   $0xc0118de0,0xc(%esp)$/;"	l
c01107cb	obj/kernel.asm	/^c01107cb:	c0 $/;"	l
c01107cc	obj/kernel.asm	/^c01107cc:	c7 44 24 08 13 8e 11 	movl   $0xc0118e13,0x8(%esp)$/;"	l
c01107d3	obj/kernel.asm	/^c01107d3:	c0 $/;"	l
c01107d4	obj/kernel.asm	/^c01107d4:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
c01107db	obj/kernel.asm	/^c01107db:	00 $/;"	l
c01107dc	obj/kernel.asm	/^c01107dc:	c7 04 24 28 8e 11 c0 	movl   $0xc0118e28,(%esp)$/;"	l
c01107e3	obj/kernel.asm	/^c01107e3:	e8 e0 06 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01107e8	obj/kernel.asm	/^c01107e8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01107eb	obj/kernel.asm	/^c01107eb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01107ee	obj/kernel.asm	/^c01107ee:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01107f1	obj/kernel.asm	/^c01107f1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01107f4	obj/kernel.asm	/^c01107f4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01107f7	obj/kernel.asm	/^c01107f7:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01107fa	obj/kernel.asm	/^c01107fa:	ff d0                	call   *%eax$/;"	l
c01107fc	obj/kernel.asm	/^c01107fc:	c9                   	leave  $/;"	l
c01107fd	obj/kernel.asm	/^c01107fd:	c3                   	ret    $/;"	l
c01107fe	obj/kernel.asm	/^c01107fe <dev_read>:$/;"	l
c01107fe	obj/kernel.asm	/^c01107fe:	55                   	push   %ebp$/;"	l
c01107ff	obj/kernel.asm	/^c01107ff:	89 e5                	mov    %esp,%ebp$/;"	l
c0110801	obj/kernel.asm	/^c0110801:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110804	obj/kernel.asm	/^c0110804:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110807	obj/kernel.asm	/^c0110807:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011080a	obj/kernel.asm	/^c011080a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011080e	obj/kernel.asm	/^c011080e:	74 0d                	je     c011081d <dev_read+0x1f>$/;"	l
c0110810	obj/kernel.asm	/^c0110810:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110813	obj/kernel.asm	/^c0110813:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110816	obj/kernel.asm	/^c0110816:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c011081b	obj/kernel.asm	/^c011081b:	74 24                	je     c0110841 <dev_read+0x43>$/;"	l
c011081d	obj/kernel.asm	/^c011081d:	c7 44 24 0c e0 8d 11 	movl   $0xc0118de0,0xc(%esp)$/;"	l
c0110824	obj/kernel.asm	/^c0110824:	c0 $/;"	l
c0110825	obj/kernel.asm	/^c0110825:	c7 44 24 08 13 8e 11 	movl   $0xc0118e13,0x8(%esp)$/;"	l
c011082c	obj/kernel.asm	/^c011082c:	c0 $/;"	l
c011082d	obj/kernel.asm	/^c011082d:	c7 44 24 04 23 00 00 	movl   $0x23,0x4(%esp)$/;"	l
c0110834	obj/kernel.asm	/^c0110834:	00 $/;"	l
c0110835	obj/kernel.asm	/^c0110835:	c7 04 24 28 8e 11 c0 	movl   $0xc0118e28,(%esp)$/;"	l
c011083c	obj/kernel.asm	/^c011083c:	e8 87 06 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110841	obj/kernel.asm	/^c0110841:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110844	obj/kernel.asm	/^c0110844:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110847	obj/kernel.asm	/^c0110847:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011084a	obj/kernel.asm	/^c011084a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c011084d	obj/kernel.asm	/^c011084d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0110854	obj/kernel.asm	/^c0110854:	00 $/;"	l
c0110855	obj/kernel.asm	/^c0110855:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0110858	obj/kernel.asm	/^c0110858:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011085c	obj/kernel.asm	/^c011085c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c011085f	obj/kernel.asm	/^c011085f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110862	obj/kernel.asm	/^c0110862:	ff d0                	call   *%eax$/;"	l
c0110864	obj/kernel.asm	/^c0110864:	c9                   	leave  $/;"	l
c0110865	obj/kernel.asm	/^c0110865:	c3                   	ret    $/;"	l
c0110866	obj/kernel.asm	/^c0110866 <dev_write>:$/;"	l
c0110866	obj/kernel.asm	/^c0110866:	55                   	push   %ebp$/;"	l
c0110867	obj/kernel.asm	/^c0110867:	89 e5                	mov    %esp,%ebp$/;"	l
c0110869	obj/kernel.asm	/^c0110869:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011086c	obj/kernel.asm	/^c011086c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011086f	obj/kernel.asm	/^c011086f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110872	obj/kernel.asm	/^c0110872:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110876	obj/kernel.asm	/^c0110876:	74 0d                	je     c0110885 <dev_write+0x1f>$/;"	l
c0110878	obj/kernel.asm	/^c0110878:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011087b	obj/kernel.asm	/^c011087b:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011087e	obj/kernel.asm	/^c011087e:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0110883	obj/kernel.asm	/^c0110883:	74 24                	je     c01108a9 <dev_write+0x43>$/;"	l
c0110885	obj/kernel.asm	/^c0110885:	c7 44 24 0c e0 8d 11 	movl   $0xc0118de0,0xc(%esp)$/;"	l
c011088c	obj/kernel.asm	/^c011088c:	c0 $/;"	l
c011088d	obj/kernel.asm	/^c011088d:	c7 44 24 08 13 8e 11 	movl   $0xc0118e13,0x8(%esp)$/;"	l
c0110894	obj/kernel.asm	/^c0110894:	c0 $/;"	l
c0110895	obj/kernel.asm	/^c0110895:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
c011089c	obj/kernel.asm	/^c011089c:	00 $/;"	l
c011089d	obj/kernel.asm	/^c011089d:	c7 04 24 28 8e 11 c0 	movl   $0xc0118e28,(%esp)$/;"	l
c01108a4	obj/kernel.asm	/^c01108a4:	e8 1f 06 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01108a9	obj/kernel.asm	/^c01108a9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01108ac	obj/kernel.asm	/^c01108ac:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01108af	obj/kernel.asm	/^c01108af:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01108b2	obj/kernel.asm	/^c01108b2:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01108b5	obj/kernel.asm	/^c01108b5:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c01108bc	obj/kernel.asm	/^c01108bc:	00 $/;"	l
c01108bd	obj/kernel.asm	/^c01108bd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01108c0	obj/kernel.asm	/^c01108c0:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01108c4	obj/kernel.asm	/^c01108c4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01108c7	obj/kernel.asm	/^c01108c7:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01108ca	obj/kernel.asm	/^c01108ca:	ff d0                	call   *%eax$/;"	l
c01108cc	obj/kernel.asm	/^c01108cc:	c9                   	leave  $/;"	l
c01108cd	obj/kernel.asm	/^c01108cd:	c3                   	ret    $/;"	l
c01108ce	obj/kernel.asm	/^c01108ce <dev_ioctl>:$/;"	l
c01108ce	obj/kernel.asm	/^c01108ce:	55                   	push   %ebp$/;"	l
c01108cf	obj/kernel.asm	/^c01108cf:	89 e5                	mov    %esp,%ebp$/;"	l
c01108d1	obj/kernel.asm	/^c01108d1:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01108d4	obj/kernel.asm	/^c01108d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01108d7	obj/kernel.asm	/^c01108d7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01108da	obj/kernel.asm	/^c01108da:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01108de	obj/kernel.asm	/^c01108de:	74 0d                	je     c01108ed <dev_ioctl+0x1f>$/;"	l
c01108e0	obj/kernel.asm	/^c01108e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01108e3	obj/kernel.asm	/^c01108e3:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01108e6	obj/kernel.asm	/^c01108e6:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c01108eb	obj/kernel.asm	/^c01108eb:	74 24                	je     c0110911 <dev_ioctl+0x43>$/;"	l
c01108ed	obj/kernel.asm	/^c01108ed:	c7 44 24 0c e0 8d 11 	movl   $0xc0118de0,0xc(%esp)$/;"	l
c01108f4	obj/kernel.asm	/^c01108f4:	c0 $/;"	l
c01108f5	obj/kernel.asm	/^c01108f5:	c7 44 24 08 13 8e 11 	movl   $0xc0118e13,0x8(%esp)$/;"	l
c01108fc	obj/kernel.asm	/^c01108fc:	c0 $/;"	l
c01108fd	obj/kernel.asm	/^c01108fd:	c7 44 24 04 35 00 00 	movl   $0x35,0x4(%esp)$/;"	l
c0110904	obj/kernel.asm	/^c0110904:	00 $/;"	l
c0110905	obj/kernel.asm	/^c0110905:	c7 04 24 28 8e 11 c0 	movl   $0xc0118e28,(%esp)$/;"	l
c011090c	obj/kernel.asm	/^c011090c:	e8 b7 05 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110911	obj/kernel.asm	/^c0110911:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110914	obj/kernel.asm	/^c0110914:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110917	obj/kernel.asm	/^c0110917:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011091a	obj/kernel.asm	/^c011091a:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c011091d	obj/kernel.asm	/^c011091d:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0110920	obj/kernel.asm	/^c0110920:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0110924	obj/kernel.asm	/^c0110924:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0110927	obj/kernel.asm	/^c0110927:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011092b	obj/kernel.asm	/^c011092b:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c011092e	obj/kernel.asm	/^c011092e:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110931	obj/kernel.asm	/^c0110931:	ff d0                	call   *%eax$/;"	l
c0110933	obj/kernel.asm	/^c0110933:	c9                   	leave  $/;"	l
c0110934	obj/kernel.asm	/^c0110934:	c3                   	ret    $/;"	l
c0110935	obj/kernel.asm	/^c0110935 <dev_fstat>:$/;"	l
c0110935	obj/kernel.asm	/^c0110935:	55                   	push   %ebp$/;"	l
c0110936	obj/kernel.asm	/^c0110936:	89 e5                	mov    %esp,%ebp$/;"	l
c0110938	obj/kernel.asm	/^c0110938:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011093b	obj/kernel.asm	/^c011093b:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c0110942	obj/kernel.asm	/^c0110942:	00 $/;"	l
c0110943	obj/kernel.asm	/^c0110943:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c011094a	obj/kernel.asm	/^c011094a:	00 $/;"	l
c011094b	obj/kernel.asm	/^c011094b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011094e	obj/kernel.asm	/^c011094e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110951	obj/kernel.asm	/^c0110951:	e8 1a 4c 00 00       	call   c0115570 <memset>$/;"	l
c0110956	obj/kernel.asm	/^c0110956:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110959	obj/kernel.asm	/^c0110959:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011095c	obj/kernel.asm	/^c011095c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110960	obj/kernel.asm	/^c0110960:	74 17                	je     c0110979 <dev_fstat+0x44>$/;"	l
c0110962	obj/kernel.asm	/^c0110962:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110965	obj/kernel.asm	/^c0110965:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110968	obj/kernel.asm	/^c0110968:	85 c0                	test   %eax,%eax$/;"	l
c011096a	obj/kernel.asm	/^c011096a:	74 0d                	je     c0110979 <dev_fstat+0x44>$/;"	l
c011096c	obj/kernel.asm	/^c011096c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011096f	obj/kernel.asm	/^c011096f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110972	obj/kernel.asm	/^c0110972:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c0110975	obj/kernel.asm	/^c0110975:	85 c0                	test   %eax,%eax$/;"	l
c0110977	obj/kernel.asm	/^c0110977:	75 24                	jne    c011099d <dev_fstat+0x68>$/;"	l
c0110979	obj/kernel.asm	/^c0110979:	c7 44 24 0c 3c 8e 11 	movl   $0xc0118e3c,0xc(%esp)$/;"	l
c0110980	obj/kernel.asm	/^c0110980:	c0 $/;"	l
c0110981	obj/kernel.asm	/^c0110981:	c7 44 24 08 13 8e 11 	movl   $0xc0118e13,0x8(%esp)$/;"	l
c0110988	obj/kernel.asm	/^c0110988:	c0 $/;"	l
c0110989	obj/kernel.asm	/^c0110989:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)$/;"	l
c0110990	obj/kernel.asm	/^c0110990:	00 $/;"	l
c0110991	obj/kernel.asm	/^c0110991:	c7 04 24 28 8e 11 c0 	movl   $0xc0118e28,(%esp)$/;"	l
c0110998	obj/kernel.asm	/^c0110998:	e8 2b 05 ff ff       	call   c0100ec8 <__panic>$/;"	l
c011099d	obj/kernel.asm	/^c011099d:	c7 44 24 04 8c 8e 11 	movl   $0xc0118e8c,0x4(%esp)$/;"	l
c01109a4	obj/kernel.asm	/^c01109a4:	c0 $/;"	l
c01109a5	obj/kernel.asm	/^c01109a5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01109a8	obj/kernel.asm	/^c01109a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01109ab	obj/kernel.asm	/^c01109ab:	e8 68 e9 ff ff       	call   c010f318 <inode_check>$/;"	l
c01109b0	obj/kernel.asm	/^c01109b0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01109b3	obj/kernel.asm	/^c01109b3:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01109b6	obj/kernel.asm	/^c01109b6:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c01109b9	obj/kernel.asm	/^c01109b9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01109bc	obj/kernel.asm	/^c01109bc:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01109c0	obj/kernel.asm	/^c01109c0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01109c3	obj/kernel.asm	/^c01109c3:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01109c6	obj/kernel.asm	/^c01109c6:	ff d0                	call   *%eax$/;"	l
c01109c8	obj/kernel.asm	/^c01109c8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01109cb	obj/kernel.asm	/^c01109cb:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01109cf	obj/kernel.asm	/^c01109cf:	74 05                	je     c01109d6 <dev_fstat+0xa1>$/;"	l
c01109d1	obj/kernel.asm	/^c01109d1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01109d4	obj/kernel.asm	/^c01109d4:	eb 72                	jmp    c0110a48 <dev_fstat+0x113>$/;"	l
c01109d6	obj/kernel.asm	/^c01109d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01109d9	obj/kernel.asm	/^c01109d9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01109dc	obj/kernel.asm	/^c01109dc:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01109e0	obj/kernel.asm	/^c01109e0:	74 0d                	je     c01109ef <dev_fstat+0xba>$/;"	l
c01109e2	obj/kernel.asm	/^c01109e2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01109e5	obj/kernel.asm	/^c01109e5:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01109e8	obj/kernel.asm	/^c01109e8:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c01109ed	obj/kernel.asm	/^c01109ed:	74 24                	je     c0110a13 <dev_fstat+0xde>$/;"	l
c01109ef	obj/kernel.asm	/^c01109ef:	c7 44 24 0c e0 8d 11 	movl   $0xc0118de0,0xc(%esp)$/;"	l
c01109f6	obj/kernel.asm	/^c01109f6:	c0 $/;"	l
c01109f7	obj/kernel.asm	/^c01109f7:	c7 44 24 08 13 8e 11 	movl   $0xc0118e13,0x8(%esp)$/;"	l
c01109fe	obj/kernel.asm	/^c01109fe:	c0 $/;"	l
c01109ff	obj/kernel.asm	/^c01109ff:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c0110a06	obj/kernel.asm	/^c0110a06:	00 $/;"	l
c0110a07	obj/kernel.asm	/^c0110a07:	c7 04 24 28 8e 11 c0 	movl   $0xc0118e28,(%esp)$/;"	l
c0110a0e	obj/kernel.asm	/^c0110a0e:	e8 b5 04 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110a13	obj/kernel.asm	/^c0110a13:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110a16	obj/kernel.asm	/^c0110a16:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110a19	obj/kernel.asm	/^c0110a19:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110a1c	obj/kernel.asm	/^c0110a1c:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c0110a23	obj/kernel.asm	/^c0110a23:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110a26	obj/kernel.asm	/^c0110a26:	8b 10                	mov    (%eax),%edx$/;"	l
c0110a28	obj/kernel.asm	/^c0110a28:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110a2b	obj/kernel.asm	/^c0110a2b:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0110a2e	obj/kernel.asm	/^c0110a2e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110a31	obj/kernel.asm	/^c0110a31:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0110a34	obj/kernel.asm	/^c0110a34:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110a37	obj/kernel.asm	/^c0110a37:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110a3a	obj/kernel.asm	/^c0110a3a:	0f af d0             	imul   %eax,%edx$/;"	l
c0110a3d	obj/kernel.asm	/^c0110a3d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110a40	obj/kernel.asm	/^c0110a40:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0110a43	obj/kernel.asm	/^c0110a43:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110a48	obj/kernel.asm	/^c0110a48:	c9                   	leave  $/;"	l
c0110a49	obj/kernel.asm	/^c0110a49:	c3                   	ret    $/;"	l
c0110a4a	obj/kernel.asm	/^c0110a4a <dev_gettype>:$/;"	l
c0110a4a	obj/kernel.asm	/^c0110a4a:	55                   	push   %ebp$/;"	l
c0110a4b	obj/kernel.asm	/^c0110a4b:	89 e5                	mov    %esp,%ebp$/;"	l
c0110a4d	obj/kernel.asm	/^c0110a4d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110a50	obj/kernel.asm	/^c0110a50:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110a53	obj/kernel.asm	/^c0110a53:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110a56	obj/kernel.asm	/^c0110a56:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110a5a	obj/kernel.asm	/^c0110a5a:	74 0d                	je     c0110a69 <dev_gettype+0x1f>$/;"	l
c0110a5c	obj/kernel.asm	/^c0110a5c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110a5f	obj/kernel.asm	/^c0110a5f:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110a62	obj/kernel.asm	/^c0110a62:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0110a67	obj/kernel.asm	/^c0110a67:	74 24                	je     c0110a8d <dev_gettype+0x43>$/;"	l
c0110a69	obj/kernel.asm	/^c0110a69:	c7 44 24 0c e0 8d 11 	movl   $0xc0118de0,0xc(%esp)$/;"	l
c0110a70	obj/kernel.asm	/^c0110a70:	c0 $/;"	l
c0110a71	obj/kernel.asm	/^c0110a71:	c7 44 24 08 13 8e 11 	movl   $0xc0118e13,0x8(%esp)$/;"	l
c0110a78	obj/kernel.asm	/^c0110a78:	c0 $/;"	l
c0110a79	obj/kernel.asm	/^c0110a79:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
c0110a80	obj/kernel.asm	/^c0110a80:	00 $/;"	l
c0110a81	obj/kernel.asm	/^c0110a81:	c7 04 24 28 8e 11 c0 	movl   $0xc0118e28,(%esp)$/;"	l
c0110a88	obj/kernel.asm	/^c0110a88:	e8 3b 04 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110a8d	obj/kernel.asm	/^c0110a8d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110a90	obj/kernel.asm	/^c0110a90:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110a93	obj/kernel.asm	/^c0110a93:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110a96	obj/kernel.asm	/^c0110a96:	8b 00                	mov    (%eax),%eax$/;"	l
c0110a98	obj/kernel.asm	/^c0110a98:	85 c0                	test   %eax,%eax$/;"	l
c0110a9a	obj/kernel.asm	/^c0110a9a:	74 07                	je     c0110aa3 <dev_gettype+0x59>$/;"	l
c0110a9c	obj/kernel.asm	/^c0110a9c:	b8 00 50 00 00       	mov    $0x5000,%eax$/;"	l
c0110aa1	obj/kernel.asm	/^c0110aa1:	eb 05                	jmp    c0110aa8 <dev_gettype+0x5e>$/;"	l
c0110aa3	obj/kernel.asm	/^c0110aa3:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0110aa8	obj/kernel.asm	/^c0110aa8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0110aab	obj/kernel.asm	/^c0110aab:	89 02                	mov    %eax,(%edx)$/;"	l
c0110aad	obj/kernel.asm	/^c0110aad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110ab2	obj/kernel.asm	/^c0110ab2:	c9                   	leave  $/;"	l
c0110ab3	obj/kernel.asm	/^c0110ab3:	c3                   	ret    $/;"	l
c0110ab4	obj/kernel.asm	/^c0110ab4 <dev_tryseek>:$/;"	l
c0110ab4	obj/kernel.asm	/^c0110ab4:	55                   	push   %ebp$/;"	l
c0110ab5	obj/kernel.asm	/^c0110ab5:	89 e5                	mov    %esp,%ebp$/;"	l
c0110ab7	obj/kernel.asm	/^c0110ab7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110aba	obj/kernel.asm	/^c0110aba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110abd	obj/kernel.asm	/^c0110abd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110ac0	obj/kernel.asm	/^c0110ac0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110ac4	obj/kernel.asm	/^c0110ac4:	74 0d                	je     c0110ad3 <dev_tryseek+0x1f>$/;"	l
c0110ac6	obj/kernel.asm	/^c0110ac6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110ac9	obj/kernel.asm	/^c0110ac9:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110acc	obj/kernel.asm	/^c0110acc:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0110ad1	obj/kernel.asm	/^c0110ad1:	74 24                	je     c0110af7 <dev_tryseek+0x43>$/;"	l
c0110ad3	obj/kernel.asm	/^c0110ad3:	c7 44 24 0c e0 8d 11 	movl   $0xc0118de0,0xc(%esp)$/;"	l
c0110ada	obj/kernel.asm	/^c0110ada:	c0 $/;"	l
c0110adb	obj/kernel.asm	/^c0110adb:	c7 44 24 08 13 8e 11 	movl   $0xc0118e13,0x8(%esp)$/;"	l
c0110ae2	obj/kernel.asm	/^c0110ae2:	c0 $/;"	l
c0110ae3	obj/kernel.asm	/^c0110ae3:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c0110aea	obj/kernel.asm	/^c0110aea:	00 $/;"	l
c0110aeb	obj/kernel.asm	/^c0110aeb:	c7 04 24 28 8e 11 c0 	movl   $0xc0118e28,(%esp)$/;"	l
c0110af2	obj/kernel.asm	/^c0110af2:	e8 d1 03 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110af7	obj/kernel.asm	/^c0110af7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110afa	obj/kernel.asm	/^c0110afa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110afd	obj/kernel.asm	/^c0110afd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110b00	obj/kernel.asm	/^c0110b00:	8b 00                	mov    (%eax),%eax$/;"	l
c0110b02	obj/kernel.asm	/^c0110b02:	85 c0                	test   %eax,%eax$/;"	l
c0110b04	obj/kernel.asm	/^c0110b04:	74 38                	je     c0110b3e <dev_tryseek+0x8a>$/;"	l
c0110b06	obj/kernel.asm	/^c0110b06:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110b09	obj/kernel.asm	/^c0110b09:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0110b0c	obj/kernel.asm	/^c0110b0c:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
c0110b0f	obj/kernel.asm	/^c0110b0f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0110b14	obj/kernel.asm	/^c0110b14:	f7 f1                	div    %ecx$/;"	l
c0110b16	obj/kernel.asm	/^c0110b16:	89 d0                	mov    %edx,%eax$/;"	l
c0110b18	obj/kernel.asm	/^c0110b18:	85 c0                	test   %eax,%eax$/;"	l
c0110b1a	obj/kernel.asm	/^c0110b1a:	75 22                	jne    c0110b3e <dev_tryseek+0x8a>$/;"	l
c0110b1c	obj/kernel.asm	/^c0110b1c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0110b20	obj/kernel.asm	/^c0110b20:	78 1c                	js     c0110b3e <dev_tryseek+0x8a>$/;"	l
c0110b22	obj/kernel.asm	/^c0110b22:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0110b25	obj/kernel.asm	/^c0110b25:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110b28	obj/kernel.asm	/^c0110b28:	8b 08                	mov    (%eax),%ecx$/;"	l
c0110b2a	obj/kernel.asm	/^c0110b2a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110b2d	obj/kernel.asm	/^c0110b2d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110b30	obj/kernel.asm	/^c0110b30:	0f af c1             	imul   %ecx,%eax$/;"	l
c0110b33	obj/kernel.asm	/^c0110b33:	39 c2                	cmp    %eax,%edx$/;"	l
c0110b35	obj/kernel.asm	/^c0110b35:	73 07                	jae    c0110b3e <dev_tryseek+0x8a>$/;"	l
c0110b37	obj/kernel.asm	/^c0110b37:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110b3c	obj/kernel.asm	/^c0110b3c:	eb 05                	jmp    c0110b43 <dev_tryseek+0x8f>$/;"	l
c0110b3e	obj/kernel.asm	/^c0110b3e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0110b43	obj/kernel.asm	/^c0110b43:	c9                   	leave  $/;"	l
c0110b44	obj/kernel.asm	/^c0110b44:	c3                   	ret    $/;"	l
c0110b45	obj/kernel.asm	/^c0110b45 <dev_lookup>:$/;"	l
c0110b45	obj/kernel.asm	/^c0110b45:	55                   	push   %ebp$/;"	l
c0110b46	obj/kernel.asm	/^c0110b46:	89 e5                	mov    %esp,%ebp$/;"	l
c0110b48	obj/kernel.asm	/^c0110b48:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110b4b	obj/kernel.asm	/^c0110b4b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110b4e	obj/kernel.asm	/^c0110b4e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110b51	obj/kernel.asm	/^c0110b51:	84 c0                	test   %al,%al$/;"	l
c0110b53	obj/kernel.asm	/^c0110b53:	74 07                	je     c0110b5c <dev_lookup+0x17>$/;"	l
c0110b55	obj/kernel.asm	/^c0110b55:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0110b5a	obj/kernel.asm	/^c0110b5a:	eb 18                	jmp    c0110b74 <dev_lookup+0x2f>$/;"	l
c0110b5c	obj/kernel.asm	/^c0110b5c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110b5f	obj/kernel.asm	/^c0110b5f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110b62	obj/kernel.asm	/^c0110b62:	e8 a9 e5 ff ff       	call   c010f110 <inode_ref_inc>$/;"	l
c0110b67	obj/kernel.asm	/^c0110b67:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0110b6a	obj/kernel.asm	/^c0110b6a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110b6d	obj/kernel.asm	/^c0110b6d:	89 10                	mov    %edx,(%eax)$/;"	l
c0110b6f	obj/kernel.asm	/^c0110b6f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110b74	obj/kernel.asm	/^c0110b74:	c9                   	leave  $/;"	l
c0110b75	obj/kernel.asm	/^c0110b75:	c3                   	ret    $/;"	l
c0110b76	obj/kernel.asm	/^c0110b76 <dev_init>:$/;"	l
c0110b76	obj/kernel.asm	/^c0110b76:	55                   	push   %ebp$/;"	l
c0110b77	obj/kernel.asm	/^c0110b77:	89 e5                	mov    %esp,%ebp$/;"	l
c0110b79	obj/kernel.asm	/^c0110b79:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110b7c	obj/kernel.asm	/^c0110b7c:	e8 8f 07 00 00       	call   c0111310 <dev_init_stdin>$/;"	l
c0110b81	obj/kernel.asm	/^c0110b81:	e8 0a 09 00 00       	call   c0111490 <dev_init_stdout>$/;"	l
c0110b86	obj/kernel.asm	/^c0110b86:	e8 26 04 00 00       	call   c0110fb1 <dev_init_disk0>$/;"	l
c0110b8b	obj/kernel.asm	/^c0110b8b:	c9                   	leave  $/;"	l
c0110b8c	obj/kernel.asm	/^c0110b8c:	c3                   	ret    $/;"	l
c0110b8d	obj/kernel.asm	/^c0110b8d <dev_create_inode>:$/;"	l
c0110b8d	obj/kernel.asm	/^c0110b8d:	55                   	push   %ebp$/;"	l
c0110b8e	obj/kernel.asm	/^c0110b8e:	89 e5                	mov    %esp,%ebp$/;"	l
c0110b90	obj/kernel.asm	/^c0110b90:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110b93	obj/kernel.asm	/^c0110b93:	c7 04 24 34 12 00 00 	movl   $0x1234,(%esp)$/;"	l
c0110b9a	obj/kernel.asm	/^c0110b9a:	e8 96 e4 ff ff       	call   c010f035 <__alloc_inode>$/;"	l
c0110b9f	obj/kernel.asm	/^c0110b9f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110ba2	obj/kernel.asm	/^c0110ba2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110ba6	obj/kernel.asm	/^c0110ba6:	74 1b                	je     c0110bc3 <dev_create_inode+0x36>$/;"	l
c0110ba8	obj/kernel.asm	/^c0110ba8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0110baf	obj/kernel.asm	/^c0110baf:	00 $/;"	l
c0110bb0	obj/kernel.asm	/^c0110bb0:	c7 44 24 04 a0 8e 11 	movl   $0xc0118ea0,0x4(%esp)$/;"	l
c0110bb7	obj/kernel.asm	/^c0110bb7:	c0 $/;"	l
c0110bb8	obj/kernel.asm	/^c0110bb8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110bbb	obj/kernel.asm	/^c0110bbb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110bbe	obj/kernel.asm	/^c0110bbe:	e8 9b e4 ff ff       	call   c010f05e <inode_init>$/;"	l
c0110bc3	obj/kernel.asm	/^c0110bc3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110bc6	obj/kernel.asm	/^c0110bc6:	c9                   	leave  $/;"	l
c0110bc7	obj/kernel.asm	/^c0110bc7:	c3                   	ret    $/;"	l
c0110bc8	obj/kernel.asm	/^c0110bc8 <lock_disk0>:$/;"	l
c0110bc8	obj/kernel.asm	/^c0110bc8:	55                   	push   %ebp$/;"	l
c0110bc9	obj/kernel.asm	/^c0110bc9:	89 e5                	mov    %esp,%ebp$/;"	l
c0110bcb	obj/kernel.asm	/^c0110bcb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110bce	obj/kernel.asm	/^c0110bce:	c7 04 24 e0 2f 15 c0 	movl   $0xc0152fe0,(%esp)$/;"	l
c0110bd5	obj/kernel.asm	/^c0110bd5:	e8 25 91 ff ff       	call   c0109cff <down>$/;"	l
c0110bda	obj/kernel.asm	/^c0110bda:	c9                   	leave  $/;"	l
c0110bdb	obj/kernel.asm	/^c0110bdb:	c3                   	ret    $/;"	l
c0110bdc	obj/kernel.asm	/^c0110bdc <unlock_disk0>:$/;"	l
c0110bdc	obj/kernel.asm	/^c0110bdc:	55                   	push   %ebp$/;"	l
c0110bdd	obj/kernel.asm	/^c0110bdd:	89 e5                	mov    %esp,%ebp$/;"	l
c0110bdf	obj/kernel.asm	/^c0110bdf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110be2	obj/kernel.asm	/^c0110be2:	c7 04 24 e0 2f 15 c0 	movl   $0xc0152fe0,(%esp)$/;"	l
c0110be9	obj/kernel.asm	/^c0110be9:	e8 f6 90 ff ff       	call   c0109ce4 <up>$/;"	l
c0110bee	obj/kernel.asm	/^c0110bee:	c9                   	leave  $/;"	l
c0110bef	obj/kernel.asm	/^c0110bef:	c3                   	ret    $/;"	l
c0110bf0	obj/kernel.asm	/^c0110bf0 <disk0_open>:$/;"	l
c0110bf0	obj/kernel.asm	/^c0110bf0:	55                   	push   %ebp$/;"	l
c0110bf1	obj/kernel.asm	/^c0110bf1:	89 e5                	mov    %esp,%ebp$/;"	l
c0110bf3	obj/kernel.asm	/^c0110bf3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110bf8	obj/kernel.asm	/^c0110bf8:	5d                   	pop    %ebp$/;"	l
c0110bf9	obj/kernel.asm	/^c0110bf9:	c3                   	ret    $/;"	l
c0110bfa	obj/kernel.asm	/^c0110bfa <disk0_close>:$/;"	l
c0110bfa	obj/kernel.asm	/^c0110bfa:	55                   	push   %ebp$/;"	l
c0110bfb	obj/kernel.asm	/^c0110bfb:	89 e5                	mov    %esp,%ebp$/;"	l
c0110bfd	obj/kernel.asm	/^c0110bfd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110c02	obj/kernel.asm	/^c0110c02:	5d                   	pop    %ebp$/;"	l
c0110c03	obj/kernel.asm	/^c0110c03:	c3                   	ret    $/;"	l
c0110c04	obj/kernel.asm	/^c0110c04 <disk0_read_blks_nolock>:$/;"	l
c0110c04	obj/kernel.asm	/^c0110c04:	55                   	push   %ebp$/;"	l
c0110c05	obj/kernel.asm	/^c0110c05:	89 e5                	mov    %esp,%ebp$/;"	l
c0110c07	obj/kernel.asm	/^c0110c07:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0110c0a	obj/kernel.asm	/^c0110c0a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110c0d	obj/kernel.asm	/^c0110c0d:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0110c10	obj/kernel.asm	/^c0110c10:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110c13	obj/kernel.asm	/^c0110c13:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110c16	obj/kernel.asm	/^c0110c16:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0110c19	obj/kernel.asm	/^c0110c19:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110c1c	obj/kernel.asm	/^c0110c1c:	a1 dc 2f 15 c0       	mov    0xc0152fdc,%eax$/;"	l
c0110c21	obj/kernel.asm	/^c0110c21:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0110c24	obj/kernel.asm	/^c0110c24:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0110c28	obj/kernel.asm	/^c0110c28:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0110c2c	obj/kernel.asm	/^c0110c2c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110c2f	obj/kernel.asm	/^c0110c2f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110c33	obj/kernel.asm	/^c0110c33:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c0110c3a	obj/kernel.asm	/^c0110c3a:	e8 61 10 ff ff       	call   c0101ca0 <ide_read_secs>$/;"	l
c0110c3f	obj/kernel.asm	/^c0110c3f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110c42	obj/kernel.asm	/^c0110c42:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110c46	obj/kernel.asm	/^c0110c46:	74 3f                	je     c0110c87 <disk0_read_blks_nolock+0x83>$/;"	l
c0110c48	obj/kernel.asm	/^c0110c48:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110c4b	obj/kernel.asm	/^c0110c4b:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
c0110c4f	obj/kernel.asm	/^c0110c4f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110c52	obj/kernel.asm	/^c0110c52:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
c0110c56	obj/kernel.asm	/^c0110c56:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110c59	obj/kernel.asm	/^c0110c59:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0110c5d	obj/kernel.asm	/^c0110c5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110c60	obj/kernel.asm	/^c0110c60:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0110c64	obj/kernel.asm	/^c0110c64:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110c67	obj/kernel.asm	/^c0110c67:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0110c6b	obj/kernel.asm	/^c0110c6b:	c7 44 24 08 e0 8e 11 	movl   $0xc0118ee0,0x8(%esp)$/;"	l
c0110c72	obj/kernel.asm	/^c0110c72:	c0 $/;"	l
c0110c73	obj/kernel.asm	/^c0110c73:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
c0110c7a	obj/kernel.asm	/^c0110c7a:	00 $/;"	l
c0110c7b	obj/kernel.asm	/^c0110c7b:	c7 04 24 28 8f 11 c0 	movl   $0xc0118f28,(%esp)$/;"	l
c0110c82	obj/kernel.asm	/^c0110c82:	e8 41 02 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110c87	obj/kernel.asm	/^c0110c87:	c9                   	leave  $/;"	l
c0110c88	obj/kernel.asm	/^c0110c88:	c3                   	ret    $/;"	l
c0110c89	obj/kernel.asm	/^c0110c89 <disk0_write_blks_nolock>:$/;"	l
c0110c89	obj/kernel.asm	/^c0110c89:	55                   	push   %ebp$/;"	l
c0110c8a	obj/kernel.asm	/^c0110c8a:	89 e5                	mov    %esp,%ebp$/;"	l
c0110c8c	obj/kernel.asm	/^c0110c8c:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0110c8f	obj/kernel.asm	/^c0110c8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110c92	obj/kernel.asm	/^c0110c92:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0110c95	obj/kernel.asm	/^c0110c95:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110c98	obj/kernel.asm	/^c0110c98:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110c9b	obj/kernel.asm	/^c0110c9b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0110c9e	obj/kernel.asm	/^c0110c9e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110ca1	obj/kernel.asm	/^c0110ca1:	a1 dc 2f 15 c0       	mov    0xc0152fdc,%eax$/;"	l
c0110ca6	obj/kernel.asm	/^c0110ca6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0110ca9	obj/kernel.asm	/^c0110ca9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0110cad	obj/kernel.asm	/^c0110cad:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0110cb1	obj/kernel.asm	/^c0110cb1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110cb4	obj/kernel.asm	/^c0110cb4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110cb8	obj/kernel.asm	/^c0110cb8:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c0110cbf	obj/kernel.asm	/^c0110cbf:	e8 1e 12 ff ff       	call   c0101ee2 <ide_write_secs>$/;"	l
c0110cc4	obj/kernel.asm	/^c0110cc4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110cc7	obj/kernel.asm	/^c0110cc7:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110ccb	obj/kernel.asm	/^c0110ccb:	74 3f                	je     c0110d0c <disk0_write_blks_nolock+0x83>$/;"	l
c0110ccd	obj/kernel.asm	/^c0110ccd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110cd0	obj/kernel.asm	/^c0110cd0:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
c0110cd4	obj/kernel.asm	/^c0110cd4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110cd7	obj/kernel.asm	/^c0110cd7:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
c0110cdb	obj/kernel.asm	/^c0110cdb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110cde	obj/kernel.asm	/^c0110cde:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0110ce2	obj/kernel.asm	/^c0110ce2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110ce5	obj/kernel.asm	/^c0110ce5:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0110ce9	obj/kernel.asm	/^c0110ce9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110cec	obj/kernel.asm	/^c0110cec:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0110cf0	obj/kernel.asm	/^c0110cf0:	c7 44 24 08 44 8f 11 	movl   $0xc0118f44,0x8(%esp)$/;"	l
c0110cf7	obj/kernel.asm	/^c0110cf7:	c0 $/;"	l
c0110cf8	obj/kernel.asm	/^c0110cf8:	c7 44 24 04 38 00 00 	movl   $0x38,0x4(%esp)$/;"	l
c0110cff	obj/kernel.asm	/^c0110cff:	00 $/;"	l
c0110d00	obj/kernel.asm	/^c0110d00:	c7 04 24 28 8f 11 c0 	movl   $0xc0118f28,(%esp)$/;"	l
c0110d07	obj/kernel.asm	/^c0110d07:	e8 bc 01 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110d0c	obj/kernel.asm	/^c0110d0c:	c9                   	leave  $/;"	l
c0110d0d	obj/kernel.asm	/^c0110d0d:	c3                   	ret    $/;"	l
c0110d0e	obj/kernel.asm	/^c0110d0e <disk0_io>:$/;"	l
c0110d0e	obj/kernel.asm	/^c0110d0e:	55                   	push   %ebp$/;"	l
c0110d0f	obj/kernel.asm	/^c0110d0f:	89 e5                	mov    %esp,%ebp$/;"	l
c0110d11	obj/kernel.asm	/^c0110d11:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0110d14	obj/kernel.asm	/^c0110d14:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110d17	obj/kernel.asm	/^c0110d17:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110d1a	obj/kernel.asm	/^c0110d1a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0110d1d	obj/kernel.asm	/^c0110d1d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110d20	obj/kernel.asm	/^c0110d20:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0110d23	obj/kernel.asm	/^c0110d23:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110d26	obj/kernel.asm	/^c0110d26:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110d29	obj/kernel.asm	/^c0110d29:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c0110d2f	obj/kernel.asm	/^c0110d2f:	85 c0                	test   %eax,%eax$/;"	l
c0110d31	obj/kernel.asm	/^c0110d31:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0110d34	obj/kernel.asm	/^c0110d34:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c0110d37	obj/kernel.asm	/^c0110d37:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110d3a	obj/kernel.asm	/^c0110d3a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110d3d	obj/kernel.asm	/^c0110d3d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0110d40	obj/kernel.asm	/^c0110d40:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110d43	obj/kernel.asm	/^c0110d43:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110d46	obj/kernel.asm	/^c0110d46:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0110d4b	obj/kernel.asm	/^c0110d4b:	85 c0                	test   %eax,%eax$/;"	l
c0110d4d	obj/kernel.asm	/^c0110d4d:	75 0c                	jne    c0110d5b <disk0_io+0x4d>$/;"	l
c0110d4f	obj/kernel.asm	/^c0110d4f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110d52	obj/kernel.asm	/^c0110d52:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0110d57	obj/kernel.asm	/^c0110d57:	85 c0                	test   %eax,%eax$/;"	l
c0110d59	obj/kernel.asm	/^c0110d59:	74 0a                	je     c0110d65 <disk0_io+0x57>$/;"	l
c0110d5b	obj/kernel.asm	/^c0110d5b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0110d60	obj/kernel.asm	/^c0110d60:	e9 7a 01 00 00       	jmp    c0110edf <disk0_io+0x1d1>$/;"	l
c0110d65	obj/kernel.asm	/^c0110d65:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110d68	obj/kernel.asm	/^c0110d68:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0110d6b	obj/kernel.asm	/^c0110d6b:	01 c2                	add    %eax,%edx$/;"	l
c0110d6d	obj/kernel.asm	/^c0110d6d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110d70	obj/kernel.asm	/^c0110d70:	8b 00                	mov    (%eax),%eax$/;"	l
c0110d72	obj/kernel.asm	/^c0110d72:	39 c2                	cmp    %eax,%edx$/;"	l
c0110d74	obj/kernel.asm	/^c0110d74:	76 0a                	jbe    c0110d80 <disk0_io+0x72>$/;"	l
c0110d76	obj/kernel.asm	/^c0110d76:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0110d7b	obj/kernel.asm	/^c0110d7b:	e9 5f 01 00 00       	jmp    c0110edf <disk0_io+0x1d1>$/;"	l
c0110d80	obj/kernel.asm	/^c0110d80:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110d84	obj/kernel.asm	/^c0110d84:	75 0a                	jne    c0110d90 <disk0_io+0x82>$/;"	l
c0110d86	obj/kernel.asm	/^c0110d86:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110d8b	obj/kernel.asm	/^c0110d8b:	e9 4f 01 00 00       	jmp    c0110edf <disk0_io+0x1d1>$/;"	l
c0110d90	obj/kernel.asm	/^c0110d90:	e8 33 fe ff ff       	call   c0110bc8 <lock_disk0>$/;"	l
c0110d95	obj/kernel.asm	/^c0110d95:	e9 31 01 00 00       	jmp    c0110ecb <disk0_io+0x1bd>$/;"	l
c0110d9a	obj/kernel.asm	/^c0110d9a:	c7 45 e8 00 40 00 00 	movl   $0x4000,-0x18(%ebp)$/;"	l
c0110da1	obj/kernel.asm	/^c0110da1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0110da5	obj/kernel.asm	/^c0110da5:	0f 84 89 00 00 00    	je     c0110e34 <disk0_io+0x126>$/;"	l
c0110dab	obj/kernel.asm	/^c0110dab:	a1 dc 2f 15 c0       	mov    0xc0152fdc,%eax$/;"	l
c0110db0	obj/kernel.asm	/^c0110db0:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c0110db3	obj/kernel.asm	/^c0110db3:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0110db7	obj/kernel.asm	/^c0110db7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0110dbe	obj/kernel.asm	/^c0110dbe:	00 $/;"	l
c0110dbf	obj/kernel.asm	/^c0110dbf:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0110dc2	obj/kernel.asm	/^c0110dc2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0110dc6	obj/kernel.asm	/^c0110dc6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110dca	obj/kernel.asm	/^c0110dca:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110dcd	obj/kernel.asm	/^c0110dcd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110dd0	obj/kernel.asm	/^c0110dd0:	e8 9f a5 ff ff       	call   c010b374 <iobuf_move>$/;"	l
c0110dd5	obj/kernel.asm	/^c0110dd5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110dd8	obj/kernel.asm	/^c0110dd8:	85 c0                	test   %eax,%eax$/;"	l
c0110dda	obj/kernel.asm	/^c0110dda:	74 14                	je     c0110df0 <disk0_io+0xe2>$/;"	l
c0110ddc	obj/kernel.asm	/^c0110ddc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110ddf	obj/kernel.asm	/^c0110ddf:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0110de2	obj/kernel.asm	/^c0110de2:	77 0c                	ja     c0110df0 <disk0_io+0xe2>$/;"	l
c0110de4	obj/kernel.asm	/^c0110de4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110de7	obj/kernel.asm	/^c0110de7:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0110dec	obj/kernel.asm	/^c0110dec:	85 c0                	test   %eax,%eax$/;"	l
c0110dee	obj/kernel.asm	/^c0110dee:	74 24                	je     c0110e14 <disk0_io+0x106>$/;"	l
c0110df0	obj/kernel.asm	/^c0110df0:	c7 44 24 0c 90 8f 11 	movl   $0xc0118f90,0xc(%esp)$/;"	l
c0110df7	obj/kernel.asm	/^c0110df7:	c0 $/;"	l
c0110df8	obj/kernel.asm	/^c0110df8:	c7 44 24 08 ce 8f 11 	movl   $0xc0118fce,0x8(%esp)$/;"	l
c0110dff	obj/kernel.asm	/^c0110dff:	c0 $/;"	l
c0110e00	obj/kernel.asm	/^c0110e00:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
c0110e07	obj/kernel.asm	/^c0110e07:	00 $/;"	l
c0110e08	obj/kernel.asm	/^c0110e08:	c7 04 24 28 8f 11 c0 	movl   $0xc0118f28,(%esp)$/;"	l
c0110e0f	obj/kernel.asm	/^c0110e0f:	e8 b4 00 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110e14	obj/kernel.asm	/^c0110e14:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110e17	obj/kernel.asm	/^c0110e17:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0110e1a	obj/kernel.asm	/^c0110e1a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110e1d	obj/kernel.asm	/^c0110e1d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110e20	obj/kernel.asm	/^c0110e20:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110e24	obj/kernel.asm	/^c0110e24:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110e27	obj/kernel.asm	/^c0110e27:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110e2a	obj/kernel.asm	/^c0110e2a:	e8 5a fe ff ff       	call   c0110c89 <disk0_write_blks_nolock>$/;"	l
c0110e2f	obj/kernel.asm	/^c0110e2f:	e9 8b 00 00 00       	jmp    c0110ebf <disk0_io+0x1b1>$/;"	l
c0110e34	obj/kernel.asm	/^c0110e34:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110e37	obj/kernel.asm	/^c0110e37:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0110e3a	obj/kernel.asm	/^c0110e3a:	76 06                	jbe    c0110e42 <disk0_io+0x134>$/;"	l
c0110e3c	obj/kernel.asm	/^c0110e3c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110e3f	obj/kernel.asm	/^c0110e3f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110e42	obj/kernel.asm	/^c0110e42:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110e45	obj/kernel.asm	/^c0110e45:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0110e48	obj/kernel.asm	/^c0110e48:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110e4b	obj/kernel.asm	/^c0110e4b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110e4e	obj/kernel.asm	/^c0110e4e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110e52	obj/kernel.asm	/^c0110e52:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110e55	obj/kernel.asm	/^c0110e55:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110e58	obj/kernel.asm	/^c0110e58:	e8 a7 fd ff ff       	call   c0110c04 <disk0_read_blks_nolock>$/;"	l
c0110e5d	obj/kernel.asm	/^c0110e5d:	a1 dc 2f 15 c0       	mov    0xc0152fdc,%eax$/;"	l
c0110e62	obj/kernel.asm	/^c0110e62:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c0110e65	obj/kernel.asm	/^c0110e65:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0110e69	obj/kernel.asm	/^c0110e69:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0110e70	obj/kernel.asm	/^c0110e70:	00 $/;"	l
c0110e71	obj/kernel.asm	/^c0110e71:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0110e74	obj/kernel.asm	/^c0110e74:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0110e78	obj/kernel.asm	/^c0110e78:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110e7c	obj/kernel.asm	/^c0110e7c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110e7f	obj/kernel.asm	/^c0110e7f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110e82	obj/kernel.asm	/^c0110e82:	e8 ed a4 ff ff       	call   c010b374 <iobuf_move>$/;"	l
c0110e87	obj/kernel.asm	/^c0110e87:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110e8a	obj/kernel.asm	/^c0110e8a:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0110e8d	obj/kernel.asm	/^c0110e8d:	75 0c                	jne    c0110e9b <disk0_io+0x18d>$/;"	l
c0110e8f	obj/kernel.asm	/^c0110e8f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110e92	obj/kernel.asm	/^c0110e92:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0110e97	obj/kernel.asm	/^c0110e97:	85 c0                	test   %eax,%eax$/;"	l
c0110e99	obj/kernel.asm	/^c0110e99:	74 24                	je     c0110ebf <disk0_io+0x1b1>$/;"	l
c0110e9b	obj/kernel.asm	/^c0110e9b:	c7 44 24 0c e4 8f 11 	movl   $0xc0118fe4,0xc(%esp)$/;"	l
c0110ea2	obj/kernel.asm	/^c0110ea2:	c0 $/;"	l
c0110ea3	obj/kernel.asm	/^c0110ea3:	c7 44 24 08 ce 8f 11 	movl   $0xc0118fce,0x8(%esp)$/;"	l
c0110eaa	obj/kernel.asm	/^c0110eaa:	c0 $/;"	l
c0110eab	obj/kernel.asm	/^c0110eab:	c7 44 24 04 62 00 00 	movl   $0x62,0x4(%esp)$/;"	l
c0110eb2	obj/kernel.asm	/^c0110eb2:	00 $/;"	l
c0110eb3	obj/kernel.asm	/^c0110eb3:	c7 04 24 28 8f 11 c0 	movl   $0xc0118f28,(%esp)$/;"	l
c0110eba	obj/kernel.asm	/^c0110eba:	e8 09 00 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110ebf	obj/kernel.asm	/^c0110ebf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110ec2	obj/kernel.asm	/^c0110ec2:	29 45 f4             	sub    %eax,-0xc(%ebp)$/;"	l
c0110ec5	obj/kernel.asm	/^c0110ec5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110ec8	obj/kernel.asm	/^c0110ec8:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0110ecb	obj/kernel.asm	/^c0110ecb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110ecf	obj/kernel.asm	/^c0110ecf:	0f 85 c5 fe ff ff    	jne    c0110d9a <disk0_io+0x8c>$/;"	l
c0110ed5	obj/kernel.asm	/^c0110ed5:	e8 02 fd ff ff       	call   c0110bdc <unlock_disk0>$/;"	l
c0110eda	obj/kernel.asm	/^c0110eda:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110edf	obj/kernel.asm	/^c0110edf:	c9                   	leave  $/;"	l
c0110ee0	obj/kernel.asm	/^c0110ee0:	c3                   	ret    $/;"	l
c0110ee1	obj/kernel.asm	/^c0110ee1 <disk0_ioctl>:$/;"	l
c0110ee1	obj/kernel.asm	/^c0110ee1:	55                   	push   %ebp$/;"	l
c0110ee2	obj/kernel.asm	/^c0110ee2:	89 e5                	mov    %esp,%ebp$/;"	l
c0110ee4	obj/kernel.asm	/^c0110ee4:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c0110ee9	obj/kernel.asm	/^c0110ee9:	5d                   	pop    %ebp$/;"	l
c0110eea	obj/kernel.asm	/^c0110eea:	c3                   	ret    $/;"	l
c0110eeb	obj/kernel.asm	/^c0110eeb <disk0_device_init>:$/;"	l
c0110eeb	obj/kernel.asm	/^c0110eeb:	55                   	push   %ebp$/;"	l
c0110eec	obj/kernel.asm	/^c0110eec:	89 e5                	mov    %esp,%ebp$/;"	l
c0110eee	obj/kernel.asm	/^c0110eee:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110ef1	obj/kernel.asm	/^c0110ef1:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c0110ef8	obj/kernel.asm	/^c0110ef8:	e8 25 0d ff ff       	call   c0101c22 <ide_device_valid>$/;"	l
c0110efd	obj/kernel.asm	/^c0110efd:	85 c0                	test   %eax,%eax$/;"	l
c0110eff	obj/kernel.asm	/^c0110eff:	75 1c                	jne    c0110f1d <disk0_device_init+0x32>$/;"	l
c0110f01	obj/kernel.asm	/^c0110f01:	c7 44 24 08 14 90 11 	movl   $0xc0119014,0x8(%esp)$/;"	l
c0110f08	obj/kernel.asm	/^c0110f08:	c0 $/;"	l
c0110f09	obj/kernel.asm	/^c0110f09:	c7 44 24 04 73 00 00 	movl   $0x73,0x4(%esp)$/;"	l
c0110f10	obj/kernel.asm	/^c0110f10:	00 $/;"	l
c0110f11	obj/kernel.asm	/^c0110f11:	c7 04 24 28 8f 11 c0 	movl   $0xc0118f28,(%esp)$/;"	l
c0110f18	obj/kernel.asm	/^c0110f18:	e8 ab ff fe ff       	call   c0100ec8 <__panic>$/;"	l
c0110f1d	obj/kernel.asm	/^c0110f1d:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c0110f24	obj/kernel.asm	/^c0110f24:	e8 38 0d ff ff       	call   c0101c61 <ide_device_size>$/;"	l
c0110f29	obj/kernel.asm	/^c0110f29:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0110f2c	obj/kernel.asm	/^c0110f2c:	89 c2                	mov    %eax,%edx$/;"	l
c0110f2e	obj/kernel.asm	/^c0110f2e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f31	obj/kernel.asm	/^c0110f31:	89 10                	mov    %edx,(%eax)$/;"	l
c0110f33	obj/kernel.asm	/^c0110f33:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f36	obj/kernel.asm	/^c0110f36:	c7 40 04 00 10 00 00 	movl   $0x1000,0x4(%eax)$/;"	l
c0110f3d	obj/kernel.asm	/^c0110f3d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f40	obj/kernel.asm	/^c0110f40:	c7 40 08 f0 0b 11 c0 	movl   $0xc0110bf0,0x8(%eax)$/;"	l
c0110f47	obj/kernel.asm	/^c0110f47:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f4a	obj/kernel.asm	/^c0110f4a:	c7 40 0c fa 0b 11 c0 	movl   $0xc0110bfa,0xc(%eax)$/;"	l
c0110f51	obj/kernel.asm	/^c0110f51:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f54	obj/kernel.asm	/^c0110f54:	c7 40 10 0e 0d 11 c0 	movl   $0xc0110d0e,0x10(%eax)$/;"	l
c0110f5b	obj/kernel.asm	/^c0110f5b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f5e	obj/kernel.asm	/^c0110f5e:	c7 40 14 e1 0e 11 c0 	movl   $0xc0110ee1,0x14(%eax)$/;"	l
c0110f65	obj/kernel.asm	/^c0110f65:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0110f6c	obj/kernel.asm	/^c0110f6c:	00 $/;"	l
c0110f6d	obj/kernel.asm	/^c0110f6d:	c7 04 24 e0 2f 15 c0 	movl   $0xc0152fe0,(%esp)$/;"	l
c0110f74	obj/kernel.asm	/^c0110f74:	e8 f8 8b ff ff       	call   c0109b71 <sem_init>$/;"	l
c0110f79	obj/kernel.asm	/^c0110f79:	c7 04 24 00 40 00 00 	movl   $0x4000,(%esp)$/;"	l
c0110f80	obj/kernel.asm	/^c0110f80:	e8 5a 3d ff ff       	call   c0104cdf <kmalloc>$/;"	l
c0110f85	obj/kernel.asm	/^c0110f85:	a3 dc 2f 15 c0       	mov    %eax,0xc0152fdc$/;"	l
c0110f8a	obj/kernel.asm	/^c0110f8a:	a1 dc 2f 15 c0       	mov    0xc0152fdc,%eax$/;"	l
c0110f8f	obj/kernel.asm	/^c0110f8f:	85 c0                	test   %eax,%eax$/;"	l
c0110f91	obj/kernel.asm	/^c0110f91:	75 1c                	jne    c0110faf <disk0_device_init+0xc4>$/;"	l
c0110f93	obj/kernel.asm	/^c0110f93:	c7 44 24 08 33 90 11 	movl   $0xc0119033,0x8(%esp)$/;"	l
c0110f9a	obj/kernel.asm	/^c0110f9a:	c0 $/;"	l
c0110f9b	obj/kernel.asm	/^c0110f9b:	c7 44 24 04 7f 00 00 	movl   $0x7f,0x4(%esp)$/;"	l
c0110fa2	obj/kernel.asm	/^c0110fa2:	00 $/;"	l
c0110fa3	obj/kernel.asm	/^c0110fa3:	c7 04 24 28 8f 11 c0 	movl   $0xc0118f28,(%esp)$/;"	l
c0110faa	obj/kernel.asm	/^c0110faa:	e8 19 ff fe ff       	call   c0100ec8 <__panic>$/;"	l
c0110faf	obj/kernel.asm	/^c0110faf:	c9                   	leave  $/;"	l
c0110fb0	obj/kernel.asm	/^c0110fb0:	c3                   	ret    $/;"	l
c0110fb1	obj/kernel.asm	/^c0110fb1 <dev_init_disk0>:$/;"	l
c0110fb1	obj/kernel.asm	/^c0110fb1:	55                   	push   %ebp$/;"	l
c0110fb2	obj/kernel.asm	/^c0110fb2:	89 e5                	mov    %esp,%ebp$/;"	l
c0110fb4	obj/kernel.asm	/^c0110fb4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110fb7	obj/kernel.asm	/^c0110fb7:	e8 d1 fb ff ff       	call   c0110b8d <dev_create_inode>$/;"	l
c0110fbc	obj/kernel.asm	/^c0110fbc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110fbf	obj/kernel.asm	/^c0110fbf:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110fc3	obj/kernel.asm	/^c0110fc3:	75 1c                	jne    c0110fe1 <dev_init_disk0+0x30>$/;"	l
c0110fc5	obj/kernel.asm	/^c0110fc5:	c7 44 24 08 4f 90 11 	movl   $0xc011904f,0x8(%esp)$/;"	l
c0110fcc	obj/kernel.asm	/^c0110fcc:	c0 $/;"	l
c0110fcd	obj/kernel.asm	/^c0110fcd:	c7 44 24 04 87 00 00 	movl   $0x87,0x4(%esp)$/;"	l
c0110fd4	obj/kernel.asm	/^c0110fd4:	00 $/;"	l
c0110fd5	obj/kernel.asm	/^c0110fd5:	c7 04 24 28 8f 11 c0 	movl   $0xc0118f28,(%esp)$/;"	l
c0110fdc	obj/kernel.asm	/^c0110fdc:	e8 e7 fe fe ff       	call   c0100ec8 <__panic>$/;"	l
c0110fe1	obj/kernel.asm	/^c0110fe1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110fe4	obj/kernel.asm	/^c0110fe4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110fe7	obj/kernel.asm	/^c0110fe7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110feb	obj/kernel.asm	/^c0110feb:	74 0d                	je     c0110ffa <dev_init_disk0+0x49>$/;"	l
c0110fed	obj/kernel.asm	/^c0110fed:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110ff0	obj/kernel.asm	/^c0110ff0:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110ff3	obj/kernel.asm	/^c0110ff3:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0110ff8	obj/kernel.asm	/^c0110ff8:	74 24                	je     c011101e <dev_init_disk0+0x6d>$/;"	l
c0110ffa	obj/kernel.asm	/^c0110ffa:	c7 44 24 0c 68 90 11 	movl   $0xc0119068,0xc(%esp)$/;"	l
c0111001	obj/kernel.asm	/^c0111001:	c0 $/;"	l
c0111002	obj/kernel.asm	/^c0111002:	c7 44 24 08 ce 8f 11 	movl   $0xc0118fce,0x8(%esp)$/;"	l
c0111009	obj/kernel.asm	/^c0111009:	c0 $/;"	l
c011100a	obj/kernel.asm	/^c011100a:	c7 44 24 04 89 00 00 	movl   $0x89,0x4(%esp)$/;"	l
c0111011	obj/kernel.asm	/^c0111011:	00 $/;"	l
c0111012	obj/kernel.asm	/^c0111012:	c7 04 24 28 8f 11 c0 	movl   $0xc0118f28,(%esp)$/;"	l
c0111019	obj/kernel.asm	/^c0111019:	e8 aa fe fe ff       	call   c0100ec8 <__panic>$/;"	l
c011101e	obj/kernel.asm	/^c011101e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111021	obj/kernel.asm	/^c0111021:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111024	obj/kernel.asm	/^c0111024:	e8 c2 fe ff ff       	call   c0110eeb <disk0_device_init>$/;"	l
c0111029	obj/kernel.asm	/^c0111029:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0111030	obj/kernel.asm	/^c0111030:	00 $/;"	l
c0111031	obj/kernel.asm	/^c0111031:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111034	obj/kernel.asm	/^c0111034:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111038	obj/kernel.asm	/^c0111038:	c7 04 24 9b 90 11 c0 	movl   $0xc011909b,(%esp)$/;"	l
c011103f	obj/kernel.asm	/^c011103f:	e8 cb e9 ff ff       	call   c010fa0f <vfs_add_dev>$/;"	l
c0111044	obj/kernel.asm	/^c0111044:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111047	obj/kernel.asm	/^c0111047:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c011104b	obj/kernel.asm	/^c011104b:	74 23                	je     c0111070 <dev_init_disk0+0xbf>$/;"	l
c011104d	obj/kernel.asm	/^c011104d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111050	obj/kernel.asm	/^c0111050:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111054	obj/kernel.asm	/^c0111054:	c7 44 24 08 a1 90 11 	movl   $0xc01190a1,0x8(%esp)$/;"	l
c011105b	obj/kernel.asm	/^c011105b:	c0 $/;"	l
c011105c	obj/kernel.asm	/^c011105c:	c7 44 24 04 8d 00 00 	movl   $0x8d,0x4(%esp)$/;"	l
c0111063	obj/kernel.asm	/^c0111063:	00 $/;"	l
c0111064	obj/kernel.asm	/^c0111064:	c7 04 24 28 8f 11 c0 	movl   $0xc0118f28,(%esp)$/;"	l
c011106b	obj/kernel.asm	/^c011106b:	e8 58 fe fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111070	obj/kernel.asm	/^c0111070:	c9                   	leave  $/;"	l
c0111071	obj/kernel.asm	/^c0111071:	c3                   	ret    $/;"	l
c0111072	obj/kernel.asm	/^c0111072 <__intr_save>:$/;"	l
c0111072	obj/kernel.asm	/^c0111072:	55                   	push   %ebp$/;"	l
c0111073	obj/kernel.asm	/^c0111073:	89 e5                	mov    %esp,%ebp$/;"	l
c0111075	obj/kernel.asm	/^c0111075:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111078	obj/kernel.asm	/^c0111078:	9c                   	pushf  $/;"	l
c0111079	obj/kernel.asm	/^c0111079:	58                   	pop    %eax$/;"	l
c011107a	obj/kernel.asm	/^c011107a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011107d	obj/kernel.asm	/^c011107d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111080	obj/kernel.asm	/^c0111080:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0111085	obj/kernel.asm	/^c0111085:	85 c0                	test   %eax,%eax$/;"	l
c0111087	obj/kernel.asm	/^c0111087:	74 0c                	je     c0111095 <__intr_save+0x23>$/;"	l
c0111089	obj/kernel.asm	/^c0111089:	e8 9c 10 ff ff       	call   c010212a <intr_disable>$/;"	l
c011108e	obj/kernel.asm	/^c011108e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0111093	obj/kernel.asm	/^c0111093:	eb 05                	jmp    c011109a <__intr_save+0x28>$/;"	l
c0111095	obj/kernel.asm	/^c0111095:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011109a	obj/kernel.asm	/^c011109a:	c9                   	leave  $/;"	l
c011109b	obj/kernel.asm	/^c011109b:	c3                   	ret    $/;"	l
c011109c	obj/kernel.asm	/^c011109c <__intr_restore>:$/;"	l
c011109c	obj/kernel.asm	/^c011109c:	55                   	push   %ebp$/;"	l
c011109d	obj/kernel.asm	/^c011109d:	89 e5                	mov    %esp,%ebp$/;"	l
c011109f	obj/kernel.asm	/^c011109f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01110a2	obj/kernel.asm	/^c01110a2:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01110a6	obj/kernel.asm	/^c01110a6:	74 05                	je     c01110ad <__intr_restore+0x11>$/;"	l
c01110a8	obj/kernel.asm	/^c01110a8:	e8 77 10 ff ff       	call   c0102124 <intr_enable>$/;"	l
c01110ad	obj/kernel.asm	/^c01110ad:	c9                   	leave  $/;"	l
c01110ae	obj/kernel.asm	/^c01110ae:	c3                   	ret    $/;"	l
c01110af	obj/kernel.asm	/^c01110af <dev_stdin_write>:$/;"	l
c01110af	obj/kernel.asm	/^c01110af:	55                   	push   %ebp$/;"	l
c01110b0	obj/kernel.asm	/^c01110b0:	89 e5                	mov    %esp,%ebp$/;"	l
c01110b2	obj/kernel.asm	/^c01110b2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01110b5	obj/kernel.asm	/^c01110b5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01110b8	obj/kernel.asm	/^c01110b8:	88 45 e4             	mov    %al,-0x1c(%ebp)$/;"	l
c01110bb	obj/kernel.asm	/^c01110bb:	80 7d e4 00          	cmpb   $0x0,-0x1c(%ebp)$/;"	l
c01110bf	obj/kernel.asm	/^c01110bf:	0f 84 80 00 00 00    	je     c0111145 <dev_stdin_write+0x96>$/;"	l
c01110c5	obj/kernel.asm	/^c01110c5:	e8 a8 ff ff ff       	call   c0111072 <__intr_save>$/;"	l
c01110ca	obj/kernel.asm	/^c01110ca:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01110cd	obj/kernel.asm	/^c01110cd:	a1 04 40 15 c0       	mov    0xc0154004,%eax$/;"	l
c01110d2	obj/kernel.asm	/^c01110d2:	99                   	cltd   $/;"	l
c01110d3	obj/kernel.asm	/^c01110d3:	c1 ea 14             	shr    $0x14,%edx$/;"	l
c01110d6	obj/kernel.asm	/^c01110d6:	01 d0                	add    %edx,%eax$/;"	l
c01110d8	obj/kernel.asm	/^c01110d8:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01110dd	obj/kernel.asm	/^c01110dd:	29 d0                	sub    %edx,%eax$/;"	l
c01110df	obj/kernel.asm	/^c01110df:	0f b6 55 e4          	movzbl -0x1c(%ebp),%edx$/;"	l
c01110e3	obj/kernel.asm	/^c01110e3:	88 90 00 30 15 c0    	mov    %dl,-0x3fead000(%eax)$/;"	l
c01110e9	obj/kernel.asm	/^c01110e9:	8b 15 04 40 15 c0    	mov    0xc0154004,%edx$/;"	l
c01110ef	obj/kernel.asm	/^c01110ef:	a1 00 40 15 c0       	mov    0xc0154000,%eax$/;"	l
c01110f4	obj/kernel.asm	/^c01110f4:	29 c2                	sub    %eax,%edx$/;"	l
c01110f6	obj/kernel.asm	/^c01110f6:	89 d0                	mov    %edx,%eax$/;"	l
c01110f8	obj/kernel.asm	/^c01110f8:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c01110fd	obj/kernel.asm	/^c01110fd:	7f 0d                	jg     c011110c <dev_stdin_write+0x5d>$/;"	l
c01110ff	obj/kernel.asm	/^c01110ff:	a1 04 40 15 c0       	mov    0xc0154004,%eax$/;"	l
c0111104	obj/kernel.asm	/^c0111104:	83 c0 01             	add    $0x1,%eax$/;"	l
c0111107	obj/kernel.asm	/^c0111107:	a3 04 40 15 c0       	mov    %eax,0xc0154004$/;"	l
c011110c	obj/kernel.asm	/^c011110c:	a1 c0 fe 14 c0       	mov    0xc014fec0,%eax$/;"	l
c0111111	obj/kernel.asm	/^c0111111:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111114	obj/kernel.asm	/^c0111114:	e8 52 8f ff ff       	call   c010a06b <wait_queue_empty>$/;"	l
c0111119	obj/kernel.asm	/^c0111119:	85 c0                	test   %eax,%eax$/;"	l
c011111b	obj/kernel.asm	/^c011111b:	75 1d                	jne    c011113a <dev_stdin_write+0x8b>$/;"	l
c011111d	obj/kernel.asm	/^c011111d:	a1 c0 fe 14 c0       	mov    0xc014fec0,%eax$/;"	l
c0111122	obj/kernel.asm	/^c0111122:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0111129	obj/kernel.asm	/^c0111129:	00 $/;"	l
c011112a	obj/kernel.asm	/^c011112a:	c7 44 24 04 04 00 00 	movl   $0x80000004,0x4(%esp)$/;"	l
c0111131	obj/kernel.asm	/^c0111131:	80 $/;"	l
c0111132	obj/kernel.asm	/^c0111132:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111135	obj/kernel.asm	/^c0111135:	e8 e8 8f ff ff       	call   c010a122 <wakeup_queue>$/;"	l
c011113a	obj/kernel.asm	/^c011113a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011113d	obj/kernel.asm	/^c011113d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111140	obj/kernel.asm	/^c0111140:	e8 57 ff ff ff       	call   c011109c <__intr_restore>$/;"	l
c0111145	obj/kernel.asm	/^c0111145:	c9                   	leave  $/;"	l
c0111146	obj/kernel.asm	/^c0111146:	c3                   	ret    $/;"	l
c0111147	obj/kernel.asm	/^c0111147 <dev_stdin_read>:$/;"	l
c0111147	obj/kernel.asm	/^c0111147:	55                   	push   %ebp$/;"	l
c0111148	obj/kernel.asm	/^c0111148:	89 e5                	mov    %esp,%ebp$/;"	l
c011114a	obj/kernel.asm	/^c011114a:	83 ec 38             	sub    $0x38,%esp$/;"	l
c011114d	obj/kernel.asm	/^c011114d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0111154	obj/kernel.asm	/^c0111154:	e8 19 ff ff ff       	call   c0111072 <__intr_save>$/;"	l
c0111159	obj/kernel.asm	/^c0111159:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011115c	obj/kernel.asm	/^c011115c:	e9 bb 00 00 00       	jmp    c011121c <dev_stdin_read+0xd5>$/;"	l
c0111161	obj/kernel.asm	/^c0111161:	8b 15 00 40 15 c0    	mov    0xc0154000,%edx$/;"	l
c0111167	obj/kernel.asm	/^c0111167:	a1 04 40 15 c0       	mov    0xc0154004,%eax$/;"	l
c011116c	obj/kernel.asm	/^c011116c:	39 c2                	cmp    %eax,%edx$/;"	l
c011116e	obj/kernel.asm	/^c011116e:	7d 3d                	jge    c01111ad <dev_stdin_read+0x66>$/;"	l
c0111170	obj/kernel.asm	/^c0111170:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111173	obj/kernel.asm	/^c0111173:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0111176	obj/kernel.asm	/^c0111176:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0111179	obj/kernel.asm	/^c0111179:	8b 15 00 40 15 c0    	mov    0xc0154000,%edx$/;"	l
c011117f	obj/kernel.asm	/^c011117f:	89 d1                	mov    %edx,%ecx$/;"	l
c0111181	obj/kernel.asm	/^c0111181:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
c0111184	obj/kernel.asm	/^c0111184:	c1 e9 14             	shr    $0x14,%ecx$/;"	l
c0111187	obj/kernel.asm	/^c0111187:	01 ca                	add    %ecx,%edx$/;"	l
c0111189	obj/kernel.asm	/^c0111189:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
c011118f	obj/kernel.asm	/^c011118f:	29 ca                	sub    %ecx,%edx$/;"	l
c0111191	obj/kernel.asm	/^c0111191:	0f b6 92 00 30 15 c0 	movzbl -0x3fead000(%edx),%edx$/;"	l
c0111198	obj/kernel.asm	/^c0111198:	88 10                	mov    %dl,(%eax)$/;"	l
c011119a	obj/kernel.asm	/^c011119a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c011119e	obj/kernel.asm	/^c011119e:	a1 00 40 15 c0       	mov    0xc0154000,%eax$/;"	l
c01111a3	obj/kernel.asm	/^c01111a3:	83 c0 01             	add    $0x1,%eax$/;"	l
c01111a6	obj/kernel.asm	/^c01111a6:	a3 00 40 15 c0       	mov    %eax,0xc0154000$/;"	l
c01111ab	obj/kernel.asm	/^c01111ab:	eb 6f                	jmp    c011121c <dev_stdin_read+0xd5>$/;"	l
c01111ad	obj/kernel.asm	/^c01111ad:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c01111b0	obj/kernel.asm	/^c01111b0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01111b3	obj/kernel.asm	/^c01111b3:	a1 c0 fe 14 c0       	mov    0xc014fec0,%eax$/;"	l
c01111b8	obj/kernel.asm	/^c01111b8:	c7 44 24 08 04 00 00 	movl   $0x80000004,0x8(%esp)$/;"	l
c01111bf	obj/kernel.asm	/^c01111bf:	80 $/;"	l
c01111c0	obj/kernel.asm	/^c01111c0:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01111c3	obj/kernel.asm	/^c01111c3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01111c7	obj/kernel.asm	/^c01111c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01111ca	obj/kernel.asm	/^c01111ca:	e8 e8 8f ff ff       	call   c010a1b7 <wait_current_set>$/;"	l
c01111cf	obj/kernel.asm	/^c01111cf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01111d2	obj/kernel.asm	/^c01111d2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01111d5	obj/kernel.asm	/^c01111d5:	e8 c2 fe ff ff       	call   c011109c <__intr_restore>$/;"	l
c01111da	obj/kernel.asm	/^c01111da:	e8 c6 d4 ff ff       	call   c010e6a5 <schedule>$/;"	l
c01111df	obj/kernel.asm	/^c01111df:	e8 8e fe ff ff       	call   c0111072 <__intr_save>$/;"	l
c01111e4	obj/kernel.asm	/^c01111e4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01111e7	obj/kernel.asm	/^c01111e7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01111ea	obj/kernel.asm	/^c01111ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01111ed	obj/kernel.asm	/^c01111ed:	e8 96 8e ff ff       	call   c010a088 <wait_in_queue>$/;"	l
c01111f2	obj/kernel.asm	/^c01111f2:	85 c0                	test   %eax,%eax$/;"	l
c01111f4	obj/kernel.asm	/^c01111f4:	74 14                	je     c011120a <dev_stdin_read+0xc3>$/;"	l
c01111f6	obj/kernel.asm	/^c01111f6:	a1 c0 fe 14 c0       	mov    0xc014fec0,%eax$/;"	l
c01111fb	obj/kernel.asm	/^c01111fb:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01111fe	obj/kernel.asm	/^c01111fe:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0111202	obj/kernel.asm	/^c0111202:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111205	obj/kernel.asm	/^c0111205:	e8 79 8c ff ff       	call   c0109e83 <wait_queue_del>$/;"	l
c011120a	obj/kernel.asm	/^c011120a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011120d	obj/kernel.asm	/^c011120d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111210	obj/kernel.asm	/^c0111210:	3d 04 00 00 80       	cmp    $0x80000004,%eax$/;"	l
c0111215	obj/kernel.asm	/^c0111215:	75 11                	jne    c0111228 <dev_stdin_read+0xe1>$/;"	l
c0111217	obj/kernel.asm	/^c0111217:	e9 45 ff ff ff       	jmp    c0111161 <dev_stdin_read+0x1a>$/;"	l
c011121c	obj/kernel.asm	/^c011121c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011121f	obj/kernel.asm	/^c011121f:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0111222	obj/kernel.asm	/^c0111222:	0f 82 39 ff ff ff    	jb     c0111161 <dev_stdin_read+0x1a>$/;"	l
c0111228	obj/kernel.asm	/^c0111228:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011122b	obj/kernel.asm	/^c011122b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011122e	obj/kernel.asm	/^c011122e:	e8 69 fe ff ff       	call   c011109c <__intr_restore>$/;"	l
c0111233	obj/kernel.asm	/^c0111233:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111236	obj/kernel.asm	/^c0111236:	c9                   	leave  $/;"	l
c0111237	obj/kernel.asm	/^c0111237:	c3                   	ret    $/;"	l
c0111238	obj/kernel.asm	/^c0111238 <stdin_open>:$/;"	l
c0111238	obj/kernel.asm	/^c0111238:	55                   	push   %ebp$/;"	l
c0111239	obj/kernel.asm	/^c0111239:	89 e5                	mov    %esp,%ebp$/;"	l
c011123b	obj/kernel.asm	/^c011123b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c011123f	obj/kernel.asm	/^c011123f:	74 07                	je     c0111248 <stdin_open+0x10>$/;"	l
c0111241	obj/kernel.asm	/^c0111241:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111246	obj/kernel.asm	/^c0111246:	eb 05                	jmp    c011124d <stdin_open+0x15>$/;"	l
c0111248	obj/kernel.asm	/^c0111248:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011124d	obj/kernel.asm	/^c011124d:	5d                   	pop    %ebp$/;"	l
c011124e	obj/kernel.asm	/^c011124e:	c3                   	ret    $/;"	l
c011124f	obj/kernel.asm	/^c011124f <stdin_close>:$/;"	l
c011124f	obj/kernel.asm	/^c011124f:	55                   	push   %ebp$/;"	l
c0111250	obj/kernel.asm	/^c0111250:	89 e5                	mov    %esp,%ebp$/;"	l
c0111252	obj/kernel.asm	/^c0111252:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111257	obj/kernel.asm	/^c0111257:	5d                   	pop    %ebp$/;"	l
c0111258	obj/kernel.asm	/^c0111258:	c3                   	ret    $/;"	l
c0111259	obj/kernel.asm	/^c0111259 <stdin_io>:$/;"	l
c0111259	obj/kernel.asm	/^c0111259:	55                   	push   %ebp$/;"	l
c011125a	obj/kernel.asm	/^c011125a:	89 e5                	mov    %esp,%ebp$/;"	l
c011125c	obj/kernel.asm	/^c011125c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011125f	obj/kernel.asm	/^c011125f:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0111263	obj/kernel.asm	/^c0111263:	75 36                	jne    c011129b <stdin_io+0x42>$/;"	l
c0111265	obj/kernel.asm	/^c0111265:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111268	obj/kernel.asm	/^c0111268:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c011126b	obj/kernel.asm	/^c011126b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011126e	obj/kernel.asm	/^c011126e:	8b 00                	mov    (%eax),%eax$/;"	l
c0111270	obj/kernel.asm	/^c0111270:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0111274	obj/kernel.asm	/^c0111274:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111277	obj/kernel.asm	/^c0111277:	e8 cb fe ff ff       	call   c0111147 <dev_stdin_read>$/;"	l
c011127c	obj/kernel.asm	/^c011127c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011127f	obj/kernel.asm	/^c011127f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111283	obj/kernel.asm	/^c0111283:	7e 11                	jle    c0111296 <stdin_io+0x3d>$/;"	l
c0111285	obj/kernel.asm	/^c0111285:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111288	obj/kernel.asm	/^c0111288:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c011128b	obj/kernel.asm	/^c011128b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011128e	obj/kernel.asm	/^c011128e:	29 c2                	sub    %eax,%edx$/;"	l
c0111290	obj/kernel.asm	/^c0111290:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111293	obj/kernel.asm	/^c0111293:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0111296	obj/kernel.asm	/^c0111296:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111299	obj/kernel.asm	/^c0111299:	eb 05                	jmp    c01112a0 <stdin_io+0x47>$/;"	l
c011129b	obj/kernel.asm	/^c011129b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01112a0	obj/kernel.asm	/^c01112a0:	c9                   	leave  $/;"	l
c01112a1	obj/kernel.asm	/^c01112a1:	c3                   	ret    $/;"	l
c01112a2	obj/kernel.asm	/^c01112a2 <stdin_ioctl>:$/;"	l
c01112a2	obj/kernel.asm	/^c01112a2:	55                   	push   %ebp$/;"	l
c01112a3	obj/kernel.asm	/^c01112a3:	89 e5                	mov    %esp,%ebp$/;"	l
c01112a5	obj/kernel.asm	/^c01112a5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01112aa	obj/kernel.asm	/^c01112aa:	5d                   	pop    %ebp$/;"	l
c01112ab	obj/kernel.asm	/^c01112ab:	c3                   	ret    $/;"	l
c01112ac	obj/kernel.asm	/^c01112ac <stdin_device_init>:$/;"	l
c01112ac	obj/kernel.asm	/^c01112ac:	55                   	push   %ebp$/;"	l
c01112ad	obj/kernel.asm	/^c01112ad:	89 e5                	mov    %esp,%ebp$/;"	l
c01112af	obj/kernel.asm	/^c01112af:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01112b2	obj/kernel.asm	/^c01112b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01112b5	obj/kernel.asm	/^c01112b5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01112bb	obj/kernel.asm	/^c01112bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01112be	obj/kernel.asm	/^c01112be:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c01112c5	obj/kernel.asm	/^c01112c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01112c8	obj/kernel.asm	/^c01112c8:	c7 40 08 38 12 11 c0 	movl   $0xc0111238,0x8(%eax)$/;"	l
c01112cf	obj/kernel.asm	/^c01112cf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01112d2	obj/kernel.asm	/^c01112d2:	c7 40 0c 4f 12 11 c0 	movl   $0xc011124f,0xc(%eax)$/;"	l
c01112d9	obj/kernel.asm	/^c01112d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01112dc	obj/kernel.asm	/^c01112dc:	c7 40 10 59 12 11 c0 	movl   $0xc0111259,0x10(%eax)$/;"	l
c01112e3	obj/kernel.asm	/^c01112e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01112e6	obj/kernel.asm	/^c01112e6:	c7 40 14 a2 12 11 c0 	movl   $0xc01112a2,0x14(%eax)$/;"	l
c01112ed	obj/kernel.asm	/^c01112ed:	c7 05 04 40 15 c0 00 	movl   $0x0,0xc0154004$/;"	l
c01112f4	obj/kernel.asm	/^c01112f4:	00 00 00 $/;"	l
c01112f7	obj/kernel.asm	/^c01112f7:	a1 04 40 15 c0       	mov    0xc0154004,%eax$/;"	l
c01112fc	obj/kernel.asm	/^c01112fc:	a3 00 40 15 c0       	mov    %eax,0xc0154000$/;"	l
c0111301	obj/kernel.asm	/^c0111301:	a1 c0 fe 14 c0       	mov    0xc014fec0,%eax$/;"	l
c0111306	obj/kernel.asm	/^c0111306:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111309	obj/kernel.asm	/^c0111309:	e8 b2 8a ff ff       	call   c0109dc0 <wait_queue_init>$/;"	l
c011130e	obj/kernel.asm	/^c011130e:	c9                   	leave  $/;"	l
c011130f	obj/kernel.asm	/^c011130f:	c3                   	ret    $/;"	l
c0111310	obj/kernel.asm	/^c0111310 <dev_init_stdin>:$/;"	l
c0111310	obj/kernel.asm	/^c0111310:	55                   	push   %ebp$/;"	l
c0111311	obj/kernel.asm	/^c0111311:	89 e5                	mov    %esp,%ebp$/;"	l
c0111313	obj/kernel.asm	/^c0111313:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111316	obj/kernel.asm	/^c0111316:	e8 72 f8 ff ff       	call   c0110b8d <dev_create_inode>$/;"	l
c011131b	obj/kernel.asm	/^c011131b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011131e	obj/kernel.asm	/^c011131e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111322	obj/kernel.asm	/^c0111322:	75 1c                	jne    c0111340 <dev_init_stdin+0x30>$/;"	l
c0111324	obj/kernel.asm	/^c0111324:	c7 44 24 08 bc 90 11 	movl   $0xc01190bc,0x8(%esp)$/;"	l
c011132b	obj/kernel.asm	/^c011132b:	c0 $/;"	l
c011132c	obj/kernel.asm	/^c011132c:	c7 44 24 04 75 00 00 	movl   $0x75,0x4(%esp)$/;"	l
c0111333	obj/kernel.asm	/^c0111333:	00 $/;"	l
c0111334	obj/kernel.asm	/^c0111334:	c7 04 24 d5 90 11 c0 	movl   $0xc01190d5,(%esp)$/;"	l
c011133b	obj/kernel.asm	/^c011133b:	e8 88 fb fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111340	obj/kernel.asm	/^c0111340:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111343	obj/kernel.asm	/^c0111343:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111346	obj/kernel.asm	/^c0111346:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011134a	obj/kernel.asm	/^c011134a:	74 0d                	je     c0111359 <dev_init_stdin+0x49>$/;"	l
c011134c	obj/kernel.asm	/^c011134c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011134f	obj/kernel.asm	/^c011134f:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0111352	obj/kernel.asm	/^c0111352:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0111357	obj/kernel.asm	/^c0111357:	74 24                	je     c011137d <dev_init_stdin+0x6d>$/;"	l
c0111359	obj/kernel.asm	/^c0111359:	c7 44 24 0c f0 90 11 	movl   $0xc01190f0,0xc(%esp)$/;"	l
c0111360	obj/kernel.asm	/^c0111360:	c0 $/;"	l
c0111361	obj/kernel.asm	/^c0111361:	c7 44 24 08 23 91 11 	movl   $0xc0119123,0x8(%esp)$/;"	l
c0111368	obj/kernel.asm	/^c0111368:	c0 $/;"	l
c0111369	obj/kernel.asm	/^c0111369:	c7 44 24 04 77 00 00 	movl   $0x77,0x4(%esp)$/;"	l
c0111370	obj/kernel.asm	/^c0111370:	00 $/;"	l
c0111371	obj/kernel.asm	/^c0111371:	c7 04 24 d5 90 11 c0 	movl   $0xc01190d5,(%esp)$/;"	l
c0111378	obj/kernel.asm	/^c0111378:	e8 4b fb fe ff       	call   c0100ec8 <__panic>$/;"	l
c011137d	obj/kernel.asm	/^c011137d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111380	obj/kernel.asm	/^c0111380:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111383	obj/kernel.asm	/^c0111383:	e8 24 ff ff ff       	call   c01112ac <stdin_device_init>$/;"	l
c0111388	obj/kernel.asm	/^c0111388:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c011138f	obj/kernel.asm	/^c011138f:	00 $/;"	l
c0111390	obj/kernel.asm	/^c0111390:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111393	obj/kernel.asm	/^c0111393:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111397	obj/kernel.asm	/^c0111397:	c7 04 24 38 91 11 c0 	movl   $0xc0119138,(%esp)$/;"	l
c011139e	obj/kernel.asm	/^c011139e:	e8 6c e6 ff ff       	call   c010fa0f <vfs_add_dev>$/;"	l
c01113a3	obj/kernel.asm	/^c01113a3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01113a6	obj/kernel.asm	/^c01113a6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01113aa	obj/kernel.asm	/^c01113aa:	74 23                	je     c01113cf <dev_init_stdin+0xbf>$/;"	l
c01113ac	obj/kernel.asm	/^c01113ac:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01113af	obj/kernel.asm	/^c01113af:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01113b3	obj/kernel.asm	/^c01113b3:	c7 44 24 08 3e 91 11 	movl   $0xc011913e,0x8(%esp)$/;"	l
c01113ba	obj/kernel.asm	/^c01113ba:	c0 $/;"	l
c01113bb	obj/kernel.asm	/^c01113bb:	c7 44 24 04 7b 00 00 	movl   $0x7b,0x4(%esp)$/;"	l
c01113c2	obj/kernel.asm	/^c01113c2:	00 $/;"	l
c01113c3	obj/kernel.asm	/^c01113c3:	c7 04 24 d5 90 11 c0 	movl   $0xc01190d5,(%esp)$/;"	l
c01113ca	obj/kernel.asm	/^c01113ca:	e8 f9 fa fe ff       	call   c0100ec8 <__panic>$/;"	l
c01113cf	obj/kernel.asm	/^c01113cf:	c9                   	leave  $/;"	l
c01113d0	obj/kernel.asm	/^c01113d0:	c3                   	ret    $/;"	l
c01113d1	obj/kernel.asm	/^c01113d1 <stdout_open>:$/;"	l
c01113d1	obj/kernel.asm	/^c01113d1:	55                   	push   %ebp$/;"	l
c01113d2	obj/kernel.asm	/^c01113d2:	89 e5                	mov    %esp,%ebp$/;"	l
c01113d4	obj/kernel.asm	/^c01113d4:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c01113d8	obj/kernel.asm	/^c01113d8:	74 07                	je     c01113e1 <stdout_open+0x10>$/;"	l
c01113da	obj/kernel.asm	/^c01113da:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01113df	obj/kernel.asm	/^c01113df:	eb 05                	jmp    c01113e6 <stdout_open+0x15>$/;"	l
c01113e1	obj/kernel.asm	/^c01113e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01113e6	obj/kernel.asm	/^c01113e6:	5d                   	pop    %ebp$/;"	l
c01113e7	obj/kernel.asm	/^c01113e7:	c3                   	ret    $/;"	l
c01113e8	obj/kernel.asm	/^c01113e8 <stdout_close>:$/;"	l
c01113e8	obj/kernel.asm	/^c01113e8:	55                   	push   %ebp$/;"	l
c01113e9	obj/kernel.asm	/^c01113e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01113eb	obj/kernel.asm	/^c01113eb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01113f0	obj/kernel.asm	/^c01113f0:	5d                   	pop    %ebp$/;"	l
c01113f1	obj/kernel.asm	/^c01113f1:	c3                   	ret    $/;"	l
c01113f2	obj/kernel.asm	/^c01113f2 <stdout_io>:$/;"	l
c01113f2	obj/kernel.asm	/^c01113f2:	55                   	push   %ebp$/;"	l
c01113f3	obj/kernel.asm	/^c01113f3:	89 e5                	mov    %esp,%ebp$/;"	l
c01113f5	obj/kernel.asm	/^c01113f5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01113f8	obj/kernel.asm	/^c01113f8:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01113fc	obj/kernel.asm	/^c01113fc:	74 41                	je     c011143f <stdout_io+0x4d>$/;"	l
c01113fe	obj/kernel.asm	/^c01113fe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111401	obj/kernel.asm	/^c0111401:	8b 00                	mov    (%eax),%eax$/;"	l
c0111403	obj/kernel.asm	/^c0111403:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111406	obj/kernel.asm	/^c0111406:	eb 26                	jmp    c011142e <stdout_io+0x3c>$/;"	l
c0111408	obj/kernel.asm	/^c0111408:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011140b	obj/kernel.asm	/^c011140b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c011140e	obj/kernel.asm	/^c011140e:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0111411	obj/kernel.asm	/^c0111411:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0111414	obj/kernel.asm	/^c0111414:	0f be c0             	movsbl %al,%eax$/;"	l
c0111417	obj/kernel.asm	/^c0111417:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011141a	obj/kernel.asm	/^c011141a:	e8 6c ef fe ff       	call   c010038b <cputchar>$/;"	l
c011141f	obj/kernel.asm	/^c011141f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111422	obj/kernel.asm	/^c0111422:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0111425	obj/kernel.asm	/^c0111425:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0111428	obj/kernel.asm	/^c0111428:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011142b	obj/kernel.asm	/^c011142b:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c011142e	obj/kernel.asm	/^c011142e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111431	obj/kernel.asm	/^c0111431:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0111434	obj/kernel.asm	/^c0111434:	85 c0                	test   %eax,%eax$/;"	l
c0111436	obj/kernel.asm	/^c0111436:	75 d0                	jne    c0111408 <stdout_io+0x16>$/;"	l
c0111438	obj/kernel.asm	/^c0111438:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011143d	obj/kernel.asm	/^c011143d:	eb 05                	jmp    c0111444 <stdout_io+0x52>$/;"	l
c011143f	obj/kernel.asm	/^c011143f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111444	obj/kernel.asm	/^c0111444:	c9                   	leave  $/;"	l
c0111445	obj/kernel.asm	/^c0111445:	c3                   	ret    $/;"	l
c0111446	obj/kernel.asm	/^c0111446 <stdout_ioctl>:$/;"	l
c0111446	obj/kernel.asm	/^c0111446:	55                   	push   %ebp$/;"	l
c0111447	obj/kernel.asm	/^c0111447:	89 e5                	mov    %esp,%ebp$/;"	l
c0111449	obj/kernel.asm	/^c0111449:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c011144e	obj/kernel.asm	/^c011144e:	5d                   	pop    %ebp$/;"	l
c011144f	obj/kernel.asm	/^c011144f:	c3                   	ret    $/;"	l
c0111450	obj/kernel.asm	/^c0111450 <stdout_device_init>:$/;"	l
c0111450	obj/kernel.asm	/^c0111450:	55                   	push   %ebp$/;"	l
c0111451	obj/kernel.asm	/^c0111451:	89 e5                	mov    %esp,%ebp$/;"	l
c0111453	obj/kernel.asm	/^c0111453:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111456	obj/kernel.asm	/^c0111456:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c011145c	obj/kernel.asm	/^c011145c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011145f	obj/kernel.asm	/^c011145f:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c0111466	obj/kernel.asm	/^c0111466:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111469	obj/kernel.asm	/^c0111469:	c7 40 08 d1 13 11 c0 	movl   $0xc01113d1,0x8(%eax)$/;"	l
c0111470	obj/kernel.asm	/^c0111470:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111473	obj/kernel.asm	/^c0111473:	c7 40 0c e8 13 11 c0 	movl   $0xc01113e8,0xc(%eax)$/;"	l
c011147a	obj/kernel.asm	/^c011147a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011147d	obj/kernel.asm	/^c011147d:	c7 40 10 f2 13 11 c0 	movl   $0xc01113f2,0x10(%eax)$/;"	l
c0111484	obj/kernel.asm	/^c0111484:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111487	obj/kernel.asm	/^c0111487:	c7 40 14 46 14 11 c0 	movl   $0xc0111446,0x14(%eax)$/;"	l
c011148e	obj/kernel.asm	/^c011148e:	5d                   	pop    %ebp$/;"	l
c011148f	obj/kernel.asm	/^c011148f:	c3                   	ret    $/;"	l
c0111490	obj/kernel.asm	/^c0111490 <dev_init_stdout>:$/;"	l
c0111490	obj/kernel.asm	/^c0111490:	55                   	push   %ebp$/;"	l
c0111491	obj/kernel.asm	/^c0111491:	89 e5                	mov    %esp,%ebp$/;"	l
c0111493	obj/kernel.asm	/^c0111493:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111496	obj/kernel.asm	/^c0111496:	e8 f2 f6 ff ff       	call   c0110b8d <dev_create_inode>$/;"	l
c011149b	obj/kernel.asm	/^c011149b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011149e	obj/kernel.asm	/^c011149e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01114a2	obj/kernel.asm	/^c01114a2:	75 1c                	jne    c01114c0 <dev_init_stdout+0x30>$/;"	l
c01114a4	obj/kernel.asm	/^c01114a4:	c7 44 24 08 58 91 11 	movl   $0xc0119158,0x8(%esp)$/;"	l
c01114ab	obj/kernel.asm	/^c01114ab:	c0 $/;"	l
c01114ac	obj/kernel.asm	/^c01114ac:	c7 44 24 04 37 00 00 	movl   $0x37,0x4(%esp)$/;"	l
c01114b3	obj/kernel.asm	/^c01114b3:	00 $/;"	l
c01114b4	obj/kernel.asm	/^c01114b4:	c7 04 24 72 91 11 c0 	movl   $0xc0119172,(%esp)$/;"	l
c01114bb	obj/kernel.asm	/^c01114bb:	e8 08 fa fe ff       	call   c0100ec8 <__panic>$/;"	l
c01114c0	obj/kernel.asm	/^c01114c0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01114c3	obj/kernel.asm	/^c01114c3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01114c6	obj/kernel.asm	/^c01114c6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01114ca	obj/kernel.asm	/^c01114ca:	74 0d                	je     c01114d9 <dev_init_stdout+0x49>$/;"	l
c01114cc	obj/kernel.asm	/^c01114cc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01114cf	obj/kernel.asm	/^c01114cf:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01114d2	obj/kernel.asm	/^c01114d2:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c01114d7	obj/kernel.asm	/^c01114d7:	74 24                	je     c01114fd <dev_init_stdout+0x6d>$/;"	l
c01114d9	obj/kernel.asm	/^c01114d9:	c7 44 24 0c 8c 91 11 	movl   $0xc011918c,0xc(%esp)$/;"	l
c01114e0	obj/kernel.asm	/^c01114e0:	c0 $/;"	l
c01114e1	obj/kernel.asm	/^c01114e1:	c7 44 24 08 bf 91 11 	movl   $0xc01191bf,0x8(%esp)$/;"	l
c01114e8	obj/kernel.asm	/^c01114e8:	c0 $/;"	l
c01114e9	obj/kernel.asm	/^c01114e9:	c7 44 24 04 39 00 00 	movl   $0x39,0x4(%esp)$/;"	l
c01114f0	obj/kernel.asm	/^c01114f0:	00 $/;"	l
c01114f1	obj/kernel.asm	/^c01114f1:	c7 04 24 72 91 11 c0 	movl   $0xc0119172,(%esp)$/;"	l
c01114f8	obj/kernel.asm	/^c01114f8:	e8 cb f9 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01114fd	obj/kernel.asm	/^c01114fd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111500	obj/kernel.asm	/^c0111500:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111503	obj/kernel.asm	/^c0111503:	e8 48 ff ff ff       	call   c0111450 <stdout_device_init>$/;"	l
c0111508	obj/kernel.asm	/^c0111508:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c011150f	obj/kernel.asm	/^c011150f:	00 $/;"	l
c0111510	obj/kernel.asm	/^c0111510:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111513	obj/kernel.asm	/^c0111513:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111517	obj/kernel.asm	/^c0111517:	c7 04 24 d4 91 11 c0 	movl   $0xc01191d4,(%esp)$/;"	l
c011151e	obj/kernel.asm	/^c011151e:	e8 ec e4 ff ff       	call   c010fa0f <vfs_add_dev>$/;"	l
c0111523	obj/kernel.asm	/^c0111523:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111526	obj/kernel.asm	/^c0111526:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c011152a	obj/kernel.asm	/^c011152a:	74 23                	je     c011154f <dev_init_stdout+0xbf>$/;"	l
c011152c	obj/kernel.asm	/^c011152c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011152f	obj/kernel.asm	/^c011152f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111533	obj/kernel.asm	/^c0111533:	c7 44 24 08 db 91 11 	movl   $0xc01191db,0x8(%esp)$/;"	l
c011153a	obj/kernel.asm	/^c011153a:	c0 $/;"	l
c011153b	obj/kernel.asm	/^c011153b:	c7 44 24 04 3d 00 00 	movl   $0x3d,0x4(%esp)$/;"	l
c0111542	obj/kernel.asm	/^c0111542:	00 $/;"	l
c0111543	obj/kernel.asm	/^c0111543:	c7 04 24 72 91 11 c0 	movl   $0xc0119172,(%esp)$/;"	l
c011154a	obj/kernel.asm	/^c011154a:	e8 79 f9 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011154f	obj/kernel.asm	/^c011154f:	c9                   	leave  $/;"	l
c0111550	obj/kernel.asm	/^c0111550:	c3                   	ret    $/;"	l
c0111551	obj/kernel.asm	/^c0111551 <bitmap_create>:$/;"	l
c0111551	obj/kernel.asm	/^c0111551:	55                   	push   %ebp$/;"	l
c0111552	obj/kernel.asm	/^c0111552:	89 e5                	mov    %esp,%ebp$/;"	l
c0111554	obj/kernel.asm	/^c0111554:	56                   	push   %esi$/;"	l
c0111555	obj/kernel.asm	/^c0111555:	53                   	push   %ebx$/;"	l
c0111556	obj/kernel.asm	/^c0111556:	83 ec 30             	sub    $0x30,%esp$/;"	l
c0111559	obj/kernel.asm	/^c0111559:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c011155d	obj/kernel.asm	/^c011155d:	74 0b                	je     c011156a <bitmap_create+0x19>$/;"	l
c011155f	obj/kernel.asm	/^c011155f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111562	obj/kernel.asm	/^c0111562:	83 c0 20             	add    $0x20,%eax$/;"	l
c0111565	obj/kernel.asm	/^c0111565:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0111568	obj/kernel.asm	/^c0111568:	77 24                	ja     c011158e <bitmap_create+0x3d>$/;"	l
c011156a	obj/kernel.asm	/^c011156a:	c7 44 24 0c f8 91 11 	movl   $0xc01191f8,0xc(%esp)$/;"	l
c0111571	obj/kernel.asm	/^c0111571:	c0 $/;"	l
c0111572	obj/kernel.asm	/^c0111572:	c7 44 24 08 20 92 11 	movl   $0xc0119220,0x8(%esp)$/;"	l
c0111579	obj/kernel.asm	/^c0111579:	c0 $/;"	l
c011157a	obj/kernel.asm	/^c011157a:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)$/;"	l
c0111581	obj/kernel.asm	/^c0111581:	00 $/;"	l
c0111582	obj/kernel.asm	/^c0111582:	c7 04 24 35 92 11 c0 	movl   $0xc0119235,(%esp)$/;"	l
c0111589	obj/kernel.asm	/^c0111589:	e8 3a f9 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011158e	obj/kernel.asm	/^c011158e:	c7 04 24 0c 00 00 00 	movl   $0xc,(%esp)$/;"	l
c0111595	obj/kernel.asm	/^c0111595:	e8 45 37 ff ff       	call   c0104cdf <kmalloc>$/;"	l
c011159a	obj/kernel.asm	/^c011159a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011159d	obj/kernel.asm	/^c011159d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01115a1	obj/kernel.asm	/^c01115a1:	75 0a                	jne    c01115ad <bitmap_create+0x5c>$/;"	l
c01115a3	obj/kernel.asm	/^c01115a3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01115a8	obj/kernel.asm	/^c01115a8:	e9 43 01 00 00       	jmp    c01116f0 <bitmap_create+0x19f>$/;"	l
c01115ad	obj/kernel.asm	/^c01115ad:	c7 45 ec 20 00 00 00 	movl   $0x20,-0x14(%ebp)$/;"	l
c01115b4	obj/kernel.asm	/^c01115b4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01115b7	obj/kernel.asm	/^c01115b7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01115ba	obj/kernel.asm	/^c01115ba:	01 d0                	add    %edx,%eax$/;"	l
c01115bc	obj/kernel.asm	/^c01115bc:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01115bf	obj/kernel.asm	/^c01115bf:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01115c4	obj/kernel.asm	/^c01115c4:	f7 75 ec             	divl   -0x14(%ebp)$/;"	l
c01115c7	obj/kernel.asm	/^c01115c7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01115ca	obj/kernel.asm	/^c01115ca:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01115cd	obj/kernel.asm	/^c01115cd:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01115d0	obj/kernel.asm	/^c01115d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01115d3	obj/kernel.asm	/^c01115d3:	e8 07 37 ff ff       	call   c0104cdf <kmalloc>$/;"	l
c01115d8	obj/kernel.asm	/^c01115d8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01115db	obj/kernel.asm	/^c01115db:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01115df	obj/kernel.asm	/^c01115df:	75 15                	jne    c01115f6 <bitmap_create+0xa5>$/;"	l
c01115e1	obj/kernel.asm	/^c01115e1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01115e4	obj/kernel.asm	/^c01115e4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01115e7	obj/kernel.asm	/^c01115e7:	e8 0e 37 ff ff       	call   c0104cfa <kfree>$/;"	l
c01115ec	obj/kernel.asm	/^c01115ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01115f1	obj/kernel.asm	/^c01115f1:	e9 fa 00 00 00       	jmp    c01116f0 <bitmap_create+0x19f>$/;"	l
c01115f6	obj/kernel.asm	/^c01115f6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01115f9	obj/kernel.asm	/^c01115f9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01115fc	obj/kernel.asm	/^c01115fc:	89 10                	mov    %edx,(%eax)$/;"	l
c01115fe	obj/kernel.asm	/^c01115fe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111601	obj/kernel.asm	/^c0111601:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0111604	obj/kernel.asm	/^c0111604:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0111607	obj/kernel.asm	/^c0111607:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011160a	obj/kernel.asm	/^c011160a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c011160d	obj/kernel.asm	/^c011160d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0111611	obj/kernel.asm	/^c0111611:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%esp)$/;"	l
c0111618	obj/kernel.asm	/^c0111618:	ff $/;"	l
c0111619	obj/kernel.asm	/^c0111619:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011161c	obj/kernel.asm	/^c011161c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011161f	obj/kernel.asm	/^c011161f:	e8 4c 3f 00 00       	call   c0115570 <memset>$/;"	l
c0111624	obj/kernel.asm	/^c0111624:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0111627	obj/kernel.asm	/^c0111627:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c011162a	obj/kernel.asm	/^c011162a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011162d	obj/kernel.asm	/^c011162d:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0111630	obj/kernel.asm	/^c0111630:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0111633	obj/kernel.asm	/^c0111633:	0f 84 b4 00 00 00    	je     c01116ed <bitmap_create+0x19c>$/;"	l
c0111639	obj/kernel.asm	/^c0111639:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011163c	obj/kernel.asm	/^c011163c:	83 e8 01             	sub    $0x1,%eax$/;"	l
c011163f	obj/kernel.asm	/^c011163f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0111642	obj/kernel.asm	/^c0111642:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111645	obj/kernel.asm	/^c0111645:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0111648	obj/kernel.asm	/^c0111648:	89 c2                	mov    %eax,%edx$/;"	l
c011164a	obj/kernel.asm	/^c011164a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011164d	obj/kernel.asm	/^c011164d:	29 d0                	sub    %edx,%eax$/;"	l
c011164f	obj/kernel.asm	/^c011164f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111652	obj/kernel.asm	/^c0111652:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111655	obj/kernel.asm	/^c0111655:	c1 e8 05             	shr    $0x5,%eax$/;"	l
c0111658	obj/kernel.asm	/^c0111658:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c011165b	obj/kernel.asm	/^c011165b:	74 24                	je     c0111681 <bitmap_create+0x130>$/;"	l
c011165d	obj/kernel.asm	/^c011165d:	c7 44 24 0c 4a 92 11 	movl   $0xc011924a,0xc(%esp)$/;"	l
c0111664	obj/kernel.asm	/^c0111664:	c0 $/;"	l
c0111665	obj/kernel.asm	/^c0111665:	c7 44 24 08 20 92 11 	movl   $0xc0119220,0x8(%esp)$/;"	l
c011166c	obj/kernel.asm	/^c011166c:	c0 $/;"	l
c011166d	obj/kernel.asm	/^c011166d:	c7 44 24 04 2a 00 00 	movl   $0x2a,0x4(%esp)$/;"	l
c0111674	obj/kernel.asm	/^c0111674:	00 $/;"	l
c0111675	obj/kernel.asm	/^c0111675:	c7 04 24 35 92 11 c0 	movl   $0xc0119235,(%esp)$/;"	l
c011167c	obj/kernel.asm	/^c011167c:	e8 47 f8 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111681	obj/kernel.asm	/^c0111681:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111685	obj/kernel.asm	/^c0111685:	74 06                	je     c011168d <bitmap_create+0x13c>$/;"	l
c0111687	obj/kernel.asm	/^c0111687:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c011168b	obj/kernel.asm	/^c011168b:	76 24                	jbe    c01116b1 <bitmap_create+0x160>$/;"	l
c011168d	obj/kernel.asm	/^c011168d:	c7 44 24 0c 64 92 11 	movl   $0xc0119264,0xc(%esp)$/;"	l
c0111694	obj/kernel.asm	/^c0111694:	c0 $/;"	l
c0111695	obj/kernel.asm	/^c0111695:	c7 44 24 08 20 92 11 	movl   $0xc0119220,0x8(%esp)$/;"	l
c011169c	obj/kernel.asm	/^c011169c:	c0 $/;"	l
c011169d	obj/kernel.asm	/^c011169d:	c7 44 24 04 2b 00 00 	movl   $0x2b,0x4(%esp)$/;"	l
c01116a4	obj/kernel.asm	/^c01116a4:	00 $/;"	l
c01116a5	obj/kernel.asm	/^c01116a5:	c7 04 24 35 92 11 c0 	movl   $0xc0119235,(%esp)$/;"	l
c01116ac	obj/kernel.asm	/^c01116ac:	e8 17 f8 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01116b1	obj/kernel.asm	/^c01116b1:	eb 34                	jmp    c01116e7 <bitmap_create+0x196>$/;"	l
c01116b3	obj/kernel.asm	/^c01116b3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01116b6	obj/kernel.asm	/^c01116b6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01116b9	obj/kernel.asm	/^c01116b9:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01116bc	obj/kernel.asm	/^c01116bc:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c01116bf	obj/kernel.asm	/^c01116bf:	01 c2                	add    %eax,%edx$/;"	l
c01116c1	obj/kernel.asm	/^c01116c1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01116c4	obj/kernel.asm	/^c01116c4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01116c7	obj/kernel.asm	/^c01116c7:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c01116ca	obj/kernel.asm	/^c01116ca:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
c01116cd	obj/kernel.asm	/^c01116cd:	01 c8                	add    %ecx,%eax$/;"	l
c01116cf	obj/kernel.asm	/^c01116cf:	8b 18                	mov    (%eax),%ebx$/;"	l
c01116d1	obj/kernel.asm	/^c01116d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01116d4	obj/kernel.asm	/^c01116d4:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
c01116d9	obj/kernel.asm	/^c01116d9:	89 c1                	mov    %eax,%ecx$/;"	l
c01116db	obj/kernel.asm	/^c01116db:	d3 e6                	shl    %cl,%esi$/;"	d
c01116dd	obj/kernel.asm	/^c01116dd:	89 f0                	mov    %esi,%eax$/;"	l
c01116df	obj/kernel.asm	/^c01116df:	31 d8                	xor    %ebx,%eax$/;"	l
c01116e1	obj/kernel.asm	/^c01116e1:	89 02                	mov    %eax,(%edx)$/;"	l
c01116e3	obj/kernel.asm	/^c01116e3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01116e7	obj/kernel.asm	/^c01116e7:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c01116eb	obj/kernel.asm	/^c01116eb:	76 c6                	jbe    c01116b3 <bitmap_create+0x162>$/;"	l
c01116ed	obj/kernel.asm	/^c01116ed:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01116f0	obj/kernel.asm	/^c01116f0:	83 c4 30             	add    $0x30,%esp$/;"	l
c01116f3	obj/kernel.asm	/^c01116f3:	5b                   	pop    %ebx$/;"	l
c01116f4	obj/kernel.asm	/^c01116f4:	5e                   	pop    %esi$/;"	l
c01116f5	obj/kernel.asm	/^c01116f5:	5d                   	pop    %ebp$/;"	l
c01116f6	obj/kernel.asm	/^c01116f6:	c3                   	ret    $/;"	l
c01116f7	obj/kernel.asm	/^c01116f7 <bitmap_alloc>:$/;"	l
c01116f7	obj/kernel.asm	/^c01116f7:	55                   	push   %ebp$/;"	l
c01116f8	obj/kernel.asm	/^c01116f8:	89 e5                	mov    %esp,%ebp$/;"	l
c01116fa	obj/kernel.asm	/^c01116fa:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01116fd	obj/kernel.asm	/^c01116fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111700	obj/kernel.asm	/^c0111700:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111703	obj/kernel.asm	/^c0111703:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111706	obj/kernel.asm	/^c0111706:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111709	obj/kernel.asm	/^c0111709:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011170c	obj/kernel.asm	/^c011170c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011170f	obj/kernel.asm	/^c011170f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0111716	obj/kernel.asm	/^c0111716:	e9 bb 00 00 00       	jmp    c01117d6 <bitmap_alloc+0xdf>$/;"	l
c011171b	obj/kernel.asm	/^c011171b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011171e	obj/kernel.asm	/^c011171e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0111725	obj/kernel.asm	/^c0111725:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111728	obj/kernel.asm	/^c0111728:	01 d0                	add    %edx,%eax$/;"	l
c011172a	obj/kernel.asm	/^c011172a:	8b 00                	mov    (%eax),%eax$/;"	l
c011172c	obj/kernel.asm	/^c011172c:	85 c0                	test   %eax,%eax$/;"	l
c011172e	obj/kernel.asm	/^c011172e:	0f 84 9e 00 00 00    	je     c01117d2 <bitmap_alloc+0xdb>$/;"	l
c0111734	obj/kernel.asm	/^c0111734:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c011173b	obj/kernel.asm	/^c011173b:	eb 6b                	jmp    c01117a8 <bitmap_alloc+0xb1>$/;"	l
c011173d	obj/kernel.asm	/^c011173d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111740	obj/kernel.asm	/^c0111740:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0111745	obj/kernel.asm	/^c0111745:	89 c1                	mov    %eax,%ecx$/;"	l
c0111747	obj/kernel.asm	/^c0111747:	d3 e2                	shl    %cl,%edx$/;"	d
c0111749	obj/kernel.asm	/^c0111749:	89 d0                	mov    %edx,%eax$/;"	l
c011174b	obj/kernel.asm	/^c011174b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011174e	obj/kernel.asm	/^c011174e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111751	obj/kernel.asm	/^c0111751:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0111758	obj/kernel.asm	/^c0111758:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011175b	obj/kernel.asm	/^c011175b:	01 d0                	add    %edx,%eax$/;"	l
c011175d	obj/kernel.asm	/^c011175d:	8b 00                	mov    (%eax),%eax$/;"	l
c011175f	obj/kernel.asm	/^c011175f:	23 45 e4             	and    -0x1c(%ebp),%eax$/;"	l
c0111762	obj/kernel.asm	/^c0111762:	85 c0                	test   %eax,%eax$/;"	l
c0111764	obj/kernel.asm	/^c0111764:	74 3e                	je     c01117a4 <bitmap_alloc+0xad>$/;"	l
c0111766	obj/kernel.asm	/^c0111766:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111769	obj/kernel.asm	/^c0111769:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0111770	obj/kernel.asm	/^c0111770:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111773	obj/kernel.asm	/^c0111773:	01 c2                	add    %eax,%edx$/;"	l
c0111775	obj/kernel.asm	/^c0111775:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111778	obj/kernel.asm	/^c0111778:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx$/;"	l
c011177f	obj/kernel.asm	/^c011177f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111782	obj/kernel.asm	/^c0111782:	01 c8                	add    %ecx,%eax$/;"	l
c0111784	obj/kernel.asm	/^c0111784:	8b 00                	mov    (%eax),%eax$/;"	l
c0111786	obj/kernel.asm	/^c0111786:	33 45 e4             	xor    -0x1c(%ebp),%eax$/;"	l
c0111789	obj/kernel.asm	/^c0111789:	89 02                	mov    %eax,(%edx)$/;"	l
c011178b	obj/kernel.asm	/^c011178b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011178e	obj/kernel.asm	/^c011178e:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0111791	obj/kernel.asm	/^c0111791:	89 c2                	mov    %eax,%edx$/;"	l
c0111793	obj/kernel.asm	/^c0111793:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111796	obj/kernel.asm	/^c0111796:	01 c2                	add    %eax,%edx$/;"	l
c0111798	obj/kernel.asm	/^c0111798:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011179b	obj/kernel.asm	/^c011179b:	89 10                	mov    %edx,(%eax)$/;"	l
c011179d	obj/kernel.asm	/^c011179d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01117a2	obj/kernel.asm	/^c01117a2:	eb 43                	jmp    c01117e7 <bitmap_alloc+0xf0>$/;"	l
c01117a4	obj/kernel.asm	/^c01117a4:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c01117a8	obj/kernel.asm	/^c01117a8:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c01117ac	obj/kernel.asm	/^c01117ac:	76 8f                	jbe    c011173d <bitmap_alloc+0x46>$/;"	l
c01117ae	obj/kernel.asm	/^c01117ae:	c7 44 24 0c 89 92 11 	movl   $0xc0119289,0xc(%esp)$/;"	l
c01117b5	obj/kernel.asm	/^c01117b5:	c0 $/;"	l
c01117b6	obj/kernel.asm	/^c01117b6:	c7 44 24 08 20 92 11 	movl   $0xc0119220,0x8(%esp)$/;"	l
c01117bd	obj/kernel.asm	/^c01117bd:	c0 $/;"	l
c01117be	obj/kernel.asm	/^c01117be:	c7 44 24 04 43 00 00 	movl   $0x43,0x4(%esp)$/;"	l
c01117c5	obj/kernel.asm	/^c01117c5:	00 $/;"	l
c01117c6	obj/kernel.asm	/^c01117c6:	c7 04 24 35 92 11 c0 	movl   $0xc0119235,(%esp)$/;"	l
c01117cd	obj/kernel.asm	/^c01117cd:	e8 f6 f6 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01117d2	obj/kernel.asm	/^c01117d2:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01117d6	obj/kernel.asm	/^c01117d6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01117d9	obj/kernel.asm	/^c01117d9:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c01117dc	obj/kernel.asm	/^c01117dc:	0f 82 39 ff ff ff    	jb     c011171b <bitmap_alloc+0x24>$/;"	l
c01117e2	obj/kernel.asm	/^c01117e2:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01117e7	obj/kernel.asm	/^c01117e7:	c9                   	leave  $/;"	l
c01117e8	obj/kernel.asm	/^c01117e8:	c3                   	ret    $/;"	l
c01117e9	obj/kernel.asm	/^c01117e9 <bitmap_translate>:$/;"	l
c01117e9	obj/kernel.asm	/^c01117e9:	55                   	push   %ebp$/;"	l
c01117ea	obj/kernel.asm	/^c01117ea:	89 e5                	mov    %esp,%ebp$/;"	l
c01117ec	obj/kernel.asm	/^c01117ec:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01117ef	obj/kernel.asm	/^c01117ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01117f2	obj/kernel.asm	/^c01117f2:	8b 00                	mov    (%eax),%eax$/;"	l
c01117f4	obj/kernel.asm	/^c01117f4:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01117f7	obj/kernel.asm	/^c01117f7:	77 24                	ja     c011181d <bitmap_translate+0x34>$/;"	l
c01117f9	obj/kernel.asm	/^c01117f9:	c7 44 24 0c 8b 92 11 	movl   $0xc011928b,0xc(%esp)$/;"	l
c0111800	obj/kernel.asm	/^c0111800:	c0 $/;"	l
c0111801	obj/kernel.asm	/^c0111801:	c7 44 24 08 20 92 11 	movl   $0xc0119220,0x8(%esp)$/;"	l
c0111808	obj/kernel.asm	/^c0111808:	c0 $/;"	l
c0111809	obj/kernel.asm	/^c0111809:	c7 44 24 04 4c 00 00 	movl   $0x4c,0x4(%esp)$/;"	l
c0111810	obj/kernel.asm	/^c0111810:	00 $/;"	l
c0111811	obj/kernel.asm	/^c0111811:	c7 04 24 35 92 11 c0 	movl   $0xc0119235,(%esp)$/;"	l
c0111818	obj/kernel.asm	/^c0111818:	e8 ab f6 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011181d	obj/kernel.asm	/^c011181d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111820	obj/kernel.asm	/^c0111820:	c1 e8 05             	shr    $0x5,%eax$/;"	l
c0111823	obj/kernel.asm	/^c0111823:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111826	obj/kernel.asm	/^c0111826:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111829	obj/kernel.asm	/^c0111829:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c011182c	obj/kernel.asm	/^c011182c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011182f	obj/kernel.asm	/^c011182f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111832	obj/kernel.asm	/^c0111832:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111835	obj/kernel.asm	/^c0111835:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0111838	obj/kernel.asm	/^c0111838:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c011183b	obj/kernel.asm	/^c011183b:	01 c2                	add    %eax,%edx$/;"	l
c011183d	obj/kernel.asm	/^c011183d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0111840	obj/kernel.asm	/^c0111840:	89 10                	mov    %edx,(%eax)$/;"	l
c0111842	obj/kernel.asm	/^c0111842:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111845	obj/kernel.asm	/^c0111845:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c011184a	obj/kernel.asm	/^c011184a:	89 c1                	mov    %eax,%ecx$/;"	l
c011184c	obj/kernel.asm	/^c011184c:	d3 e2                	shl    %cl,%edx$/;"	d
c011184e	obj/kernel.asm	/^c011184e:	89 d0                	mov    %edx,%eax$/;"	l
c0111850	obj/kernel.asm	/^c0111850:	89 c2                	mov    %eax,%edx$/;"	l
c0111852	obj/kernel.asm	/^c0111852:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111855	obj/kernel.asm	/^c0111855:	89 10                	mov    %edx,(%eax)$/;"	l
c0111857	obj/kernel.asm	/^c0111857:	c9                   	leave  $/;"	l
c0111858	obj/kernel.asm	/^c0111858:	c3                   	ret    $/;"	l
c0111859	obj/kernel.asm	/^c0111859 <bitmap_test>:$/;"	l
c0111859	obj/kernel.asm	/^c0111859:	55                   	push   %ebp$/;"	l
c011185a	obj/kernel.asm	/^c011185a:	89 e5                	mov    %esp,%ebp$/;"	l
c011185c	obj/kernel.asm	/^c011185c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011185f	obj/kernel.asm	/^c011185f:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0111862	obj/kernel.asm	/^c0111862:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111866	obj/kernel.asm	/^c0111866:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0111869	obj/kernel.asm	/^c0111869:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011186d	obj/kernel.asm	/^c011186d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111870	obj/kernel.asm	/^c0111870:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111874	obj/kernel.asm	/^c0111874:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111877	obj/kernel.asm	/^c0111877:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011187a	obj/kernel.asm	/^c011187a:	e8 6a ff ff ff       	call   c01117e9 <bitmap_translate>$/;"	l
c011187f	obj/kernel.asm	/^c011187f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111882	obj/kernel.asm	/^c0111882:	8b 10                	mov    (%eax),%edx$/;"	l
c0111884	obj/kernel.asm	/^c0111884:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111887	obj/kernel.asm	/^c0111887:	21 d0                	and    %edx,%eax$/;"	l
c0111889	obj/kernel.asm	/^c0111889:	c9                   	leave  $/;"	l
c011188a	obj/kernel.asm	/^c011188a:	c3                   	ret    $/;"	l
c011188b	obj/kernel.asm	/^c011188b <bitmap_free>:$/;"	l
c011188b	obj/kernel.asm	/^c011188b:	55                   	push   %ebp$/;"	l
c011188c	obj/kernel.asm	/^c011188c:	89 e5                	mov    %esp,%ebp$/;"	l
c011188e	obj/kernel.asm	/^c011188e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111891	obj/kernel.asm	/^c0111891:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0111894	obj/kernel.asm	/^c0111894:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111898	obj/kernel.asm	/^c0111898:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c011189b	obj/kernel.asm	/^c011189b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011189f	obj/kernel.asm	/^c011189f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01118a2	obj/kernel.asm	/^c01118a2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01118a6	obj/kernel.asm	/^c01118a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01118a9	obj/kernel.asm	/^c01118a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01118ac	obj/kernel.asm	/^c01118ac:	e8 38 ff ff ff       	call   c01117e9 <bitmap_translate>$/;"	l
c01118b1	obj/kernel.asm	/^c01118b1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01118b4	obj/kernel.asm	/^c01118b4:	8b 10                	mov    (%eax),%edx$/;"	l
c01118b6	obj/kernel.asm	/^c01118b6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01118b9	obj/kernel.asm	/^c01118b9:	21 d0                	and    %edx,%eax$/;"	l
c01118bb	obj/kernel.asm	/^c01118bb:	85 c0                	test   %eax,%eax$/;"	l
c01118bd	obj/kernel.asm	/^c01118bd:	74 24                	je     c01118e3 <bitmap_free+0x58>$/;"	l
c01118bf	obj/kernel.asm	/^c01118bf:	c7 44 24 0c a1 92 11 	movl   $0xc01192a1,0xc(%esp)$/;"	l
c01118c6	obj/kernel.asm	/^c01118c6:	c0 $/;"	l
c01118c7	obj/kernel.asm	/^c01118c7:	c7 44 24 08 20 92 11 	movl   $0xc0119220,0x8(%esp)$/;"	l
c01118ce	obj/kernel.asm	/^c01118ce:	c0 $/;"	l
c01118cf	obj/kernel.asm	/^c01118cf:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c01118d6	obj/kernel.asm	/^c01118d6:	00 $/;"	l
c01118d7	obj/kernel.asm	/^c01118d7:	c7 04 24 35 92 11 c0 	movl   $0xc0119235,(%esp)$/;"	l
c01118de	obj/kernel.asm	/^c01118de:	e8 e5 f5 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01118e3	obj/kernel.asm	/^c01118e3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01118e6	obj/kernel.asm	/^c01118e6:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01118e9	obj/kernel.asm	/^c01118e9:	8b 0a                	mov    (%edx),%ecx$/;"	l
c01118eb	obj/kernel.asm	/^c01118eb:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01118ee	obj/kernel.asm	/^c01118ee:	09 ca                	or     %ecx,%edx$/;"	l
c01118f0	obj/kernel.asm	/^c01118f0:	89 10                	mov    %edx,(%eax)$/;"	l
c01118f2	obj/kernel.asm	/^c01118f2:	c9                   	leave  $/;"	l
c01118f3	obj/kernel.asm	/^c01118f3:	c3                   	ret    $/;"	l
c01118f4	obj/kernel.asm	/^c01118f4 <bitmap_destroy>:$/;"	l
c01118f4	obj/kernel.asm	/^c01118f4:	55                   	push   %ebp$/;"	l
c01118f5	obj/kernel.asm	/^c01118f5:	89 e5                	mov    %esp,%ebp$/;"	l
c01118f7	obj/kernel.asm	/^c01118f7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01118fa	obj/kernel.asm	/^c01118fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01118fd	obj/kernel.asm	/^c01118fd:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111900	obj/kernel.asm	/^c0111900:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111903	obj/kernel.asm	/^c0111903:	e8 f2 33 ff ff       	call   c0104cfa <kfree>$/;"	l
c0111908	obj/kernel.asm	/^c0111908:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011190b	obj/kernel.asm	/^c011190b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011190e	obj/kernel.asm	/^c011190e:	e8 e7 33 ff ff       	call   c0104cfa <kfree>$/;"	l
c0111913	obj/kernel.asm	/^c0111913:	c9                   	leave  $/;"	l
c0111914	obj/kernel.asm	/^c0111914:	c3                   	ret    $/;"	l
c0111915	obj/kernel.asm	/^c0111915 <bitmap_getdata>:$/;"	l
c0111915	obj/kernel.asm	/^c0111915:	55                   	push   %ebp$/;"	l
c0111916	obj/kernel.asm	/^c0111916:	89 e5                	mov    %esp,%ebp$/;"	l
c0111918	obj/kernel.asm	/^c0111918:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c011191c	obj/kernel.asm	/^c011191c:	74 12                	je     c0111930 <bitmap_getdata+0x1b>$/;"	l
c011191e	obj/kernel.asm	/^c011191e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111921	obj/kernel.asm	/^c0111921:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111924	obj/kernel.asm	/^c0111924:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c011192b	obj/kernel.asm	/^c011192b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011192e	obj/kernel.asm	/^c011192e:	89 10                	mov    %edx,(%eax)$/;"	l
c0111930	obj/kernel.asm	/^c0111930:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111933	obj/kernel.asm	/^c0111933:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111936	obj/kernel.asm	/^c0111936:	5d                   	pop    %ebp$/;"	l
c0111937	obj/kernel.asm	/^c0111937:	c3                   	ret    $/;"	l
c0111938	obj/kernel.asm	/^c0111938 <sfs_init>:$/;"	l
c0111938	obj/kernel.asm	/^c0111938:	55                   	push   %ebp$/;"	l
c0111939	obj/kernel.asm	/^c0111939:	89 e5                	mov    %esp,%ebp$/;"	l
c011193b	obj/kernel.asm	/^c011193b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011193e	obj/kernel.asm	/^c011193e:	c7 04 24 b1 92 11 c0 	movl   $0xc01192b1,(%esp)$/;"	l
c0111945	obj/kernel.asm	/^c0111945:	e8 d6 08 00 00       	call   c0112220 <sfs_mount>$/;"	l
c011194a	obj/kernel.asm	/^c011194a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011194d	obj/kernel.asm	/^c011194d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111951	obj/kernel.asm	/^c0111951:	74 23                	je     c0111976 <sfs_init+0x3e>$/;"	l
c0111953	obj/kernel.asm	/^c0111953:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111956	obj/kernel.asm	/^c0111956:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011195a	obj/kernel.asm	/^c011195a:	c7 44 24 08 b7 92 11 	movl   $0xc01192b7,0x8(%esp)$/;"	l
c0111961	obj/kernel.asm	/^c0111961:	c0 $/;"	l
c0111962	obj/kernel.asm	/^c0111962:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
c0111969	obj/kernel.asm	/^c0111969:	00 $/;"	l
c011196a	obj/kernel.asm	/^c011196a:	c7 04 24 d4 92 11 c0 	movl   $0xc01192d4,(%esp)$/;"	l
c0111971	obj/kernel.asm	/^c0111971:	e8 52 f5 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111976	obj/kernel.asm	/^c0111976:	c9                   	leave  $/;"	l
c0111977	obj/kernel.asm	/^c0111977:	c3                   	ret    $/;"	l
c0111978	obj/kernel.asm	/^c0111978 <sfs_sync>:$/;"	l
c0111978	obj/kernel.asm	/^c0111978:	55                   	push   %ebp$/;"	l
c0111979	obj/kernel.asm	/^c0111979:	89 e5                	mov    %esp,%ebp$/;"	l
c011197b	obj/kernel.asm	/^c011197b:	83 ec 38             	sub    $0x38,%esp$/;"	l
c011197e	obj/kernel.asm	/^c011197e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111981	obj/kernel.asm	/^c0111981:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111984	obj/kernel.asm	/^c0111984:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111988	obj/kernel.asm	/^c0111988:	74 0a                	je     c0111994 <sfs_sync+0x1c>$/;"	l
c011198a	obj/kernel.asm	/^c011198a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011198d	obj/kernel.asm	/^c011198d:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111990	obj/kernel.asm	/^c0111990:	85 c0                	test   %eax,%eax$/;"	l
c0111992	obj/kernel.asm	/^c0111992:	74 24                	je     c01119b8 <sfs_sync+0x40>$/;"	l
c0111994	obj/kernel.asm	/^c0111994:	c7 44 24 0c e8 92 11 	movl   $0xc01192e8,0xc(%esp)$/;"	l
c011199b	obj/kernel.asm	/^c011199b:	c0 $/;"	l
c011199c	obj/kernel.asm	/^c011199c:	c7 44 24 08 11 93 11 	movl   $0xc0119311,0x8(%esp)$/;"	l
c01119a3	obj/kernel.asm	/^c01119a3:	c0 $/;"	l
c01119a4	obj/kernel.asm	/^c01119a4:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)$/;"	l
c01119ab	obj/kernel.asm	/^c01119ab:	00 $/;"	l
c01119ac	obj/kernel.asm	/^c01119ac:	c7 04 24 26 93 11 c0 	movl   $0xc0119326,(%esp)$/;"	l
c01119b3	obj/kernel.asm	/^c01119b3:	e8 10 f5 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01119b8	obj/kernel.asm	/^c01119b8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01119bb	obj/kernel.asm	/^c01119bb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01119be	obj/kernel.asm	/^c01119be:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01119c1	obj/kernel.asm	/^c01119c1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01119c4	obj/kernel.asm	/^c01119c4:	e8 f5 2f 00 00       	call   c01149be <lock_sfs_fs>$/;"	l
c01119c9	obj/kernel.asm	/^c01119c9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01119cc	obj/kernel.asm	/^c01119cc:	83 c0 60             	add    $0x60,%eax$/;"	l
c01119cf	obj/kernel.asm	/^c01119cf:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01119d2	obj/kernel.asm	/^c01119d2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01119d5	obj/kernel.asm	/^c01119d5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01119d8	obj/kernel.asm	/^c01119d8:	eb 74                	jmp    c0111a4e <sfs_sync+0xd6>$/;"	l
c01119da	obj/kernel.asm	/^c01119da:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01119dd	obj/kernel.asm	/^c01119dd:	83 e8 1c             	sub    $0x1c,%eax$/;"	l
c01119e0	obj/kernel.asm	/^c01119e0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01119e3	obj/kernel.asm	/^c01119e3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01119e6	obj/kernel.asm	/^c01119e6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01119e9	obj/kernel.asm	/^c01119e9:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01119ed	obj/kernel.asm	/^c01119ed:	74 17                	je     c0111a06 <sfs_sync+0x8e>$/;"	l
c01119ef	obj/kernel.asm	/^c01119ef:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01119f2	obj/kernel.asm	/^c01119f2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01119f5	obj/kernel.asm	/^c01119f5:	85 c0                	test   %eax,%eax$/;"	l
c01119f7	obj/kernel.asm	/^c01119f7:	74 0d                	je     c0111a06 <sfs_sync+0x8e>$/;"	l
c01119f9	obj/kernel.asm	/^c01119f9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01119fc	obj/kernel.asm	/^c01119fc:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01119ff	obj/kernel.asm	/^c01119ff:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0111a02	obj/kernel.asm	/^c0111a02:	85 c0                	test   %eax,%eax$/;"	l
c0111a04	obj/kernel.asm	/^c0111a04:	75 24                	jne    c0111a2a <sfs_sync+0xb2>$/;"	l
c0111a06	obj/kernel.asm	/^c0111a06:	c7 44 24 0c 3c 93 11 	movl   $0xc011933c,0xc(%esp)$/;"	l
c0111a0d	obj/kernel.asm	/^c0111a0d:	c0 $/;"	l
c0111a0e	obj/kernel.asm	/^c0111a0e:	c7 44 24 08 11 93 11 	movl   $0xc0119311,0x8(%esp)$/;"	l
c0111a15	obj/kernel.asm	/^c0111a15:	c0 $/;"	l
c0111a16	obj/kernel.asm	/^c0111a16:	c7 44 24 04 1b 00 00 	movl   $0x1b,0x4(%esp)$/;"	l
c0111a1d	obj/kernel.asm	/^c0111a1d:	00 $/;"	l
c0111a1e	obj/kernel.asm	/^c0111a1e:	c7 04 24 26 93 11 c0 	movl   $0xc0119326,(%esp)$/;"	l
c0111a25	obj/kernel.asm	/^c0111a25:	e8 9e f4 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111a2a	obj/kernel.asm	/^c0111a2a:	c7 44 24 04 8a 93 11 	movl   $0xc011938a,0x4(%esp)$/;"	l
c0111a31	obj/kernel.asm	/^c0111a31:	c0 $/;"	l
c0111a32	obj/kernel.asm	/^c0111a32:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111a35	obj/kernel.asm	/^c0111a35:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111a38	obj/kernel.asm	/^c0111a38:	e8 db d8 ff ff       	call   c010f318 <inode_check>$/;"	l
c0111a3d	obj/kernel.asm	/^c0111a3d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111a40	obj/kernel.asm	/^c0111a40:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111a43	obj/kernel.asm	/^c0111a43:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0111a46	obj/kernel.asm	/^c0111a46:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0111a49	obj/kernel.asm	/^c0111a49:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0111a4c	obj/kernel.asm	/^c0111a4c:	ff d0                	call   *%eax$/;"	l
c0111a4e	obj/kernel.asm	/^c0111a4e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111a51	obj/kernel.asm	/^c0111a51:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0111a54	obj/kernel.asm	/^c0111a54:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111a57	obj/kernel.asm	/^c0111a57:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111a5a	obj/kernel.asm	/^c0111a5a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111a5d	obj/kernel.asm	/^c0111a5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111a60	obj/kernel.asm	/^c0111a60:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0111a63	obj/kernel.asm	/^c0111a63:	0f 85 71 ff ff ff    	jne    c01119da <sfs_sync+0x62>$/;"	l
c0111a69	obj/kernel.asm	/^c0111a69:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111a6c	obj/kernel.asm	/^c0111a6c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111a6f	obj/kernel.asm	/^c0111a6f:	e8 76 2f 00 00       	call   c01149ea <unlock_sfs_fs>$/;"	l
c0111a74	obj/kernel.asm	/^c0111a74:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111a77	obj/kernel.asm	/^c0111a77:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0111a7a	obj/kernel.asm	/^c0111a7a:	85 c0                	test   %eax,%eax$/;"	l
c0111a7c	obj/kernel.asm	/^c0111a7c:	74 50                	je     c0111ace <sfs_sync+0x156>$/;"	l
c0111a7e	obj/kernel.asm	/^c0111a7e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111a81	obj/kernel.asm	/^c0111a81:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c0111a88	obj/kernel.asm	/^c0111a88:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111a8b	obj/kernel.asm	/^c0111a8b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111a8e	obj/kernel.asm	/^c0111a8e:	e8 bd 2d 00 00       	call   c0114850 <sfs_sync_super>$/;"	l
c0111a93	obj/kernel.asm	/^c0111a93:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0111a96	obj/kernel.asm	/^c0111a96:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0111a9a	obj/kernel.asm	/^c0111a9a:	74 0f                	je     c0111aab <sfs_sync+0x133>$/;"	l
c0111a9c	obj/kernel.asm	/^c0111a9c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111a9f	obj/kernel.asm	/^c0111a9f:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c0111aa6	obj/kernel.asm	/^c0111aa6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0111aa9	obj/kernel.asm	/^c0111aa9:	eb 28                	jmp    c0111ad3 <sfs_sync+0x15b>$/;"	l
c0111aab	obj/kernel.asm	/^c0111aab:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111aae	obj/kernel.asm	/^c0111aae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111ab1	obj/kernel.asm	/^c0111ab1:	e8 26 2e 00 00       	call   c01148dc <sfs_sync_freemap>$/;"	l
c0111ab6	obj/kernel.asm	/^c0111ab6:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0111ab9	obj/kernel.asm	/^c0111ab9:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0111abd	obj/kernel.asm	/^c0111abd:	74 0f                	je     c0111ace <sfs_sync+0x156>$/;"	l
c0111abf	obj/kernel.asm	/^c0111abf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111ac2	obj/kernel.asm	/^c0111ac2:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c0111ac9	obj/kernel.asm	/^c0111ac9:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0111acc	obj/kernel.asm	/^c0111acc:	eb 05                	jmp    c0111ad3 <sfs_sync+0x15b>$/;"	l
c0111ace	obj/kernel.asm	/^c0111ace:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111ad3	obj/kernel.asm	/^c0111ad3:	c9                   	leave  $/;"	l
c0111ad4	obj/kernel.asm	/^c0111ad4:	c3                   	ret    $/;"	l
c0111ad5	obj/kernel.asm	/^c0111ad5 <sfs_get_root>:$/;"	l
c0111ad5	obj/kernel.asm	/^c0111ad5:	55                   	push   %ebp$/;"	l
c0111ad6	obj/kernel.asm	/^c0111ad6:	89 e5                	mov    %esp,%ebp$/;"	l
c0111ad8	obj/kernel.asm	/^c0111ad8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111adb	obj/kernel.asm	/^c0111adb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111ade	obj/kernel.asm	/^c0111ade:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111ae1	obj/kernel.asm	/^c0111ae1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111ae5	obj/kernel.asm	/^c0111ae5:	74 0a                	je     c0111af1 <sfs_get_root+0x1c>$/;"	l
c0111ae7	obj/kernel.asm	/^c0111ae7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111aea	obj/kernel.asm	/^c0111aea:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111aed	obj/kernel.asm	/^c0111aed:	85 c0                	test   %eax,%eax$/;"	l
c0111aef	obj/kernel.asm	/^c0111aef:	74 24                	je     c0111b15 <sfs_get_root+0x40>$/;"	l
c0111af1	obj/kernel.asm	/^c0111af1:	c7 44 24 0c e8 92 11 	movl   $0xc01192e8,0xc(%esp)$/;"	l
c0111af8	obj/kernel.asm	/^c0111af8:	c0 $/;"	l
c0111af9	obj/kernel.asm	/^c0111af9:	c7 44 24 08 11 93 11 	movl   $0xc0119311,0x8(%esp)$/;"	l
c0111b00	obj/kernel.asm	/^c0111b00:	c0 $/;"	l
c0111b01	obj/kernel.asm	/^c0111b01:	c7 44 24 04 36 00 00 	movl   $0x36,0x4(%esp)$/;"	l
c0111b08	obj/kernel.asm	/^c0111b08:	00 $/;"	l
c0111b09	obj/kernel.asm	/^c0111b09:	c7 04 24 26 93 11 c0 	movl   $0xc0119326,(%esp)$/;"	l
c0111b10	obj/kernel.asm	/^c0111b10:	e8 b3 f3 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111b15	obj/kernel.asm	/^c0111b15:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111b18	obj/kernel.asm	/^c0111b18:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0111b1f	obj/kernel.asm	/^c0111b1f:	00 $/;"	l
c0111b20	obj/kernel.asm	/^c0111b20:	8d 55 ec             	lea    -0x14(%ebp),%edx$/;"	l
c0111b23	obj/kernel.asm	/^c0111b23:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0111b27	obj/kernel.asm	/^c0111b27:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111b2a	obj/kernel.asm	/^c0111b2a:	e8 e1 0b 00 00       	call   c0112710 <sfs_load_inode>$/;"	l
c0111b2f	obj/kernel.asm	/^c0111b2f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111b32	obj/kernel.asm	/^c0111b32:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111b36	obj/kernel.asm	/^c0111b36:	74 23                	je     c0111b5b <sfs_get_root+0x86>$/;"	l
c0111b38	obj/kernel.asm	/^c0111b38:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111b3b	obj/kernel.asm	/^c0111b3b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111b3f	obj/kernel.asm	/^c0111b3f:	c7 44 24 08 90 93 11 	movl   $0xc0119390,0x8(%esp)$/;"	l
c0111b46	obj/kernel.asm	/^c0111b46:	c0 $/;"	l
c0111b47	obj/kernel.asm	/^c0111b47:	c7 44 24 04 37 00 00 	movl   $0x37,0x4(%esp)$/;"	l
c0111b4e	obj/kernel.asm	/^c0111b4e:	00 $/;"	l
c0111b4f	obj/kernel.asm	/^c0111b4f:	c7 04 24 26 93 11 c0 	movl   $0xc0119326,(%esp)$/;"	l
c0111b56	obj/kernel.asm	/^c0111b56:	e8 6d f3 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111b5b	obj/kernel.asm	/^c0111b5b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111b5e	obj/kernel.asm	/^c0111b5e:	c9                   	leave  $/;"	l
c0111b5f	obj/kernel.asm	/^c0111b5f:	c3                   	ret    $/;"	l
c0111b60	obj/kernel.asm	/^c0111b60 <sfs_unmount>:$/;"	l
c0111b60	obj/kernel.asm	/^c0111b60:	55                   	push   %ebp$/;"	l
c0111b61	obj/kernel.asm	/^c0111b61:	89 e5                	mov    %esp,%ebp$/;"	l
c0111b63	obj/kernel.asm	/^c0111b63:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111b66	obj/kernel.asm	/^c0111b66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111b69	obj/kernel.asm	/^c0111b69:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111b6c	obj/kernel.asm	/^c0111b6c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111b70	obj/kernel.asm	/^c0111b70:	74 0a                	je     c0111b7c <sfs_unmount+0x1c>$/;"	l
c0111b72	obj/kernel.asm	/^c0111b72:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111b75	obj/kernel.asm	/^c0111b75:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111b78	obj/kernel.asm	/^c0111b78:	85 c0                	test   %eax,%eax$/;"	l
c0111b7a	obj/kernel.asm	/^c0111b7a:	74 24                	je     c0111ba0 <sfs_unmount+0x40>$/;"	l
c0111b7c	obj/kernel.asm	/^c0111b7c:	c7 44 24 0c e8 92 11 	movl   $0xc01192e8,0xc(%esp)$/;"	l
c0111b83	obj/kernel.asm	/^c0111b83:	c0 $/;"	l
c0111b84	obj/kernel.asm	/^c0111b84:	c7 44 24 08 11 93 11 	movl   $0xc0119311,0x8(%esp)$/;"	l
c0111b8b	obj/kernel.asm	/^c0111b8b:	c0 $/;"	l
c0111b8c	obj/kernel.asm	/^c0111b8c:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
c0111b93	obj/kernel.asm	/^c0111b93:	00 $/;"	l
c0111b94	obj/kernel.asm	/^c0111b94:	c7 04 24 26 93 11 c0 	movl   $0xc0119326,(%esp)$/;"	l
c0111b9b	obj/kernel.asm	/^c0111b9b:	e8 28 f3 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111ba0	obj/kernel.asm	/^c0111ba0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111ba3	obj/kernel.asm	/^c0111ba3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111ba6	obj/kernel.asm	/^c0111ba6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111ba9	obj/kernel.asm	/^c0111ba9:	83 c0 60             	add    $0x60,%eax$/;"	l
c0111bac	obj/kernel.asm	/^c0111bac:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111baf	obj/kernel.asm	/^c0111baf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111bb2	obj/kernel.asm	/^c0111bb2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111bb5	obj/kernel.asm	/^c0111bb5:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0111bb8	obj/kernel.asm	/^c0111bb8:	0f 94 c0             	sete   %al$/;"	l
c0111bbb	obj/kernel.asm	/^c0111bbb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0111bbe	obj/kernel.asm	/^c0111bbe:	85 c0                	test   %eax,%eax$/;"	l
c0111bc0	obj/kernel.asm	/^c0111bc0:	75 07                	jne    c0111bc9 <sfs_unmount+0x69>$/;"	l
c0111bc2	obj/kernel.asm	/^c0111bc2:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax$/;"	l
c0111bc7	obj/kernel.asm	/^c0111bc7:	eb 68                	jmp    c0111c31 <sfs_unmount+0xd1>$/;"	l
c0111bc9	obj/kernel.asm	/^c0111bc9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111bcc	obj/kernel.asm	/^c0111bcc:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0111bcf	obj/kernel.asm	/^c0111bcf:	85 c0                	test   %eax,%eax$/;"	l
c0111bd1	obj/kernel.asm	/^c0111bd1:	74 24                	je     c0111bf7 <sfs_unmount+0x97>$/;"	l
c0111bd3	obj/kernel.asm	/^c0111bd3:	c7 44 24 0c a9 93 11 	movl   $0xc01193a9,0xc(%esp)$/;"	l
c0111bda	obj/kernel.asm	/^c0111bda:	c0 $/;"	l
c0111bdb	obj/kernel.asm	/^c0111bdb:	c7 44 24 08 11 93 11 	movl   $0xc0119311,0x8(%esp)$/;"	l
c0111be2	obj/kernel.asm	/^c0111be2:	c0 $/;"	l
c0111be3	obj/kernel.asm	/^c0111be3:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c0111bea	obj/kernel.asm	/^c0111bea:	00 $/;"	l
c0111beb	obj/kernel.asm	/^c0111beb:	c7 04 24 26 93 11 c0 	movl   $0xc0119326,(%esp)$/;"	l
c0111bf2	obj/kernel.asm	/^c0111bf2:	e8 d1 f2 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111bf7	obj/kernel.asm	/^c0111bf7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111bfa	obj/kernel.asm	/^c0111bfa:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0111bfd	obj/kernel.asm	/^c0111bfd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111c00	obj/kernel.asm	/^c0111c00:	e8 ef fc ff ff       	call   c01118f4 <bitmap_destroy>$/;"	l
c0111c05	obj/kernel.asm	/^c0111c05:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111c08	obj/kernel.asm	/^c0111c08:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0111c0b	obj/kernel.asm	/^c0111c0b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111c0e	obj/kernel.asm	/^c0111c0e:	e8 e7 30 ff ff       	call   c0104cfa <kfree>$/;"	l
c0111c13	obj/kernel.asm	/^c0111c13:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111c16	obj/kernel.asm	/^c0111c16:	8b 40 68             	mov    0x68(%eax),%eax$/;"	l
c0111c19	obj/kernel.asm	/^c0111c19:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111c1c	obj/kernel.asm	/^c0111c1c:	e8 d9 30 ff ff       	call   c0104cfa <kfree>$/;"	l
c0111c21	obj/kernel.asm	/^c0111c21:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111c24	obj/kernel.asm	/^c0111c24:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111c27	obj/kernel.asm	/^c0111c27:	e8 ce 30 ff ff       	call   c0104cfa <kfree>$/;"	l
c0111c2c	obj/kernel.asm	/^c0111c2c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111c31	obj/kernel.asm	/^c0111c31:	c9                   	leave  $/;"	l
c0111c32	obj/kernel.asm	/^c0111c32:	c3                   	ret    $/;"	l
c0111c33	obj/kernel.asm	/^c0111c33 <sfs_cleanup>:$/;"	l
c0111c33	obj/kernel.asm	/^c0111c33:	55                   	push   %ebp$/;"	l
c0111c34	obj/kernel.asm	/^c0111c34:	89 e5                	mov    %esp,%ebp$/;"	l
c0111c36	obj/kernel.asm	/^c0111c36:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0111c39	obj/kernel.asm	/^c0111c39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111c3c	obj/kernel.asm	/^c0111c3c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111c3f	obj/kernel.asm	/^c0111c3f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111c43	obj/kernel.asm	/^c0111c43:	74 0a                	je     c0111c4f <sfs_cleanup+0x1c>$/;"	l
c0111c45	obj/kernel.asm	/^c0111c45:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111c48	obj/kernel.asm	/^c0111c48:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111c4b	obj/kernel.asm	/^c0111c4b:	85 c0                	test   %eax,%eax$/;"	l
c0111c4d	obj/kernel.asm	/^c0111c4d:	74 24                	je     c0111c73 <sfs_cleanup+0x40>$/;"	l
c0111c4f	obj/kernel.asm	/^c0111c4f:	c7 44 24 0c e8 92 11 	movl   $0xc01192e8,0xc(%esp)$/;"	l
c0111c56	obj/kernel.asm	/^c0111c56:	c0 $/;"	l
c0111c57	obj/kernel.asm	/^c0111c57:	c7 44 24 08 11 93 11 	movl   $0xc0119311,0x8(%esp)$/;"	l
c0111c5e	obj/kernel.asm	/^c0111c5e:	c0 $/;"	l
c0111c5f	obj/kernel.asm	/^c0111c5f:	c7 44 24 04 54 00 00 	movl   $0x54,0x4(%esp)$/;"	l
c0111c66	obj/kernel.asm	/^c0111c66:	00 $/;"	l
c0111c67	obj/kernel.asm	/^c0111c67:	c7 04 24 26 93 11 c0 	movl   $0xc0119326,(%esp)$/;"	l
c0111c6e	obj/kernel.asm	/^c0111c6e:	e8 55 f2 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111c73	obj/kernel.asm	/^c0111c73:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111c76	obj/kernel.asm	/^c0111c76:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111c79	obj/kernel.asm	/^c0111c79:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111c7c	obj/kernel.asm	/^c0111c7c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111c7f	obj/kernel.asm	/^c0111c7f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0111c82	obj/kernel.asm	/^c0111c82:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111c85	obj/kernel.asm	/^c0111c85:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111c88	obj/kernel.asm	/^c0111c88:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0111c8b	obj/kernel.asm	/^c0111c8b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111c8e	obj/kernel.asm	/^c0111c8e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0111c91	obj/kernel.asm	/^c0111c91:	89 d1                	mov    %edx,%ecx$/;"	l
c0111c93	obj/kernel.asm	/^c0111c93:	29 c1                	sub    %eax,%ecx$/;"	l
c0111c95	obj/kernel.asm	/^c0111c95:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111c98	obj/kernel.asm	/^c0111c98:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0111c9b	obj/kernel.asm	/^c0111c9b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111c9e	obj/kernel.asm	/^c0111c9e:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0111ca2	obj/kernel.asm	/^c0111ca2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111ca5	obj/kernel.asm	/^c0111ca5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111ca9	obj/kernel.asm	/^c0111ca9:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0111cad	obj/kernel.asm	/^c0111cad:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0111cb1	obj/kernel.asm	/^c0111cb1:	c7 04 24 bc 93 11 c0 	movl   $0xc01193bc,(%esp)$/;"	l
c0111cb8	obj/kernel.asm	/^c0111cb8:	e8 a8 e6 fe ff       	call   c0100365 <cprintf>$/;"	l
c0111cbd	obj/kernel.asm	/^c0111cbd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0111cc4	obj/kernel.asm	/^c0111cc4:	eb 1d                	jmp    c0111ce3 <sfs_cleanup+0xb0>$/;"	l
c0111cc6	obj/kernel.asm	/^c0111cc6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111cc9	obj/kernel.asm	/^c0111cc9:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c0111ccc	obj/kernel.asm	/^c0111ccc:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0111ccf	obj/kernel.asm	/^c0111ccf:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0111cd2	obj/kernel.asm	/^c0111cd2:	ff d0                	call   *%eax$/;"	l
c0111cd4	obj/kernel.asm	/^c0111cd4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111cd7	obj/kernel.asm	/^c0111cd7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111cdb	obj/kernel.asm	/^c0111cdb:	75 02                	jne    c0111cdf <sfs_cleanup+0xac>$/;"	l
c0111cdd	obj/kernel.asm	/^c0111cdd:	eb 0a                	jmp    c0111ce9 <sfs_cleanup+0xb6>$/;"	l
c0111cdf	obj/kernel.asm	/^c0111cdf:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0111ce3	obj/kernel.asm	/^c0111ce3:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c0111ce7	obj/kernel.asm	/^c0111ce7:	7e dd                	jle    c0111cc6 <sfs_cleanup+0x93>$/;"	l
c0111ce9	obj/kernel.asm	/^c0111ce9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111ced	obj/kernel.asm	/^c0111ced:	74 2d                	je     c0111d1c <sfs_cleanup+0xe9>$/;"	l
c0111cef	obj/kernel.asm	/^c0111cef:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111cf2	obj/kernel.asm	/^c0111cf2:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0111cf5	obj/kernel.asm	/^c0111cf5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111cf8	obj/kernel.asm	/^c0111cf8:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0111cfc	obj/kernel.asm	/^c0111cfc:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0111d00	obj/kernel.asm	/^c0111d00:	c7 44 24 08 db 93 11 	movl   $0xc01193db,0x8(%esp)$/;"	l
c0111d07	obj/kernel.asm	/^c0111d07:	c0 $/;"	l
c0111d08	obj/kernel.asm	/^c0111d08:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c0111d0f	obj/kernel.asm	/^c0111d0f:	00 $/;"	l
c0111d10	obj/kernel.asm	/^c0111d10:	c7 04 24 26 93 11 c0 	movl   $0xc0119326,(%esp)$/;"	l
c0111d17	obj/kernel.asm	/^c0111d17:	e8 18 f2 fe ff       	call   c0100f34 <__warn>$/;"	l
c0111d1c	obj/kernel.asm	/^c0111d1c:	c9                   	leave  $/;"	l
c0111d1d	obj/kernel.asm	/^c0111d1d:	c3                   	ret    $/;"	l
c0111d1e	obj/kernel.asm	/^c0111d1e <sfs_init_read>:$/;"	l
c0111d1e	obj/kernel.asm	/^c0111d1e:	55                   	push   %ebp$/;"	l
c0111d1f	obj/kernel.asm	/^c0111d1f:	89 e5                	mov    %esp,%ebp$/;"	l
c0111d21	obj/kernel.asm	/^c0111d21:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0111d24	obj/kernel.asm	/^c0111d24:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111d27	obj/kernel.asm	/^c0111d27:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0111d2a	obj/kernel.asm	/^c0111d2a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111d2e	obj/kernel.asm	/^c0111d2e:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0111d35	obj/kernel.asm	/^c0111d35:	00 $/;"	l
c0111d36	obj/kernel.asm	/^c0111d36:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0111d39	obj/kernel.asm	/^c0111d39:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111d3d	obj/kernel.asm	/^c0111d3d:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c0111d40	obj/kernel.asm	/^c0111d40:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111d43	obj/kernel.asm	/^c0111d43:	e8 fe 95 ff ff       	call   c010b346 <iobuf_init>$/;"	l
c0111d48	obj/kernel.asm	/^c0111d48:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111d4b	obj/kernel.asm	/^c0111d4b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111d4e	obj/kernel.asm	/^c0111d4e:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0111d51	obj/kernel.asm	/^c0111d51:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0111d58	obj/kernel.asm	/^c0111d58:	00 $/;"	l
c0111d59	obj/kernel.asm	/^c0111d59:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0111d5c	obj/kernel.asm	/^c0111d5c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0111d60	obj/kernel.asm	/^c0111d60:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0111d63	obj/kernel.asm	/^c0111d63:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0111d66	obj/kernel.asm	/^c0111d66:	ff d0                	call   *%eax$/;"	l
c0111d68	obj/kernel.asm	/^c0111d68:	c9                   	leave  $/;"	l
c0111d69	obj/kernel.asm	/^c0111d69:	c3                   	ret    $/;"	l
c0111d6a	obj/kernel.asm	/^c0111d6a <sfs_init_freemap>:$/;"	l
c0111d6a	obj/kernel.asm	/^c0111d6a:	55                   	push   %ebp$/;"	l
c0111d6b	obj/kernel.asm	/^c0111d6b:	89 e5                	mov    %esp,%ebp$/;"	l
c0111d6d	obj/kernel.asm	/^c0111d6d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111d70	obj/kernel.asm	/^c0111d70:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0111d73	obj/kernel.asm	/^c0111d73:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111d77	obj/kernel.asm	/^c0111d77:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111d7a	obj/kernel.asm	/^c0111d7a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111d7d	obj/kernel.asm	/^c0111d7d:	e8 93 fb ff ff       	call   c0111915 <bitmap_getdata>$/;"	l
c0111d82	obj/kernel.asm	/^c0111d82:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111d85	obj/kernel.asm	/^c0111d85:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111d89	obj/kernel.asm	/^c0111d89:	74 0f                	je     c0111d9a <sfs_init_freemap+0x30>$/;"	l
c0111d8b	obj/kernel.asm	/^c0111d8b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111d8e	obj/kernel.asm	/^c0111d8e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0111d91	obj/kernel.asm	/^c0111d91:	89 c2                	mov    %eax,%edx$/;"	l
c0111d93	obj/kernel.asm	/^c0111d93:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111d96	obj/kernel.asm	/^c0111d96:	39 c2                	cmp    %eax,%edx$/;"	l
c0111d98	obj/kernel.asm	/^c0111d98:	74 24                	je     c0111dbe <sfs_init_freemap+0x54>$/;"	l
c0111d9a	obj/kernel.asm	/^c0111d9a:	c7 44 24 0c f8 93 11 	movl   $0xc01193f8,0xc(%esp)$/;"	l
c0111da1	obj/kernel.asm	/^c0111da1:	c0 $/;"	l
c0111da2	obj/kernel.asm	/^c0111da2:	c7 44 24 08 11 93 11 	movl   $0xc0119311,0x8(%esp)$/;"	l
c0111da9	obj/kernel.asm	/^c0111da9:	c0 $/;"	l
c0111daa	obj/kernel.asm	/^c0111daa:	c7 44 24 04 83 00 00 	movl   $0x83,0x4(%esp)$/;"	l
c0111db1	obj/kernel.asm	/^c0111db1:	00 $/;"	l
c0111db2	obj/kernel.asm	/^c0111db2:	c7 04 24 26 93 11 c0 	movl   $0xc0119326,(%esp)$/;"	l
c0111db9	obj/kernel.asm	/^c0111db9:	e8 0a f1 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111dbe	obj/kernel.asm	/^c0111dbe:	eb 36                	jmp    c0111df6 <sfs_init_freemap+0x8c>$/;"	l
c0111dc0	obj/kernel.asm	/^c0111dc0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111dc3	obj/kernel.asm	/^c0111dc3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0111dc7	obj/kernel.asm	/^c0111dc7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0111dca	obj/kernel.asm	/^c0111dca:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111dce	obj/kernel.asm	/^c0111dce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111dd1	obj/kernel.asm	/^c0111dd1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111dd4	obj/kernel.asm	/^c0111dd4:	e8 45 ff ff ff       	call   c0111d1e <sfs_init_read>$/;"	l
c0111dd9	obj/kernel.asm	/^c0111dd9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111ddc	obj/kernel.asm	/^c0111ddc:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111de0	obj/kernel.asm	/^c0111de0:	74 05                	je     c0111de7 <sfs_init_freemap+0x7d>$/;"	l
c0111de2	obj/kernel.asm	/^c0111de2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111de5	obj/kernel.asm	/^c0111de5:	eb 1a                	jmp    c0111e01 <sfs_init_freemap+0x97>$/;"	l
c0111de7	obj/kernel.asm	/^c0111de7:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0111deb	obj/kernel.asm	/^c0111deb:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0111def	obj/kernel.asm	/^c0111def:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c0111df6	obj/kernel.asm	/^c0111df6:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0111dfa	obj/kernel.asm	/^c0111dfa:	75 c4                	jne    c0111dc0 <sfs_init_freemap+0x56>$/;"	l
c0111dfc	obj/kernel.asm	/^c0111dfc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111e01	obj/kernel.asm	/^c0111e01:	c9                   	leave  $/;"	l
c0111e02	obj/kernel.asm	/^c0111e02:	c3                   	ret    $/;"	l
c0111e03	obj/kernel.asm	/^c0111e03 <sfs_do_mount>:$/;"	l
c0111e03	obj/kernel.asm	/^c0111e03:	55                   	push   %ebp$/;"	l
c0111e04	obj/kernel.asm	/^c0111e04:	89 e5                	mov    %esp,%ebp$/;"	l
c0111e06	obj/kernel.asm	/^c0111e06:	83 ec 78             	sub    $0x78,%esp$/;"	l
c0111e09	obj/kernel.asm	/^c0111e09:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111e0c	obj/kernel.asm	/^c0111e0c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111e0f	obj/kernel.asm	/^c0111e0f:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c0111e14	obj/kernel.asm	/^c0111e14:	74 0a                	je     c0111e20 <sfs_do_mount+0x1d>$/;"	l
c0111e16	obj/kernel.asm	/^c0111e16:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax$/;"	l
c0111e1b	obj/kernel.asm	/^c0111e1b:	e9 fe 03 00 00       	jmp    c011221e <sfs_do_mount+0x41b>$/;"	l
c0111e20	obj/kernel.asm	/^c0111e20:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0111e27	obj/kernel.asm	/^c0111e27:	e8 df d5 ff ff       	call   c010f40b <__alloc_fs>$/;"	l
c0111e2c	obj/kernel.asm	/^c0111e2c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111e2f	obj/kernel.asm	/^c0111e2f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0111e33	obj/kernel.asm	/^c0111e33:	75 0a                	jne    c0111e3f <sfs_do_mount+0x3c>$/;"	l
c0111e35	obj/kernel.asm	/^c0111e35:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0111e3a	obj/kernel.asm	/^c0111e3a:	e9 df 03 00 00       	jmp    c011221e <sfs_do_mount+0x41b>$/;"	l
c0111e3f	obj/kernel.asm	/^c0111e3f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111e42	obj/kernel.asm	/^c0111e42:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0111e45	obj/kernel.asm	/^c0111e45:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0111e49	obj/kernel.asm	/^c0111e49:	74 0a                	je     c0111e55 <sfs_do_mount+0x52>$/;"	l
c0111e4b	obj/kernel.asm	/^c0111e4b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111e4e	obj/kernel.asm	/^c0111e4e:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111e51	obj/kernel.asm	/^c0111e51:	85 c0                	test   %eax,%eax$/;"	l
c0111e53	obj/kernel.asm	/^c0111e53:	74 24                	je     c0111e79 <sfs_do_mount+0x76>$/;"	l
c0111e55	obj/kernel.asm	/^c0111e55:	c7 44 24 0c e8 92 11 	movl   $0xc01192e8,0xc(%esp)$/;"	l
c0111e5c	obj/kernel.asm	/^c0111e5c:	c0 $/;"	l
c0111e5d	obj/kernel.asm	/^c0111e5d:	c7 44 24 08 11 93 11 	movl   $0xc0119311,0x8(%esp)$/;"	l
c0111e64	obj/kernel.asm	/^c0111e64:	c0 $/;"	l
c0111e65	obj/kernel.asm	/^c0111e65:	c7 44 24 04 a3 00 00 	movl   $0xa3,0x4(%esp)$/;"	l
c0111e6c	obj/kernel.asm	/^c0111e6c:	00 $/;"	l
c0111e6d	obj/kernel.asm	/^c0111e6d:	c7 04 24 26 93 11 c0 	movl   $0xc0119326,(%esp)$/;"	l
c0111e74	obj/kernel.asm	/^c0111e74:	e8 4f f0 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111e79	obj/kernel.asm	/^c0111e79:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111e7c	obj/kernel.asm	/^c0111e7c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0111e7f	obj/kernel.asm	/^c0111e7f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111e82	obj/kernel.asm	/^c0111e82:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0111e85	obj/kernel.asm	/^c0111e85:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
c0111e88	obj/kernel.asm	/^c0111e88:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0111e8f	obj/kernel.asm	/^c0111e8f:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c0111e96	obj/kernel.asm	/^c0111e96:	e8 44 2e ff ff       	call   c0104cdf <kmalloc>$/;"	l
c0111e9b	obj/kernel.asm	/^c0111e9b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0111e9e	obj/kernel.asm	/^c0111e9e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111ea1	obj/kernel.asm	/^c0111ea1:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0111ea4	obj/kernel.asm	/^c0111ea4:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c0111ea7	obj/kernel.asm	/^c0111ea7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111eaa	obj/kernel.asm	/^c0111eaa:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0111ead	obj/kernel.asm	/^c0111ead:	85 c0                	test   %eax,%eax$/;"	l
c0111eaf	obj/kernel.asm	/^c0111eaf:	75 05                	jne    c0111eb6 <sfs_do_mount+0xb3>$/;"	l
c0111eb1	obj/kernel.asm	/^c0111eb1:	e9 5a 03 00 00       	jmp    c0112210 <sfs_do_mount+0x40d>$/;"	l
c0111eb6	obj/kernel.asm	/^c0111eb6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0111eb9	obj/kernel.asm	/^c0111eb9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0111ebd	obj/kernel.asm	/^c0111ebd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0111ec4	obj/kernel.asm	/^c0111ec4:	00 $/;"	l
c0111ec5	obj/kernel.asm	/^c0111ec5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111ec8	obj/kernel.asm	/^c0111ec8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111ecb	obj/kernel.asm	/^c0111ecb:	e8 4e fe ff ff       	call   c0111d1e <sfs_init_read>$/;"	l
c0111ed0	obj/kernel.asm	/^c0111ed0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111ed3	obj/kernel.asm	/^c0111ed3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111ed7	obj/kernel.asm	/^c0111ed7:	74 05                	je     c0111ede <sfs_do_mount+0xdb>$/;"	l
c0111ed9	obj/kernel.asm	/^c0111ed9:	e9 27 03 00 00       	jmp    c0112205 <sfs_do_mount+0x402>$/;"	l
c0111ede	obj/kernel.asm	/^c0111ede:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0111ee5	obj/kernel.asm	/^c0111ee5:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0111ee8	obj/kernel.asm	/^c0111ee8:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0111eeb	obj/kernel.asm	/^c0111eeb:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111eee	obj/kernel.asm	/^c0111eee:	8b 00                	mov    (%eax),%eax$/;"	l
c0111ef0	obj/kernel.asm	/^c0111ef0:	3d 2a be 8d 2f       	cmp    $0x2f8dbe2a,%eax$/;"	l
c0111ef5	obj/kernel.asm	/^c0111ef5:	74 22                	je     c0111f19 <sfs_do_mount+0x116>$/;"	l
c0111ef7	obj/kernel.asm	/^c0111ef7:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111efa	obj/kernel.asm	/^c0111efa:	8b 00                	mov    (%eax),%eax$/;"	l
c0111efc	obj/kernel.asm	/^c0111efc:	c7 44 24 08 2a be 8d 	movl   $0x2f8dbe2a,0x8(%esp)$/;"	l
c0111f03	obj/kernel.asm	/^c0111f03:	2f $/;"	l
c0111f04	obj/kernel.asm	/^c0111f04:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111f08	obj/kernel.asm	/^c0111f08:	c7 04 24 24 94 11 c0 	movl   $0xc0119424,(%esp)$/;"	l
c0111f0f	obj/kernel.asm	/^c0111f0f:	e8 51 e4 fe ff       	call   c0100365 <cprintf>$/;"	l
c0111f14	obj/kernel.asm	/^c0111f14:	e9 ec 02 00 00       	jmp    c0112205 <sfs_do_mount+0x402>$/;"	l
c0111f19	obj/kernel.asm	/^c0111f19:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111f1c	obj/kernel.asm	/^c0111f1c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0111f1f	obj/kernel.asm	/^c0111f1f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111f22	obj/kernel.asm	/^c0111f22:	8b 00                	mov    (%eax),%eax$/;"	l
c0111f24	obj/kernel.asm	/^c0111f24:	39 c2                	cmp    %eax,%edx$/;"	l
c0111f26	obj/kernel.asm	/^c0111f26:	76 24                	jbe    c0111f4c <sfs_do_mount+0x149>$/;"	l
c0111f28	obj/kernel.asm	/^c0111f28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111f2b	obj/kernel.asm	/^c0111f2b:	8b 10                	mov    (%eax),%edx$/;"	l
c0111f2d	obj/kernel.asm	/^c0111f2d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111f30	obj/kernel.asm	/^c0111f30:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111f33	obj/kernel.asm	/^c0111f33:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0111f37	obj/kernel.asm	/^c0111f37:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111f3b	obj/kernel.asm	/^c0111f3b:	c7 04 24 5c 94 11 c0 	movl   $0xc011945c,(%esp)$/;"	l
c0111f42	obj/kernel.asm	/^c0111f42:	e8 1e e4 fe ff       	call   c0100365 <cprintf>$/;"	l
c0111f47	obj/kernel.asm	/^c0111f47:	e9 b9 02 00 00       	jmp    c0112205 <sfs_do_mount+0x402>$/;"	l
c0111f4c	obj/kernel.asm	/^c0111f4c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111f4f	obj/kernel.asm	/^c0111f4f:	c6 40 2b 00          	movb   $0x0,0x2b(%eax)$/;"	l
c0111f53	obj/kernel.asm	/^c0111f53:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111f56	obj/kernel.asm	/^c0111f56:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0111f59	obj/kernel.asm	/^c0111f59:	8b 0a                	mov    (%edx),%ecx$/;"	l
c0111f5b	obj/kernel.asm	/^c0111f5b:	89 08                	mov    %ecx,(%eax)$/;"	l
c0111f5d	obj/kernel.asm	/^c0111f5d:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
c0111f60	obj/kernel.asm	/^c0111f60:	89 48 04             	mov    %ecx,0x4(%eax)$/;"	l
c0111f63	obj/kernel.asm	/^c0111f63:	8b 4a 08             	mov    0x8(%edx),%ecx$/;"	l
c0111f66	obj/kernel.asm	/^c0111f66:	89 48 08             	mov    %ecx,0x8(%eax)$/;"	l
c0111f69	obj/kernel.asm	/^c0111f69:	8b 4a 0c             	mov    0xc(%edx),%ecx$/;"	l
c0111f6c	obj/kernel.asm	/^c0111f6c:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c0111f6f	obj/kernel.asm	/^c0111f6f:	8b 4a 10             	mov    0x10(%edx),%ecx$/;"	l
c0111f72	obj/kernel.asm	/^c0111f72:	89 48 10             	mov    %ecx,0x10(%eax)$/;"	l
c0111f75	obj/kernel.asm	/^c0111f75:	8b 4a 14             	mov    0x14(%edx),%ecx$/;"	l
c0111f78	obj/kernel.asm	/^c0111f78:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
c0111f7b	obj/kernel.asm	/^c0111f7b:	8b 4a 18             	mov    0x18(%edx),%ecx$/;"	l
c0111f7e	obj/kernel.asm	/^c0111f7e:	89 48 18             	mov    %ecx,0x18(%eax)$/;"	l
c0111f81	obj/kernel.asm	/^c0111f81:	8b 4a 1c             	mov    0x1c(%edx),%ecx$/;"	l
c0111f84	obj/kernel.asm	/^c0111f84:	89 48 1c             	mov    %ecx,0x1c(%eax)$/;"	l
c0111f87	obj/kernel.asm	/^c0111f87:	8b 4a 20             	mov    0x20(%edx),%ecx$/;"	l
c0111f8a	obj/kernel.asm	/^c0111f8a:	89 48 20             	mov    %ecx,0x20(%eax)$/;"	l
c0111f8d	obj/kernel.asm	/^c0111f8d:	8b 4a 24             	mov    0x24(%edx),%ecx$/;"	l
c0111f90	obj/kernel.asm	/^c0111f90:	89 48 24             	mov    %ecx,0x24(%eax)$/;"	l
c0111f93	obj/kernel.asm	/^c0111f93:	8b 52 28             	mov    0x28(%edx),%edx$/;"	l
c0111f96	obj/kernel.asm	/^c0111f96:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c0111f99	obj/kernel.asm	/^c0111f99:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0111fa0	obj/kernel.asm	/^c0111fa0:	c7 04 24 00 20 00 00 	movl   $0x2000,(%esp)$/;"	l
c0111fa7	obj/kernel.asm	/^c0111fa7:	e8 33 2d ff ff       	call   c0104cdf <kmalloc>$/;"	l
c0111fac	obj/kernel.asm	/^c0111fac:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0111faf	obj/kernel.asm	/^c0111faf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111fb2	obj/kernel.asm	/^c0111fb2:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0111fb5	obj/kernel.asm	/^c0111fb5:	89 50 68             	mov    %edx,0x68(%eax)$/;"	l
c0111fb8	obj/kernel.asm	/^c0111fb8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111fbb	obj/kernel.asm	/^c0111fbb:	8b 40 68             	mov    0x68(%eax),%eax$/;"	l
c0111fbe	obj/kernel.asm	/^c0111fbe:	85 c0                	test   %eax,%eax$/;"	l
c0111fc0	obj/kernel.asm	/^c0111fc0:	75 05                	jne    c0111fc7 <sfs_do_mount+0x1c4>$/;"	l
c0111fc2	obj/kernel.asm	/^c0111fc2:	e9 3e 02 00 00       	jmp    c0112205 <sfs_do_mount+0x402>$/;"	l
c0111fc7	obj/kernel.asm	/^c0111fc7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0111fce	obj/kernel.asm	/^c0111fce:	eb 2a                	jmp    c0111ffa <sfs_do_mount+0x1f7>$/;"	l
c0111fd0	obj/kernel.asm	/^c0111fd0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111fd3	obj/kernel.asm	/^c0111fd3:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0111fda	obj/kernel.asm	/^c0111fda:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0111fdd	obj/kernel.asm	/^c0111fdd:	01 d0                	add    %edx,%eax$/;"	l
c0111fdf	obj/kernel.asm	/^c0111fdf:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0111fe2	obj/kernel.asm	/^c0111fe2:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0111fe5	obj/kernel.asm	/^c0111fe5:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0111fe8	obj/kernel.asm	/^c0111fe8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0111feb	obj/kernel.asm	/^c0111feb:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0111fee	obj/kernel.asm	/^c0111fee:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0111ff1	obj/kernel.asm	/^c0111ff1:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0111ff4	obj/kernel.asm	/^c0111ff4:	89 10                	mov    %edx,(%eax)$/;"	l
c0111ff6	obj/kernel.asm	/^c0111ff6:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0111ffa	obj/kernel.asm	/^c0111ffa:	81 7d f0 ff 03 00 00 	cmpl   $0x3ff,-0x10(%ebp)$/;"	l
c0112001	obj/kernel.asm	/^c0112001:	76 cd                	jbe    c0111fd0 <sfs_do_mount+0x1cd>$/;"	l
c0112003	obj/kernel.asm	/^c0112003:	c7 45 d0 00 80 00 00 	movl   $0x8000,-0x30(%ebp)$/;"	l
c011200a	obj/kernel.asm	/^c011200a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011200d	obj/kernel.asm	/^c011200d:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0112010	obj/kernel.asm	/^c0112010:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0112013	obj/kernel.asm	/^c0112013:	01 d0                	add    %edx,%eax$/;"	l
c0112015	obj/kernel.asm	/^c0112015:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0112018	obj/kernel.asm	/^c0112018:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c011201b	obj/kernel.asm	/^c011201b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c011201e	obj/kernel.asm	/^c011201e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0112023	obj/kernel.asm	/^c0112023:	f7 75 d0             	divl   -0x30(%ebp)$/;"	l
c0112026	obj/kernel.asm	/^c0112026:	89 d0                	mov    %edx,%eax$/;"	l
c0112028	obj/kernel.asm	/^c0112028:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c011202b	obj/kernel.asm	/^c011202b:	29 c2                	sub    %eax,%edx$/;"	l
c011202d	obj/kernel.asm	/^c011202d:	89 d0                	mov    %edx,%eax$/;"	l
c011202f	obj/kernel.asm	/^c011202f:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0112032	obj/kernel.asm	/^c0112032:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0112035	obj/kernel.asm	/^c0112035:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112038	obj/kernel.asm	/^c0112038:	e8 14 f5 ff ff       	call   c0111551 <bitmap_create>$/;"	l
c011203d	obj/kernel.asm	/^c011203d:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0112040	obj/kernel.asm	/^c0112040:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112043	obj/kernel.asm	/^c0112043:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0112046	obj/kernel.asm	/^c0112046:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c0112049	obj/kernel.asm	/^c0112049:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011204c	obj/kernel.asm	/^c011204c:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c011204f	obj/kernel.asm	/^c011204f:	85 c0                	test   %eax,%eax$/;"	l
c0112051	obj/kernel.asm	/^c0112051:	75 05                	jne    c0112058 <sfs_do_mount+0x255>$/;"	l
c0112053	obj/kernel.asm	/^c0112053:	e9 a2 01 00 00       	jmp    c01121fa <sfs_do_mount+0x3f7>$/;"	l
c0112058	obj/kernel.asm	/^c0112058:	c7 45 c0 00 80 00 00 	movl   $0x8000,-0x40(%ebp)$/;"	l
c011205f	obj/kernel.asm	/^c011205f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0112062	obj/kernel.asm	/^c0112062:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0112065	obj/kernel.asm	/^c0112065:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0112068	obj/kernel.asm	/^c0112068:	01 d0                	add    %edx,%eax$/;"	l
c011206a	obj/kernel.asm	/^c011206a:	83 e8 01             	sub    $0x1,%eax$/;"	l
c011206d	obj/kernel.asm	/^c011206d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0112072	obj/kernel.asm	/^c0112072:	f7 75 c0             	divl   -0x40(%ebp)$/;"	l
c0112075	obj/kernel.asm	/^c0112075:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0112078	obj/kernel.asm	/^c0112078:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c011207b	obj/kernel.asm	/^c011207b:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c011207f	obj/kernel.asm	/^c011207f:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0112082	obj/kernel.asm	/^c0112082:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112086	obj/kernel.asm	/^c0112086:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)$/;"	l
c011208d	obj/kernel.asm	/^c011208d:	00 $/;"	l
c011208e	obj/kernel.asm	/^c011208e:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0112091	obj/kernel.asm	/^c0112091:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112095	obj/kernel.asm	/^c0112095:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112098	obj/kernel.asm	/^c0112098:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011209b	obj/kernel.asm	/^c011209b:	e8 ca fc ff ff       	call   c0111d6a <sfs_init_freemap>$/;"	l
c01120a0	obj/kernel.asm	/^c01120a0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01120a3	obj/kernel.asm	/^c01120a3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01120a7	obj/kernel.asm	/^c01120a7:	74 11                	je     c01120ba <sfs_do_mount+0x2b7>$/;"	l
c01120a9	obj/kernel.asm	/^c01120a9:	90                   	nop$/;"	l
c01120aa	obj/kernel.asm	/^c01120aa:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c01120ad	obj/kernel.asm	/^c01120ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01120b0	obj/kernel.asm	/^c01120b0:	e8 3f f8 ff ff       	call   c01118f4 <bitmap_destroy>$/;"	l
c01120b5	obj/kernel.asm	/^c01120b5:	e9 40 01 00 00       	jmp    c01121fa <sfs_do_mount+0x3f7>$/;"	l
c01120ba	obj/kernel.asm	/^c01120ba:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01120bd	obj/kernel.asm	/^c01120bd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01120c0	obj/kernel.asm	/^c01120c0:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c01120c3	obj/kernel.asm	/^c01120c3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c01120ca	obj/kernel.asm	/^c01120ca:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01120d1	obj/kernel.asm	/^c01120d1:	eb 1e                	jmp    c01120f1 <sfs_do_mount+0x2ee>$/;"	l
c01120d3	obj/kernel.asm	/^c01120d3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01120d6	obj/kernel.asm	/^c01120d6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01120da	obj/kernel.asm	/^c01120da:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c01120dd	obj/kernel.asm	/^c01120dd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01120e0	obj/kernel.asm	/^c01120e0:	e8 74 f7 ff ff       	call   c0111859 <bitmap_test>$/;"	l
c01120e5	obj/kernel.asm	/^c01120e5:	85 c0                	test   %eax,%eax$/;"	l
c01120e7	obj/kernel.asm	/^c01120e7:	74 04                	je     c01120ed <sfs_do_mount+0x2ea>$/;"	l
c01120e9	obj/kernel.asm	/^c01120e9:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c01120ed	obj/kernel.asm	/^c01120ed:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c01120f1	obj/kernel.asm	/^c01120f1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01120f4	obj/kernel.asm	/^c01120f4:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c01120f7	obj/kernel.asm	/^c01120f7:	72 da                	jb     c01120d3 <sfs_do_mount+0x2d0>$/;"	l
c01120f9	obj/kernel.asm	/^c01120f9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01120fc	obj/kernel.asm	/^c01120fc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01120ff	obj/kernel.asm	/^c01120ff:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0112102	obj/kernel.asm	/^c0112102:	74 24                	je     c0112128 <sfs_do_mount+0x325>$/;"	l
c0112104	obj/kernel.asm	/^c0112104:	c7 44 24 0c 8c 94 11 	movl   $0xc011948c,0xc(%esp)$/;"	l
c011210b	obj/kernel.asm	/^c011210b:	c0 $/;"	l
c011210c	obj/kernel.asm	/^c011210c:	c7 44 24 08 11 93 11 	movl   $0xc0119311,0x8(%esp)$/;"	l
c0112113	obj/kernel.asm	/^c0112113:	c0 $/;"	l
c0112114	obj/kernel.asm	/^c0112114:	c7 44 24 04 e0 00 00 	movl   $0xe0,0x4(%esp)$/;"	l
c011211b	obj/kernel.asm	/^c011211b:	00 $/;"	l
c011211c	obj/kernel.asm	/^c011211c:	c7 04 24 26 93 11 c0 	movl   $0xc0119326,(%esp)$/;"	l
c0112123	obj/kernel.asm	/^c0112123:	e8 a0 ed fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112128	obj/kernel.asm	/^c0112128:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011212b	obj/kernel.asm	/^c011212b:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c0112132	obj/kernel.asm	/^c0112132:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112135	obj/kernel.asm	/^c0112135:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c0112138	obj/kernel.asm	/^c0112138:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c011213f	obj/kernel.asm	/^c011213f:	00 $/;"	l
c0112140	obj/kernel.asm	/^c0112140:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112143	obj/kernel.asm	/^c0112143:	e8 29 7a ff ff       	call   c0109b71 <sem_init>$/;"	l
c0112148	obj/kernel.asm	/^c0112148:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011214b	obj/kernel.asm	/^c011214b:	83 c0 48             	add    $0x48,%eax$/;"	l
c011214e	obj/kernel.asm	/^c011214e:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0112155	obj/kernel.asm	/^c0112155:	00 $/;"	l
c0112156	obj/kernel.asm	/^c0112156:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112159	obj/kernel.asm	/^c0112159:	e8 13 7a ff ff       	call   c0109b71 <sem_init>$/;"	l
c011215e	obj/kernel.asm	/^c011215e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112161	obj/kernel.asm	/^c0112161:	83 c0 54             	add    $0x54,%eax$/;"	l
c0112164	obj/kernel.asm	/^c0112164:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c011216b	obj/kernel.asm	/^c011216b:	00 $/;"	l
c011216c	obj/kernel.asm	/^c011216c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011216f	obj/kernel.asm	/^c011216f:	e8 fd 79 ff ff       	call   c0109b71 <sem_init>$/;"	l
c0112174	obj/kernel.asm	/^c0112174:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112177	obj/kernel.asm	/^c0112177:	83 c0 60             	add    $0x60,%eax$/;"	l
c011217a	obj/kernel.asm	/^c011217a:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c011217d	obj/kernel.asm	/^c011217d:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0112180	obj/kernel.asm	/^c0112180:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c0112183	obj/kernel.asm	/^c0112183:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0112186	obj/kernel.asm	/^c0112186:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0112189	obj/kernel.asm	/^c0112189:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c011218c	obj/kernel.asm	/^c011218c:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c011218f	obj/kernel.asm	/^c011218f:	89 10                	mov    %edx,(%eax)$/;"	l
c0112191	obj/kernel.asm	/^c0112191:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112194	obj/kernel.asm	/^c0112194:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c0112197	obj/kernel.asm	/^c0112197:	89 d1                	mov    %edx,%ecx$/;"	l
c0112199	obj/kernel.asm	/^c0112199:	29 c1                	sub    %eax,%ecx$/;"	l
c011219b	obj/kernel.asm	/^c011219b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011219e	obj/kernel.asm	/^c011219e:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c01121a1	obj/kernel.asm	/^c01121a1:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c01121a4	obj/kernel.asm	/^c01121a4:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c01121a8	obj/kernel.asm	/^c01121a8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01121ab	obj/kernel.asm	/^c01121ab:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01121af	obj/kernel.asm	/^c01121af:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c01121b3	obj/kernel.asm	/^c01121b3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01121b7	obj/kernel.asm	/^c01121b7:	c7 04 24 b6 94 11 c0 	movl   $0xc01194b6,(%esp)$/;"	l
c01121be	obj/kernel.asm	/^c01121be:	e8 a2 e1 fe ff       	call   c0100365 <cprintf>$/;"	l
c01121c3	obj/kernel.asm	/^c01121c3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01121c6	obj/kernel.asm	/^c01121c6:	c7 40 70 78 19 11 c0 	movl   $0xc0111978,0x70(%eax)$/;"	l
c01121cd	obj/kernel.asm	/^c01121cd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01121d0	obj/kernel.asm	/^c01121d0:	c7 40 74 d5 1a 11 c0 	movl   $0xc0111ad5,0x74(%eax)$/;"	l
c01121d7	obj/kernel.asm	/^c01121d7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01121da	obj/kernel.asm	/^c01121da:	c7 40 78 60 1b 11 c0 	movl   $0xc0111b60,0x78(%eax)$/;"	l
c01121e1	obj/kernel.asm	/^c01121e1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01121e4	obj/kernel.asm	/^c01121e4:	c7 40 7c 33 1c 11 c0 	movl   $0xc0111c33,0x7c(%eax)$/;"	l
c01121eb	obj/kernel.asm	/^c01121eb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01121ee	obj/kernel.asm	/^c01121ee:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01121f1	obj/kernel.asm	/^c01121f1:	89 10                	mov    %edx,(%eax)$/;"	l
c01121f3	obj/kernel.asm	/^c01121f3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01121f8	obj/kernel.asm	/^c01121f8:	eb 24                	jmp    c011221e <sfs_do_mount+0x41b>$/;"	l
c01121fa	obj/kernel.asm	/^c01121fa:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01121fd	obj/kernel.asm	/^c01121fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112200	obj/kernel.asm	/^c0112200:	e8 f5 2a ff ff       	call   c0104cfa <kfree>$/;"	l
c0112205	obj/kernel.asm	/^c0112205:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112208	obj/kernel.asm	/^c0112208:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011220b	obj/kernel.asm	/^c011220b:	e8 ea 2a ff ff       	call   c0104cfa <kfree>$/;"	l
c0112210	obj/kernel.asm	/^c0112210:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112213	obj/kernel.asm	/^c0112213:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112216	obj/kernel.asm	/^c0112216:	e8 df 2a ff ff       	call   c0104cfa <kfree>$/;"	l
c011221b	obj/kernel.asm	/^c011221b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011221e	obj/kernel.asm	/^c011221e:	c9                   	leave  $/;"	l
c011221f	obj/kernel.asm	/^c011221f:	c3                   	ret    $/;"	l
c0112220	obj/kernel.asm	/^c0112220 <sfs_mount>:$/;"	l
c0112220	obj/kernel.asm	/^c0112220:	55                   	push   %ebp$/;"	l
c0112221	obj/kernel.asm	/^c0112221:	89 e5                	mov    %esp,%ebp$/;"	l
c0112223	obj/kernel.asm	/^c0112223:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112226	obj/kernel.asm	/^c0112226:	c7 44 24 04 03 1e 11 	movl   $0xc0111e03,0x4(%esp)$/;"	l
c011222d	obj/kernel.asm	/^c011222d:	c0 $/;"	l
c011222e	obj/kernel.asm	/^c011222e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112231	obj/kernel.asm	/^c0112231:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112234	obj/kernel.asm	/^c0112234:	e8 96 d8 ff ff       	call   c010facf <vfs_mount>$/;"	l
c0112239	obj/kernel.asm	/^c0112239:	c9                   	leave  $/;"	l
c011223a	obj/kernel.asm	/^c011223a:	c3                   	ret    $/;"	l
c011223b	obj/kernel.asm	/^c011223b <inode_ref_count>:$/;"	l
c011223b	obj/kernel.asm	/^c011223b:	55                   	push   %ebp$/;"	l
c011223c	obj/kernel.asm	/^c011223c:	89 e5                	mov    %esp,%ebp$/;"	l
c011223e	obj/kernel.asm	/^c011223e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112241	obj/kernel.asm	/^c0112241:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0112244	obj/kernel.asm	/^c0112244:	5d                   	pop    %ebp$/;"	l
c0112245	obj/kernel.asm	/^c0112245:	c3                   	ret    $/;"	l
c0112246	obj/kernel.asm	/^c0112246 <lock_sin>:$/;"	l
c0112246	obj/kernel.asm	/^c0112246:	55                   	push   %ebp$/;"	l
c0112247	obj/kernel.asm	/^c0112247:	89 e5                	mov    %esp,%ebp$/;"	l
c0112249	obj/kernel.asm	/^c0112249:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011224c	obj/kernel.asm	/^c011224c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011224f	obj/kernel.asm	/^c011224f:	83 c0 10             	add    $0x10,%eax$/;"	l
c0112252	obj/kernel.asm	/^c0112252:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112255	obj/kernel.asm	/^c0112255:	e8 a5 7a ff ff       	call   c0109cff <down>$/;"	l
c011225a	obj/kernel.asm	/^c011225a:	c9                   	leave  $/;"	l
c011225b	obj/kernel.asm	/^c011225b:	c3                   	ret    $/;"	l
c011225c	obj/kernel.asm	/^c011225c <unlock_sin>:$/;"	l
c011225c	obj/kernel.asm	/^c011225c:	55                   	push   %ebp$/;"	l
c011225d	obj/kernel.asm	/^c011225d:	89 e5                	mov    %esp,%ebp$/;"	l
c011225f	obj/kernel.asm	/^c011225f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112262	obj/kernel.asm	/^c0112262:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112265	obj/kernel.asm	/^c0112265:	83 c0 10             	add    $0x10,%eax$/;"	l
c0112268	obj/kernel.asm	/^c0112268:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011226b	obj/kernel.asm	/^c011226b:	e8 74 7a ff ff       	call   c0109ce4 <up>$/;"	l
c0112270	obj/kernel.asm	/^c0112270:	c9                   	leave  $/;"	l
c0112271	obj/kernel.asm	/^c0112271:	c3                   	ret    $/;"	l
c0112272	obj/kernel.asm	/^c0112272 <sfs_get_ops>:$/;"	l
c0112272	obj/kernel.asm	/^c0112272:	55                   	push   %ebp$/;"	l
c0112273	obj/kernel.asm	/^c0112273:	89 e5                	mov    %esp,%ebp$/;"	l
c0112275	obj/kernel.asm	/^c0112275:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112278	obj/kernel.asm	/^c0112278:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011227b	obj/kernel.asm	/^c011227b:	66 89 45 f4          	mov    %ax,-0xc(%ebp)$/;"	l
c011227f	obj/kernel.asm	/^c011227f:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c0112283	obj/kernel.asm	/^c0112283:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0112286	obj/kernel.asm	/^c0112286:	74 0c                	je     c0112294 <sfs_get_ops+0x22>$/;"	l
c0112288	obj/kernel.asm	/^c0112288:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c011228b	obj/kernel.asm	/^c011228b:	75 0e                	jne    c011229b <sfs_get_ops+0x29>$/;"	l
c011228d	obj/kernel.asm	/^c011228d:	b8 e0 94 11 c0       	mov    $0xc01194e0,%eax$/;"	l
c0112292	obj/kernel.asm	/^c0112292:	eb 2b                	jmp    c01122bf <sfs_get_ops+0x4d>$/;"	l
c0112294	obj/kernel.asm	/^c0112294:	b8 20 95 11 c0       	mov    $0xc0119520,%eax$/;"	l
c0112299	obj/kernel.asm	/^c0112299:	eb 24                	jmp    c01122bf <sfs_get_ops+0x4d>$/;"	l
c011229b	obj/kernel.asm	/^c011229b:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c011229f	obj/kernel.asm	/^c011229f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01122a3	obj/kernel.asm	/^c01122a3:	c7 44 24 08 60 95 11 	movl   $0xc0119560,0x8(%esp)$/;"	l
c01122aa	obj/kernel.asm	/^c01122aa:	c0 $/;"	l
c01122ab	obj/kernel.asm	/^c01122ab:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
c01122b2	obj/kernel.asm	/^c01122b2:	00 $/;"	l
c01122b3	obj/kernel.asm	/^c01122b3:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c01122ba	obj/kernel.asm	/^c01122ba:	e8 09 ec fe ff       	call   c0100ec8 <__panic>$/;"	l
c01122bf	obj/kernel.asm	/^c01122bf:	c9                   	leave  $/;"	l
c01122c0	obj/kernel.asm	/^c01122c0:	c3                   	ret    $/;"	l
c01122c1	obj/kernel.asm	/^c01122c1 <sfs_hash_list>:$/;"	l
c01122c1	obj/kernel.asm	/^c01122c1:	55                   	push   %ebp$/;"	l
c01122c2	obj/kernel.asm	/^c01122c2:	89 e5                	mov    %esp,%ebp$/;"	l
c01122c4	obj/kernel.asm	/^c01122c4:	53                   	push   %ebx$/;"	l
c01122c5	obj/kernel.asm	/^c01122c5:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01122c8	obj/kernel.asm	/^c01122c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01122cb	obj/kernel.asm	/^c01122cb:	8b 58 68             	mov    0x68(%eax),%ebx$/;"	l
c01122ce	obj/kernel.asm	/^c01122ce:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c01122d5	obj/kernel.asm	/^c01122d5:	00 $/;"	l
c01122d6	obj/kernel.asm	/^c01122d6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01122d9	obj/kernel.asm	/^c01122d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01122dc	obj/kernel.asm	/^c01122dc:	e8 35 27 00 00       	call   c0114a16 <hash32>$/;"	l
c01122e1	obj/kernel.asm	/^c01122e1:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01122e4	obj/kernel.asm	/^c01122e4:	01 d8                	add    %ebx,%eax$/;"	l
c01122e6	obj/kernel.asm	/^c01122e6:	83 c4 14             	add    $0x14,%esp$/;"	l
c01122e9	obj/kernel.asm	/^c01122e9:	5b                   	pop    %ebx$/;"	l
c01122ea	obj/kernel.asm	/^c01122ea:	5d                   	pop    %ebp$/;"	l
c01122eb	obj/kernel.asm	/^c01122eb:	c3                   	ret    $/;"	l
c01122ec	obj/kernel.asm	/^c01122ec <sfs_set_links>:$/;"	l
c01122ec	obj/kernel.asm	/^c01122ec:	55                   	push   %ebp$/;"	l
c01122ed	obj/kernel.asm	/^c01122ed:	89 e5                	mov    %esp,%ebp$/;"	l
c01122ef	obj/kernel.asm	/^c01122ef:	53                   	push   %ebx$/;"	l
c01122f0	obj/kernel.asm	/^c01122f0:	83 ec 54             	sub    $0x54,%esp$/;"	l
c01122f3	obj/kernel.asm	/^c01122f3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01122f6	obj/kernel.asm	/^c01122f6:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c01122f9	obj/kernel.asm	/^c01122f9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01122fc	obj/kernel.asm	/^c01122fc:	83 c2 60             	add    $0x60,%edx$/;"	l
c01122ff	obj/kernel.asm	/^c01122ff:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0112302	obj/kernel.asm	/^c0112302:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112305	obj/kernel.asm	/^c0112305:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112308	obj/kernel.asm	/^c0112308:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011230b	obj/kernel.asm	/^c011230b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011230e	obj/kernel.asm	/^c011230e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112311	obj/kernel.asm	/^c0112311:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112314	obj/kernel.asm	/^c0112314:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112317	obj/kernel.asm	/^c0112317:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c011231a	obj/kernel.asm	/^c011231a:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c011231d	obj/kernel.asm	/^c011231d:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0112320	obj/kernel.asm	/^c0112320:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c0112323	obj/kernel.asm	/^c0112323:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0112326	obj/kernel.asm	/^c0112326:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112329	obj/kernel.asm	/^c0112329:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c011232c	obj/kernel.asm	/^c011232c:	89 10                	mov    %edx,(%eax)$/;"	l
c011232e	obj/kernel.asm	/^c011232e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112331	obj/kernel.asm	/^c0112331:	8b 10                	mov    (%eax),%edx$/;"	l
c0112333	obj/kernel.asm	/^c0112333:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112336	obj/kernel.asm	/^c0112336:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0112339	obj/kernel.asm	/^c0112339:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011233c	obj/kernel.asm	/^c011233c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c011233f	obj/kernel.asm	/^c011233f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0112342	obj/kernel.asm	/^c0112342:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112345	obj/kernel.asm	/^c0112345:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0112348	obj/kernel.asm	/^c0112348:	89 10                	mov    %edx,(%eax)$/;"	l
c011234a	obj/kernel.asm	/^c011234a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011234d	obj/kernel.asm	/^c011234d:	8d 58 24             	lea    0x24(%eax),%ebx$/;"	l
c0112350	obj/kernel.asm	/^c0112350:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112353	obj/kernel.asm	/^c0112353:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112356	obj/kernel.asm	/^c0112356:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011235a	obj/kernel.asm	/^c011235a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011235d	obj/kernel.asm	/^c011235d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112360	obj/kernel.asm	/^c0112360:	e8 5c ff ff ff       	call   c01122c1 <sfs_hash_list>$/;"	l
c0112365	obj/kernel.asm	/^c0112365:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0112368	obj/kernel.asm	/^c0112368:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
c011236b	obj/kernel.asm	/^c011236b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011236e	obj/kernel.asm	/^c011236e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0112371	obj/kernel.asm	/^c0112371:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0112374	obj/kernel.asm	/^c0112374:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0112377	obj/kernel.asm	/^c0112377:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c011237a	obj/kernel.asm	/^c011237a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011237d	obj/kernel.asm	/^c011237d:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0112380	obj/kernel.asm	/^c0112380:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c0112383	obj/kernel.asm	/^c0112383:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0112386	obj/kernel.asm	/^c0112386:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
c0112389	obj/kernel.asm	/^c0112389:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c011238c	obj/kernel.asm	/^c011238c:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c011238f	obj/kernel.asm	/^c011238f:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c0112392	obj/kernel.asm	/^c0112392:	89 10                	mov    %edx,(%eax)$/;"	l
c0112394	obj/kernel.asm	/^c0112394:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0112397	obj/kernel.asm	/^c0112397:	8b 10                	mov    (%eax),%edx$/;"	l
c0112399	obj/kernel.asm	/^c0112399:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c011239c	obj/kernel.asm	/^c011239c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c011239f	obj/kernel.asm	/^c011239f:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01123a2	obj/kernel.asm	/^c01123a2:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c01123a5	obj/kernel.asm	/^c01123a5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01123a8	obj/kernel.asm	/^c01123a8:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01123ab	obj/kernel.asm	/^c01123ab:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c01123ae	obj/kernel.asm	/^c01123ae:	89 10                	mov    %edx,(%eax)$/;"	l
c01123b0	obj/kernel.asm	/^c01123b0:	83 c4 54             	add    $0x54,%esp$/;"	l
c01123b3	obj/kernel.asm	/^c01123b3:	5b                   	pop    %ebx$/;"	l
c01123b4	obj/kernel.asm	/^c01123b4:	5d                   	pop    %ebp$/;"	l
c01123b5	obj/kernel.asm	/^c01123b5:	c3                   	ret    $/;"	l
c01123b6	obj/kernel.asm	/^c01123b6 <sfs_remove_links>:$/;"	l
c01123b6	obj/kernel.asm	/^c01123b6:	55                   	push   %ebp$/;"	l
c01123b7	obj/kernel.asm	/^c01123b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01123b9	obj/kernel.asm	/^c01123b9:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01123bc	obj/kernel.asm	/^c01123bc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01123bf	obj/kernel.asm	/^c01123bf:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c01123c2	obj/kernel.asm	/^c01123c2:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01123c5	obj/kernel.asm	/^c01123c5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01123c8	obj/kernel.asm	/^c01123c8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01123cb	obj/kernel.asm	/^c01123cb:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01123ce	obj/kernel.asm	/^c01123ce:	8b 12                	mov    (%edx),%edx$/;"	l
c01123d0	obj/kernel.asm	/^c01123d0:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c01123d3	obj/kernel.asm	/^c01123d3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01123d6	obj/kernel.asm	/^c01123d6:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01123d9	obj/kernel.asm	/^c01123d9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01123dc	obj/kernel.asm	/^c01123dc:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01123df	obj/kernel.asm	/^c01123df:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01123e2	obj/kernel.asm	/^c01123e2:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c01123e5	obj/kernel.asm	/^c01123e5:	89 10                	mov    %edx,(%eax)$/;"	l
c01123e7	obj/kernel.asm	/^c01123e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01123ea	obj/kernel.asm	/^c01123ea:	83 c0 24             	add    $0x24,%eax$/;"	l
c01123ed	obj/kernel.asm	/^c01123ed:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01123f0	obj/kernel.asm	/^c01123f0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01123f3	obj/kernel.asm	/^c01123f3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01123f6	obj/kernel.asm	/^c01123f6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01123f9	obj/kernel.asm	/^c01123f9:	8b 12                	mov    (%edx),%edx$/;"	l
c01123fb	obj/kernel.asm	/^c01123fb:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c01123fe	obj/kernel.asm	/^c01123fe:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112401	obj/kernel.asm	/^c0112401:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112404	obj/kernel.asm	/^c0112404:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0112407	obj/kernel.asm	/^c0112407:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c011240a	obj/kernel.asm	/^c011240a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011240d	obj/kernel.asm	/^c011240d:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0112410	obj/kernel.asm	/^c0112410:	89 10                	mov    %edx,(%eax)$/;"	l
c0112412	obj/kernel.asm	/^c0112412:	c9                   	leave  $/;"	l
c0112413	obj/kernel.asm	/^c0112413:	c3                   	ret    $/;"	l
c0112414	obj/kernel.asm	/^c0112414 <sfs_block_inuse>:$/;"	l
c0112414	obj/kernel.asm	/^c0112414:	55                   	push   %ebp$/;"	l
c0112415	obj/kernel.asm	/^c0112415:	89 e5                	mov    %esp,%ebp$/;"	l
c0112417	obj/kernel.asm	/^c0112417:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011241a	obj/kernel.asm	/^c011241a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c011241e	obj/kernel.asm	/^c011241e:	74 2a                	je     c011244a <sfs_block_inuse+0x36>$/;"	l
c0112420	obj/kernel.asm	/^c0112420:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112423	obj/kernel.asm	/^c0112423:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112426	obj/kernel.asm	/^c0112426:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0112429	obj/kernel.asm	/^c0112429:	76 1f                	jbe    c011244a <sfs_block_inuse+0x36>$/;"	l
c011242b	obj/kernel.asm	/^c011242b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011242e	obj/kernel.asm	/^c011242e:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0112431	obj/kernel.asm	/^c0112431:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112434	obj/kernel.asm	/^c0112434:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0112438	obj/kernel.asm	/^c0112438:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011243b	obj/kernel.asm	/^c011243b:	e8 19 f4 ff ff       	call   c0111859 <bitmap_test>$/;"	l
c0112440	obj/kernel.asm	/^c0112440:	85 c0                	test   %eax,%eax$/;"	l
c0112442	obj/kernel.asm	/^c0112442:	0f 94 c0             	sete   %al$/;"	l
c0112445	obj/kernel.asm	/^c0112445:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0112448	obj/kernel.asm	/^c0112448:	eb 2d                	jmp    c0112477 <sfs_block_inuse+0x63>$/;"	l
c011244a	obj/kernel.asm	/^c011244a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011244d	obj/kernel.asm	/^c011244d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112450	obj/kernel.asm	/^c0112450:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112453	obj/kernel.asm	/^c0112453:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0112457	obj/kernel.asm	/^c0112457:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011245b	obj/kernel.asm	/^c011245b:	c7 44 24 08 90 95 11 	movl   $0xc0119590,0x8(%esp)$/;"	l
c0112462	obj/kernel.asm	/^c0112462:	c0 $/;"	l
c0112463	obj/kernel.asm	/^c0112463:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
c011246a	obj/kernel.asm	/^c011246a:	00 $/;"	l
c011246b	obj/kernel.asm	/^c011246b:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112472	obj/kernel.asm	/^c0112472:	e8 51 ea fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112477	obj/kernel.asm	/^c0112477:	c9                   	leave  $/;"	l
c0112478	obj/kernel.asm	/^c0112478:	c3                   	ret    $/;"	l
c0112479	obj/kernel.asm	/^c0112479 <sfs_block_alloc>:$/;"	l
c0112479	obj/kernel.asm	/^c0112479:	55                   	push   %ebp$/;"	l
c011247a	obj/kernel.asm	/^c011247a:	89 e5                	mov    %esp,%ebp$/;"	l
c011247c	obj/kernel.asm	/^c011247c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011247f	obj/kernel.asm	/^c011247f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112482	obj/kernel.asm	/^c0112482:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0112485	obj/kernel.asm	/^c0112485:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112488	obj/kernel.asm	/^c0112488:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011248c	obj/kernel.asm	/^c011248c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011248f	obj/kernel.asm	/^c011248f:	e8 63 f2 ff ff       	call   c01116f7 <bitmap_alloc>$/;"	l
c0112494	obj/kernel.asm	/^c0112494:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112497	obj/kernel.asm	/^c0112497:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011249b	obj/kernel.asm	/^c011249b:	74 08                	je     c01124a5 <sfs_block_alloc+0x2c>$/;"	l
c011249d	obj/kernel.asm	/^c011249d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01124a0	obj/kernel.asm	/^c01124a0:	e9 9f 00 00 00       	jmp    c0112544 <sfs_block_alloc+0xcb>$/;"	l
c01124a5	obj/kernel.asm	/^c01124a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01124a8	obj/kernel.asm	/^c01124a8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01124ab	obj/kernel.asm	/^c01124ab:	85 c0                	test   %eax,%eax$/;"	l
c01124ad	obj/kernel.asm	/^c01124ad:	75 24                	jne    c01124d3 <sfs_block_alloc+0x5a>$/;"	l
c01124af	obj/kernel.asm	/^c01124af:	c7 44 24 0c c2 95 11 	movl   $0xc01195c2,0xc(%esp)$/;"	l
c01124b6	obj/kernel.asm	/^c01124b6:	c0 $/;"	l
c01124b7	obj/kernel.asm	/^c01124b7:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c01124be	obj/kernel.asm	/^c01124be:	c0 $/;"	l
c01124bf	obj/kernel.asm	/^c01124bf:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c01124c6	obj/kernel.asm	/^c01124c6:	00 $/;"	l
c01124c7	obj/kernel.asm	/^c01124c7:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c01124ce	obj/kernel.asm	/^c01124ce:	e8 f5 e9 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01124d3	obj/kernel.asm	/^c01124d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01124d6	obj/kernel.asm	/^c01124d6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01124d9	obj/kernel.asm	/^c01124d9:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01124dc	obj/kernel.asm	/^c01124dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01124df	obj/kernel.asm	/^c01124df:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01124e2	obj/kernel.asm	/^c01124e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01124e5	obj/kernel.asm	/^c01124e5:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c01124ec	obj/kernel.asm	/^c01124ec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01124ef	obj/kernel.asm	/^c01124ef:	8b 00                	mov    (%eax),%eax$/;"	l
c01124f1	obj/kernel.asm	/^c01124f1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01124f5	obj/kernel.asm	/^c01124f5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01124f8	obj/kernel.asm	/^c01124f8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01124fb	obj/kernel.asm	/^c01124fb:	e8 14 ff ff ff       	call   c0112414 <sfs_block_inuse>$/;"	l
c0112500	obj/kernel.asm	/^c0112500:	85 c0                	test   %eax,%eax$/;"	l
c0112502	obj/kernel.asm	/^c0112502:	75 24                	jne    c0112528 <sfs_block_alloc+0xaf>$/;"	l
c0112504	obj/kernel.asm	/^c0112504:	c7 44 24 0c f4 95 11 	movl   $0xc01195f4,0xc(%esp)$/;"	l
c011250b	obj/kernel.asm	/^c011250b:	c0 $/;"	l
c011250c	obj/kernel.asm	/^c011250c:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0112513	obj/kernel.asm	/^c0112513:	c0 $/;"	l
c0112514	obj/kernel.asm	/^c0112514:	c7 44 24 04 61 00 00 	movl   $0x61,0x4(%esp)$/;"	l
c011251b	obj/kernel.asm	/^c011251b:	00 $/;"	l
c011251c	obj/kernel.asm	/^c011251c:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112523	obj/kernel.asm	/^c0112523:	e8 a0 e9 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112528	obj/kernel.asm	/^c0112528:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011252b	obj/kernel.asm	/^c011252b:	8b 00                	mov    (%eax),%eax$/;"	l
c011252d	obj/kernel.asm	/^c011252d:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0112534	obj/kernel.asm	/^c0112534:	00 $/;"	l
c0112535	obj/kernel.asm	/^c0112535:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112539	obj/kernel.asm	/^c0112539:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011253c	obj/kernel.asm	/^c011253c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011253f	obj/kernel.asm	/^c011253f:	e8 f4 23 00 00       	call   c0114938 <sfs_clear_block>$/;"	l
c0112544	obj/kernel.asm	/^c0112544:	c9                   	leave  $/;"	l
c0112545	obj/kernel.asm	/^c0112545:	c3                   	ret    $/;"	l
c0112546	obj/kernel.asm	/^c0112546 <sfs_block_free>:$/;"	l
c0112546	obj/kernel.asm	/^c0112546:	55                   	push   %ebp$/;"	l
c0112547	obj/kernel.asm	/^c0112547:	89 e5                	mov    %esp,%ebp$/;"	l
c0112549	obj/kernel.asm	/^c0112549:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011254c	obj/kernel.asm	/^c011254c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011254f	obj/kernel.asm	/^c011254f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112553	obj/kernel.asm	/^c0112553:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112556	obj/kernel.asm	/^c0112556:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112559	obj/kernel.asm	/^c0112559:	e8 b6 fe ff ff       	call   c0112414 <sfs_block_inuse>$/;"	l
c011255e	obj/kernel.asm	/^c011255e:	85 c0                	test   %eax,%eax$/;"	l
c0112560	obj/kernel.asm	/^c0112560:	75 24                	jne    c0112586 <sfs_block_free+0x40>$/;"	l
c0112562	obj/kernel.asm	/^c0112562:	c7 44 24 0c 15 96 11 	movl   $0xc0119615,0xc(%esp)$/;"	l
c0112569	obj/kernel.asm	/^c0112569:	c0 $/;"	l
c011256a	obj/kernel.asm	/^c011256a:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0112571	obj/kernel.asm	/^c0112571:	c0 $/;"	l
c0112572	obj/kernel.asm	/^c0112572:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c0112579	obj/kernel.asm	/^c0112579:	00 $/;"	l
c011257a	obj/kernel.asm	/^c011257a:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112581	obj/kernel.asm	/^c0112581:	e8 42 e9 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112586	obj/kernel.asm	/^c0112586:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112589	obj/kernel.asm	/^c0112589:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c011258c	obj/kernel.asm	/^c011258c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c011258f	obj/kernel.asm	/^c011258f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0112593	obj/kernel.asm	/^c0112593:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112596	obj/kernel.asm	/^c0112596:	e8 f0 f2 ff ff       	call   c011188b <bitmap_free>$/;"	l
c011259b	obj/kernel.asm	/^c011259b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011259e	obj/kernel.asm	/^c011259e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01125a1	obj/kernel.asm	/^c01125a1:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01125a4	obj/kernel.asm	/^c01125a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01125a7	obj/kernel.asm	/^c01125a7:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01125aa	obj/kernel.asm	/^c01125aa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01125ad	obj/kernel.asm	/^c01125ad:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c01125b4	obj/kernel.asm	/^c01125b4:	c9                   	leave  $/;"	l
c01125b5	obj/kernel.asm	/^c01125b5:	c3                   	ret    $/;"	l
c01125b6	obj/kernel.asm	/^c01125b6 <sfs_create_inode>:$/;"	l
c01125b6	obj/kernel.asm	/^c01125b6:	55                   	push   %ebp$/;"	l
c01125b7	obj/kernel.asm	/^c01125b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01125b9	obj/kernel.asm	/^c01125b9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01125bc	obj/kernel.asm	/^c01125bc:	c7 04 24 35 12 00 00 	movl   $0x1235,(%esp)$/;"	l
c01125c3	obj/kernel.asm	/^c01125c3:	e8 6d ca ff ff       	call   c010f035 <__alloc_inode>$/;"	l
c01125c8	obj/kernel.asm	/^c01125c8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01125cb	obj/kernel.asm	/^c01125cb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01125cf	obj/kernel.asm	/^c01125cf:	0f 84 b5 00 00 00    	je     c011268a <sfs_create_inode+0xd4>$/;"	l
c01125d5	obj/kernel.asm	/^c01125d5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01125d8	obj/kernel.asm	/^c01125d8:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c01125dc	obj/kernel.asm	/^c01125dc:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01125df	obj/kernel.asm	/^c01125df:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01125e2	obj/kernel.asm	/^c01125e2:	e8 8b fc ff ff       	call   c0112272 <sfs_get_ops>$/;"	l
c01125e7	obj/kernel.asm	/^c01125e7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01125ea	obj/kernel.asm	/^c01125ea:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01125ee	obj/kernel.asm	/^c01125ee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01125f2	obj/kernel.asm	/^c01125f2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01125f5	obj/kernel.asm	/^c01125f5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01125f8	obj/kernel.asm	/^c01125f8:	e8 61 ca ff ff       	call   c010f05e <inode_init>$/;"	l
c01125fd	obj/kernel.asm	/^c01125fd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112600	obj/kernel.asm	/^c0112600:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112603	obj/kernel.asm	/^c0112603:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112607	obj/kernel.asm	/^c0112607:	74 0d                	je     c0112616 <sfs_create_inode+0x60>$/;"	l
c0112609	obj/kernel.asm	/^c0112609:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011260c	obj/kernel.asm	/^c011260c:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011260f	obj/kernel.asm	/^c011260f:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0112614	obj/kernel.asm	/^c0112614:	74 24                	je     c011263a <sfs_create_inode+0x84>$/;"	l
c0112616	obj/kernel.asm	/^c0112616:	c7 44 24 0c 30 96 11 	movl   $0xc0119630,0xc(%esp)$/;"	l
c011261d	obj/kernel.asm	/^c011261d:	c0 $/;"	l
c011261e	obj/kernel.asm	/^c011261e:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0112625	obj/kernel.asm	/^c0112625:	c0 $/;"	l
c0112626	obj/kernel.asm	/^c0112626:	c7 44 24 04 77 00 00 	movl   $0x77,0x4(%esp)$/;"	l
c011262d	obj/kernel.asm	/^c011262d:	00 $/;"	l
c011262e	obj/kernel.asm	/^c011262e:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112635	obj/kernel.asm	/^c0112635:	e8 8e e8 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011263a	obj/kernel.asm	/^c011263a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011263d	obj/kernel.asm	/^c011263d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112640	obj/kernel.asm	/^c0112640:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112643	obj/kernel.asm	/^c0112643:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112646	obj/kernel.asm	/^c0112646:	89 10                	mov    %edx,(%eax)$/;"	l
c0112648	obj/kernel.asm	/^c0112648:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011264b	obj/kernel.asm	/^c011264b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c011264e	obj/kernel.asm	/^c011264e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0112651	obj/kernel.asm	/^c0112651:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112654	obj/kernel.asm	/^c0112654:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c011265b	obj/kernel.asm	/^c011265b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011265e	obj/kernel.asm	/^c011265e:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)$/;"	l
c0112665	obj/kernel.asm	/^c0112665:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112668	obj/kernel.asm	/^c0112668:	83 c0 10             	add    $0x10,%eax$/;"	l
c011266b	obj/kernel.asm	/^c011266b:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0112672	obj/kernel.asm	/^c0112672:	00 $/;"	l
c0112673	obj/kernel.asm	/^c0112673:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112676	obj/kernel.asm	/^c0112676:	e8 f6 74 ff ff       	call   c0109b71 <sem_init>$/;"	l
c011267b	obj/kernel.asm	/^c011267b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c011267e	obj/kernel.asm	/^c011267e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0112681	obj/kernel.asm	/^c0112681:	89 10                	mov    %edx,(%eax)$/;"	l
c0112683	obj/kernel.asm	/^c0112683:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112688	obj/kernel.asm	/^c0112688:	eb 05                	jmp    c011268f <sfs_create_inode+0xd9>$/;"	l
c011268a	obj/kernel.asm	/^c011268a:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c011268f	obj/kernel.asm	/^c011268f:	c9                   	leave  $/;"	l
c0112690	obj/kernel.asm	/^c0112690:	c3                   	ret    $/;"	l
c0112691	obj/kernel.asm	/^c0112691 <lookup_sfs_nolock>:$/;"	l
c0112691	obj/kernel.asm	/^c0112691:	55                   	push   %ebp$/;"	l
c0112692	obj/kernel.asm	/^c0112692:	89 e5                	mov    %esp,%ebp$/;"	l
c0112694	obj/kernel.asm	/^c0112694:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112697	obj/kernel.asm	/^c0112697:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011269a	obj/kernel.asm	/^c011269a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011269e	obj/kernel.asm	/^c011269e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01126a1	obj/kernel.asm	/^c01126a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01126a4	obj/kernel.asm	/^c01126a4:	e8 18 fc ff ff       	call   c01122c1 <sfs_hash_list>$/;"	l
c01126a9	obj/kernel.asm	/^c01126a9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01126ac	obj/kernel.asm	/^c01126ac:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01126af	obj/kernel.asm	/^c01126af:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01126b2	obj/kernel.asm	/^c01126b2:	eb 3e                	jmp    c01126f2 <lookup_sfs_nolock+0x61>$/;"	l
c01126b4	obj/kernel.asm	/^c01126b4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01126b7	obj/kernel.asm	/^c01126b7:	83 e8 24             	sub    $0x24,%eax$/;"	l
c01126ba	obj/kernel.asm	/^c01126ba:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01126bd	obj/kernel.asm	/^c01126bd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01126c0	obj/kernel.asm	/^c01126c0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01126c3	obj/kernel.asm	/^c01126c3:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01126c6	obj/kernel.asm	/^c01126c6:	75 2a                	jne    c01126f2 <lookup_sfs_nolock+0x61>$/;"	l
c01126c8	obj/kernel.asm	/^c01126c8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01126cb	obj/kernel.asm	/^c01126cb:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01126ce	obj/kernel.asm	/^c01126ce:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01126d1	obj/kernel.asm	/^c01126d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01126d4	obj/kernel.asm	/^c01126d4:	e8 37 ca ff ff       	call   c010f110 <inode_ref_inc>$/;"	l
c01126d9	obj/kernel.asm	/^c01126d9:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01126dc	obj/kernel.asm	/^c01126dc:	75 0f                	jne    c01126ed <lookup_sfs_nolock+0x5c>$/;"	l
c01126de	obj/kernel.asm	/^c01126de:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01126e1	obj/kernel.asm	/^c01126e1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01126e4	obj/kernel.asm	/^c01126e4:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01126e7	obj/kernel.asm	/^c01126e7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01126ea	obj/kernel.asm	/^c01126ea:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01126ed	obj/kernel.asm	/^c01126ed:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01126f0	obj/kernel.asm	/^c01126f0:	eb 1c                	jmp    c011270e <lookup_sfs_nolock+0x7d>$/;"	l
c01126f2	obj/kernel.asm	/^c01126f2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01126f5	obj/kernel.asm	/^c01126f5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01126f8	obj/kernel.asm	/^c01126f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01126fb	obj/kernel.asm	/^c01126fb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01126fe	obj/kernel.asm	/^c01126fe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112701	obj/kernel.asm	/^c0112701:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112704	obj/kernel.asm	/^c0112704:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0112707	obj/kernel.asm	/^c0112707:	75 ab                	jne    c01126b4 <lookup_sfs_nolock+0x23>$/;"	l
c0112709	obj/kernel.asm	/^c0112709:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011270e	obj/kernel.asm	/^c011270e:	c9                   	leave  $/;"	l
c011270f	obj/kernel.asm	/^c011270f:	c3                   	ret    $/;"	l
c0112710	obj/kernel.asm	/^c0112710 <sfs_load_inode>:$/;"	l
c0112710	obj/kernel.asm	/^c0112710:	55                   	push   %ebp$/;"	l
c0112711	obj/kernel.asm	/^c0112711:	89 e5                	mov    %esp,%ebp$/;"	l
c0112713	obj/kernel.asm	/^c0112713:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112716	obj/kernel.asm	/^c0112716:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112719	obj/kernel.asm	/^c0112719:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011271c	obj/kernel.asm	/^c011271c:	e8 9d 22 00 00       	call   c01149be <lock_sfs_fs>$/;"	l
c0112721	obj/kernel.asm	/^c0112721:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112724	obj/kernel.asm	/^c0112724:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112728	obj/kernel.asm	/^c0112728:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011272b	obj/kernel.asm	/^c011272b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011272e	obj/kernel.asm	/^c011272e:	e8 5e ff ff ff       	call   c0112691 <lookup_sfs_nolock>$/;"	l
c0112733	obj/kernel.asm	/^c0112733:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112736	obj/kernel.asm	/^c0112736:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112739	obj/kernel.asm	/^c0112739:	85 c0                	test   %eax,%eax$/;"	l
c011273b	obj/kernel.asm	/^c011273b:	74 05                	je     c0112742 <sfs_load_inode+0x32>$/;"	l
c011273d	obj/kernel.asm	/^c011273d:	e9 3c 01 00 00       	jmp    c011287e <sfs_load_inode+0x16e>$/;"	l
c0112742	obj/kernel.asm	/^c0112742:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0112749	obj/kernel.asm	/^c0112749:	c7 04 24 40 00 00 00 	movl   $0x40,(%esp)$/;"	l
c0112750	obj/kernel.asm	/^c0112750:	e8 8a 25 ff ff       	call   c0104cdf <kmalloc>$/;"	l
c0112755	obj/kernel.asm	/^c0112755:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112758	obj/kernel.asm	/^c0112758:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011275c	obj/kernel.asm	/^c011275c:	75 05                	jne    c0112763 <sfs_load_inode+0x53>$/;"	l
c011275e	obj/kernel.asm	/^c011275e:	e9 40 01 00 00       	jmp    c01128a3 <sfs_load_inode+0x193>$/;"	l
c0112763	obj/kernel.asm	/^c0112763:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112766	obj/kernel.asm	/^c0112766:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011276a	obj/kernel.asm	/^c011276a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011276d	obj/kernel.asm	/^c011276d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112770	obj/kernel.asm	/^c0112770:	e8 9f fc ff ff       	call   c0112414 <sfs_block_inuse>$/;"	l
c0112775	obj/kernel.asm	/^c0112775:	85 c0                	test   %eax,%eax$/;"	l
c0112777	obj/kernel.asm	/^c0112777:	75 24                	jne    c011279d <sfs_load_inode+0x8d>$/;"	l
c0112779	obj/kernel.asm	/^c0112779:	c7 44 24 0c 15 96 11 	movl   $0xc0119615,0xc(%esp)$/;"	l
c0112780	obj/kernel.asm	/^c0112780:	c0 $/;"	l
c0112781	obj/kernel.asm	/^c0112781:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0112788	obj/kernel.asm	/^c0112788:	c0 $/;"	l
c0112789	obj/kernel.asm	/^c0112789:	c7 44 24 04 a8 00 00 	movl   $0xa8,0x4(%esp)$/;"	l
c0112790	obj/kernel.asm	/^c0112790:	00 $/;"	l
c0112791	obj/kernel.asm	/^c0112791:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112798	obj/kernel.asm	/^c0112798:	e8 2b e7 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011279d	obj/kernel.asm	/^c011279d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c01127a4	obj/kernel.asm	/^c01127a4:	00 $/;"	l
c01127a5	obj/kernel.asm	/^c01127a5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01127a8	obj/kernel.asm	/^c01127a8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01127ac	obj/kernel.asm	/^c01127ac:	c7 44 24 08 40 00 00 	movl   $0x40,0x8(%esp)$/;"	l
c01127b3	obj/kernel.asm	/^c01127b3:	00 $/;"	l
c01127b4	obj/kernel.asm	/^c01127b4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01127b7	obj/kernel.asm	/^c01127b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01127bb	obj/kernel.asm	/^c01127bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01127be	obj/kernel.asm	/^c01127be:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01127c1	obj/kernel.asm	/^c01127c1:	e8 e9 1e 00 00       	call   c01146af <sfs_rbuf>$/;"	l
c01127c6	obj/kernel.asm	/^c01127c6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01127c9	obj/kernel.asm	/^c01127c9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01127cd	obj/kernel.asm	/^c01127cd:	74 05                	je     c01127d4 <sfs_load_inode+0xc4>$/;"	l
c01127cf	obj/kernel.asm	/^c01127cf:	e9 c4 00 00 00       	jmp    c0112898 <sfs_load_inode+0x188>$/;"	l
c01127d4	obj/kernel.asm	/^c01127d4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01127d7	obj/kernel.asm	/^c01127d7:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c01127db	obj/kernel.asm	/^c01127db:	66 85 c0             	test   %ax,%ax$/;"	l
c01127de	obj/kernel.asm	/^c01127de:	75 24                	jne    c0112804 <sfs_load_inode+0xf4>$/;"	l
c01127e0	obj/kernel.asm	/^c01127e0:	c7 44 24 0c 66 96 11 	movl   $0xc0119666,0xc(%esp)$/;"	l
c01127e7	obj/kernel.asm	/^c01127e7:	c0 $/;"	l
c01127e8	obj/kernel.asm	/^c01127e8:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c01127ef	obj/kernel.asm	/^c01127ef:	c0 $/;"	l
c01127f0	obj/kernel.asm	/^c01127f0:	c7 44 24 04 ad 00 00 	movl   $0xad,0x4(%esp)$/;"	l
c01127f7	obj/kernel.asm	/^c01127f7:	00 $/;"	l
c01127f8	obj/kernel.asm	/^c01127f8:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c01127ff	obj/kernel.asm	/^c01127ff:	e8 c4 e6 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112804	obj/kernel.asm	/^c0112804:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112807	obj/kernel.asm	/^c0112807:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011280b	obj/kernel.asm	/^c011280b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011280e	obj/kernel.asm	/^c011280e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112812	obj/kernel.asm	/^c0112812:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112815	obj/kernel.asm	/^c0112815:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112819	obj/kernel.asm	/^c0112819:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011281c	obj/kernel.asm	/^c011281c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011281f	obj/kernel.asm	/^c011281f:	e8 92 fd ff ff       	call   c01125b6 <sfs_create_inode>$/;"	l
c0112824	obj/kernel.asm	/^c0112824:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112827	obj/kernel.asm	/^c0112827:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011282b	obj/kernel.asm	/^c011282b:	74 02                	je     c011282f <sfs_load_inode+0x11f>$/;"	l
c011282d	obj/kernel.asm	/^c011282d:	eb 69                	jmp    c0112898 <sfs_load_inode+0x188>$/;"	l
c011282f	obj/kernel.asm	/^c011282f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112832	obj/kernel.asm	/^c0112832:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112835	obj/kernel.asm	/^c0112835:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112839	obj/kernel.asm	/^c0112839:	74 0d                	je     c0112848 <sfs_load_inode+0x138>$/;"	l
c011283b	obj/kernel.asm	/^c011283b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011283e	obj/kernel.asm	/^c011283e:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0112841	obj/kernel.asm	/^c0112841:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0112846	obj/kernel.asm	/^c0112846:	74 24                	je     c011286c <sfs_load_inode+0x15c>$/;"	l
c0112848	obj/kernel.asm	/^c0112848:	c7 44 24 0c 30 96 11 	movl   $0xc0119630,0xc(%esp)$/;"	l
c011284f	obj/kernel.asm	/^c011284f:	c0 $/;"	l
c0112850	obj/kernel.asm	/^c0112850:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0112857	obj/kernel.asm	/^c0112857:	c0 $/;"	l
c0112858	obj/kernel.asm	/^c0112858:	c7 44 24 04 b1 00 00 	movl   $0xb1,0x4(%esp)$/;"	l
c011285f	obj/kernel.asm	/^c011285f:	00 $/;"	l
c0112860	obj/kernel.asm	/^c0112860:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112867	obj/kernel.asm	/^c0112867:	e8 5c e6 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011286c	obj/kernel.asm	/^c011286c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011286f	obj/kernel.asm	/^c011286f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112873	obj/kernel.asm	/^c0112873:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112876	obj/kernel.asm	/^c0112876:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112879	obj/kernel.asm	/^c0112879:	e8 6e fa ff ff       	call   c01122ec <sfs_set_links>$/;"	l
c011287e	obj/kernel.asm	/^c011287e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112881	obj/kernel.asm	/^c0112881:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112884	obj/kernel.asm	/^c0112884:	e8 61 21 00 00       	call   c01149ea <unlock_sfs_fs>$/;"	l
c0112889	obj/kernel.asm	/^c0112889:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c011288c	obj/kernel.asm	/^c011288c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011288f	obj/kernel.asm	/^c011288f:	89 10                	mov    %edx,(%eax)$/;"	l
c0112891	obj/kernel.asm	/^c0112891:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112896	obj/kernel.asm	/^c0112896:	eb 19                	jmp    c01128b1 <sfs_load_inode+0x1a1>$/;"	l
c0112898	obj/kernel.asm	/^c0112898:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011289b	obj/kernel.asm	/^c011289b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011289e	obj/kernel.asm	/^c011289e:	e8 57 24 ff ff       	call   c0104cfa <kfree>$/;"	l
c01128a3	obj/kernel.asm	/^c01128a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01128a6	obj/kernel.asm	/^c01128a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01128a9	obj/kernel.asm	/^c01128a9:	e8 3c 21 00 00       	call   c01149ea <unlock_sfs_fs>$/;"	l
c01128ae	obj/kernel.asm	/^c01128ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01128b1	obj/kernel.asm	/^c01128b1:	c9                   	leave  $/;"	l
c01128b2	obj/kernel.asm	/^c01128b2:	c3                   	ret    $/;"	l
c01128b3	obj/kernel.asm	/^c01128b3 <sfs_bmap_get_sub_nolock>:$/;"	l
c01128b3	obj/kernel.asm	/^c01128b3:	55                   	push   %ebp$/;"	l
c01128b4	obj/kernel.asm	/^c01128b4:	89 e5                	mov    %esp,%ebp$/;"	l
c01128b6	obj/kernel.asm	/^c01128b6:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01128b9	obj/kernel.asm	/^c01128b9:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c01128c0	obj/kernel.asm	/^c01128c0:	76 24                	jbe    c01128e6 <sfs_bmap_get_sub_nolock+0x33>$/;"	l
c01128c2	obj/kernel.asm	/^c01128c2:	c7 44 24 0c 77 96 11 	movl   $0xc0119677,0xc(%esp)$/;"	l
c01128c9	obj/kernel.asm	/^c01128c9:	c0 $/;"	l
c01128ca	obj/kernel.asm	/^c01128ca:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c01128d1	obj/kernel.asm	/^c01128d1:	c0 $/;"	l
c01128d2	obj/kernel.asm	/^c01128d2:	c7 44 24 04 ca 00 00 	movl   $0xca,0x4(%esp)$/;"	l
c01128d9	obj/kernel.asm	/^c01128d9:	00 $/;"	l
c01128da	obj/kernel.asm	/^c01128da:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c01128e1	obj/kernel.asm	/^c01128e1:	e8 e2 e5 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01128e6	obj/kernel.asm	/^c01128e6:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c01128ed	obj/kernel.asm	/^c01128ed:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01128f0	obj/kernel.asm	/^c01128f0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01128f3	obj/kernel.asm	/^c01128f3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01128f6	obj/kernel.asm	/^c01128f6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01128f9	obj/kernel.asm	/^c01128f9:	8b 00                	mov    (%eax),%eax$/;"	l
c01128fb	obj/kernel.asm	/^c01128fb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01128fe	obj/kernel.asm	/^c01128fe:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112901	obj/kernel.asm	/^c0112901:	85 c0                	test   %eax,%eax$/;"	l
c0112903	obj/kernel.asm	/^c0112903:	74 50                	je     c0112955 <sfs_bmap_get_sub_nolock+0xa2>$/;"	l
c0112905	obj/kernel.asm	/^c0112905:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112908	obj/kernel.asm	/^c0112908:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c011290b	obj/kernel.asm	/^c011290b:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c011290f	obj/kernel.asm	/^c011290f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112913	obj/kernel.asm	/^c0112913:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c011291a	obj/kernel.asm	/^c011291a:	00 $/;"	l
c011291b	obj/kernel.asm	/^c011291b:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c011291e	obj/kernel.asm	/^c011291e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112922	obj/kernel.asm	/^c0112922:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112925	obj/kernel.asm	/^c0112925:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112928	obj/kernel.asm	/^c0112928:	e8 82 1d 00 00       	call   c01146af <sfs_rbuf>$/;"	l
c011292d	obj/kernel.asm	/^c011292d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112930	obj/kernel.asm	/^c0112930:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112934	obj/kernel.asm	/^c0112934:	74 08                	je     c011293e <sfs_bmap_get_sub_nolock+0x8b>$/;"	l
c0112936	obj/kernel.asm	/^c0112936:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112939	obj/kernel.asm	/^c0112939:	e9 eb 00 00 00       	jmp    c0112a29 <sfs_bmap_get_sub_nolock+0x176>$/;"	l
c011293e	obj/kernel.asm	/^c011293e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112941	obj/kernel.asm	/^c0112941:	85 c0                	test   %eax,%eax$/;"	l
c0112943	obj/kernel.asm	/^c0112943:	0f 85 9c 00 00 00    	jne    c01129e5 <sfs_bmap_get_sub_nolock+0x132>$/;"	l
c0112949	obj/kernel.asm	/^c0112949:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c011294d	obj/kernel.asm	/^c011294d:	0f 84 92 00 00 00    	je     c01129e5 <sfs_bmap_get_sub_nolock+0x132>$/;"	l
c0112953	obj/kernel.asm	/^c0112953:	eb 2e                	jmp    c0112983 <sfs_bmap_get_sub_nolock+0xd0>$/;"	l
c0112955	obj/kernel.asm	/^c0112955:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0112959	obj/kernel.asm	/^c0112959:	75 05                	jne    c0112960 <sfs_bmap_get_sub_nolock+0xad>$/;"	l
c011295b	obj/kernel.asm	/^c011295b:	e9 85 00 00 00       	jmp    c01129e5 <sfs_bmap_get_sub_nolock+0x132>$/;"	l
c0112960	obj/kernel.asm	/^c0112960:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0112963	obj/kernel.asm	/^c0112963:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112967	obj/kernel.asm	/^c0112967:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011296a	obj/kernel.asm	/^c011296a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011296d	obj/kernel.asm	/^c011296d:	e8 07 fb ff ff       	call   c0112479 <sfs_block_alloc>$/;"	l
c0112972	obj/kernel.asm	/^c0112972:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112975	obj/kernel.asm	/^c0112975:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112979	obj/kernel.asm	/^c0112979:	74 08                	je     c0112983 <sfs_bmap_get_sub_nolock+0xd0>$/;"	l
c011297b	obj/kernel.asm	/^c011297b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011297e	obj/kernel.asm	/^c011297e:	e9 a6 00 00 00       	jmp    c0112a29 <sfs_bmap_get_sub_nolock+0x176>$/;"	l
c0112983	obj/kernel.asm	/^c0112983:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112986	obj/kernel.asm	/^c0112986:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011298a	obj/kernel.asm	/^c011298a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011298d	obj/kernel.asm	/^c011298d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112990	obj/kernel.asm	/^c0112990:	e8 e4 fa ff ff       	call   c0112479 <sfs_block_alloc>$/;"	l
c0112995	obj/kernel.asm	/^c0112995:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112998	obj/kernel.asm	/^c0112998:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011299c	obj/kernel.asm	/^c011299c:	74 02                	je     c01129a0 <sfs_bmap_get_sub_nolock+0xed>$/;"	l
c011299e	obj/kernel.asm	/^c011299e:	eb 68                	jmp    c0112a08 <sfs_bmap_get_sub_nolock+0x155>$/;"	l
c01129a0	obj/kernel.asm	/^c01129a0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01129a3	obj/kernel.asm	/^c01129a3:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01129a6	obj/kernel.asm	/^c01129a6:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c01129aa	obj/kernel.asm	/^c01129aa:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01129ae	obj/kernel.asm	/^c01129ae:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c01129b5	obj/kernel.asm	/^c01129b5:	00 $/;"	l
c01129b6	obj/kernel.asm	/^c01129b6:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c01129b9	obj/kernel.asm	/^c01129b9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01129bd	obj/kernel.asm	/^c01129bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01129c0	obj/kernel.asm	/^c01129c0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01129c3	obj/kernel.asm	/^c01129c3:	e8 a0 1d 00 00       	call   c0114768 <sfs_wbuf>$/;"	l
c01129c8	obj/kernel.asm	/^c01129c8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01129cb	obj/kernel.asm	/^c01129cb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01129cf	obj/kernel.asm	/^c01129cf:	74 14                	je     c01129e5 <sfs_bmap_get_sub_nolock+0x132>$/;"	l
c01129d1	obj/kernel.asm	/^c01129d1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01129d4	obj/kernel.asm	/^c01129d4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01129d8	obj/kernel.asm	/^c01129d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01129db	obj/kernel.asm	/^c01129db:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01129de	obj/kernel.asm	/^c01129de:	e8 63 fb ff ff       	call   c0112546 <sfs_block_free>$/;"	l
c01129e3	obj/kernel.asm	/^c01129e3:	eb 23                	jmp    c0112a08 <sfs_bmap_get_sub_nolock+0x155>$/;"	l
c01129e5	obj/kernel.asm	/^c01129e5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01129e8	obj/kernel.asm	/^c01129e8:	8b 10                	mov    (%eax),%edx$/;"	l
c01129ea	obj/kernel.asm	/^c01129ea:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01129ed	obj/kernel.asm	/^c01129ed:	39 c2                	cmp    %eax,%edx$/;"	l
c01129ef	obj/kernel.asm	/^c01129ef:	74 08                	je     c01129f9 <sfs_bmap_get_sub_nolock+0x146>$/;"	l
c01129f1	obj/kernel.asm	/^c01129f1:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01129f4	obj/kernel.asm	/^c01129f4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01129f7	obj/kernel.asm	/^c01129f7:	89 10                	mov    %edx,(%eax)$/;"	l
c01129f9	obj/kernel.asm	/^c01129f9:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01129fc	obj/kernel.asm	/^c01129fc:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01129ff	obj/kernel.asm	/^c01129ff:	89 10                	mov    %edx,(%eax)$/;"	l
c0112a01	obj/kernel.asm	/^c0112a01:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112a06	obj/kernel.asm	/^c0112a06:	eb 21                	jmp    c0112a29 <sfs_bmap_get_sub_nolock+0x176>$/;"	l
c0112a08	obj/kernel.asm	/^c0112a08:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112a0b	obj/kernel.asm	/^c0112a0b:	8b 10                	mov    (%eax),%edx$/;"	l
c0112a0d	obj/kernel.asm	/^c0112a0d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112a10	obj/kernel.asm	/^c0112a10:	39 c2                	cmp    %eax,%edx$/;"	l
c0112a12	obj/kernel.asm	/^c0112a12:	74 12                	je     c0112a26 <sfs_bmap_get_sub_nolock+0x173>$/;"	l
c0112a14	obj/kernel.asm	/^c0112a14:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112a17	obj/kernel.asm	/^c0112a17:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112a1b	obj/kernel.asm	/^c0112a1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112a1e	obj/kernel.asm	/^c0112a1e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112a21	obj/kernel.asm	/^c0112a21:	e8 20 fb ff ff       	call   c0112546 <sfs_block_free>$/;"	l
c0112a26	obj/kernel.asm	/^c0112a26:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112a29	obj/kernel.asm	/^c0112a29:	c9                   	leave  $/;"	l
c0112a2a	obj/kernel.asm	/^c0112a2a:	c3                   	ret    $/;"	l
c0112a2b	obj/kernel.asm	/^c0112a2b <sfs_bmap_get_nolock>:$/;"	l
c0112a2b	obj/kernel.asm	/^c0112a2b:	55                   	push   %ebp$/;"	l
c0112a2c	obj/kernel.asm	/^c0112a2c:	89 e5                	mov    %esp,%ebp$/;"	l
c0112a2e	obj/kernel.asm	/^c0112a2e:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112a31	obj/kernel.asm	/^c0112a31:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112a34	obj/kernel.asm	/^c0112a34:	8b 00                	mov    (%eax),%eax$/;"	l
c0112a36	obj/kernel.asm	/^c0112a36:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112a39	obj/kernel.asm	/^c0112a39:	83 7d 10 0b          	cmpl   $0xb,0x10(%ebp)$/;"	l
c0112a3d	obj/kernel.asm	/^c0112a3d:	77 5e                	ja     c0112a9d <sfs_bmap_get_nolock+0x72>$/;"	l
c0112a3f	obj/kernel.asm	/^c0112a3f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112a42	obj/kernel.asm	/^c0112a42:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0112a45	obj/kernel.asm	/^c0112a45:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax$/;"	l
c0112a49	obj/kernel.asm	/^c0112a49:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112a4c	obj/kernel.asm	/^c0112a4c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112a4f	obj/kernel.asm	/^c0112a4f:	85 c0                	test   %eax,%eax$/;"	l
c0112a51	obj/kernel.asm	/^c0112a51:	75 45                	jne    c0112a98 <sfs_bmap_get_nolock+0x6d>$/;"	l
c0112a53	obj/kernel.asm	/^c0112a53:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0112a57	obj/kernel.asm	/^c0112a57:	74 3f                	je     c0112a98 <sfs_bmap_get_nolock+0x6d>$/;"	l
c0112a59	obj/kernel.asm	/^c0112a59:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112a5c	obj/kernel.asm	/^c0112a5c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112a60	obj/kernel.asm	/^c0112a60:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112a63	obj/kernel.asm	/^c0112a63:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112a66	obj/kernel.asm	/^c0112a66:	e8 0e fa ff ff       	call   c0112479 <sfs_block_alloc>$/;"	l
c0112a6b	obj/kernel.asm	/^c0112a6b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112a6e	obj/kernel.asm	/^c0112a6e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112a72	obj/kernel.asm	/^c0112a72:	74 08                	je     c0112a7c <sfs_bmap_get_nolock+0x51>$/;"	l
c0112a74	obj/kernel.asm	/^c0112a74:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112a77	obj/kernel.asm	/^c0112a77:	e9 2f 01 00 00       	jmp    c0112bab <sfs_bmap_get_nolock+0x180>$/;"	l
c0112a7c	obj/kernel.asm	/^c0112a7c:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c0112a7f	obj/kernel.asm	/^c0112a7f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112a82	obj/kernel.asm	/^c0112a82:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0112a85	obj/kernel.asm	/^c0112a85:	89 4c 90 0c          	mov    %ecx,0xc(%eax,%edx,4)$/;"	l
c0112a89	obj/kernel.asm	/^c0112a89:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112a8c	obj/kernel.asm	/^c0112a8c:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0112a93	obj/kernel.asm	/^c0112a93:	e9 c5 00 00 00       	jmp    c0112b5d <sfs_bmap_get_nolock+0x132>$/;"	l
c0112a98	obj/kernel.asm	/^c0112a98:	e9 c0 00 00 00       	jmp    c0112b5d <sfs_bmap_get_nolock+0x132>$/;"	l
c0112a9d	obj/kernel.asm	/^c0112a9d:	83 6d 10 0c          	subl   $0xc,0x10(%ebp)$/;"	l
c0112aa1	obj/kernel.asm	/^c0112aa1:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0112aa8	obj/kernel.asm	/^c0112aa8:	0f 87 93 00 00 00    	ja     c0112b41 <sfs_bmap_get_nolock+0x116>$/;"	l
c0112aae	obj/kernel.asm	/^c0112aae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112ab1	obj/kernel.asm	/^c0112ab1:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112ab4	obj/kernel.asm	/^c0112ab4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112ab7	obj/kernel.asm	/^c0112ab7:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112aba	obj/kernel.asm	/^c0112aba:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0112abe	obj/kernel.asm	/^c0112abe:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0112ac1	obj/kernel.asm	/^c0112ac1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112ac5	obj/kernel.asm	/^c0112ac5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112ac8	obj/kernel.asm	/^c0112ac8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112acc	obj/kernel.asm	/^c0112acc:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0112acf	obj/kernel.asm	/^c0112acf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112ad3	obj/kernel.asm	/^c0112ad3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112ad6	obj/kernel.asm	/^c0112ad6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112ad9	obj/kernel.asm	/^c0112ad9:	e8 d5 fd ff ff       	call   c01128b3 <sfs_bmap_get_sub_nolock>$/;"	l
c0112ade	obj/kernel.asm	/^c0112ade:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112ae1	obj/kernel.asm	/^c0112ae1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112ae5	obj/kernel.asm	/^c0112ae5:	74 08                	je     c0112aef <sfs_bmap_get_nolock+0xc4>$/;"	l
c0112ae7	obj/kernel.asm	/^c0112ae7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112aea	obj/kernel.asm	/^c0112aea:	e9 bc 00 00 00       	jmp    c0112bab <sfs_bmap_get_nolock+0x180>$/;"	l
c0112aef	obj/kernel.asm	/^c0112aef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112af2	obj/kernel.asm	/^c0112af2:	8b 50 3c             	mov    0x3c(%eax),%edx$/;"	l
c0112af5	obj/kernel.asm	/^c0112af5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112af8	obj/kernel.asm	/^c0112af8:	39 c2                	cmp    %eax,%edx$/;"	l
c0112afa	obj/kernel.asm	/^c0112afa:	74 43                	je     c0112b3f <sfs_bmap_get_nolock+0x114>$/;"	l
c0112afc	obj/kernel.asm	/^c0112afc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112aff	obj/kernel.asm	/^c0112aff:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112b02	obj/kernel.asm	/^c0112b02:	85 c0                	test   %eax,%eax$/;"	l
c0112b04	obj/kernel.asm	/^c0112b04:	74 24                	je     c0112b2a <sfs_bmap_get_nolock+0xff>$/;"	l
c0112b06	obj/kernel.asm	/^c0112b06:	c7 44 24 0c 8e 96 11 	movl   $0xc011968e,0xc(%esp)$/;"	l
c0112b0d	obj/kernel.asm	/^c0112b0d:	c0 $/;"	l
c0112b0e	obj/kernel.asm	/^c0112b0e:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0112b15	obj/kernel.asm	/^c0112b15:	c0 $/;"	l
c0112b16	obj/kernel.asm	/^c0112b16:	c7 44 24 04 18 01 00 	movl   $0x118,0x4(%esp)$/;"	l
c0112b1d	obj/kernel.asm	/^c0112b1d:	00 $/;"	l
c0112b1e	obj/kernel.asm	/^c0112b1e:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112b25	obj/kernel.asm	/^c0112b25:	e8 9e e3 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112b2a	obj/kernel.asm	/^c0112b2a:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0112b2d	obj/kernel.asm	/^c0112b2d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112b30	obj/kernel.asm	/^c0112b30:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0112b33	obj/kernel.asm	/^c0112b33:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112b36	obj/kernel.asm	/^c0112b36:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0112b3d	obj/kernel.asm	/^c0112b3d:	eb 1e                	jmp    c0112b5d <sfs_bmap_get_nolock+0x132>$/;"	l
c0112b3f	obj/kernel.asm	/^c0112b3f:	eb 1c                	jmp    c0112b5d <sfs_bmap_get_nolock+0x132>$/;"	l
c0112b41	obj/kernel.asm	/^c0112b41:	c7 44 24 08 a4 96 11 	movl   $0xc01196a4,0x8(%esp)$/;"	l
c0112b48	obj/kernel.asm	/^c0112b48:	c0 $/;"	l
c0112b49	obj/kernel.asm	/^c0112b49:	c7 44 24 04 1e 01 00 	movl   $0x11e,0x4(%esp)$/;"	l
c0112b50	obj/kernel.asm	/^c0112b50:	00 $/;"	l
c0112b51	obj/kernel.asm	/^c0112b51:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112b58	obj/kernel.asm	/^c0112b58:	e8 6b e3 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112b5d	obj/kernel.asm	/^c0112b5d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112b60	obj/kernel.asm	/^c0112b60:	85 c0                	test   %eax,%eax$/;"	l
c0112b62	obj/kernel.asm	/^c0112b62:	74 3a                	je     c0112b9e <sfs_bmap_get_nolock+0x173>$/;"	l
c0112b64	obj/kernel.asm	/^c0112b64:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112b67	obj/kernel.asm	/^c0112b67:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112b6b	obj/kernel.asm	/^c0112b6b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112b6e	obj/kernel.asm	/^c0112b6e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112b71	obj/kernel.asm	/^c0112b71:	e8 9e f8 ff ff       	call   c0112414 <sfs_block_inuse>$/;"	l
c0112b76	obj/kernel.asm	/^c0112b76:	85 c0                	test   %eax,%eax$/;"	l
c0112b78	obj/kernel.asm	/^c0112b78:	75 24                	jne    c0112b9e <sfs_bmap_get_nolock+0x173>$/;"	l
c0112b7a	obj/kernel.asm	/^c0112b7a:	c7 44 24 0c d0 96 11 	movl   $0xc01196d0,0xc(%esp)$/;"	l
c0112b81	obj/kernel.asm	/^c0112b81:	c0 $/;"	l
c0112b82	obj/kernel.asm	/^c0112b82:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0112b89	obj/kernel.asm	/^c0112b89:	c0 $/;"	l
c0112b8a	obj/kernel.asm	/^c0112b8a:	c7 44 24 04 21 01 00 	movl   $0x121,0x4(%esp)$/;"	l
c0112b91	obj/kernel.asm	/^c0112b91:	00 $/;"	l
c0112b92	obj/kernel.asm	/^c0112b92:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112b99	obj/kernel.asm	/^c0112b99:	e8 2a e3 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112b9e	obj/kernel.asm	/^c0112b9e:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0112ba1	obj/kernel.asm	/^c0112ba1:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0112ba4	obj/kernel.asm	/^c0112ba4:	89 10                	mov    %edx,(%eax)$/;"	l
c0112ba6	obj/kernel.asm	/^c0112ba6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112bab	obj/kernel.asm	/^c0112bab:	c9                   	leave  $/;"	l
c0112bac	obj/kernel.asm	/^c0112bac:	c3                   	ret    $/;"	l
c0112bad	obj/kernel.asm	/^c0112bad <sfs_bmap_free_sub_nolock>:$/;"	l
c0112bad	obj/kernel.asm	/^c0112bad:	55                   	push   %ebp$/;"	l
c0112bae	obj/kernel.asm	/^c0112bae:	89 e5                	mov    %esp,%ebp$/;"	l
c0112bb0	obj/kernel.asm	/^c0112bb0:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112bb3	obj/kernel.asm	/^c0112bb3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112bb6	obj/kernel.asm	/^c0112bb6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112bba	obj/kernel.asm	/^c0112bba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112bbd	obj/kernel.asm	/^c0112bbd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112bc0	obj/kernel.asm	/^c0112bc0:	e8 4f f8 ff ff       	call   c0112414 <sfs_block_inuse>$/;"	l
c0112bc5	obj/kernel.asm	/^c0112bc5:	85 c0                	test   %eax,%eax$/;"	l
c0112bc7	obj/kernel.asm	/^c0112bc7:	74 09                	je     c0112bd2 <sfs_bmap_free_sub_nolock+0x25>$/;"	l
c0112bc9	obj/kernel.asm	/^c0112bc9:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0112bd0	obj/kernel.asm	/^c0112bd0:	76 24                	jbe    c0112bf6 <sfs_bmap_free_sub_nolock+0x49>$/;"	l
c0112bd2	obj/kernel.asm	/^c0112bd2:	c7 44 24 0c f8 96 11 	movl   $0xc01196f8,0xc(%esp)$/;"	l
c0112bd9	obj/kernel.asm	/^c0112bd9:	c0 $/;"	l
c0112bda	obj/kernel.asm	/^c0112bda:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0112be1	obj/kernel.asm	/^c0112be1:	c0 $/;"	l
c0112be2	obj/kernel.asm	/^c0112be2:	c7 44 24 04 2b 01 00 	movl   $0x12b,0x4(%esp)$/;"	l
c0112be9	obj/kernel.asm	/^c0112be9:	00 $/;"	l
c0112bea	obj/kernel.asm	/^c0112bea:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112bf1	obj/kernel.asm	/^c0112bf1:	e8 d2 e2 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112bf6	obj/kernel.asm	/^c0112bf6:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0112bfd	obj/kernel.asm	/^c0112bfd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112c00	obj/kernel.asm	/^c0112c00:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0112c03	obj/kernel.asm	/^c0112c03:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112c06	obj/kernel.asm	/^c0112c06:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112c09	obj/kernel.asm	/^c0112c09:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0112c0d	obj/kernel.asm	/^c0112c0d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112c10	obj/kernel.asm	/^c0112c10:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112c14	obj/kernel.asm	/^c0112c14:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c0112c1b	obj/kernel.asm	/^c0112c1b:	00 $/;"	l
c0112c1c	obj/kernel.asm	/^c0112c1c:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0112c1f	obj/kernel.asm	/^c0112c1f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112c23	obj/kernel.asm	/^c0112c23:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112c26	obj/kernel.asm	/^c0112c26:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112c29	obj/kernel.asm	/^c0112c29:	e8 81 1a 00 00       	call   c01146af <sfs_rbuf>$/;"	l
c0112c2e	obj/kernel.asm	/^c0112c2e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112c31	obj/kernel.asm	/^c0112c31:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112c35	obj/kernel.asm	/^c0112c35:	74 05                	je     c0112c3c <sfs_bmap_free_sub_nolock+0x8f>$/;"	l
c0112c37	obj/kernel.asm	/^c0112c37:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112c3a	obj/kernel.asm	/^c0112c3a:	eb 54                	jmp    c0112c90 <sfs_bmap_free_sub_nolock+0xe3>$/;"	l
c0112c3c	obj/kernel.asm	/^c0112c3c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112c3f	obj/kernel.asm	/^c0112c3f:	85 c0                	test   %eax,%eax$/;"	l
c0112c41	obj/kernel.asm	/^c0112c41:	74 48                	je     c0112c8b <sfs_bmap_free_sub_nolock+0xde>$/;"	l
c0112c43	obj/kernel.asm	/^c0112c43:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112c46	obj/kernel.asm	/^c0112c46:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0112c4a	obj/kernel.asm	/^c0112c4a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112c4d	obj/kernel.asm	/^c0112c4d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112c51	obj/kernel.asm	/^c0112c51:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c0112c58	obj/kernel.asm	/^c0112c58:	00 $/;"	l
c0112c59	obj/kernel.asm	/^c0112c59:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112c5c	obj/kernel.asm	/^c0112c5c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112c60	obj/kernel.asm	/^c0112c60:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112c63	obj/kernel.asm	/^c0112c63:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112c66	obj/kernel.asm	/^c0112c66:	e8 fd 1a 00 00       	call   c0114768 <sfs_wbuf>$/;"	l
c0112c6b	obj/kernel.asm	/^c0112c6b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112c6e	obj/kernel.asm	/^c0112c6e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112c72	obj/kernel.asm	/^c0112c72:	74 05                	je     c0112c79 <sfs_bmap_free_sub_nolock+0xcc>$/;"	l
c0112c74	obj/kernel.asm	/^c0112c74:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112c77	obj/kernel.asm	/^c0112c77:	eb 17                	jmp    c0112c90 <sfs_bmap_free_sub_nolock+0xe3>$/;"	l
c0112c79	obj/kernel.asm	/^c0112c79:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112c7c	obj/kernel.asm	/^c0112c7c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112c80	obj/kernel.asm	/^c0112c80:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112c83	obj/kernel.asm	/^c0112c83:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112c86	obj/kernel.asm	/^c0112c86:	e8 bb f8 ff ff       	call   c0112546 <sfs_block_free>$/;"	l
c0112c8b	obj/kernel.asm	/^c0112c8b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112c90	obj/kernel.asm	/^c0112c90:	c9                   	leave  $/;"	l
c0112c91	obj/kernel.asm	/^c0112c91:	c3                   	ret    $/;"	l
c0112c92	obj/kernel.asm	/^c0112c92 <sfs_bmap_free_nolock>:$/;"	l
c0112c92	obj/kernel.asm	/^c0112c92:	55                   	push   %ebp$/;"	l
c0112c93	obj/kernel.asm	/^c0112c93:	89 e5                	mov    %esp,%ebp$/;"	l
c0112c95	obj/kernel.asm	/^c0112c95:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112c98	obj/kernel.asm	/^c0112c98:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112c9b	obj/kernel.asm	/^c0112c9b:	8b 00                	mov    (%eax),%eax$/;"	l
c0112c9d	obj/kernel.asm	/^c0112c9d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112ca0	obj/kernel.asm	/^c0112ca0:	83 7d 10 0b          	cmpl   $0xb,0x10(%ebp)$/;"	l
c0112ca4	obj/kernel.asm	/^c0112ca4:	77 44                	ja     c0112cea <sfs_bmap_free_nolock+0x58>$/;"	l
c0112ca6	obj/kernel.asm	/^c0112ca6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112ca9	obj/kernel.asm	/^c0112ca9:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0112cac	obj/kernel.asm	/^c0112cac:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax$/;"	l
c0112cb0	obj/kernel.asm	/^c0112cb0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112cb3	obj/kernel.asm	/^c0112cb3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112cb7	obj/kernel.asm	/^c0112cb7:	74 2a                	je     c0112ce3 <sfs_bmap_free_nolock+0x51>$/;"	l
c0112cb9	obj/kernel.asm	/^c0112cb9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112cbc	obj/kernel.asm	/^c0112cbc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112cc0	obj/kernel.asm	/^c0112cc0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112cc3	obj/kernel.asm	/^c0112cc3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112cc6	obj/kernel.asm	/^c0112cc6:	e8 7b f8 ff ff       	call   c0112546 <sfs_block_free>$/;"	l
c0112ccb	obj/kernel.asm	/^c0112ccb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112cce	obj/kernel.asm	/^c0112cce:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0112cd1	obj/kernel.asm	/^c0112cd1:	c7 44 90 0c 00 00 00 	movl   $0x0,0xc(%eax,%edx,4)$/;"	l
c0112cd8	obj/kernel.asm	/^c0112cd8:	00 $/;"	l
c0112cd9	obj/kernel.asm	/^c0112cd9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112cdc	obj/kernel.asm	/^c0112cdc:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0112ce3	obj/kernel.asm	/^c0112ce3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112ce8	obj/kernel.asm	/^c0112ce8:	eb 4f                	jmp    c0112d39 <sfs_bmap_free_nolock+0xa7>$/;"	l
c0112cea	obj/kernel.asm	/^c0112cea:	83 6d 10 0c          	subl   $0xc,0x10(%ebp)$/;"	l
c0112cee	obj/kernel.asm	/^c0112cee:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0112cf5	obj/kernel.asm	/^c0112cf5:	77 3d                	ja     c0112d34 <sfs_bmap_free_nolock+0xa2>$/;"	l
c0112cf7	obj/kernel.asm	/^c0112cf7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112cfa	obj/kernel.asm	/^c0112cfa:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112cfd	obj/kernel.asm	/^c0112cfd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112d00	obj/kernel.asm	/^c0112d00:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112d04	obj/kernel.asm	/^c0112d04:	74 27                	je     c0112d2d <sfs_bmap_free_nolock+0x9b>$/;"	l
c0112d06	obj/kernel.asm	/^c0112d06:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112d09	obj/kernel.asm	/^c0112d09:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112d0d	obj/kernel.asm	/^c0112d0d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112d10	obj/kernel.asm	/^c0112d10:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112d14	obj/kernel.asm	/^c0112d14:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112d17	obj/kernel.asm	/^c0112d17:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112d1a	obj/kernel.asm	/^c0112d1a:	e8 8e fe ff ff       	call   c0112bad <sfs_bmap_free_sub_nolock>$/;"	l
c0112d1f	obj/kernel.asm	/^c0112d1f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112d22	obj/kernel.asm	/^c0112d22:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0112d26	obj/kernel.asm	/^c0112d26:	74 05                	je     c0112d2d <sfs_bmap_free_nolock+0x9b>$/;"	l
c0112d28	obj/kernel.asm	/^c0112d28:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112d2b	obj/kernel.asm	/^c0112d2b:	eb 0c                	jmp    c0112d39 <sfs_bmap_free_nolock+0xa7>$/;"	l
c0112d2d	obj/kernel.asm	/^c0112d2d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112d32	obj/kernel.asm	/^c0112d32:	eb 05                	jmp    c0112d39 <sfs_bmap_free_nolock+0xa7>$/;"	l
c0112d34	obj/kernel.asm	/^c0112d34:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112d39	obj/kernel.asm	/^c0112d39:	c9                   	leave  $/;"	l
c0112d3a	obj/kernel.asm	/^c0112d3a:	c3                   	ret    $/;"	l
c0112d3b	obj/kernel.asm	/^c0112d3b <sfs_bmap_load_nolock>:$/;"	l
c0112d3b	obj/kernel.asm	/^c0112d3b:	55                   	push   %ebp$/;"	l
c0112d3c	obj/kernel.asm	/^c0112d3c:	89 e5                	mov    %esp,%ebp$/;"	l
c0112d3e	obj/kernel.asm	/^c0112d3e:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112d41	obj/kernel.asm	/^c0112d41:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112d44	obj/kernel.asm	/^c0112d44:	8b 00                	mov    (%eax),%eax$/;"	l
c0112d46	obj/kernel.asm	/^c0112d46:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112d49	obj/kernel.asm	/^c0112d49:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112d4c	obj/kernel.asm	/^c0112d4c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112d4f	obj/kernel.asm	/^c0112d4f:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0112d52	obj/kernel.asm	/^c0112d52:	73 24                	jae    c0112d78 <sfs_bmap_load_nolock+0x3d>$/;"	l
c0112d54	obj/kernel.asm	/^c0112d54:	c7 44 24 0c 2c 97 11 	movl   $0xc011972c,0xc(%esp)$/;"	l
c0112d5b	obj/kernel.asm	/^c0112d5b:	c0 $/;"	l
c0112d5c	obj/kernel.asm	/^c0112d5c:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0112d63	obj/kernel.asm	/^c0112d63:	c0 $/;"	l
c0112d64	obj/kernel.asm	/^c0112d64:	c7 44 24 04 64 01 00 	movl   $0x164,0x4(%esp)$/;"	l
c0112d6b	obj/kernel.asm	/^c0112d6b:	00 $/;"	l
c0112d6c	obj/kernel.asm	/^c0112d6c:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112d73	obj/kernel.asm	/^c0112d73:	e8 50 e1 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112d78	obj/kernel.asm	/^c0112d78:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112d7b	obj/kernel.asm	/^c0112d7b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112d7e	obj/kernel.asm	/^c0112d7e:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0112d81	obj/kernel.asm	/^c0112d81:	0f 94 c0             	sete   %al$/;"	l
c0112d84	obj/kernel.asm	/^c0112d84:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0112d87	obj/kernel.asm	/^c0112d87:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112d8a	obj/kernel.asm	/^c0112d8a:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112d8d	obj/kernel.asm	/^c0112d8d:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0112d91	obj/kernel.asm	/^c0112d91:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112d94	obj/kernel.asm	/^c0112d94:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112d98	obj/kernel.asm	/^c0112d98:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112d9b	obj/kernel.asm	/^c0112d9b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112d9f	obj/kernel.asm	/^c0112d9f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112da2	obj/kernel.asm	/^c0112da2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112da6	obj/kernel.asm	/^c0112da6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112da9	obj/kernel.asm	/^c0112da9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112dac	obj/kernel.asm	/^c0112dac:	e8 7a fc ff ff       	call   c0112a2b <sfs_bmap_get_nolock>$/;"	l
c0112db1	obj/kernel.asm	/^c0112db1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112db4	obj/kernel.asm	/^c0112db4:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112db8	obj/kernel.asm	/^c0112db8:	74 05                	je     c0112dbf <sfs_bmap_load_nolock+0x84>$/;"	l
c0112dba	obj/kernel.asm	/^c0112dba:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112dbd	obj/kernel.asm	/^c0112dbd:	eb 62                	jmp    c0112e21 <sfs_bmap_load_nolock+0xe6>$/;"	l
c0112dbf	obj/kernel.asm	/^c0112dbf:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112dc2	obj/kernel.asm	/^c0112dc2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112dc6	obj/kernel.asm	/^c0112dc6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112dc9	obj/kernel.asm	/^c0112dc9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112dcc	obj/kernel.asm	/^c0112dcc:	e8 43 f6 ff ff       	call   c0112414 <sfs_block_inuse>$/;"	l
c0112dd1	obj/kernel.asm	/^c0112dd1:	85 c0                	test   %eax,%eax$/;"	l
c0112dd3	obj/kernel.asm	/^c0112dd3:	75 24                	jne    c0112df9 <sfs_bmap_load_nolock+0xbe>$/;"	l
c0112dd5	obj/kernel.asm	/^c0112dd5:	c7 44 24 0c 15 96 11 	movl   $0xc0119615,0xc(%esp)$/;"	l
c0112ddc	obj/kernel.asm	/^c0112ddc:	c0 $/;"	l
c0112ddd	obj/kernel.asm	/^c0112ddd:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0112de4	obj/kernel.asm	/^c0112de4:	c0 $/;"	l
c0112de5	obj/kernel.asm	/^c0112de5:	c7 44 24 04 6b 01 00 	movl   $0x16b,0x4(%esp)$/;"	l
c0112dec	obj/kernel.asm	/^c0112dec:	00 $/;"	l
c0112ded	obj/kernel.asm	/^c0112ded:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112df4	obj/kernel.asm	/^c0112df4:	e8 cf e0 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112df9	obj/kernel.asm	/^c0112df9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112dfd	obj/kernel.asm	/^c0112dfd:	74 0f                	je     c0112e0e <sfs_bmap_load_nolock+0xd3>$/;"	l
c0112dff	obj/kernel.asm	/^c0112dff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112e02	obj/kernel.asm	/^c0112e02:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112e05	obj/kernel.asm	/^c0112e05:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0112e08	obj/kernel.asm	/^c0112e08:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112e0b	obj/kernel.asm	/^c0112e0b:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0112e0e	obj/kernel.asm	/^c0112e0e:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0112e12	obj/kernel.asm	/^c0112e12:	74 08                	je     c0112e1c <sfs_bmap_load_nolock+0xe1>$/;"	l
c0112e14	obj/kernel.asm	/^c0112e14:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0112e17	obj/kernel.asm	/^c0112e17:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0112e1a	obj/kernel.asm	/^c0112e1a:	89 10                	mov    %edx,(%eax)$/;"	l
c0112e1c	obj/kernel.asm	/^c0112e1c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112e21	obj/kernel.asm	/^c0112e21:	c9                   	leave  $/;"	l
c0112e22	obj/kernel.asm	/^c0112e22:	c3                   	ret    $/;"	l
c0112e23	obj/kernel.asm	/^c0112e23 <sfs_bmap_truncate_nolock>:$/;"	l
c0112e23	obj/kernel.asm	/^c0112e23:	55                   	push   %ebp$/;"	l
c0112e24	obj/kernel.asm	/^c0112e24:	89 e5                	mov    %esp,%ebp$/;"	l
c0112e26	obj/kernel.asm	/^c0112e26:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112e29	obj/kernel.asm	/^c0112e29:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112e2c	obj/kernel.asm	/^c0112e2c:	8b 00                	mov    (%eax),%eax$/;"	l
c0112e2e	obj/kernel.asm	/^c0112e2e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112e31	obj/kernel.asm	/^c0112e31:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112e34	obj/kernel.asm	/^c0112e34:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112e37	obj/kernel.asm	/^c0112e37:	85 c0                	test   %eax,%eax$/;"	l
c0112e39	obj/kernel.asm	/^c0112e39:	75 24                	jne    c0112e5f <sfs_bmap_truncate_nolock+0x3c>$/;"	l
c0112e3b	obj/kernel.asm	/^c0112e3b:	c7 44 24 0c 41 97 11 	movl   $0xc0119741,0xc(%esp)$/;"	l
c0112e42	obj/kernel.asm	/^c0112e42:	c0 $/;"	l
c0112e43	obj/kernel.asm	/^c0112e43:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0112e4a	obj/kernel.asm	/^c0112e4a:	c0 $/;"	l
c0112e4b	obj/kernel.asm	/^c0112e4b:	c7 44 24 04 7b 01 00 	movl   $0x17b,0x4(%esp)$/;"	l
c0112e52	obj/kernel.asm	/^c0112e52:	00 $/;"	l
c0112e53	obj/kernel.asm	/^c0112e53:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112e5a	obj/kernel.asm	/^c0112e5a:	e8 69 e0 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112e5f	obj/kernel.asm	/^c0112e5f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112e62	obj/kernel.asm	/^c0112e62:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112e65	obj/kernel.asm	/^c0112e65:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0112e68	obj/kernel.asm	/^c0112e68:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112e6c	obj/kernel.asm	/^c0112e6c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112e6f	obj/kernel.asm	/^c0112e6f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112e73	obj/kernel.asm	/^c0112e73:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112e76	obj/kernel.asm	/^c0112e76:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112e79	obj/kernel.asm	/^c0112e79:	e8 14 fe ff ff       	call   c0112c92 <sfs_bmap_free_nolock>$/;"	l
c0112e7e	obj/kernel.asm	/^c0112e7e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112e81	obj/kernel.asm	/^c0112e81:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112e85	obj/kernel.asm	/^c0112e85:	74 05                	je     c0112e8c <sfs_bmap_truncate_nolock+0x69>$/;"	l
c0112e87	obj/kernel.asm	/^c0112e87:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112e8a	obj/kernel.asm	/^c0112e8a:	eb 1e                	jmp    c0112eaa <sfs_bmap_truncate_nolock+0x87>$/;"	l
c0112e8c	obj/kernel.asm	/^c0112e8c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112e8f	obj/kernel.asm	/^c0112e8f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112e92	obj/kernel.asm	/^c0112e92:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0112e95	obj/kernel.asm	/^c0112e95:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112e98	obj/kernel.asm	/^c0112e98:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0112e9b	obj/kernel.asm	/^c0112e9b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112e9e	obj/kernel.asm	/^c0112e9e:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0112ea5	obj/kernel.asm	/^c0112ea5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112eaa	obj/kernel.asm	/^c0112eaa:	c9                   	leave  $/;"	l
c0112eab	obj/kernel.asm	/^c0112eab:	c3                   	ret    $/;"	l
c0112eac	obj/kernel.asm	/^c0112eac <sfs_dirent_read_nolock>:$/;"	l
c0112eac	obj/kernel.asm	/^c0112eac:	55                   	push   %ebp$/;"	l
c0112ead	obj/kernel.asm	/^c0112ead:	89 e5                	mov    %esp,%ebp$/;"	l
c0112eaf	obj/kernel.asm	/^c0112eaf:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112eb2	obj/kernel.asm	/^c0112eb2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112eb5	obj/kernel.asm	/^c0112eb5:	8b 00                	mov    (%eax),%eax$/;"	l
c0112eb7	obj/kernel.asm	/^c0112eb7:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0112ebb	obj/kernel.asm	/^c0112ebb:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c0112ebf	obj/kernel.asm	/^c0112ebf:	75 15                	jne    c0112ed6 <sfs_dirent_read_nolock+0x2a>$/;"	l
c0112ec1	obj/kernel.asm	/^c0112ec1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0112ec5	obj/kernel.asm	/^c0112ec5:	78 0f                	js     c0112ed6 <sfs_dirent_read_nolock+0x2a>$/;"	l
c0112ec7	obj/kernel.asm	/^c0112ec7:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0112eca	obj/kernel.asm	/^c0112eca:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112ecd	obj/kernel.asm	/^c0112ecd:	8b 00                	mov    (%eax),%eax$/;"	l
c0112ecf	obj/kernel.asm	/^c0112ecf:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112ed2	obj/kernel.asm	/^c0112ed2:	39 c2                	cmp    %eax,%edx$/;"	l
c0112ed4	obj/kernel.asm	/^c0112ed4:	72 24                	jb     c0112efa <sfs_dirent_read_nolock+0x4e>$/;"	l
c0112ed6	obj/kernel.asm	/^c0112ed6:	c7 44 24 0c 54 97 11 	movl   $0xc0119754,0xc(%esp)$/;"	l
c0112edd	obj/kernel.asm	/^c0112edd:	c0 $/;"	l
c0112ede	obj/kernel.asm	/^c0112ede:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0112ee5	obj/kernel.asm	/^c0112ee5:	c0 $/;"	l
c0112ee6	obj/kernel.asm	/^c0112ee6:	c7 44 24 04 8e 01 00 	movl   $0x18e,0x4(%esp)$/;"	l
c0112eed	obj/kernel.asm	/^c0112eed:	00 $/;"	l
c0112eee	obj/kernel.asm	/^c0112eee:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112ef5	obj/kernel.asm	/^c0112ef5:	e8 ce df fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112efa	obj/kernel.asm	/^c0112efa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112efd	obj/kernel.asm	/^c0112efd:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c0112f00	obj/kernel.asm	/^c0112f00:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0112f04	obj/kernel.asm	/^c0112f04:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112f08	obj/kernel.asm	/^c0112f08:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112f0b	obj/kernel.asm	/^c0112f0b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112f0f	obj/kernel.asm	/^c0112f0f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f12	obj/kernel.asm	/^c0112f12:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112f15	obj/kernel.asm	/^c0112f15:	e8 21 fe ff ff       	call   c0112d3b <sfs_bmap_load_nolock>$/;"	l
c0112f1a	obj/kernel.asm	/^c0112f1a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112f1d	obj/kernel.asm	/^c0112f1d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112f21	obj/kernel.asm	/^c0112f21:	74 08                	je     c0112f2b <sfs_dirent_read_nolock+0x7f>$/;"	l
c0112f23	obj/kernel.asm	/^c0112f23:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112f26	obj/kernel.asm	/^c0112f26:	e9 80 00 00 00       	jmp    c0112fab <sfs_dirent_read_nolock+0xff>$/;"	l
c0112f2b	obj/kernel.asm	/^c0112f2b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112f2e	obj/kernel.asm	/^c0112f2e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112f32	obj/kernel.asm	/^c0112f32:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f35	obj/kernel.asm	/^c0112f35:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112f38	obj/kernel.asm	/^c0112f38:	e8 d7 f4 ff ff       	call   c0112414 <sfs_block_inuse>$/;"	l
c0112f3d	obj/kernel.asm	/^c0112f3d:	85 c0                	test   %eax,%eax$/;"	l
c0112f3f	obj/kernel.asm	/^c0112f3f:	75 24                	jne    c0112f65 <sfs_dirent_read_nolock+0xb9>$/;"	l
c0112f41	obj/kernel.asm	/^c0112f41:	c7 44 24 0c 15 96 11 	movl   $0xc0119615,0xc(%esp)$/;"	l
c0112f48	obj/kernel.asm	/^c0112f48:	c0 $/;"	l
c0112f49	obj/kernel.asm	/^c0112f49:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0112f50	obj/kernel.asm	/^c0112f50:	c0 $/;"	l
c0112f51	obj/kernel.asm	/^c0112f51:	c7 44 24 04 95 01 00 	movl   $0x195,0x4(%esp)$/;"	l
c0112f58	obj/kernel.asm	/^c0112f58:	00 $/;"	l
c0112f59	obj/kernel.asm	/^c0112f59:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112f60	obj/kernel.asm	/^c0112f60:	e8 63 df fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112f65	obj/kernel.asm	/^c0112f65:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112f68	obj/kernel.asm	/^c0112f68:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0112f6f	obj/kernel.asm	/^c0112f6f:	00 $/;"	l
c0112f70	obj/kernel.asm	/^c0112f70:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112f74	obj/kernel.asm	/^c0112f74:	c7 44 24 08 04 01 00 	movl   $0x104,0x8(%esp)$/;"	l
c0112f7b	obj/kernel.asm	/^c0112f7b:	00 $/;"	l
c0112f7c	obj/kernel.asm	/^c0112f7c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0112f7f	obj/kernel.asm	/^c0112f7f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112f83	obj/kernel.asm	/^c0112f83:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f86	obj/kernel.asm	/^c0112f86:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112f89	obj/kernel.asm	/^c0112f89:	e8 21 17 00 00       	call   c01146af <sfs_rbuf>$/;"	l
c0112f8e	obj/kernel.asm	/^c0112f8e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112f91	obj/kernel.asm	/^c0112f91:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112f95	obj/kernel.asm	/^c0112f95:	74 05                	je     c0112f9c <sfs_dirent_read_nolock+0xf0>$/;"	l
c0112f97	obj/kernel.asm	/^c0112f97:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112f9a	obj/kernel.asm	/^c0112f9a:	eb 0f                	jmp    c0112fab <sfs_dirent_read_nolock+0xff>$/;"	l
c0112f9c	obj/kernel.asm	/^c0112f9c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0112f9f	obj/kernel.asm	/^c0112f9f:	c6 80 03 01 00 00 00 	movb   $0x0,0x103(%eax)$/;"	l
c0112fa6	obj/kernel.asm	/^c0112fa6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112fab	obj/kernel.asm	/^c0112fab:	c9                   	leave  $/;"	l
c0112fac	obj/kernel.asm	/^c0112fac:	c3                   	ret    $/;"	l
c0112fad	obj/kernel.asm	/^c0112fad <sfs_dirent_search_nolock>:$/;"	l
c0112fad	obj/kernel.asm	/^c0112fad:	55                   	push   %ebp$/;"	l
c0112fae	obj/kernel.asm	/^c0112fae:	89 e5                	mov    %esp,%ebp$/;"	l
c0112fb0	obj/kernel.asm	/^c0112fb0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112fb3	obj/kernel.asm	/^c0112fb3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112fb6	obj/kernel.asm	/^c0112fb6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112fb9	obj/kernel.asm	/^c0112fb9:	e8 5c 22 00 00       	call   c011521a <strlen>$/;"	l
c0112fbe	obj/kernel.asm	/^c0112fbe:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c0112fc3	obj/kernel.asm	/^c0112fc3:	76 24                	jbe    c0112fe9 <sfs_dirent_search_nolock+0x3c>$/;"	l
c0112fc5	obj/kernel.asm	/^c0112fc5:	c7 44 24 0c a0 97 11 	movl   $0xc01197a0,0xc(%esp)$/;"	l
c0112fcc	obj/kernel.asm	/^c0112fcc:	c0 $/;"	l
c0112fcd	obj/kernel.asm	/^c0112fcd:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0112fd4	obj/kernel.asm	/^c0112fd4:	c0 $/;"	l
c0112fd5	obj/kernel.asm	/^c0112fd5:	c7 44 24 04 ba 01 00 	movl   $0x1ba,0x4(%esp)$/;"	l
c0112fdc	obj/kernel.asm	/^c0112fdc:	00 $/;"	l
c0112fdd	obj/kernel.asm	/^c0112fdd:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0112fe4	obj/kernel.asm	/^c0112fe4:	e8 df de fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112fe9	obj/kernel.asm	/^c0112fe9:	c7 04 24 04 01 00 00 	movl   $0x104,(%esp)$/;"	l
c0112ff0	obj/kernel.asm	/^c0112ff0:	e8 ea 1c ff ff       	call   c0104cdf <kmalloc>$/;"	l
c0112ff5	obj/kernel.asm	/^c0112ff5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112ff8	obj/kernel.asm	/^c0112ff8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112ffc	obj/kernel.asm	/^c0112ffc:	75 0a                	jne    c0113008 <sfs_dirent_search_nolock+0x5b>$/;"	l
c0112ffe	obj/kernel.asm	/^c0112ffe:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0113003	obj/kernel.asm	/^c0113003:	e9 cb 00 00 00       	jmp    c01130d3 <sfs_dirent_search_nolock+0x126>$/;"	l
c0113008	obj/kernel.asm	/^c0113008:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011300b	obj/kernel.asm	/^c011300b:	8b 00                	mov    (%eax),%eax$/;"	l
c011300d	obj/kernel.asm	/^c011300d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113010	obj/kernel.asm	/^c0113010:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113013	obj/kernel.asm	/^c0113013:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c0113017	obj/kernel.asm	/^c0113017:	74 08                	je     c0113021 <sfs_dirent_search_nolock+0x74>$/;"	l
c0113019	obj/kernel.asm	/^c0113019:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c011301c	obj/kernel.asm	/^c011301c:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c011301f	obj/kernel.asm	/^c011301f:	89 10                	mov    %edx,(%eax)$/;"	l
c0113021	obj/kernel.asm	/^c0113021:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0113028	obj/kernel.asm	/^c0113028:	e9 85 00 00 00       	jmp    c01130b2 <sfs_dirent_search_nolock+0x105>$/;"	l
c011302d	obj/kernel.asm	/^c011302d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113030	obj/kernel.asm	/^c0113030:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113034	obj/kernel.asm	/^c0113034:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113037	obj/kernel.asm	/^c0113037:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011303b	obj/kernel.asm	/^c011303b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011303e	obj/kernel.asm	/^c011303e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113042	obj/kernel.asm	/^c0113042:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113045	obj/kernel.asm	/^c0113045:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113048	obj/kernel.asm	/^c0113048:	e8 5f fe ff ff       	call   c0112eac <sfs_dirent_read_nolock>$/;"	l
c011304d	obj/kernel.asm	/^c011304d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113050	obj/kernel.asm	/^c0113050:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113054	obj/kernel.asm	/^c0113054:	74 02                	je     c0113058 <sfs_dirent_search_nolock+0xab>$/;"	l
c0113056	obj/kernel.asm	/^c0113056:	eb 6d                	jmp    c01130c5 <sfs_dirent_search_nolock+0x118>$/;"	l
c0113058	obj/kernel.asm	/^c0113058:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011305b	obj/kernel.asm	/^c011305b:	8b 00                	mov    (%eax),%eax$/;"	l
c011305d	obj/kernel.asm	/^c011305d:	85 c0                	test   %eax,%eax$/;"	l
c011305f	obj/kernel.asm	/^c011305f:	75 12                	jne    c0113073 <sfs_dirent_search_nolock+0xc6>$/;"	l
c0113061	obj/kernel.asm	/^c0113061:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c0113065	obj/kernel.asm	/^c0113065:	74 0a                	je     c0113071 <sfs_dirent_search_nolock+0xc4>$/;"	l
c0113067	obj/kernel.asm	/^c0113067:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c011306a	obj/kernel.asm	/^c011306a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c011306d	obj/kernel.asm	/^c011306d:	89 10                	mov    %edx,(%eax)$/;"	l
c011306f	obj/kernel.asm	/^c011306f:	eb 3d                	jmp    c01130ae <sfs_dirent_search_nolock+0x101>$/;"	l
c0113071	obj/kernel.asm	/^c0113071:	eb 3b                	jmp    c01130ae <sfs_dirent_search_nolock+0x101>$/;"	l
c0113073	obj/kernel.asm	/^c0113073:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113076	obj/kernel.asm	/^c0113076:	83 c0 04             	add    $0x4,%eax$/;"	l
c0113079	obj/kernel.asm	/^c0113079:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011307d	obj/kernel.asm	/^c011307d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0113080	obj/kernel.asm	/^c0113080:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113083	obj/kernel.asm	/^c0113083:	e8 8a 22 00 00       	call   c0115312 <strcmp>$/;"	l
c0113088	obj/kernel.asm	/^c0113088:	85 c0                	test   %eax,%eax$/;"	l
c011308a	obj/kernel.asm	/^c011308a:	75 22                	jne    c01130ae <sfs_dirent_search_nolock+0x101>$/;"	l
c011308c	obj/kernel.asm	/^c011308c:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0113090	obj/kernel.asm	/^c0113090:	74 08                	je     c011309a <sfs_dirent_search_nolock+0xed>$/;"	l
c0113092	obj/kernel.asm	/^c0113092:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0113095	obj/kernel.asm	/^c0113095:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0113098	obj/kernel.asm	/^c0113098:	89 10                	mov    %edx,(%eax)$/;"	l
c011309a	obj/kernel.asm	/^c011309a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c011309e	obj/kernel.asm	/^c011309e:	74 0c                	je     c01130ac <sfs_dirent_search_nolock+0xff>$/;"	l
c01130a0	obj/kernel.asm	/^c01130a0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01130a3	obj/kernel.asm	/^c01130a3:	8b 10                	mov    (%eax),%edx$/;"	l
c01130a5	obj/kernel.asm	/^c01130a5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01130a8	obj/kernel.asm	/^c01130a8:	89 10                	mov    %edx,(%eax)$/;"	l
c01130aa	obj/kernel.asm	/^c01130aa:	eb 19                	jmp    c01130c5 <sfs_dirent_search_nolock+0x118>$/;"	l
c01130ac	obj/kernel.asm	/^c01130ac:	eb 17                	jmp    c01130c5 <sfs_dirent_search_nolock+0x118>$/;"	l
c01130ae	obj/kernel.asm	/^c01130ae:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c01130b2	obj/kernel.asm	/^c01130b2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01130b5	obj/kernel.asm	/^c01130b5:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c01130b8	obj/kernel.asm	/^c01130b8:	0f 8c 6f ff ff ff    	jl     c011302d <sfs_dirent_search_nolock+0x80>$/;"	l
c01130be	obj/kernel.asm	/^c01130be:	c7 45 f4 f0 ff ff ff 	movl   $0xfffffff0,-0xc(%ebp)$/;"	l
c01130c5	obj/kernel.asm	/^c01130c5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01130c8	obj/kernel.asm	/^c01130c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01130cb	obj/kernel.asm	/^c01130cb:	e8 2a 1c ff ff       	call   c0104cfa <kfree>$/;"	l
c01130d0	obj/kernel.asm	/^c01130d0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01130d3	obj/kernel.asm	/^c01130d3:	c9                   	leave  $/;"	l
c01130d4	obj/kernel.asm	/^c01130d4:	c3                   	ret    $/;"	l
c01130d5	obj/kernel.asm	/^c01130d5 <sfs_dirent_findino_nolock>:$/;"	l
c01130d5	obj/kernel.asm	/^c01130d5:	55                   	push   %ebp$/;"	l
c01130d6	obj/kernel.asm	/^c01130d6:	89 e5                	mov    %esp,%ebp$/;"	l
c01130d8	obj/kernel.asm	/^c01130d8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01130db	obj/kernel.asm	/^c01130db:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01130de	obj/kernel.asm	/^c01130de:	8b 00                	mov    (%eax),%eax$/;"	l
c01130e0	obj/kernel.asm	/^c01130e0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01130e3	obj/kernel.asm	/^c01130e3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01130e6	obj/kernel.asm	/^c01130e6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01130ed	obj/kernel.asm	/^c01130ed:	eb 43                	jmp    c0113132 <sfs_dirent_findino_nolock+0x5d>$/;"	l
c01130ef	obj/kernel.asm	/^c01130ef:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01130f2	obj/kernel.asm	/^c01130f2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01130f6	obj/kernel.asm	/^c01130f6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01130f9	obj/kernel.asm	/^c01130f9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01130fd	obj/kernel.asm	/^c01130fd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113100	obj/kernel.asm	/^c0113100:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113104	obj/kernel.asm	/^c0113104:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113107	obj/kernel.asm	/^c0113107:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011310a	obj/kernel.asm	/^c011310a:	e8 9d fd ff ff       	call   c0112eac <sfs_dirent_read_nolock>$/;"	l
c011310f	obj/kernel.asm	/^c011310f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113112	obj/kernel.asm	/^c0113112:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0113116	obj/kernel.asm	/^c0113116:	74 05                	je     c011311d <sfs_dirent_findino_nolock+0x48>$/;"	l
c0113118	obj/kernel.asm	/^c0113118:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011311b	obj/kernel.asm	/^c011311b:	eb 22                	jmp    c011313f <sfs_dirent_findino_nolock+0x6a>$/;"	l
c011311d	obj/kernel.asm	/^c011311d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113120	obj/kernel.asm	/^c0113120:	8b 00                	mov    (%eax),%eax$/;"	l
c0113122	obj/kernel.asm	/^c0113122:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0113125	obj/kernel.asm	/^c0113125:	75 07                	jne    c011312e <sfs_dirent_findino_nolock+0x59>$/;"	l
c0113127	obj/kernel.asm	/^c0113127:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011312c	obj/kernel.asm	/^c011312c:	eb 11                	jmp    c011313f <sfs_dirent_findino_nolock+0x6a>$/;"	l
c011312e	obj/kernel.asm	/^c011312e:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0113132	obj/kernel.asm	/^c0113132:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113135	obj/kernel.asm	/^c0113135:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0113138	obj/kernel.asm	/^c0113138:	7c b5                	jl     c01130ef <sfs_dirent_findino_nolock+0x1a>$/;"	l
c011313a	obj/kernel.asm	/^c011313a:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c011313f	obj/kernel.asm	/^c011313f:	c9                   	leave  $/;"	l
c0113140	obj/kernel.asm	/^c0113140:	c3                   	ret    $/;"	l
c0113141	obj/kernel.asm	/^c0113141 <sfs_lookup_once>:$/;"	l
c0113141	obj/kernel.asm	/^c0113141:	55                   	push   %ebp$/;"	l
c0113142	obj/kernel.asm	/^c0113142:	89 e5                	mov    %esp,%ebp$/;"	l
c0113144	obj/kernel.asm	/^c0113144:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0113147	obj/kernel.asm	/^c0113147:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011314a	obj/kernel.asm	/^c011314a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011314d	obj/kernel.asm	/^c011314d:	e8 f4 f0 ff ff       	call   c0112246 <lock_sin>$/;"	l
c0113152	obj/kernel.asm	/^c0113152:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)$/;"	l
c0113159	obj/kernel.asm	/^c0113159:	00 $/;"	l
c011315a	obj/kernel.asm	/^c011315a:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c011315d	obj/kernel.asm	/^c011315d:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0113161	obj/kernel.asm	/^c0113161:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0113164	obj/kernel.asm	/^c0113164:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113168	obj/kernel.asm	/^c0113168:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011316b	obj/kernel.asm	/^c011316b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011316f	obj/kernel.asm	/^c011316f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113172	obj/kernel.asm	/^c0113172:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113176	obj/kernel.asm	/^c0113176:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113179	obj/kernel.asm	/^c0113179:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011317c	obj/kernel.asm	/^c011317c:	e8 2c fe ff ff       	call   c0112fad <sfs_dirent_search_nolock>$/;"	l
c0113181	obj/kernel.asm	/^c0113181:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113184	obj/kernel.asm	/^c0113184:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113187	obj/kernel.asm	/^c0113187:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011318a	obj/kernel.asm	/^c011318a:	e8 cd f0 ff ff       	call   c011225c <unlock_sin>$/;"	l
c011318f	obj/kernel.asm	/^c011318f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113193	obj/kernel.asm	/^c0113193:	75 1c                	jne    c01131b1 <sfs_lookup_once+0x70>$/;"	l
c0113195	obj/kernel.asm	/^c0113195:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113198	obj/kernel.asm	/^c0113198:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011319c	obj/kernel.asm	/^c011319c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c011319f	obj/kernel.asm	/^c011319f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01131a3	obj/kernel.asm	/^c01131a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01131a6	obj/kernel.asm	/^c01131a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01131a9	obj/kernel.asm	/^c01131a9:	e8 62 f5 ff ff       	call   c0112710 <sfs_load_inode>$/;"	l
c01131ae	obj/kernel.asm	/^c01131ae:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01131b1	obj/kernel.asm	/^c01131b1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01131b4	obj/kernel.asm	/^c01131b4:	c9                   	leave  $/;"	l
c01131b5	obj/kernel.asm	/^c01131b5:	c3                   	ret    $/;"	l
c01131b6	obj/kernel.asm	/^c01131b6 <sfs_opendir>:$/;"	l
c01131b6	obj/kernel.asm	/^c01131b6:	55                   	push   %ebp$/;"	l
c01131b7	obj/kernel.asm	/^c01131b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01131b9	obj/kernel.asm	/^c01131b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01131bc	obj/kernel.asm	/^c01131bc:	83 e0 03             	and    $0x3,%eax$/;"	l
c01131bf	obj/kernel.asm	/^c01131bf:	85 c0                	test   %eax,%eax$/;"	l
c01131c1	obj/kernel.asm	/^c01131c1:	74 07                	je     c01131ca <sfs_opendir+0x14>$/;"	l
c01131c3	obj/kernel.asm	/^c01131c3:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
c01131c8	obj/kernel.asm	/^c01131c8:	eb 17                	jmp    c01131e1 <sfs_opendir+0x2b>$/;"	l
c01131ca	obj/kernel.asm	/^c01131ca:	90                   	nop$/;"	l
c01131cb	obj/kernel.asm	/^c01131cb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01131ce	obj/kernel.asm	/^c01131ce:	83 e0 20             	and    $0x20,%eax$/;"	l
c01131d1	obj/kernel.asm	/^c01131d1:	85 c0                	test   %eax,%eax$/;"	l
c01131d3	obj/kernel.asm	/^c01131d3:	74 07                	je     c01131dc <sfs_opendir+0x26>$/;"	l
c01131d5	obj/kernel.asm	/^c01131d5:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
c01131da	obj/kernel.asm	/^c01131da:	eb 05                	jmp    c01131e1 <sfs_opendir+0x2b>$/;"	l
c01131dc	obj/kernel.asm	/^c01131dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01131e1	obj/kernel.asm	/^c01131e1:	5d                   	pop    %ebp$/;"	l
c01131e2	obj/kernel.asm	/^c01131e2:	c3                   	ret    $/;"	l
c01131e3	obj/kernel.asm	/^c01131e3 <sfs_openfile>:$/;"	l
c01131e3	obj/kernel.asm	/^c01131e3:	55                   	push   %ebp$/;"	l
c01131e4	obj/kernel.asm	/^c01131e4:	89 e5                	mov    %esp,%ebp$/;"	l
c01131e6	obj/kernel.asm	/^c01131e6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01131eb	obj/kernel.asm	/^c01131eb:	5d                   	pop    %ebp$/;"	l
c01131ec	obj/kernel.asm	/^c01131ec:	c3                   	ret    $/;"	l
c01131ed	obj/kernel.asm	/^c01131ed <sfs_close>:$/;"	l
c01131ed	obj/kernel.asm	/^c01131ed:	55                   	push   %ebp$/;"	l
c01131ee	obj/kernel.asm	/^c01131ee:	89 e5                	mov    %esp,%ebp$/;"	l
c01131f0	obj/kernel.asm	/^c01131f0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01131f3	obj/kernel.asm	/^c01131f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01131f6	obj/kernel.asm	/^c01131f6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01131f9	obj/kernel.asm	/^c01131f9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01131fd	obj/kernel.asm	/^c01131fd:	74 17                	je     c0113216 <sfs_close+0x29>$/;"	l
c01131ff	obj/kernel.asm	/^c01131ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113202	obj/kernel.asm	/^c0113202:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113205	obj/kernel.asm	/^c0113205:	85 c0                	test   %eax,%eax$/;"	l
c0113207	obj/kernel.asm	/^c0113207:	74 0d                	je     c0113216 <sfs_close+0x29>$/;"	l
c0113209	obj/kernel.asm	/^c0113209:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011320c	obj/kernel.asm	/^c011320c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011320f	obj/kernel.asm	/^c011320f:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0113212	obj/kernel.asm	/^c0113212:	85 c0                	test   %eax,%eax$/;"	l
c0113214	obj/kernel.asm	/^c0113214:	75 24                	jne    c011323a <sfs_close+0x4d>$/;"	l
c0113216	obj/kernel.asm	/^c0113216:	c7 44 24 0c c4 97 11 	movl   $0xc01197c4,0xc(%esp)$/;"	l
c011321d	obj/kernel.asm	/^c011321d:	c0 $/;"	l
c011321e	obj/kernel.asm	/^c011321e:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0113225	obj/kernel.asm	/^c0113225:	c0 $/;"	l
c0113226	obj/kernel.asm	/^c0113226:	c7 44 24 04 1c 02 00 	movl   $0x21c,0x4(%esp)$/;"	l
c011322d	obj/kernel.asm	/^c011322d:	00 $/;"	l
c011322e	obj/kernel.asm	/^c011322e:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0113235	obj/kernel.asm	/^c0113235:	e8 8e dc fe ff       	call   c0100ec8 <__panic>$/;"	l
c011323a	obj/kernel.asm	/^c011323a:	c7 44 24 04 12 98 11 	movl   $0xc0119812,0x4(%esp)$/;"	l
c0113241	obj/kernel.asm	/^c0113241:	c0 $/;"	l
c0113242	obj/kernel.asm	/^c0113242:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113245	obj/kernel.asm	/^c0113245:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113248	obj/kernel.asm	/^c0113248:	e8 cb c0 ff ff       	call   c010f318 <inode_check>$/;"	l
c011324d	obj/kernel.asm	/^c011324d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113250	obj/kernel.asm	/^c0113250:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113253	obj/kernel.asm	/^c0113253:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0113256	obj/kernel.asm	/^c0113256:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113259	obj/kernel.asm	/^c0113259:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011325c	obj/kernel.asm	/^c011325c:	ff d0                	call   *%eax$/;"	l
c011325e	obj/kernel.asm	/^c011325e:	c9                   	leave  $/;"	l
c011325f	obj/kernel.asm	/^c011325f:	c3                   	ret    $/;"	l
c0113260	obj/kernel.asm	/^c0113260 <sfs_io_nolock>:$/;"	l
c0113260	obj/kernel.asm	/^c0113260:	55                   	push   %ebp$/;"	l
c0113261	obj/kernel.asm	/^c0113261:	89 e5                	mov    %esp,%ebp$/;"	l
c0113263	obj/kernel.asm	/^c0113263:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0113266	obj/kernel.asm	/^c0113266:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113269	obj/kernel.asm	/^c0113269:	8b 00                	mov    (%eax),%eax$/;"	l
c011326b	obj/kernel.asm	/^c011326b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c011326e	obj/kernel.asm	/^c011326e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113271	obj/kernel.asm	/^c0113271:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0113275	obj/kernel.asm	/^c0113275:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c0113279	obj/kernel.asm	/^c0113279:	75 24                	jne    c011329f <sfs_io_nolock+0x3f>$/;"	l
c011327b	obj/kernel.asm	/^c011327b:	c7 44 24 0c 18 98 11 	movl   $0xc0119818,0xc(%esp)$/;"	l
c0113282	obj/kernel.asm	/^c0113282:	c0 $/;"	l
c0113283	obj/kernel.asm	/^c0113283:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c011328a	obj/kernel.asm	/^c011328a:	c0 $/;"	l
c011328b	obj/kernel.asm	/^c011328b:	c7 44 24 04 2b 02 00 	movl   $0x22b,0x4(%esp)$/;"	l
c0113292	obj/kernel.asm	/^c0113292:	00 $/;"	l
c0113293	obj/kernel.asm	/^c0113293:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c011329a	obj/kernel.asm	/^c011329a:	e8 29 dc fe ff       	call   c0100ec8 <__panic>$/;"	l
c011329f	obj/kernel.asm	/^c011329f:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01132a2	obj/kernel.asm	/^c01132a2:	8b 10                	mov    (%eax),%edx$/;"	l
c01132a4	obj/kernel.asm	/^c01132a4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01132a7	obj/kernel.asm	/^c01132a7:	01 d0                	add    %edx,%eax$/;"	l
c01132a9	obj/kernel.asm	/^c01132a9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01132ac	obj/kernel.asm	/^c01132ac:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01132af	obj/kernel.asm	/^c01132af:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01132b5	obj/kernel.asm	/^c01132b5:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01132b9	obj/kernel.asm	/^c01132b9:	78 12                	js     c01132cd <sfs_io_nolock+0x6d>$/;"	l
c01132bb	obj/kernel.asm	/^c01132bb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01132be	obj/kernel.asm	/^c01132be:	3d ff ff ff 07       	cmp    $0x7ffffff,%eax$/;"	l
c01132c3	obj/kernel.asm	/^c01132c3:	77 08                	ja     c01132cd <sfs_io_nolock+0x6d>$/;"	l
c01132c5	obj/kernel.asm	/^c01132c5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01132c8	obj/kernel.asm	/^c01132c8:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01132cb	obj/kernel.asm	/^c01132cb:	7e 0a                	jle    c01132d7 <sfs_io_nolock+0x77>$/;"	l
c01132cd	obj/kernel.asm	/^c01132cd:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01132d2	obj/kernel.asm	/^c01132d2:	e9 a0 02 00 00       	jmp    c0113577 <sfs_io_nolock+0x317>$/;"	l
c01132d7	obj/kernel.asm	/^c01132d7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01132da	obj/kernel.asm	/^c01132da:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01132dd	obj/kernel.asm	/^c01132dd:	75 0a                	jne    c01132e9 <sfs_io_nolock+0x89>$/;"	l
c01132df	obj/kernel.asm	/^c01132df:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01132e4	obj/kernel.asm	/^c01132e4:	e9 8e 02 00 00       	jmp    c0113577 <sfs_io_nolock+0x317>$/;"	l
c01132e9	obj/kernel.asm	/^c01132e9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01132ec	obj/kernel.asm	/^c01132ec:	3d 00 00 00 08       	cmp    $0x8000000,%eax$/;"	l
c01132f1	obj/kernel.asm	/^c01132f1:	76 07                	jbe    c01132fa <sfs_io_nolock+0x9a>$/;"	l
c01132f3	obj/kernel.asm	/^c01132f3:	c7 45 f4 00 00 00 08 	movl   $0x8000000,-0xc(%ebp)$/;"	l
c01132fa	obj/kernel.asm	/^c01132fa:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c01132fe	obj/kernel.asm	/^c01132fe:	75 2a                	jne    c011332a <sfs_io_nolock+0xca>$/;"	l
c0113300	obj/kernel.asm	/^c0113300:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0113303	obj/kernel.asm	/^c0113303:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113306	obj/kernel.asm	/^c0113306:	8b 00                	mov    (%eax),%eax$/;"	l
c0113308	obj/kernel.asm	/^c0113308:	39 c2                	cmp    %eax,%edx$/;"	l
c011330a	obj/kernel.asm	/^c011330a:	72 0a                	jb     c0113316 <sfs_io_nolock+0xb6>$/;"	l
c011330c	obj/kernel.asm	/^c011330c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113311	obj/kernel.asm	/^c0113311:	e9 61 02 00 00       	jmp    c0113577 <sfs_io_nolock+0x317>$/;"	l
c0113316	obj/kernel.asm	/^c0113316:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0113319	obj/kernel.asm	/^c0113319:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011331c	obj/kernel.asm	/^c011331c:	8b 00                	mov    (%eax),%eax$/;"	l
c011331e	obj/kernel.asm	/^c011331e:	39 c2                	cmp    %eax,%edx$/;"	l
c0113320	obj/kernel.asm	/^c0113320:	76 08                	jbe    c011332a <sfs_io_nolock+0xca>$/;"	l
c0113322	obj/kernel.asm	/^c0113322:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113325	obj/kernel.asm	/^c0113325:	8b 00                	mov    (%eax),%eax$/;"	l
c0113327	obj/kernel.asm	/^c0113327:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011332a	obj/kernel.asm	/^c011332a:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c011332e	obj/kernel.asm	/^c011332e:	74 10                	je     c0113340 <sfs_io_nolock+0xe0>$/;"	l
c0113330	obj/kernel.asm	/^c0113330:	c7 45 f0 68 47 11 c0 	movl   $0xc0114768,-0x10(%ebp)$/;"	l
c0113337	obj/kernel.asm	/^c0113337:	c7 45 ec 7f 46 11 c0 	movl   $0xc011467f,-0x14(%ebp)$/;"	l
c011333e	obj/kernel.asm	/^c011333e:	eb 0e                	jmp    c011334e <sfs_io_nolock+0xee>$/;"	l
c0113340	obj/kernel.asm	/^c0113340:	c7 45 f0 af 46 11 c0 	movl   $0xc01146af,-0x10(%ebp)$/;"	l
c0113347	obj/kernel.asm	/^c0113347:	c7 45 ec 4f 46 11 c0 	movl   $0xc011464f,-0x14(%ebp)$/;"	l
c011334e	obj/kernel.asm	/^c011334e:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0113355	obj/kernel.asm	/^c0113355:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c011335c	obj/kernel.asm	/^c011335c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c011335f	obj/kernel.asm	/^c011335f:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c0113365	obj/kernel.asm	/^c0113365:	85 c0                	test   %eax,%eax$/;"	l
c0113367	obj/kernel.asm	/^c0113367:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c011336a	obj/kernel.asm	/^c011336a:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c011336d	obj/kernel.asm	/^c011336d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113370	obj/kernel.asm	/^c0113370:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113373	obj/kernel.asm	/^c0113373:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c0113379	obj/kernel.asm	/^c0113379:	85 c0                	test   %eax,%eax$/;"	l
c011337b	obj/kernel.asm	/^c011337b:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c011337e	obj/kernel.asm	/^c011337e:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c0113381	obj/kernel.asm	/^c0113381:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
c0113384	obj/kernel.asm	/^c0113384:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0113387	obj/kernel.asm	/^c0113387:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c011338a	obj/kernel.asm	/^c011338a:	99                   	cltd   $/;"	l
c011338b	obj/kernel.asm	/^c011338b:	c1 ea 14             	shr    $0x14,%edx$/;"	l
c011338e	obj/kernel.asm	/^c011338e:	01 d0                	add    %edx,%eax$/;"	l
c0113390	obj/kernel.asm	/^c0113390:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0113395	obj/kernel.asm	/^c0113395:	29 d0                	sub    %edx,%eax$/;"	l
c0113397	obj/kernel.asm	/^c0113397:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c011339a	obj/kernel.asm	/^c011339a:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
c011339e	obj/kernel.asm	/^c011339e:	0f 84 9f 00 00 00    	je     c0113443 <sfs_io_nolock+0x1e3>$/;"	l
c01133a4	obj/kernel.asm	/^c01133a4:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01133a8	obj/kernel.asm	/^c01133a8:	74 0a                	je     c01133b4 <sfs_io_nolock+0x154>$/;"	l
c01133aa	obj/kernel.asm	/^c01133aa:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c01133af	obj/kernel.asm	/^c01133af:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c01133b2	obj/kernel.asm	/^c01133b2:	eb 0a                	jmp    c01133be <sfs_io_nolock+0x15e>$/;"	l
c01133b4	obj/kernel.asm	/^c01133b4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01133b7	obj/kernel.asm	/^c01133b7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01133ba	obj/kernel.asm	/^c01133ba:	29 c2                	sub    %eax,%edx$/;"	l
c01133bc	obj/kernel.asm	/^c01133bc:	89 d0                	mov    %edx,%eax$/;"	l
c01133be	obj/kernel.asm	/^c01133be:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01133c1	obj/kernel.asm	/^c01133c1:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c01133c4	obj/kernel.asm	/^c01133c4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01133c8	obj/kernel.asm	/^c01133c8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01133cb	obj/kernel.asm	/^c01133cb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01133cf	obj/kernel.asm	/^c01133cf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01133d2	obj/kernel.asm	/^c01133d2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01133d6	obj/kernel.asm	/^c01133d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01133d9	obj/kernel.asm	/^c01133d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01133dc	obj/kernel.asm	/^c01133dc:	e8 5a f9 ff ff       	call   c0112d3b <sfs_bmap_load_nolock>$/;"	l
c01133e1	obj/kernel.asm	/^c01133e1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01133e4	obj/kernel.asm	/^c01133e4:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01133e8	obj/kernel.asm	/^c01133e8:	74 05                	je     c01133ef <sfs_io_nolock+0x18f>$/;"	l
c01133ea	obj/kernel.asm	/^c01133ea:	e9 51 01 00 00       	jmp    c0113540 <sfs_io_nolock+0x2e0>$/;"	l
c01133ef	obj/kernel.asm	/^c01133ef:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01133f2	obj/kernel.asm	/^c01133f2:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01133f5	obj/kernel.asm	/^c01133f5:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c01133f9	obj/kernel.asm	/^c01133f9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01133fd	obj/kernel.asm	/^c01133fd:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113400	obj/kernel.asm	/^c0113400:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113404	obj/kernel.asm	/^c0113404:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0113407	obj/kernel.asm	/^c0113407:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011340b	obj/kernel.asm	/^c011340b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011340e	obj/kernel.asm	/^c011340e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113411	obj/kernel.asm	/^c0113411:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113414	obj/kernel.asm	/^c0113414:	ff d0                	call   *%eax$/;"	l
c0113416	obj/kernel.asm	/^c0113416:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113419	obj/kernel.asm	/^c0113419:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c011341d	obj/kernel.asm	/^c011341d:	74 05                	je     c0113424 <sfs_io_nolock+0x1c4>$/;"	l
c011341f	obj/kernel.asm	/^c011341f:	e9 1c 01 00 00       	jmp    c0113540 <sfs_io_nolock+0x2e0>$/;"	l
c0113424	obj/kernel.asm	/^c0113424:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113427	obj/kernel.asm	/^c0113427:	01 45 e4             	add    %eax,-0x1c(%ebp)$/;"	l
c011342a	obj/kernel.asm	/^c011342a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c011342e	obj/kernel.asm	/^c011342e:	75 05                	jne    c0113435 <sfs_io_nolock+0x1d5>$/;"	l
c0113430	obj/kernel.asm	/^c0113430:	e9 0b 01 00 00       	jmp    c0113540 <sfs_io_nolock+0x2e0>$/;"	l
c0113435	obj/kernel.asm	/^c0113435:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113438	obj/kernel.asm	/^c0113438:	01 45 10             	add    %eax,0x10(%ebp)$/;"	l
c011343b	obj/kernel.asm	/^c011343b:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c011343f	obj/kernel.asm	/^c011343f:	83 6d dc 01          	subl   $0x1,-0x24(%ebp)$/;"	l
c0113443	obj/kernel.asm	/^c0113443:	c7 45 d0 00 10 00 00 	movl   $0x1000,-0x30(%ebp)$/;"	l
c011344a	obj/kernel.asm	/^c011344a:	eb 71                	jmp    c01134bd <sfs_io_nolock+0x25d>$/;"	l
c011344c	obj/kernel.asm	/^c011344c:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c011344f	obj/kernel.asm	/^c011344f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113453	obj/kernel.asm	/^c0113453:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113456	obj/kernel.asm	/^c0113456:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011345a	obj/kernel.asm	/^c011345a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011345d	obj/kernel.asm	/^c011345d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113461	obj/kernel.asm	/^c0113461:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113464	obj/kernel.asm	/^c0113464:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113467	obj/kernel.asm	/^c0113467:	e8 cf f8 ff ff       	call   c0112d3b <sfs_bmap_load_nolock>$/;"	l
c011346c	obj/kernel.asm	/^c011346c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011346f	obj/kernel.asm	/^c011346f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113473	obj/kernel.asm	/^c0113473:	74 05                	je     c011347a <sfs_io_nolock+0x21a>$/;"	l
c0113475	obj/kernel.asm	/^c0113475:	e9 c6 00 00 00       	jmp    c0113540 <sfs_io_nolock+0x2e0>$/;"	l
c011347a	obj/kernel.asm	/^c011347a:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c011347d	obj/kernel.asm	/^c011347d:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0113484	obj/kernel.asm	/^c0113484:	00 $/;"	l
c0113485	obj/kernel.asm	/^c0113485:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113489	obj/kernel.asm	/^c0113489:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011348c	obj/kernel.asm	/^c011348c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113490	obj/kernel.asm	/^c0113490:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113493	obj/kernel.asm	/^c0113493:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113496	obj/kernel.asm	/^c0113496:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113499	obj/kernel.asm	/^c0113499:	ff d0                	call   *%eax$/;"	l
c011349b	obj/kernel.asm	/^c011349b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011349e	obj/kernel.asm	/^c011349e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01134a2	obj/kernel.asm	/^c01134a2:	74 05                	je     c01134a9 <sfs_io_nolock+0x249>$/;"	l
c01134a4	obj/kernel.asm	/^c01134a4:	e9 97 00 00 00       	jmp    c0113540 <sfs_io_nolock+0x2e0>$/;"	l
c01134a9	obj/kernel.asm	/^c01134a9:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01134ac	obj/kernel.asm	/^c01134ac:	01 45 e4             	add    %eax,-0x1c(%ebp)$/;"	l
c01134af	obj/kernel.asm	/^c01134af:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01134b2	obj/kernel.asm	/^c01134b2:	01 45 10             	add    %eax,0x10(%ebp)$/;"	l
c01134b5	obj/kernel.asm	/^c01134b5:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c01134b9	obj/kernel.asm	/^c01134b9:	83 6d dc 01          	subl   $0x1,-0x24(%ebp)$/;"	l
c01134bd	obj/kernel.asm	/^c01134bd:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01134c1	obj/kernel.asm	/^c01134c1:	75 89                	jne    c011344c <sfs_io_nolock+0x1ec>$/;"	l
c01134c3	obj/kernel.asm	/^c01134c3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01134c6	obj/kernel.asm	/^c01134c6:	99                   	cltd   $/;"	l
c01134c7	obj/kernel.asm	/^c01134c7:	c1 ea 14             	shr    $0x14,%edx$/;"	l
c01134ca	obj/kernel.asm	/^c01134ca:	01 d0                	add    %edx,%eax$/;"	l
c01134cc	obj/kernel.asm	/^c01134cc:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01134d1	obj/kernel.asm	/^c01134d1:	29 d0                	sub    %edx,%eax$/;"	l
c01134d3	obj/kernel.asm	/^c01134d3:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01134d6	obj/kernel.asm	/^c01134d6:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c01134da	obj/kernel.asm	/^c01134da:	74 64                	je     c0113540 <sfs_io_nolock+0x2e0>$/;"	l
c01134dc	obj/kernel.asm	/^c01134dc:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c01134df	obj/kernel.asm	/^c01134df:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01134e3	obj/kernel.asm	/^c01134e3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01134e6	obj/kernel.asm	/^c01134e6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01134ea	obj/kernel.asm	/^c01134ea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01134ed	obj/kernel.asm	/^c01134ed:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01134f1	obj/kernel.asm	/^c01134f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01134f4	obj/kernel.asm	/^c01134f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01134f7	obj/kernel.asm	/^c01134f7:	e8 3f f8 ff ff       	call   c0112d3b <sfs_bmap_load_nolock>$/;"	l
c01134fc	obj/kernel.asm	/^c01134fc:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01134ff	obj/kernel.asm	/^c01134ff:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113503	obj/kernel.asm	/^c0113503:	74 02                	je     c0113507 <sfs_io_nolock+0x2a7>$/;"	l
c0113505	obj/kernel.asm	/^c0113505:	eb 39                	jmp    c0113540 <sfs_io_nolock+0x2e0>$/;"	l
c0113507	obj/kernel.asm	/^c0113507:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c011350a	obj/kernel.asm	/^c011350a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0113511	obj/kernel.asm	/^c0113511:	00 $/;"	l
c0113512	obj/kernel.asm	/^c0113512:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113516	obj/kernel.asm	/^c0113516:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113519	obj/kernel.asm	/^c0113519:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011351d	obj/kernel.asm	/^c011351d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0113520	obj/kernel.asm	/^c0113520:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113524	obj/kernel.asm	/^c0113524:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113527	obj/kernel.asm	/^c0113527:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011352a	obj/kernel.asm	/^c011352a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011352d	obj/kernel.asm	/^c011352d:	ff d0                	call   *%eax$/;"	l
c011352f	obj/kernel.asm	/^c011352f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113532	obj/kernel.asm	/^c0113532:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113536	obj/kernel.asm	/^c0113536:	74 02                	je     c011353a <sfs_io_nolock+0x2da>$/;"	l
c0113538	obj/kernel.asm	/^c0113538:	eb 06                	jmp    c0113540 <sfs_io_nolock+0x2e0>$/;"	l
c011353a	obj/kernel.asm	/^c011353a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c011353d	obj/kernel.asm	/^c011353d:	01 45 e4             	add    %eax,-0x1c(%ebp)$/;"	l
c0113540	obj/kernel.asm	/^c0113540:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0113543	obj/kernel.asm	/^c0113543:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0113546	obj/kernel.asm	/^c0113546:	89 10                	mov    %edx,(%eax)$/;"	l
c0113548	obj/kernel.asm	/^c0113548:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c011354b	obj/kernel.asm	/^c011354b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011354e	obj/kernel.asm	/^c011354e:	01 c2                	add    %eax,%edx$/;"	l
c0113550	obj/kernel.asm	/^c0113550:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113553	obj/kernel.asm	/^c0113553:	8b 00                	mov    (%eax),%eax$/;"	l
c0113555	obj/kernel.asm	/^c0113555:	8b 00                	mov    (%eax),%eax$/;"	l
c0113557	obj/kernel.asm	/^c0113557:	39 c2                	cmp    %eax,%edx$/;"	l
c0113559	obj/kernel.asm	/^c0113559:	76 19                	jbe    c0113574 <sfs_io_nolock+0x314>$/;"	l
c011355b	obj/kernel.asm	/^c011355b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011355e	obj/kernel.asm	/^c011355e:	8b 00                	mov    (%eax),%eax$/;"	l
c0113560	obj/kernel.asm	/^c0113560:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
c0113563	obj/kernel.asm	/^c0113563:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0113566	obj/kernel.asm	/^c0113566:	01 ca                	add    %ecx,%edx$/;"	l
c0113568	obj/kernel.asm	/^c0113568:	89 10                	mov    %edx,(%eax)$/;"	l
c011356a	obj/kernel.asm	/^c011356a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011356d	obj/kernel.asm	/^c011356d:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0113574	obj/kernel.asm	/^c0113574:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113577	obj/kernel.asm	/^c0113577:	c9                   	leave  $/;"	l
c0113578	obj/kernel.asm	/^c0113578:	c3                   	ret    $/;"	l
c0113579	obj/kernel.asm	/^c0113579 <sfs_io>:$/;"	l
c0113579	obj/kernel.asm	/^c0113579:	55                   	push   %ebp$/;"	l
c011357a	obj/kernel.asm	/^c011357a:	89 e5                	mov    %esp,%ebp$/;"	l
c011357c	obj/kernel.asm	/^c011357c:	83 ec 48             	sub    $0x48,%esp$/;"	l
c011357f	obj/kernel.asm	/^c011357f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113582	obj/kernel.asm	/^c0113582:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0113585	obj/kernel.asm	/^c0113585:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113588	obj/kernel.asm	/^c0113588:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011358c	obj/kernel.asm	/^c011358c:	74 0a                	je     c0113598 <sfs_io+0x1f>$/;"	l
c011358e	obj/kernel.asm	/^c011358e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113591	obj/kernel.asm	/^c0113591:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0113594	obj/kernel.asm	/^c0113594:	85 c0                	test   %eax,%eax$/;"	l
c0113596	obj/kernel.asm	/^c0113596:	74 24                	je     c01135bc <sfs_io+0x43>$/;"	l
c0113598	obj/kernel.asm	/^c0113598:	c7 44 24 0c 34 98 11 	movl   $0xc0119834,0xc(%esp)$/;"	l
c011359f	obj/kernel.asm	/^c011359f:	c0 $/;"	l
c01135a0	obj/kernel.asm	/^c01135a0:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c01135a7	obj/kernel.asm	/^c01135a7:	c0 $/;"	l
c01135a8	obj/kernel.asm	/^c01135a8:	c7 44 24 04 8c 02 00 	movl   $0x28c,0x4(%esp)$/;"	l
c01135af	obj/kernel.asm	/^c01135af:	00 $/;"	l
c01135b0	obj/kernel.asm	/^c01135b0:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c01135b7	obj/kernel.asm	/^c01135b7:	e8 0c d9 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01135bc	obj/kernel.asm	/^c01135bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01135bf	obj/kernel.asm	/^c01135bf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01135c2	obj/kernel.asm	/^c01135c2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01135c5	obj/kernel.asm	/^c01135c5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01135c8	obj/kernel.asm	/^c01135c8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01135cc	obj/kernel.asm	/^c01135cc:	74 0d                	je     c01135db <sfs_io+0x62>$/;"	l
c01135ce	obj/kernel.asm	/^c01135ce:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01135d1	obj/kernel.asm	/^c01135d1:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01135d4	obj/kernel.asm	/^c01135d4:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01135d9	obj/kernel.asm	/^c01135d9:	74 24                	je     c01135ff <sfs_io+0x86>$/;"	l
c01135db	obj/kernel.asm	/^c01135db:	c7 44 24 0c 30 96 11 	movl   $0xc0119630,0xc(%esp)$/;"	l
c01135e2	obj/kernel.asm	/^c01135e2:	c0 $/;"	l
c01135e3	obj/kernel.asm	/^c01135e3:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c01135ea	obj/kernel.asm	/^c01135ea:	c0 $/;"	l
c01135eb	obj/kernel.asm	/^c01135eb:	c7 44 24 04 8d 02 00 	movl   $0x28d,0x4(%esp)$/;"	l
c01135f2	obj/kernel.asm	/^c01135f2:	00 $/;"	l
c01135f3	obj/kernel.asm	/^c01135f3:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c01135fa	obj/kernel.asm	/^c01135fa:	e8 c9 d8 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01135ff	obj/kernel.asm	/^c01135ff:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113602	obj/kernel.asm	/^c0113602:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113605	obj/kernel.asm	/^c0113605:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113608	obj/kernel.asm	/^c0113608:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011360b	obj/kernel.asm	/^c011360b:	e8 36 ec ff ff       	call   c0112246 <lock_sin>$/;"	l
c0113610	obj/kernel.asm	/^c0113610:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113613	obj/kernel.asm	/^c0113613:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113616	obj/kernel.asm	/^c0113616:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113619	obj/kernel.asm	/^c0113619:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011361c	obj/kernel.asm	/^c011361c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c011361f	obj/kernel.asm	/^c011361f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113622	obj/kernel.asm	/^c0113622:	8b 00                	mov    (%eax),%eax$/;"	l
c0113624	obj/kernel.asm	/^c0113624:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c0113627	obj/kernel.asm	/^c0113627:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
c011362b	obj/kernel.asm	/^c011362b:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
c011362e	obj/kernel.asm	/^c011362e:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0113632	obj/kernel.asm	/^c0113632:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0113636	obj/kernel.asm	/^c0113636:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011363a	obj/kernel.asm	/^c011363a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011363d	obj/kernel.asm	/^c011363d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113641	obj/kernel.asm	/^c0113641:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113644	obj/kernel.asm	/^c0113644:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113647	obj/kernel.asm	/^c0113647:	e8 14 fc ff ff       	call   c0113260 <sfs_io_nolock>$/;"	l
c011364c	obj/kernel.asm	/^c011364c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011364f	obj/kernel.asm	/^c011364f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113652	obj/kernel.asm	/^c0113652:	85 c0                	test   %eax,%eax$/;"	l
c0113654	obj/kernel.asm	/^c0113654:	74 12                	je     c0113668 <sfs_io+0xef>$/;"	l
c0113656	obj/kernel.asm	/^c0113656:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113659	obj/kernel.asm	/^c0113659:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011365d	obj/kernel.asm	/^c011365d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113660	obj/kernel.asm	/^c0113660:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113663	obj/kernel.asm	/^c0113663:	e8 21 7e ff ff       	call   c010b489 <iobuf_skip>$/;"	l
c0113668	obj/kernel.asm	/^c0113668:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011366b	obj/kernel.asm	/^c011366b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011366e	obj/kernel.asm	/^c011366e:	e8 e9 eb ff ff       	call   c011225c <unlock_sin>$/;"	l
c0113673	obj/kernel.asm	/^c0113673:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113676	obj/kernel.asm	/^c0113676:	c9                   	leave  $/;"	l
c0113677	obj/kernel.asm	/^c0113677:	c3                   	ret    $/;"	l
c0113678	obj/kernel.asm	/^c0113678 <sfs_read>:$/;"	l
c0113678	obj/kernel.asm	/^c0113678:	55                   	push   %ebp$/;"	l
c0113679	obj/kernel.asm	/^c0113679:	89 e5                	mov    %esp,%ebp$/;"	l
c011367b	obj/kernel.asm	/^c011367b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011367e	obj/kernel.asm	/^c011367e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0113685	obj/kernel.asm	/^c0113685:	00 $/;"	l
c0113686	obj/kernel.asm	/^c0113686:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113689	obj/kernel.asm	/^c0113689:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011368d	obj/kernel.asm	/^c011368d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113690	obj/kernel.asm	/^c0113690:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113693	obj/kernel.asm	/^c0113693:	e8 e1 fe ff ff       	call   c0113579 <sfs_io>$/;"	l
c0113698	obj/kernel.asm	/^c0113698:	c9                   	leave  $/;"	l
c0113699	obj/kernel.asm	/^c0113699:	c3                   	ret    $/;"	l
c011369a	obj/kernel.asm	/^c011369a <sfs_write>:$/;"	l
c011369a	obj/kernel.asm	/^c011369a:	55                   	push   %ebp$/;"	l
c011369b	obj/kernel.asm	/^c011369b:	89 e5                	mov    %esp,%ebp$/;"	l
c011369d	obj/kernel.asm	/^c011369d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01136a0	obj/kernel.asm	/^c01136a0:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c01136a7	obj/kernel.asm	/^c01136a7:	00 $/;"	l
c01136a8	obj/kernel.asm	/^c01136a8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01136ab	obj/kernel.asm	/^c01136ab:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01136af	obj/kernel.asm	/^c01136af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01136b2	obj/kernel.asm	/^c01136b2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01136b5	obj/kernel.asm	/^c01136b5:	e8 bf fe ff ff       	call   c0113579 <sfs_io>$/;"	l
c01136ba	obj/kernel.asm	/^c01136ba:	c9                   	leave  $/;"	l
c01136bb	obj/kernel.asm	/^c01136bb:	c3                   	ret    $/;"	l
c01136bc	obj/kernel.asm	/^c01136bc <sfs_fstat>:$/;"	l
c01136bc	obj/kernel.asm	/^c01136bc:	55                   	push   %ebp$/;"	l
c01136bd	obj/kernel.asm	/^c01136bd:	89 e5                	mov    %esp,%ebp$/;"	l
c01136bf	obj/kernel.asm	/^c01136bf:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01136c2	obj/kernel.asm	/^c01136c2:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c01136c9	obj/kernel.asm	/^c01136c9:	00 $/;"	l
c01136ca	obj/kernel.asm	/^c01136ca:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01136d1	obj/kernel.asm	/^c01136d1:	00 $/;"	l
c01136d2	obj/kernel.asm	/^c01136d2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01136d5	obj/kernel.asm	/^c01136d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01136d8	obj/kernel.asm	/^c01136d8:	e8 93 1e 00 00       	call   c0115570 <memset>$/;"	l
c01136dd	obj/kernel.asm	/^c01136dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01136e0	obj/kernel.asm	/^c01136e0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01136e3	obj/kernel.asm	/^c01136e3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01136e7	obj/kernel.asm	/^c01136e7:	74 17                	je     c0113700 <sfs_fstat+0x44>$/;"	l
c01136e9	obj/kernel.asm	/^c01136e9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01136ec	obj/kernel.asm	/^c01136ec:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01136ef	obj/kernel.asm	/^c01136ef:	85 c0                	test   %eax,%eax$/;"	l
c01136f1	obj/kernel.asm	/^c01136f1:	74 0d                	je     c0113700 <sfs_fstat+0x44>$/;"	l
c01136f3	obj/kernel.asm	/^c01136f3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01136f6	obj/kernel.asm	/^c01136f6:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01136f9	obj/kernel.asm	/^c01136f9:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c01136fc	obj/kernel.asm	/^c01136fc:	85 c0                	test   %eax,%eax$/;"	l
c01136fe	obj/kernel.asm	/^c01136fe:	75 24                	jne    c0113724 <sfs_fstat+0x68>$/;"	l
c0113700	obj/kernel.asm	/^c0113700:	c7 44 24 0c 60 98 11 	movl   $0xc0119860,0xc(%esp)$/;"	l
c0113707	obj/kernel.asm	/^c0113707:	c0 $/;"	l
c0113708	obj/kernel.asm	/^c0113708:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c011370f	obj/kernel.asm	/^c011370f:	c0 $/;"	l
c0113710	obj/kernel.asm	/^c0113710:	c7 44 24 04 ae 02 00 	movl   $0x2ae,0x4(%esp)$/;"	l
c0113717	obj/kernel.asm	/^c0113717:	00 $/;"	l
c0113718	obj/kernel.asm	/^c0113718:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c011371f	obj/kernel.asm	/^c011371f:	e8 a4 d7 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113724	obj/kernel.asm	/^c0113724:	c7 44 24 04 b0 98 11 	movl   $0xc01198b0,0x4(%esp)$/;"	l
c011372b	obj/kernel.asm	/^c011372b:	c0 $/;"	l
c011372c	obj/kernel.asm	/^c011372c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011372f	obj/kernel.asm	/^c011372f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113732	obj/kernel.asm	/^c0113732:	e8 e1 bb ff ff       	call   c010f318 <inode_check>$/;"	l
c0113737	obj/kernel.asm	/^c0113737:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011373a	obj/kernel.asm	/^c011373a:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011373d	obj/kernel.asm	/^c011373d:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c0113740	obj/kernel.asm	/^c0113740:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0113743	obj/kernel.asm	/^c0113743:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0113747	obj/kernel.asm	/^c0113747:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011374a	obj/kernel.asm	/^c011374a:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011374d	obj/kernel.asm	/^c011374d:	ff d0                	call   *%eax$/;"	l
c011374f	obj/kernel.asm	/^c011374f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113752	obj/kernel.asm	/^c0113752:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0113756	obj/kernel.asm	/^c0113756:	74 05                	je     c011375d <sfs_fstat+0xa1>$/;"	l
c0113758	obj/kernel.asm	/^c0113758:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011375b	obj/kernel.asm	/^c011375b:	eb 71                	jmp    c01137ce <sfs_fstat+0x112>$/;"	l
c011375d	obj/kernel.asm	/^c011375d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113760	obj/kernel.asm	/^c0113760:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113763	obj/kernel.asm	/^c0113763:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0113767	obj/kernel.asm	/^c0113767:	74 0d                	je     c0113776 <sfs_fstat+0xba>$/;"	l
c0113769	obj/kernel.asm	/^c0113769:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011376c	obj/kernel.asm	/^c011376c:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011376f	obj/kernel.asm	/^c011376f:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113774	obj/kernel.asm	/^c0113774:	74 24                	je     c011379a <sfs_fstat+0xde>$/;"	l
c0113776	obj/kernel.asm	/^c0113776:	c7 44 24 0c 30 96 11 	movl   $0xc0119630,0xc(%esp)$/;"	l
c011377d	obj/kernel.asm	/^c011377d:	c0 $/;"	l
c011377e	obj/kernel.asm	/^c011377e:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0113785	obj/kernel.asm	/^c0113785:	c0 $/;"	l
c0113786	obj/kernel.asm	/^c0113786:	c7 44 24 04 b1 02 00 	movl   $0x2b1,0x4(%esp)$/;"	l
c011378d	obj/kernel.asm	/^c011378d:	00 $/;"	l
c011378e	obj/kernel.asm	/^c011378e:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0113795	obj/kernel.asm	/^c0113795:	e8 2e d7 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011379a	obj/kernel.asm	/^c011379a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011379d	obj/kernel.asm	/^c011379d:	8b 00                	mov    (%eax),%eax$/;"	l
c011379f	obj/kernel.asm	/^c011379f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01137a2	obj/kernel.asm	/^c01137a2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01137a5	obj/kernel.asm	/^c01137a5:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c01137a9	obj/kernel.asm	/^c01137a9:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01137ac	obj/kernel.asm	/^c01137ac:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01137af	obj/kernel.asm	/^c01137af:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01137b2	obj/kernel.asm	/^c01137b2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01137b5	obj/kernel.asm	/^c01137b5:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01137b8	obj/kernel.asm	/^c01137b8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01137bb	obj/kernel.asm	/^c01137bb:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01137be	obj/kernel.asm	/^c01137be:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01137c1	obj/kernel.asm	/^c01137c1:	8b 10                	mov    (%eax),%edx$/;"	l
c01137c3	obj/kernel.asm	/^c01137c3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01137c6	obj/kernel.asm	/^c01137c6:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01137c9	obj/kernel.asm	/^c01137c9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01137ce	obj/kernel.asm	/^c01137ce:	c9                   	leave  $/;"	l
c01137cf	obj/kernel.asm	/^c01137cf:	c3                   	ret    $/;"	l
c01137d0	obj/kernel.asm	/^c01137d0 <sfs_fsync>:$/;"	l
c01137d0	obj/kernel.asm	/^c01137d0:	55                   	push   %ebp$/;"	l
c01137d1	obj/kernel.asm	/^c01137d1:	89 e5                	mov    %esp,%ebp$/;"	l
c01137d3	obj/kernel.asm	/^c01137d3:	83 ec 48             	sub    $0x48,%esp$/;"	l
c01137d6	obj/kernel.asm	/^c01137d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01137d9	obj/kernel.asm	/^c01137d9:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01137dc	obj/kernel.asm	/^c01137dc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01137df	obj/kernel.asm	/^c01137df:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01137e3	obj/kernel.asm	/^c01137e3:	74 0a                	je     c01137ef <sfs_fsync+0x1f>$/;"	l
c01137e5	obj/kernel.asm	/^c01137e5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01137e8	obj/kernel.asm	/^c01137e8:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01137eb	obj/kernel.asm	/^c01137eb:	85 c0                	test   %eax,%eax$/;"	l
c01137ed	obj/kernel.asm	/^c01137ed:	74 24                	je     c0113813 <sfs_fsync+0x43>$/;"	l
c01137ef	obj/kernel.asm	/^c01137ef:	c7 44 24 0c 34 98 11 	movl   $0xc0119834,0xc(%esp)$/;"	l
c01137f6	obj/kernel.asm	/^c01137f6:	c0 $/;"	l
c01137f7	obj/kernel.asm	/^c01137f7:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c01137fe	obj/kernel.asm	/^c01137fe:	c0 $/;"	l
c01137ff	obj/kernel.asm	/^c01137ff:	c7 44 24 04 bd 02 00 	movl   $0x2bd,0x4(%esp)$/;"	l
c0113806	obj/kernel.asm	/^c0113806:	00 $/;"	l
c0113807	obj/kernel.asm	/^c0113807:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c011380e	obj/kernel.asm	/^c011380e:	e8 b5 d6 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113813	obj/kernel.asm	/^c0113813:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113816	obj/kernel.asm	/^c0113816:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113819	obj/kernel.asm	/^c0113819:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011381c	obj/kernel.asm	/^c011381c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011381f	obj/kernel.asm	/^c011381f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113823	obj/kernel.asm	/^c0113823:	74 0d                	je     c0113832 <sfs_fsync+0x62>$/;"	l
c0113825	obj/kernel.asm	/^c0113825:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113828	obj/kernel.asm	/^c0113828:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011382b	obj/kernel.asm	/^c011382b:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113830	obj/kernel.asm	/^c0113830:	74 24                	je     c0113856 <sfs_fsync+0x86>$/;"	l
c0113832	obj/kernel.asm	/^c0113832:	c7 44 24 0c 30 96 11 	movl   $0xc0119630,0xc(%esp)$/;"	l
c0113839	obj/kernel.asm	/^c0113839:	c0 $/;"	l
c011383a	obj/kernel.asm	/^c011383a:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0113841	obj/kernel.asm	/^c0113841:	c0 $/;"	l
c0113842	obj/kernel.asm	/^c0113842:	c7 44 24 04 be 02 00 	movl   $0x2be,0x4(%esp)$/;"	l
c0113849	obj/kernel.asm	/^c0113849:	00 $/;"	l
c011384a	obj/kernel.asm	/^c011384a:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0113851	obj/kernel.asm	/^c0113851:	e8 72 d6 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113856	obj/kernel.asm	/^c0113856:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113859	obj/kernel.asm	/^c0113859:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011385c	obj/kernel.asm	/^c011385c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0113863	obj/kernel.asm	/^c0113863:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113866	obj/kernel.asm	/^c0113866:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113869	obj/kernel.asm	/^c0113869:	85 c0                	test   %eax,%eax$/;"	l
c011386b	obj/kernel.asm	/^c011386b:	74 6b                	je     c01138d8 <sfs_fsync+0x108>$/;"	l
c011386d	obj/kernel.asm	/^c011386d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113870	obj/kernel.asm	/^c0113870:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113873	obj/kernel.asm	/^c0113873:	e8 ce e9 ff ff       	call   c0112246 <lock_sin>$/;"	l
c0113878	obj/kernel.asm	/^c0113878:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011387b	obj/kernel.asm	/^c011387b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011387e	obj/kernel.asm	/^c011387e:	85 c0                	test   %eax,%eax$/;"	l
c0113880	obj/kernel.asm	/^c0113880:	74 4b                	je     c01138cd <sfs_fsync+0xfd>$/;"	l
c0113882	obj/kernel.asm	/^c0113882:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113885	obj/kernel.asm	/^c0113885:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c011388c	obj/kernel.asm	/^c011388c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011388f	obj/kernel.asm	/^c011388f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0113892	obj/kernel.asm	/^c0113892:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113895	obj/kernel.asm	/^c0113895:	8b 00                	mov    (%eax),%eax$/;"	l
c0113897	obj/kernel.asm	/^c0113897:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c011389e	obj/kernel.asm	/^c011389e:	00 $/;"	l
c011389f	obj/kernel.asm	/^c011389f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c01138a3	obj/kernel.asm	/^c01138a3:	c7 44 24 08 40 00 00 	movl   $0x40,0x8(%esp)$/;"	l
c01138aa	obj/kernel.asm	/^c01138aa:	00 $/;"	l
c01138ab	obj/kernel.asm	/^c01138ab:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01138af	obj/kernel.asm	/^c01138af:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01138b2	obj/kernel.asm	/^c01138b2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01138b5	obj/kernel.asm	/^c01138b5:	e8 ae 0e 00 00       	call   c0114768 <sfs_wbuf>$/;"	l
c01138ba	obj/kernel.asm	/^c01138ba:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01138bd	obj/kernel.asm	/^c01138bd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01138c1	obj/kernel.asm	/^c01138c1:	74 0a                	je     c01138cd <sfs_fsync+0xfd>$/;"	l
c01138c3	obj/kernel.asm	/^c01138c3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01138c6	obj/kernel.asm	/^c01138c6:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c01138cd	obj/kernel.asm	/^c01138cd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01138d0	obj/kernel.asm	/^c01138d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01138d3	obj/kernel.asm	/^c01138d3:	e8 84 e9 ff ff       	call   c011225c <unlock_sin>$/;"	l
c01138d8	obj/kernel.asm	/^c01138d8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01138db	obj/kernel.asm	/^c01138db:	c9                   	leave  $/;"	l
c01138dc	obj/kernel.asm	/^c01138dc:	c3                   	ret    $/;"	l
c01138dd	obj/kernel.asm	/^c01138dd <sfs_namefile>:$/;"	l
c01138dd	obj/kernel.asm	/^c01138dd:	55                   	push   %ebp$/;"	l
c01138de	obj/kernel.asm	/^c01138de:	89 e5                	mov    %esp,%ebp$/;"	l
c01138e0	obj/kernel.asm	/^c01138e0:	83 ec 58             	sub    $0x58,%esp$/;"	l
c01138e3	obj/kernel.asm	/^c01138e3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01138e6	obj/kernel.asm	/^c01138e6:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01138e9	obj/kernel.asm	/^c01138e9:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01138ec	obj/kernel.asm	/^c01138ec:	76 15                	jbe    c0113903 <sfs_namefile+0x26>$/;"	l
c01138ee	obj/kernel.asm	/^c01138ee:	c7 04 24 04 01 00 00 	movl   $0x104,(%esp)$/;"	l
c01138f5	obj/kernel.asm	/^c01138f5:	e8 e5 13 ff ff       	call   c0104cdf <kmalloc>$/;"	l
c01138fa	obj/kernel.asm	/^c01138fa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01138fd	obj/kernel.asm	/^c01138fd:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0113901	obj/kernel.asm	/^c0113901:	75 0a                	jne    c011390d <sfs_namefile+0x30>$/;"	l
c0113903	obj/kernel.asm	/^c0113903:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0113908	obj/kernel.asm	/^c0113908:	e9 bd 02 00 00       	jmp    c0113bca <sfs_namefile+0x2ed>$/;"	l
c011390d	obj/kernel.asm	/^c011390d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113910	obj/kernel.asm	/^c0113910:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0113913	obj/kernel.asm	/^c0113913:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113916	obj/kernel.asm	/^c0113916:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c011391a	obj/kernel.asm	/^c011391a:	74 0a                	je     c0113926 <sfs_namefile+0x49>$/;"	l
c011391c	obj/kernel.asm	/^c011391c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011391f	obj/kernel.asm	/^c011391f:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0113922	obj/kernel.asm	/^c0113922:	85 c0                	test   %eax,%eax$/;"	l
c0113924	obj/kernel.asm	/^c0113924:	74 24                	je     c011394a <sfs_namefile+0x6d>$/;"	l
c0113926	obj/kernel.asm	/^c0113926:	c7 44 24 0c 34 98 11 	movl   $0xc0119834,0xc(%esp)$/;"	l
c011392d	obj/kernel.asm	/^c011392d:	c0 $/;"	l
c011392e	obj/kernel.asm	/^c011392e:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0113935	obj/kernel.asm	/^c0113935:	c0 $/;"	l
c0113936	obj/kernel.asm	/^c0113936:	c7 44 24 04 da 02 00 	movl   $0x2da,0x4(%esp)$/;"	l
c011393d	obj/kernel.asm	/^c011393d:	00 $/;"	l
c011393e	obj/kernel.asm	/^c011393e:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0113945	obj/kernel.asm	/^c0113945:	e8 7e d5 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011394a	obj/kernel.asm	/^c011394a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011394d	obj/kernel.asm	/^c011394d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0113950	obj/kernel.asm	/^c0113950:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113953	obj/kernel.asm	/^c0113953:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0113956	obj/kernel.asm	/^c0113956:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c011395a	obj/kernel.asm	/^c011395a:	74 0d                	je     c0113969 <sfs_namefile+0x8c>$/;"	l
c011395c	obj/kernel.asm	/^c011395c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011395f	obj/kernel.asm	/^c011395f:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0113962	obj/kernel.asm	/^c0113962:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113967	obj/kernel.asm	/^c0113967:	74 24                	je     c011398d <sfs_namefile+0xb0>$/;"	l
c0113969	obj/kernel.asm	/^c0113969:	c7 44 24 0c 30 96 11 	movl   $0xc0119630,0xc(%esp)$/;"	l
c0113970	obj/kernel.asm	/^c0113970:	c0 $/;"	l
c0113971	obj/kernel.asm	/^c0113971:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0113978	obj/kernel.asm	/^c0113978:	c0 $/;"	l
c0113979	obj/kernel.asm	/^c0113979:	c7 44 24 04 db 02 00 	movl   $0x2db,0x4(%esp)$/;"	l
c0113980	obj/kernel.asm	/^c0113980:	00 $/;"	l
c0113981	obj/kernel.asm	/^c0113981:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0113988	obj/kernel.asm	/^c0113988:	e8 3b d5 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011398d	obj/kernel.asm	/^c011398d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113990	obj/kernel.asm	/^c0113990:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113993	obj/kernel.asm	/^c0113993:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113996	obj/kernel.asm	/^c0113996:	8b 10                	mov    (%eax),%edx$/;"	l
c0113998	obj/kernel.asm	/^c0113998:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011399b	obj/kernel.asm	/^c011399b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c011399e	obj/kernel.asm	/^c011399e:	01 d0                	add    %edx,%eax$/;"	l
c01139a0	obj/kernel.asm	/^c01139a0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01139a3	obj/kernel.asm	/^c01139a3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01139a6	obj/kernel.asm	/^c01139a6:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01139a9	obj/kernel.asm	/^c01139a9:	83 e8 02             	sub    $0x2,%eax$/;"	l
c01139ac	obj/kernel.asm	/^c01139ac:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01139af	obj/kernel.asm	/^c01139af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01139b2	obj/kernel.asm	/^c01139b2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01139b5	obj/kernel.asm	/^c01139b5:	e8 56 b7 ff ff       	call   c010f110 <inode_ref_inc>$/;"	l
c01139ba	obj/kernel.asm	/^c01139ba:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c01139c1	obj/kernel.asm	/^c01139c1:	00 $/;"	l
c01139c2	obj/kernel.asm	/^c01139c2:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c01139c5	obj/kernel.asm	/^c01139c5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01139c9	obj/kernel.asm	/^c01139c9:	c7 44 24 08 b8 98 11 	movl   $0xc01198b8,0x8(%esp)$/;"	l
c01139d0	obj/kernel.asm	/^c01139d0:	c0 $/;"	l
c01139d1	obj/kernel.asm	/^c01139d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01139d4	obj/kernel.asm	/^c01139d4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01139d8	obj/kernel.asm	/^c01139d8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01139db	obj/kernel.asm	/^c01139db:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01139de	obj/kernel.asm	/^c01139de:	e8 5e f7 ff ff       	call   c0113141 <sfs_lookup_once>$/;"	l
c01139e3	obj/kernel.asm	/^c01139e3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01139e6	obj/kernel.asm	/^c01139e6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01139ea	obj/kernel.asm	/^c01139ea:	74 05                	je     c01139f1 <sfs_namefile+0x114>$/;"	l
c01139ec	obj/kernel.asm	/^c01139ec:	e9 c0 01 00 00       	jmp    c0113bb1 <sfs_namefile+0x2d4>$/;"	l
c01139f1	obj/kernel.asm	/^c01139f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01139f4	obj/kernel.asm	/^c01139f4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01139f7	obj/kernel.asm	/^c01139f7:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01139fa	obj/kernel.asm	/^c01139fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01139fd	obj/kernel.asm	/^c01139fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113a00	obj/kernel.asm	/^c0113a00:	e8 25 b7 ff ff       	call   c010f12a <inode_ref_dec>$/;"	l
c0113a05	obj/kernel.asm	/^c0113a05:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0113a08	obj/kernel.asm	/^c0113a08:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c0113a0b	obj/kernel.asm	/^c0113a0b:	75 76                	jne    c0113a83 <sfs_namefile+0x1a6>$/;"	l
c0113a0d	obj/kernel.asm	/^c0113a0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113a10	obj/kernel.asm	/^c0113a10:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113a13	obj/kernel.asm	/^c0113a13:	e8 12 b7 ff ff       	call   c010f12a <inode_ref_dec>$/;"	l
c0113a18	obj/kernel.asm	/^c0113a18:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113a1b	obj/kernel.asm	/^c0113a1b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113a1e	obj/kernel.asm	/^c0113a1e:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c0113a21	obj/kernel.asm	/^c0113a21:	83 e8 02             	sub    $0x2,%eax$/;"	l
c0113a24	obj/kernel.asm	/^c0113a24:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0113a27	obj/kernel.asm	/^c0113a27:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113a2a	obj/kernel.asm	/^c0113a2a:	8b 00                	mov    (%eax),%eax$/;"	l
c0113a2c	obj/kernel.asm	/^c0113a2c:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0113a2f	obj/kernel.asm	/^c0113a2f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113a32	obj/kernel.asm	/^c0113a32:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113a36	obj/kernel.asm	/^c0113a36:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113a39	obj/kernel.asm	/^c0113a39:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113a3d	obj/kernel.asm	/^c0113a3d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0113a40	obj/kernel.asm	/^c0113a40:	e8 6a 1b 00 00       	call   c01155af <memmove>$/;"	l
c0113a45	obj/kernel.asm	/^c0113a45:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113a48	obj/kernel.asm	/^c0113a48:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113a4b	obj/kernel.asm	/^c0113a4b:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0113a4e	obj/kernel.asm	/^c0113a4e:	c6 00 2f             	movb   $0x2f,(%eax)$/;"	l
c0113a51	obj/kernel.asm	/^c0113a51:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113a54	obj/kernel.asm	/^c0113a54:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0113a57	obj/kernel.asm	/^c0113a57:	01 d0                	add    %edx,%eax$/;"	l
c0113a59	obj/kernel.asm	/^c0113a59:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0113a5c	obj/kernel.asm	/^c0113a5c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113a5f	obj/kernel.asm	/^c0113a5f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113a63	obj/kernel.asm	/^c0113a63:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113a66	obj/kernel.asm	/^c0113a66:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113a69	obj/kernel.asm	/^c0113a69:	e8 1b 7a ff ff       	call   c010b489 <iobuf_skip>$/;"	l
c0113a6e	obj/kernel.asm	/^c0113a6e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113a71	obj/kernel.asm	/^c0113a71:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113a74	obj/kernel.asm	/^c0113a74:	e8 81 12 ff ff       	call   c0104cfa <kfree>$/;"	l
c0113a79	obj/kernel.asm	/^c0113a79:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113a7e	obj/kernel.asm	/^c0113a7e:	e9 47 01 00 00       	jmp    c0113bca <sfs_namefile+0x2ed>$/;"	l
c0113a83	obj/kernel.asm	/^c0113a83:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0113a86	obj/kernel.asm	/^c0113a86:	89 45 08             	mov    %eax,0x8(%ebp)$/;"	l
c0113a89	obj/kernel.asm	/^c0113a89:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113a8c	obj/kernel.asm	/^c0113a8c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0113a8f	obj/kernel.asm	/^c0113a8f:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0113a93	obj/kernel.asm	/^c0113a93:	74 0d                	je     c0113aa2 <sfs_namefile+0x1c5>$/;"	l
c0113a95	obj/kernel.asm	/^c0113a95:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0113a98	obj/kernel.asm	/^c0113a98:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0113a9b	obj/kernel.asm	/^c0113a9b:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113aa0	obj/kernel.asm	/^c0113aa0:	74 24                	je     c0113ac6 <sfs_namefile+0x1e9>$/;"	l
c0113aa2	obj/kernel.asm	/^c0113aa2:	c7 44 24 0c 30 96 11 	movl   $0xc0119630,0xc(%esp)$/;"	l
c0113aa9	obj/kernel.asm	/^c0113aa9:	c0 $/;"	l
c0113aaa	obj/kernel.asm	/^c0113aaa:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0113ab1	obj/kernel.asm	/^c0113ab1:	c0 $/;"	l
c0113ab2	obj/kernel.asm	/^c0113ab2:	c7 44 24 04 ee 02 00 	movl   $0x2ee,0x4(%esp)$/;"	l
c0113ab9	obj/kernel.asm	/^c0113ab9:	00 $/;"	l
c0113aba	obj/kernel.asm	/^c0113aba:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0113ac1	obj/kernel.asm	/^c0113ac1:	e8 02 d4 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113ac6	obj/kernel.asm	/^c0113ac6:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0113ac9	obj/kernel.asm	/^c0113ac9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113acc	obj/kernel.asm	/^c0113acc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113acf	obj/kernel.asm	/^c0113acf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0113ad2	obj/kernel.asm	/^c0113ad2:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0113ad5	obj/kernel.asm	/^c0113ad5:	74 0f                	je     c0113ae6 <sfs_namefile+0x209>$/;"	l
c0113ad7	obj/kernel.asm	/^c0113ad7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113ada	obj/kernel.asm	/^c0113ada:	8b 00                	mov    (%eax),%eax$/;"	l
c0113adc	obj/kernel.asm	/^c0113adc:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0113ae0	obj/kernel.asm	/^c0113ae0:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c0113ae4	obj/kernel.asm	/^c0113ae4:	74 24                	je     c0113b0a <sfs_namefile+0x22d>$/;"	l
c0113ae6	obj/kernel.asm	/^c0113ae6:	c7 44 24 0c bc 98 11 	movl   $0xc01198bc,0xc(%esp)$/;"	l
c0113aed	obj/kernel.asm	/^c0113aed:	c0 $/;"	l
c0113aee	obj/kernel.asm	/^c0113aee:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0113af5	obj/kernel.asm	/^c0113af5:	c0 $/;"	l
c0113af6	obj/kernel.asm	/^c0113af6:	c7 44 24 04 ef 02 00 	movl   $0x2ef,0x4(%esp)$/;"	l
c0113afd	obj/kernel.asm	/^c0113afd:	00 $/;"	l
c0113afe	obj/kernel.asm	/^c0113afe:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0113b05	obj/kernel.asm	/^c0113b05:	e8 be d3 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113b0a	obj/kernel.asm	/^c0113b0a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113b0d	obj/kernel.asm	/^c0113b0d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113b10	obj/kernel.asm	/^c0113b10:	e8 31 e7 ff ff       	call   c0112246 <lock_sin>$/;"	l
c0113b15	obj/kernel.asm	/^c0113b15:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113b18	obj/kernel.asm	/^c0113b18:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113b1c	obj/kernel.asm	/^c0113b1c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0113b1f	obj/kernel.asm	/^c0113b1f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113b23	obj/kernel.asm	/^c0113b23:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113b26	obj/kernel.asm	/^c0113b26:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113b2a	obj/kernel.asm	/^c0113b2a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113b2d	obj/kernel.asm	/^c0113b2d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113b30	obj/kernel.asm	/^c0113b30:	e8 a0 f5 ff ff       	call   c01130d5 <sfs_dirent_findino_nolock>$/;"	l
c0113b35	obj/kernel.asm	/^c0113b35:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113b38	obj/kernel.asm	/^c0113b38:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113b3b	obj/kernel.asm	/^c0113b3b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113b3e	obj/kernel.asm	/^c0113b3e:	e8 19 e7 ff ff       	call   c011225c <unlock_sin>$/;"	l
c0113b43	obj/kernel.asm	/^c0113b43:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0113b47	obj/kernel.asm	/^c0113b47:	74 03                	je     c0113b4c <sfs_namefile+0x26f>$/;"	l
c0113b49	obj/kernel.asm	/^c0113b49:	90                   	nop$/;"	l
c0113b4a	obj/kernel.asm	/^c0113b4a:	eb 65                	jmp    c0113bb1 <sfs_namefile+0x2d4>$/;"	l
c0113b4c	obj/kernel.asm	/^c0113b4c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113b4f	obj/kernel.asm	/^c0113b4f:	83 c0 04             	add    $0x4,%eax$/;"	l
c0113b52	obj/kernel.asm	/^c0113b52:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113b55	obj/kernel.asm	/^c0113b55:	e8 c0 16 00 00       	call   c011521a <strlen>$/;"	l
c0113b5a	obj/kernel.asm	/^c0113b5a:	83 c0 01             	add    $0x1,%eax$/;"	l
c0113b5d	obj/kernel.asm	/^c0113b5d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0113b60	obj/kernel.asm	/^c0113b60:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113b63	obj/kernel.asm	/^c0113b63:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0113b66	obj/kernel.asm	/^c0113b66:	76 09                	jbe    c0113b71 <sfs_namefile+0x294>$/;"	l
c0113b68	obj/kernel.asm	/^c0113b68:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c0113b6f	obj/kernel.asm	/^c0113b6f:	eb 40                	jmp    c0113bb1 <sfs_namefile+0x2d4>$/;"	l
c0113b71	obj/kernel.asm	/^c0113b71:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113b74	obj/kernel.asm	/^c0113b74:	29 45 e8             	sub    %eax,-0x18(%ebp)$/;"	l
c0113b77	obj/kernel.asm	/^c0113b77:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113b7a	obj/kernel.asm	/^c0113b7a:	f7 d8                	neg    %eax$/;"	l
c0113b7c	obj/kernel.asm	/^c0113b7c:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c0113b7f	obj/kernel.asm	/^c0113b7f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113b82	obj/kernel.asm	/^c0113b82:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0113b85	obj/kernel.asm	/^c0113b85:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113b88	obj/kernel.asm	/^c0113b88:	83 c0 04             	add    $0x4,%eax$/;"	l
c0113b8b	obj/kernel.asm	/^c0113b8b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0113b8f	obj/kernel.asm	/^c0113b8f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113b93	obj/kernel.asm	/^c0113b93:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113b96	obj/kernel.asm	/^c0113b96:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113b99	obj/kernel.asm	/^c0113b99:	e8 b4 1a 00 00       	call   c0115652 <memcpy>$/;"	l
c0113b9e	obj/kernel.asm	/^c0113b9e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113ba1	obj/kernel.asm	/^c0113ba1:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0113ba4	obj/kernel.asm	/^c0113ba4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113ba7	obj/kernel.asm	/^c0113ba7:	01 d0                	add    %edx,%eax$/;"	l
c0113ba9	obj/kernel.asm	/^c0113ba9:	c6 00 2f             	movb   $0x2f,(%eax)$/;"	l
c0113bac	obj/kernel.asm	/^c0113bac:	e9 09 fe ff ff       	jmp    c01139ba <sfs_namefile+0xdd>$/;"	l
c0113bb1	obj/kernel.asm	/^c0113bb1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113bb4	obj/kernel.asm	/^c0113bb4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113bb7	obj/kernel.asm	/^c0113bb7:	e8 6e b5 ff ff       	call   c010f12a <inode_ref_dec>$/;"	l
c0113bbc	obj/kernel.asm	/^c0113bbc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113bbf	obj/kernel.asm	/^c0113bbf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113bc2	obj/kernel.asm	/^c0113bc2:	e8 33 11 ff ff       	call   c0104cfa <kfree>$/;"	l
c0113bc7	obj/kernel.asm	/^c0113bc7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113bca	obj/kernel.asm	/^c0113bca:	c9                   	leave  $/;"	l
c0113bcb	obj/kernel.asm	/^c0113bcb:	c3                   	ret    $/;"	l
c0113bcc	obj/kernel.asm	/^c0113bcc <sfs_getdirentry_sub_nolock>:$/;"	l
c0113bcc	obj/kernel.asm	/^c0113bcc:	55                   	push   %ebp$/;"	l
c0113bcd	obj/kernel.asm	/^c0113bcd:	89 e5                	mov    %esp,%ebp$/;"	l
c0113bcf	obj/kernel.asm	/^c0113bcf:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0113bd2	obj/kernel.asm	/^c0113bd2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113bd5	obj/kernel.asm	/^c0113bd5:	8b 00                	mov    (%eax),%eax$/;"	l
c0113bd7	obj/kernel.asm	/^c0113bd7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113bda	obj/kernel.asm	/^c0113bda:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113bdd	obj/kernel.asm	/^c0113bdd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0113be4	obj/kernel.asm	/^c0113be4:	eb 4c                	jmp    c0113c32 <sfs_getdirentry_sub_nolock+0x66>$/;"	l
c0113be6	obj/kernel.asm	/^c0113be6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113be9	obj/kernel.asm	/^c0113be9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113bed	obj/kernel.asm	/^c0113bed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113bf0	obj/kernel.asm	/^c0113bf0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113bf4	obj/kernel.asm	/^c0113bf4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113bf7	obj/kernel.asm	/^c0113bf7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113bfb	obj/kernel.asm	/^c0113bfb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113bfe	obj/kernel.asm	/^c0113bfe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113c01	obj/kernel.asm	/^c0113c01:	e8 a6 f2 ff ff       	call   c0112eac <sfs_dirent_read_nolock>$/;"	l
c0113c06	obj/kernel.asm	/^c0113c06:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113c09	obj/kernel.asm	/^c0113c09:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0113c0d	obj/kernel.asm	/^c0113c0d:	74 05                	je     c0113c14 <sfs_getdirentry_sub_nolock+0x48>$/;"	l
c0113c0f	obj/kernel.asm	/^c0113c0f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113c12	obj/kernel.asm	/^c0113c12:	eb 2b                	jmp    c0113c3f <sfs_getdirentry_sub_nolock+0x73>$/;"	l
c0113c14	obj/kernel.asm	/^c0113c14:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113c17	obj/kernel.asm	/^c0113c17:	8b 00                	mov    (%eax),%eax$/;"	l
c0113c19	obj/kernel.asm	/^c0113c19:	85 c0                	test   %eax,%eax$/;"	l
c0113c1b	obj/kernel.asm	/^c0113c1b:	74 11                	je     c0113c2e <sfs_getdirentry_sub_nolock+0x62>$/;"	l
c0113c1d	obj/kernel.asm	/^c0113c1d:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0113c21	obj/kernel.asm	/^c0113c21:	75 07                	jne    c0113c2a <sfs_getdirentry_sub_nolock+0x5e>$/;"	l
c0113c23	obj/kernel.asm	/^c0113c23:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113c28	obj/kernel.asm	/^c0113c28:	eb 15                	jmp    c0113c3f <sfs_getdirentry_sub_nolock+0x73>$/;"	l
c0113c2a	obj/kernel.asm	/^c0113c2a:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0113c2e	obj/kernel.asm	/^c0113c2e:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0113c32	obj/kernel.asm	/^c0113c32:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113c35	obj/kernel.asm	/^c0113c35:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0113c38	obj/kernel.asm	/^c0113c38:	7c ac                	jl     c0113be6 <sfs_getdirentry_sub_nolock+0x1a>$/;"	l
c0113c3a	obj/kernel.asm	/^c0113c3a:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0113c3f	obj/kernel.asm	/^c0113c3f:	c9                   	leave  $/;"	l
c0113c40	obj/kernel.asm	/^c0113c40:	c3                   	ret    $/;"	l
c0113c41	obj/kernel.asm	/^c0113c41 <sfs_getdirentry>:$/;"	l
c0113c41	obj/kernel.asm	/^c0113c41:	55                   	push   %ebp$/;"	l
c0113c42	obj/kernel.asm	/^c0113c42:	89 e5                	mov    %esp,%ebp$/;"	l
c0113c44	obj/kernel.asm	/^c0113c44:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0113c47	obj/kernel.asm	/^c0113c47:	c7 04 24 04 01 00 00 	movl   $0x104,(%esp)$/;"	l
c0113c4e	obj/kernel.asm	/^c0113c4e:	e8 8c 10 ff ff       	call   c0104cdf <kmalloc>$/;"	l
c0113c53	obj/kernel.asm	/^c0113c53:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113c56	obj/kernel.asm	/^c0113c56:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0113c5a	obj/kernel.asm	/^c0113c5a:	75 0a                	jne    c0113c66 <sfs_getdirentry+0x25>$/;"	l
c0113c5c	obj/kernel.asm	/^c0113c5c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0113c61	obj/kernel.asm	/^c0113c61:	e9 6b 01 00 00       	jmp    c0113dd1 <sfs_getdirentry+0x190>$/;"	l
c0113c66	obj/kernel.asm	/^c0113c66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113c69	obj/kernel.asm	/^c0113c69:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0113c6c	obj/kernel.asm	/^c0113c6c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113c6f	obj/kernel.asm	/^c0113c6f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0113c73	obj/kernel.asm	/^c0113c73:	74 0a                	je     c0113c7f <sfs_getdirentry+0x3e>$/;"	l
c0113c75	obj/kernel.asm	/^c0113c75:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113c78	obj/kernel.asm	/^c0113c78:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0113c7b	obj/kernel.asm	/^c0113c7b:	85 c0                	test   %eax,%eax$/;"	l
c0113c7d	obj/kernel.asm	/^c0113c7d:	74 24                	je     c0113ca3 <sfs_getdirentry+0x62>$/;"	l
c0113c7f	obj/kernel.asm	/^c0113c7f:	c7 44 24 0c 34 98 11 	movl   $0xc0119834,0xc(%esp)$/;"	l
c0113c86	obj/kernel.asm	/^c0113c86:	c0 $/;"	l
c0113c87	obj/kernel.asm	/^c0113c87:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0113c8e	obj/kernel.asm	/^c0113c8e:	c0 $/;"	l
c0113c8f	obj/kernel.asm	/^c0113c8f:	c7 44 24 04 30 03 00 	movl   $0x330,0x4(%esp)$/;"	l
c0113c96	obj/kernel.asm	/^c0113c96:	00 $/;"	l
c0113c97	obj/kernel.asm	/^c0113c97:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0113c9e	obj/kernel.asm	/^c0113c9e:	e8 25 d2 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113ca3	obj/kernel.asm	/^c0113ca3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113ca6	obj/kernel.asm	/^c0113ca6:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113ca9	obj/kernel.asm	/^c0113ca9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113cac	obj/kernel.asm	/^c0113cac:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0113caf	obj/kernel.asm	/^c0113caf:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0113cb3	obj/kernel.asm	/^c0113cb3:	74 0d                	je     c0113cc2 <sfs_getdirentry+0x81>$/;"	l
c0113cb5	obj/kernel.asm	/^c0113cb5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113cb8	obj/kernel.asm	/^c0113cb8:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0113cbb	obj/kernel.asm	/^c0113cbb:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113cc0	obj/kernel.asm	/^c0113cc0:	74 24                	je     c0113ce6 <sfs_getdirentry+0xa5>$/;"	l
c0113cc2	obj/kernel.asm	/^c0113cc2:	c7 44 24 0c 30 96 11 	movl   $0xc0119630,0xc(%esp)$/;"	l
c0113cc9	obj/kernel.asm	/^c0113cc9:	c0 $/;"	l
c0113cca	obj/kernel.asm	/^c0113cca:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0113cd1	obj/kernel.asm	/^c0113cd1:	c0 $/;"	l
c0113cd2	obj/kernel.asm	/^c0113cd2:	c7 44 24 04 31 03 00 	movl   $0x331,0x4(%esp)$/;"	l
c0113cd9	obj/kernel.asm	/^c0113cd9:	00 $/;"	l
c0113cda	obj/kernel.asm	/^c0113cda:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0113ce1	obj/kernel.asm	/^c0113ce1:	e8 e2 d1 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113ce6	obj/kernel.asm	/^c0113ce6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113ce9	obj/kernel.asm	/^c0113ce9:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113cec	obj/kernel.asm	/^c0113cec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113cef	obj/kernel.asm	/^c0113cef:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0113cf2	obj/kernel.asm	/^c0113cf2:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0113cf5	obj/kernel.asm	/^c0113cf5:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0113cf9	obj/kernel.asm	/^c0113cf9:	78 0a                	js     c0113d05 <sfs_getdirentry+0xc4>$/;"	l
c0113cfb	obj/kernel.asm	/^c0113cfb:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113cfe	obj/kernel.asm	/^c0113cfe:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0113d01	obj/kernel.asm	/^c0113d01:	85 c0                	test   %eax,%eax$/;"	l
c0113d03	obj/kernel.asm	/^c0113d03:	74 15                	je     c0113d1a <sfs_getdirentry+0xd9>$/;"	l
c0113d05	obj/kernel.asm	/^c0113d05:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113d08	obj/kernel.asm	/^c0113d08:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113d0b	obj/kernel.asm	/^c0113d0b:	e8 ea 0f ff ff       	call   c0104cfa <kfree>$/;"	l
c0113d10	obj/kernel.asm	/^c0113d10:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0113d15	obj/kernel.asm	/^c0113d15:	e9 b7 00 00 00       	jmp    c0113dd1 <sfs_getdirentry+0x190>$/;"	l
c0113d1a	obj/kernel.asm	/^c0113d1a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113d1d	obj/kernel.asm	/^c0113d1d:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0113d20	obj/kernel.asm	/^c0113d20:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0113d23	obj/kernel.asm	/^c0113d23:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0113d26	obj/kernel.asm	/^c0113d26:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113d29	obj/kernel.asm	/^c0113d29:	8b 00                	mov    (%eax),%eax$/;"	l
c0113d2b	obj/kernel.asm	/^c0113d2b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113d2e	obj/kernel.asm	/^c0113d2e:	39 c2                	cmp    %eax,%edx$/;"	l
c0113d30	obj/kernel.asm	/^c0113d30:	76 15                	jbe    c0113d47 <sfs_getdirentry+0x106>$/;"	l
c0113d32	obj/kernel.asm	/^c0113d32:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113d35	obj/kernel.asm	/^c0113d35:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113d38	obj/kernel.asm	/^c0113d38:	e8 bd 0f ff ff       	call   c0104cfa <kfree>$/;"	l
c0113d3d	obj/kernel.asm	/^c0113d3d:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0113d42	obj/kernel.asm	/^c0113d42:	e9 8a 00 00 00       	jmp    c0113dd1 <sfs_getdirentry+0x190>$/;"	l
c0113d47	obj/kernel.asm	/^c0113d47:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113d4a	obj/kernel.asm	/^c0113d4a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113d4d	obj/kernel.asm	/^c0113d4d:	e8 f4 e4 ff ff       	call   c0112246 <lock_sin>$/;"	l
c0113d52	obj/kernel.asm	/^c0113d52:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113d55	obj/kernel.asm	/^c0113d55:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113d59	obj/kernel.asm	/^c0113d59:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113d5c	obj/kernel.asm	/^c0113d5c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113d60	obj/kernel.asm	/^c0113d60:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113d63	obj/kernel.asm	/^c0113d63:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113d67	obj/kernel.asm	/^c0113d67:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113d6a	obj/kernel.asm	/^c0113d6a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113d6d	obj/kernel.asm	/^c0113d6d:	e8 5a fe ff ff       	call   c0113bcc <sfs_getdirentry_sub_nolock>$/;"	l
c0113d72	obj/kernel.asm	/^c0113d72:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113d75	obj/kernel.asm	/^c0113d75:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113d79	obj/kernel.asm	/^c0113d79:	74 0d                	je     c0113d88 <sfs_getdirentry+0x147>$/;"	l
c0113d7b	obj/kernel.asm	/^c0113d7b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113d7e	obj/kernel.asm	/^c0113d7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113d81	obj/kernel.asm	/^c0113d81:	e8 d6 e4 ff ff       	call   c011225c <unlock_sin>$/;"	l
c0113d86	obj/kernel.asm	/^c0113d86:	eb 3b                	jmp    c0113dc3 <sfs_getdirentry+0x182>$/;"	l
c0113d88	obj/kernel.asm	/^c0113d88:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113d8b	obj/kernel.asm	/^c0113d8b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113d8e	obj/kernel.asm	/^c0113d8e:	e8 c9 e4 ff ff       	call   c011225c <unlock_sin>$/;"	l
c0113d93	obj/kernel.asm	/^c0113d93:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113d96	obj/kernel.asm	/^c0113d96:	83 c0 04             	add    $0x4,%eax$/;"	l
c0113d99	obj/kernel.asm	/^c0113d99:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0113da0	obj/kernel.asm	/^c0113da0:	00 $/;"	l
c0113da1	obj/kernel.asm	/^c0113da1:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0113da8	obj/kernel.asm	/^c0113da8:	00 $/;"	l
c0113da9	obj/kernel.asm	/^c0113da9:	c7 44 24 08 00 01 00 	movl   $0x100,0x8(%esp)$/;"	l
c0113db0	obj/kernel.asm	/^c0113db0:	00 $/;"	l
c0113db1	obj/kernel.asm	/^c0113db1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113db5	obj/kernel.asm	/^c0113db5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113db8	obj/kernel.asm	/^c0113db8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113dbb	obj/kernel.asm	/^c0113dbb:	e8 b4 75 ff ff       	call   c010b374 <iobuf_move>$/;"	l
c0113dc0	obj/kernel.asm	/^c0113dc0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113dc3	obj/kernel.asm	/^c0113dc3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113dc6	obj/kernel.asm	/^c0113dc6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113dc9	obj/kernel.asm	/^c0113dc9:	e8 2c 0f ff ff       	call   c0104cfa <kfree>$/;"	l
c0113dce	obj/kernel.asm	/^c0113dce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113dd1	obj/kernel.asm	/^c0113dd1:	c9                   	leave  $/;"	l
c0113dd2	obj/kernel.asm	/^c0113dd2:	c3                   	ret    $/;"	l
c0113dd3	obj/kernel.asm	/^c0113dd3 <sfs_reclaim>:$/;"	l
c0113dd3	obj/kernel.asm	/^c0113dd3:	55                   	push   %ebp$/;"	l
c0113dd4	obj/kernel.asm	/^c0113dd4:	89 e5                	mov    %esp,%ebp$/;"	l
c0113dd6	obj/kernel.asm	/^c0113dd6:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0113dd9	obj/kernel.asm	/^c0113dd9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113ddc	obj/kernel.asm	/^c0113ddc:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0113ddf	obj/kernel.asm	/^c0113ddf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113de2	obj/kernel.asm	/^c0113de2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0113de6	obj/kernel.asm	/^c0113de6:	74 0a                	je     c0113df2 <sfs_reclaim+0x1f>$/;"	l
c0113de8	obj/kernel.asm	/^c0113de8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113deb	obj/kernel.asm	/^c0113deb:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0113dee	obj/kernel.asm	/^c0113dee:	85 c0                	test   %eax,%eax$/;"	l
c0113df0	obj/kernel.asm	/^c0113df0:	74 24                	je     c0113e16 <sfs_reclaim+0x43>$/;"	l
c0113df2	obj/kernel.asm	/^c0113df2:	c7 44 24 0c 34 98 11 	movl   $0xc0119834,0xc(%esp)$/;"	l
c0113df9	obj/kernel.asm	/^c0113df9:	c0 $/;"	l
c0113dfa	obj/kernel.asm	/^c0113dfa:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0113e01	obj/kernel.asm	/^c0113e01:	c0 $/;"	l
c0113e02	obj/kernel.asm	/^c0113e02:	c7 44 24 04 4e 03 00 	movl   $0x34e,0x4(%esp)$/;"	l
c0113e09	obj/kernel.asm	/^c0113e09:	00 $/;"	l
c0113e0a	obj/kernel.asm	/^c0113e0a:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0113e11	obj/kernel.asm	/^c0113e11:	e8 b2 d0 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113e16	obj/kernel.asm	/^c0113e16:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113e19	obj/kernel.asm	/^c0113e19:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113e1c	obj/kernel.asm	/^c0113e1c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113e1f	obj/kernel.asm	/^c0113e1f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113e22	obj/kernel.asm	/^c0113e22:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113e26	obj/kernel.asm	/^c0113e26:	74 0d                	je     c0113e35 <sfs_reclaim+0x62>$/;"	l
c0113e28	obj/kernel.asm	/^c0113e28:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113e2b	obj/kernel.asm	/^c0113e2b:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0113e2e	obj/kernel.asm	/^c0113e2e:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113e33	obj/kernel.asm	/^c0113e33:	74 24                	je     c0113e59 <sfs_reclaim+0x86>$/;"	l
c0113e35	obj/kernel.asm	/^c0113e35:	c7 44 24 0c 30 96 11 	movl   $0xc0119630,0xc(%esp)$/;"	l
c0113e3c	obj/kernel.asm	/^c0113e3c:	c0 $/;"	l
c0113e3d	obj/kernel.asm	/^c0113e3d:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0113e44	obj/kernel.asm	/^c0113e44:	c0 $/;"	l
c0113e45	obj/kernel.asm	/^c0113e45:	c7 44 24 04 4f 03 00 	movl   $0x34f,0x4(%esp)$/;"	l
c0113e4c	obj/kernel.asm	/^c0113e4c:	00 $/;"	l
c0113e4d	obj/kernel.asm	/^c0113e4d:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0113e54	obj/kernel.asm	/^c0113e54:	e8 6f d0 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113e59	obj/kernel.asm	/^c0113e59:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113e5c	obj/kernel.asm	/^c0113e5c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0113e5f	obj/kernel.asm	/^c0113e5f:	c7 45 f4 f1 ff ff ff 	movl   $0xfffffff1,-0xc(%ebp)$/;"	l
c0113e66	obj/kernel.asm	/^c0113e66:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113e69	obj/kernel.asm	/^c0113e69:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113e6c	obj/kernel.asm	/^c0113e6c:	e8 4d 0b 00 00       	call   c01149be <lock_sfs_fs>$/;"	l
c0113e71	obj/kernel.asm	/^c0113e71:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113e74	obj/kernel.asm	/^c0113e74:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113e77	obj/kernel.asm	/^c0113e77:	85 c0                	test   %eax,%eax$/;"	l
c0113e79	obj/kernel.asm	/^c0113e79:	7f 24                	jg     c0113e9f <sfs_reclaim+0xcc>$/;"	l
c0113e7b	obj/kernel.asm	/^c0113e7b:	c7 44 24 0c ee 98 11 	movl   $0xc01198ee,0xc(%esp)$/;"	l
c0113e82	obj/kernel.asm	/^c0113e82:	c0 $/;"	l
c0113e83	obj/kernel.asm	/^c0113e83:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0113e8a	obj/kernel.asm	/^c0113e8a:	c0 $/;"	l
c0113e8b	obj/kernel.asm	/^c0113e8b:	c7 44 24 04 54 03 00 	movl   $0x354,0x4(%esp)$/;"	l
c0113e92	obj/kernel.asm	/^c0113e92:	00 $/;"	l
c0113e93	obj/kernel.asm	/^c0113e93:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0113e9a	obj/kernel.asm	/^c0113e9a:	e8 29 d0 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113e9f	obj/kernel.asm	/^c0113e9f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113ea2	obj/kernel.asm	/^c0113ea2:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113ea5	obj/kernel.asm	/^c0113ea5:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0113ea8	obj/kernel.asm	/^c0113ea8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113eab	obj/kernel.asm	/^c0113eab:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0113eae	obj/kernel.asm	/^c0113eae:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113eb1	obj/kernel.asm	/^c0113eb1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113eb4	obj/kernel.asm	/^c0113eb4:	85 c0                	test   %eax,%eax$/;"	l
c0113eb6	obj/kernel.asm	/^c0113eb6:	0f 85 a1 01 00 00    	jne    c011405d <sfs_reclaim+0x28a>$/;"	l
c0113ebc	obj/kernel.asm	/^c0113ebc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113ebf	obj/kernel.asm	/^c0113ebf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113ec2	obj/kernel.asm	/^c0113ec2:	e8 74 e3 ff ff       	call   c011223b <inode_ref_count>$/;"	l
c0113ec7	obj/kernel.asm	/^c0113ec7:	85 c0                	test   %eax,%eax$/;"	l
c0113ec9	obj/kernel.asm	/^c0113ec9:	0f 85 8e 01 00 00    	jne    c011405d <sfs_reclaim+0x28a>$/;"	l
c0113ecf	obj/kernel.asm	/^c0113ecf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113ed2	obj/kernel.asm	/^c0113ed2:	8b 00                	mov    (%eax),%eax$/;"	l
c0113ed4	obj/kernel.asm	/^c0113ed4:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c0113ed8	obj/kernel.asm	/^c0113ed8:	66 85 c0             	test   %ax,%ax$/;"	l
c0113edb	obj/kernel.asm	/^c0113edb:	0f 85 81 00 00 00    	jne    c0113f62 <sfs_reclaim+0x18f>$/;"	l
c0113ee1	obj/kernel.asm	/^c0113ee1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113ee4	obj/kernel.asm	/^c0113ee4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113ee7	obj/kernel.asm	/^c0113ee7:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0113eeb	obj/kernel.asm	/^c0113eeb:	74 17                	je     c0113f04 <sfs_reclaim+0x131>$/;"	l
c0113eed	obj/kernel.asm	/^c0113eed:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113ef0	obj/kernel.asm	/^c0113ef0:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113ef3	obj/kernel.asm	/^c0113ef3:	85 c0                	test   %eax,%eax$/;"	l
c0113ef5	obj/kernel.asm	/^c0113ef5:	74 0d                	je     c0113f04 <sfs_reclaim+0x131>$/;"	l
c0113ef7	obj/kernel.asm	/^c0113ef7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113efa	obj/kernel.asm	/^c0113efa:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113efd	obj/kernel.asm	/^c0113efd:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0113f00	obj/kernel.asm	/^c0113f00:	85 c0                	test   %eax,%eax$/;"	l
c0113f02	obj/kernel.asm	/^c0113f02:	75 24                	jne    c0113f28 <sfs_reclaim+0x155>$/;"	l
c0113f04	obj/kernel.asm	/^c0113f04:	c7 44 24 0c 08 99 11 	movl   $0xc0119908,0xc(%esp)$/;"	l
c0113f0b	obj/kernel.asm	/^c0113f0b:	c0 $/;"	l
c0113f0c	obj/kernel.asm	/^c0113f0c:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0113f13	obj/kernel.asm	/^c0113f13:	c0 $/;"	l
c0113f14	obj/kernel.asm	/^c0113f14:	c7 44 24 04 59 03 00 	movl   $0x359,0x4(%esp)$/;"	l
c0113f1b	obj/kernel.asm	/^c0113f1b:	00 $/;"	l
c0113f1c	obj/kernel.asm	/^c0113f1c:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0113f23	obj/kernel.asm	/^c0113f23:	e8 a0 cf fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113f28	obj/kernel.asm	/^c0113f28:	c7 44 24 04 59 99 11 	movl   $0xc0119959,0x4(%esp)$/;"	l
c0113f2f	obj/kernel.asm	/^c0113f2f:	c0 $/;"	l
c0113f30	obj/kernel.asm	/^c0113f30:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113f33	obj/kernel.asm	/^c0113f33:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113f36	obj/kernel.asm	/^c0113f36:	e8 dd b3 ff ff       	call   c010f318 <inode_check>$/;"	l
c0113f3b	obj/kernel.asm	/^c0113f3b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113f3e	obj/kernel.asm	/^c0113f3e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113f41	obj/kernel.asm	/^c0113f41:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0113f44	obj/kernel.asm	/^c0113f44:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0113f4b	obj/kernel.asm	/^c0113f4b:	00 $/;"	l
c0113f4c	obj/kernel.asm	/^c0113f4c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113f4f	obj/kernel.asm	/^c0113f4f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0113f52	obj/kernel.asm	/^c0113f52:	ff d0                	call   *%eax$/;"	l
c0113f54	obj/kernel.asm	/^c0113f54:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113f57	obj/kernel.asm	/^c0113f57:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113f5b	obj/kernel.asm	/^c0113f5b:	74 05                	je     c0113f62 <sfs_reclaim+0x18f>$/;"	l
c0113f5d	obj/kernel.asm	/^c0113f5d:	e9 fb 00 00 00       	jmp    c011405d <sfs_reclaim+0x28a>$/;"	l
c0113f62	obj/kernel.asm	/^c0113f62:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113f65	obj/kernel.asm	/^c0113f65:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113f68	obj/kernel.asm	/^c0113f68:	85 c0                	test   %eax,%eax$/;"	l
c0113f6a	obj/kernel.asm	/^c0113f6a:	74 76                	je     c0113fe2 <sfs_reclaim+0x20f>$/;"	l
c0113f6c	obj/kernel.asm	/^c0113f6c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113f6f	obj/kernel.asm	/^c0113f6f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0113f72	obj/kernel.asm	/^c0113f72:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0113f76	obj/kernel.asm	/^c0113f76:	74 17                	je     c0113f8f <sfs_reclaim+0x1bc>$/;"	l
c0113f78	obj/kernel.asm	/^c0113f78:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113f7b	obj/kernel.asm	/^c0113f7b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113f7e	obj/kernel.asm	/^c0113f7e:	85 c0                	test   %eax,%eax$/;"	l
c0113f80	obj/kernel.asm	/^c0113f80:	74 0d                	je     c0113f8f <sfs_reclaim+0x1bc>$/;"	l
c0113f82	obj/kernel.asm	/^c0113f82:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113f85	obj/kernel.asm	/^c0113f85:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113f88	obj/kernel.asm	/^c0113f88:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0113f8b	obj/kernel.asm	/^c0113f8b:	85 c0                	test   %eax,%eax$/;"	l
c0113f8d	obj/kernel.asm	/^c0113f8d:	75 24                	jne    c0113fb3 <sfs_reclaim+0x1e0>$/;"	l
c0113f8f	obj/kernel.asm	/^c0113f8f:	c7 44 24 0c c4 97 11 	movl   $0xc01197c4,0xc(%esp)$/;"	l
c0113f96	obj/kernel.asm	/^c0113f96:	c0 $/;"	l
c0113f97	obj/kernel.asm	/^c0113f97:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0113f9e	obj/kernel.asm	/^c0113f9e:	c0 $/;"	l
c0113f9f	obj/kernel.asm	/^c0113f9f:	c7 44 24 04 5e 03 00 	movl   $0x35e,0x4(%esp)$/;"	l
c0113fa6	obj/kernel.asm	/^c0113fa6:	00 $/;"	l
c0113fa7	obj/kernel.asm	/^c0113fa7:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0113fae	obj/kernel.asm	/^c0113fae:	e8 15 cf fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113fb3	obj/kernel.asm	/^c0113fb3:	c7 44 24 04 12 98 11 	movl   $0xc0119812,0x4(%esp)$/;"	l
c0113fba	obj/kernel.asm	/^c0113fba:	c0 $/;"	l
c0113fbb	obj/kernel.asm	/^c0113fbb:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113fbe	obj/kernel.asm	/^c0113fbe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113fc1	obj/kernel.asm	/^c0113fc1:	e8 52 b3 ff ff       	call   c010f318 <inode_check>$/;"	l
c0113fc6	obj/kernel.asm	/^c0113fc6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113fc9	obj/kernel.asm	/^c0113fc9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113fcc	obj/kernel.asm	/^c0113fcc:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0113fcf	obj/kernel.asm	/^c0113fcf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113fd2	obj/kernel.asm	/^c0113fd2:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0113fd5	obj/kernel.asm	/^c0113fd5:	ff d0                	call   *%eax$/;"	l
c0113fd7	obj/kernel.asm	/^c0113fd7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113fda	obj/kernel.asm	/^c0113fda:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113fde	obj/kernel.asm	/^c0113fde:	74 02                	je     c0113fe2 <sfs_reclaim+0x20f>$/;"	l
c0113fe0	obj/kernel.asm	/^c0113fe0:	eb 7b                	jmp    c011405d <sfs_reclaim+0x28a>$/;"	l
c0113fe2	obj/kernel.asm	/^c0113fe2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113fe5	obj/kernel.asm	/^c0113fe5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113fe8	obj/kernel.asm	/^c0113fe8:	e8 c9 e3 ff ff       	call   c01123b6 <sfs_remove_links>$/;"	l
c0113fed	obj/kernel.asm	/^c0113fed:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113ff0	obj/kernel.asm	/^c0113ff0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113ff3	obj/kernel.asm	/^c0113ff3:	e8 f2 09 00 00       	call   c01149ea <unlock_sfs_fs>$/;"	l
c0113ff8	obj/kernel.asm	/^c0113ff8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113ffb	obj/kernel.asm	/^c0113ffb:	8b 00                	mov    (%eax),%eax$/;"	l
c0113ffd	obj/kernel.asm	/^c0113ffd:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c0114001	obj/kernel.asm	/^c0114001:	66 85 c0             	test   %ax,%ax$/;"	l
c0114004	obj/kernel.asm	/^c0114004:	75 38                	jne    c011403e <sfs_reclaim+0x26b>$/;"	l
c0114006	obj/kernel.asm	/^c0114006:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114009	obj/kernel.asm	/^c0114009:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011400c	obj/kernel.asm	/^c011400c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114010	obj/kernel.asm	/^c0114010:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114013	obj/kernel.asm	/^c0114013:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114016	obj/kernel.asm	/^c0114016:	e8 2b e5 ff ff       	call   c0112546 <sfs_block_free>$/;"	l
c011401b	obj/kernel.asm	/^c011401b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011401e	obj/kernel.asm	/^c011401e:	8b 00                	mov    (%eax),%eax$/;"	l
c0114020	obj/kernel.asm	/^c0114020:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0114023	obj/kernel.asm	/^c0114023:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0114026	obj/kernel.asm	/^c0114026:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c011402a	obj/kernel.asm	/^c011402a:	74 12                	je     c011403e <sfs_reclaim+0x26b>$/;"	l
c011402c	obj/kernel.asm	/^c011402c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011402f	obj/kernel.asm	/^c011402f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114033	obj/kernel.asm	/^c0114033:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114036	obj/kernel.asm	/^c0114036:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114039	obj/kernel.asm	/^c0114039:	e8 08 e5 ff ff       	call   c0112546 <sfs_block_free>$/;"	l
c011403e	obj/kernel.asm	/^c011403e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114041	obj/kernel.asm	/^c0114041:	8b 00                	mov    (%eax),%eax$/;"	l
c0114043	obj/kernel.asm	/^c0114043:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114046	obj/kernel.asm	/^c0114046:	e8 af 0c ff ff       	call   c0104cfa <kfree>$/;"	l
c011404b	obj/kernel.asm	/^c011404b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011404e	obj/kernel.asm	/^c011404e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114051	obj/kernel.asm	/^c0114051:	e8 41 b0 ff ff       	call   c010f097 <inode_kill>$/;"	l
c0114056	obj/kernel.asm	/^c0114056:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011405b	obj/kernel.asm	/^c011405b:	eb 0e                	jmp    c011406b <sfs_reclaim+0x298>$/;"	l
c011405d	obj/kernel.asm	/^c011405d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114060	obj/kernel.asm	/^c0114060:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114063	obj/kernel.asm	/^c0114063:	e8 82 09 00 00       	call   c01149ea <unlock_sfs_fs>$/;"	l
c0114068	obj/kernel.asm	/^c0114068:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011406b	obj/kernel.asm	/^c011406b:	c9                   	leave  $/;"	l
c011406c	obj/kernel.asm	/^c011406c:	c3                   	ret    $/;"	l
c011406d	obj/kernel.asm	/^c011406d <sfs_gettype>:$/;"	l
c011406d	obj/kernel.asm	/^c011406d:	55                   	push   %ebp$/;"	l
c011406e	obj/kernel.asm	/^c011406e:	89 e5                	mov    %esp,%ebp$/;"	l
c0114070	obj/kernel.asm	/^c0114070:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0114073	obj/kernel.asm	/^c0114073:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114076	obj/kernel.asm	/^c0114076:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114079	obj/kernel.asm	/^c0114079:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011407d	obj/kernel.asm	/^c011407d:	74 0d                	je     c011408c <sfs_gettype+0x1f>$/;"	l
c011407f	obj/kernel.asm	/^c011407f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114082	obj/kernel.asm	/^c0114082:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0114085	obj/kernel.asm	/^c0114085:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c011408a	obj/kernel.asm	/^c011408a:	74 24                	je     c01140b0 <sfs_gettype+0x43>$/;"	l
c011408c	obj/kernel.asm	/^c011408c:	c7 44 24 0c 30 96 11 	movl   $0xc0119630,0xc(%esp)$/;"	l
c0114093	obj/kernel.asm	/^c0114093:	c0 $/;"	l
c0114094	obj/kernel.asm	/^c0114094:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c011409b	obj/kernel.asm	/^c011409b:	c0 $/;"	l
c011409c	obj/kernel.asm	/^c011409c:	c7 44 24 04 79 03 00 	movl   $0x379,0x4(%esp)$/;"	l
c01140a3	obj/kernel.asm	/^c01140a3:	00 $/;"	l
c01140a4	obj/kernel.asm	/^c01140a4:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c01140ab	obj/kernel.asm	/^c01140ab:	e8 18 ce fe ff       	call   c0100ec8 <__panic>$/;"	l
c01140b0	obj/kernel.asm	/^c01140b0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01140b3	obj/kernel.asm	/^c01140b3:	8b 00                	mov    (%eax),%eax$/;"	l
c01140b5	obj/kernel.asm	/^c01140b5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01140b8	obj/kernel.asm	/^c01140b8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01140bb	obj/kernel.asm	/^c01140bb:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c01140bf	obj/kernel.asm	/^c01140bf:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01140c2	obj/kernel.asm	/^c01140c2:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01140c5	obj/kernel.asm	/^c01140c5:	74 0c                	je     c01140d3 <sfs_gettype+0x66>$/;"	l
c01140c7	obj/kernel.asm	/^c01140c7:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c01140ca	obj/kernel.asm	/^c01140ca:	74 27                	je     c01140f3 <sfs_gettype+0x86>$/;"	l
c01140cc	obj/kernel.asm	/^c01140cc:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01140cf	obj/kernel.asm	/^c01140cf:	74 12                	je     c01140e3 <sfs_gettype+0x76>$/;"	l
c01140d1	obj/kernel.asm	/^c01140d1:	eb 30                	jmp    c0114103 <sfs_gettype+0x96>$/;"	l
c01140d3	obj/kernel.asm	/^c01140d3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01140d6	obj/kernel.asm	/^c01140d6:	c7 00 00 20 00 00    	movl   $0x2000,(%eax)$/;"	l
c01140dc	obj/kernel.asm	/^c01140dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01140e1	obj/kernel.asm	/^c01140e1:	eb 4a                	jmp    c011412d <sfs_gettype+0xc0>$/;"	l
c01140e3	obj/kernel.asm	/^c01140e3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01140e6	obj/kernel.asm	/^c01140e6:	c7 00 00 10 00 00    	movl   $0x1000,(%eax)$/;"	l
c01140ec	obj/kernel.asm	/^c01140ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01140f1	obj/kernel.asm	/^c01140f1:	eb 3a                	jmp    c011412d <sfs_gettype+0xc0>$/;"	l
c01140f3	obj/kernel.asm	/^c01140f3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01140f6	obj/kernel.asm	/^c01140f6:	c7 00 00 30 00 00    	movl   $0x3000,(%eax)$/;"	l
c01140fc	obj/kernel.asm	/^c01140fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0114101	obj/kernel.asm	/^c0114101:	eb 2a                	jmp    c011412d <sfs_gettype+0xc0>$/;"	l
c0114103	obj/kernel.asm	/^c0114103:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114106	obj/kernel.asm	/^c0114106:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c011410a	obj/kernel.asm	/^c011410a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c011410d	obj/kernel.asm	/^c011410d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114111	obj/kernel.asm	/^c0114111:	c7 44 24 08 60 95 11 	movl   $0xc0119560,0x8(%esp)$/;"	l
c0114118	obj/kernel.asm	/^c0114118:	c0 $/;"	l
c0114119	obj/kernel.asm	/^c0114119:	c7 44 24 04 85 03 00 	movl   $0x385,0x4(%esp)$/;"	l
c0114120	obj/kernel.asm	/^c0114120:	00 $/;"	l
c0114121	obj/kernel.asm	/^c0114121:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0114128	obj/kernel.asm	/^c0114128:	e8 9b cd fe ff       	call   c0100ec8 <__panic>$/;"	l
c011412d	obj/kernel.asm	/^c011412d:	c9                   	leave  $/;"	l
c011412e	obj/kernel.asm	/^c011412e:	c3                   	ret    $/;"	l
c011412f	obj/kernel.asm	/^c011412f <sfs_tryseek>:$/;"	l
c011412f	obj/kernel.asm	/^c011412f:	55                   	push   %ebp$/;"	l
c0114130	obj/kernel.asm	/^c0114130:	89 e5                	mov    %esp,%ebp$/;"	l
c0114132	obj/kernel.asm	/^c0114132:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0114135	obj/kernel.asm	/^c0114135:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0114139	obj/kernel.asm	/^c0114139:	78 0a                	js     c0114145 <sfs_tryseek+0x16>$/;"	l
c011413b	obj/kernel.asm	/^c011413b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011413e	obj/kernel.asm	/^c011413e:	3d ff ff ff 07       	cmp    $0x7ffffff,%eax$/;"	l
c0114143	obj/kernel.asm	/^c0114143:	76 0a                	jbe    c011414f <sfs_tryseek+0x20>$/;"	l
c0114145	obj/kernel.asm	/^c0114145:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c011414a	obj/kernel.asm	/^c011414a:	e9 ca 00 00 00       	jmp    c0114219 <sfs_tryseek+0xea>$/;"	l
c011414f	obj/kernel.asm	/^c011414f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114152	obj/kernel.asm	/^c0114152:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114155	obj/kernel.asm	/^c0114155:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114159	obj/kernel.asm	/^c0114159:	74 0d                	je     c0114168 <sfs_tryseek+0x39>$/;"	l
c011415b	obj/kernel.asm	/^c011415b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011415e	obj/kernel.asm	/^c011415e:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0114161	obj/kernel.asm	/^c0114161:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0114166	obj/kernel.asm	/^c0114166:	74 24                	je     c011418c <sfs_tryseek+0x5d>$/;"	l
c0114168	obj/kernel.asm	/^c0114168:	c7 44 24 0c 30 96 11 	movl   $0xc0119630,0xc(%esp)$/;"	l
c011416f	obj/kernel.asm	/^c011416f:	c0 $/;"	l
c0114170	obj/kernel.asm	/^c0114170:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0114177	obj/kernel.asm	/^c0114177:	c0 $/;"	l
c0114178	obj/kernel.asm	/^c0114178:	c7 44 24 04 90 03 00 	movl   $0x390,0x4(%esp)$/;"	l
c011417f	obj/kernel.asm	/^c011417f:	00 $/;"	l
c0114180	obj/kernel.asm	/^c0114180:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0114187	obj/kernel.asm	/^c0114187:	e8 3c cd fe ff       	call   c0100ec8 <__panic>$/;"	l
c011418c	obj/kernel.asm	/^c011418c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011418f	obj/kernel.asm	/^c011418f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114192	obj/kernel.asm	/^c0114192:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0114195	obj/kernel.asm	/^c0114195:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114198	obj/kernel.asm	/^c0114198:	8b 00                	mov    (%eax),%eax$/;"	l
c011419a	obj/kernel.asm	/^c011419a:	8b 00                	mov    (%eax),%eax$/;"	l
c011419c	obj/kernel.asm	/^c011419c:	39 c2                	cmp    %eax,%edx$/;"	l
c011419e	obj/kernel.asm	/^c011419e:	76 74                	jbe    c0114214 <sfs_tryseek+0xe5>$/;"	l
c01141a0	obj/kernel.asm	/^c01141a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01141a3	obj/kernel.asm	/^c01141a3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01141a6	obj/kernel.asm	/^c01141a6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01141aa	obj/kernel.asm	/^c01141aa:	74 17                	je     c01141c3 <sfs_tryseek+0x94>$/;"	l
c01141ac	obj/kernel.asm	/^c01141ac:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01141af	obj/kernel.asm	/^c01141af:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01141b2	obj/kernel.asm	/^c01141b2:	85 c0                	test   %eax,%eax$/;"	l
c01141b4	obj/kernel.asm	/^c01141b4:	74 0d                	je     c01141c3 <sfs_tryseek+0x94>$/;"	l
c01141b6	obj/kernel.asm	/^c01141b6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01141b9	obj/kernel.asm	/^c01141b9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01141bc	obj/kernel.asm	/^c01141bc:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01141bf	obj/kernel.asm	/^c01141bf:	85 c0                	test   %eax,%eax$/;"	l
c01141c1	obj/kernel.asm	/^c01141c1:	75 24                	jne    c01141e7 <sfs_tryseek+0xb8>$/;"	l
c01141c3	obj/kernel.asm	/^c01141c3:	c7 44 24 0c 08 99 11 	movl   $0xc0119908,0xc(%esp)$/;"	l
c01141ca	obj/kernel.asm	/^c01141ca:	c0 $/;"	l
c01141cb	obj/kernel.asm	/^c01141cb:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c01141d2	obj/kernel.asm	/^c01141d2:	c0 $/;"	l
c01141d3	obj/kernel.asm	/^c01141d3:	c7 44 24 04 92 03 00 	movl   $0x392,0x4(%esp)$/;"	l
c01141da	obj/kernel.asm	/^c01141da:	00 $/;"	l
c01141db	obj/kernel.asm	/^c01141db:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c01141e2	obj/kernel.asm	/^c01141e2:	e8 e1 cc fe ff       	call   c0100ec8 <__panic>$/;"	l
c01141e7	obj/kernel.asm	/^c01141e7:	c7 44 24 04 59 99 11 	movl   $0xc0119959,0x4(%esp)$/;"	l
c01141ee	obj/kernel.asm	/^c01141ee:	c0 $/;"	l
c01141ef	obj/kernel.asm	/^c01141ef:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01141f2	obj/kernel.asm	/^c01141f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01141f5	obj/kernel.asm	/^c01141f5:	e8 1e b1 ff ff       	call   c010f318 <inode_check>$/;"	l
c01141fa	obj/kernel.asm	/^c01141fa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01141fd	obj/kernel.asm	/^c01141fd:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0114200	obj/kernel.asm	/^c0114200:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0114203	obj/kernel.asm	/^c0114203:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0114206	obj/kernel.asm	/^c0114206:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011420a	obj/kernel.asm	/^c011420a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011420d	obj/kernel.asm	/^c011420d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0114210	obj/kernel.asm	/^c0114210:	ff d0                	call   *%eax$/;"	l
c0114212	obj/kernel.asm	/^c0114212:	eb 05                	jmp    c0114219 <sfs_tryseek+0xea>$/;"	l
c0114214	obj/kernel.asm	/^c0114214:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0114219	obj/kernel.asm	/^c0114219:	c9                   	leave  $/;"	l
c011421a	obj/kernel.asm	/^c011421a:	c3                   	ret    $/;"	l
c011421b	obj/kernel.asm	/^c011421b <sfs_truncfile>:$/;"	l
c011421b	obj/kernel.asm	/^c011421b:	55                   	push   %ebp$/;"	l
c011421c	obj/kernel.asm	/^c011421c:	89 e5                	mov    %esp,%ebp$/;"	l
c011421e	obj/kernel.asm	/^c011421e:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0114221	obj/kernel.asm	/^c0114221:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0114225	obj/kernel.asm	/^c0114225:	78 0a                	js     c0114231 <sfs_truncfile+0x16>$/;"	l
c0114227	obj/kernel.asm	/^c0114227:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011422a	obj/kernel.asm	/^c011422a:	3d 00 00 00 08       	cmp    $0x8000000,%eax$/;"	l
c011422f	obj/kernel.asm	/^c011422f:	76 0a                	jbe    c011423b <sfs_truncfile+0x20>$/;"	l
c0114231	obj/kernel.asm	/^c0114231:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0114236	obj/kernel.asm	/^c0114236:	e9 d4 01 00 00       	jmp    c011440f <sfs_truncfile+0x1f4>$/;"	l
c011423b	obj/kernel.asm	/^c011423b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011423e	obj/kernel.asm	/^c011423e:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0114241	obj/kernel.asm	/^c0114241:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0114244	obj/kernel.asm	/^c0114244:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0114248	obj/kernel.asm	/^c0114248:	74 0a                	je     c0114254 <sfs_truncfile+0x39>$/;"	l
c011424a	obj/kernel.asm	/^c011424a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011424d	obj/kernel.asm	/^c011424d:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0114250	obj/kernel.asm	/^c0114250:	85 c0                	test   %eax,%eax$/;"	l
c0114252	obj/kernel.asm	/^c0114252:	74 24                	je     c0114278 <sfs_truncfile+0x5d>$/;"	l
c0114254	obj/kernel.asm	/^c0114254:	c7 44 24 0c 34 98 11 	movl   $0xc0119834,0xc(%esp)$/;"	l
c011425b	obj/kernel.asm	/^c011425b:	c0 $/;"	l
c011425c	obj/kernel.asm	/^c011425c:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0114263	obj/kernel.asm	/^c0114263:	c0 $/;"	l
c0114264	obj/kernel.asm	/^c0114264:	c7 44 24 04 9f 03 00 	movl   $0x39f,0x4(%esp)$/;"	l
c011426b	obj/kernel.asm	/^c011426b:	00 $/;"	l
c011426c	obj/kernel.asm	/^c011426c:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0114273	obj/kernel.asm	/^c0114273:	e8 50 cc fe ff       	call   c0100ec8 <__panic>$/;"	l
c0114278	obj/kernel.asm	/^c0114278:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011427b	obj/kernel.asm	/^c011427b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011427e	obj/kernel.asm	/^c011427e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114281	obj/kernel.asm	/^c0114281:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0114284	obj/kernel.asm	/^c0114284:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0114288	obj/kernel.asm	/^c0114288:	74 0d                	je     c0114297 <sfs_truncfile+0x7c>$/;"	l
c011428a	obj/kernel.asm	/^c011428a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011428d	obj/kernel.asm	/^c011428d:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0114290	obj/kernel.asm	/^c0114290:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0114295	obj/kernel.asm	/^c0114295:	74 24                	je     c01142bb <sfs_truncfile+0xa0>$/;"	l
c0114297	obj/kernel.asm	/^c0114297:	c7 44 24 0c 30 96 11 	movl   $0xc0119630,0xc(%esp)$/;"	l
c011429e	obj/kernel.asm	/^c011429e:	c0 $/;"	l
c011429f	obj/kernel.asm	/^c011429f:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c01142a6	obj/kernel.asm	/^c01142a6:	c0 $/;"	l
c01142a7	obj/kernel.asm	/^c01142a7:	c7 44 24 04 a0 03 00 	movl   $0x3a0,0x4(%esp)$/;"	l
c01142ae	obj/kernel.asm	/^c01142ae:	00 $/;"	l
c01142af	obj/kernel.asm	/^c01142af:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c01142b6	obj/kernel.asm	/^c01142b6:	e8 0d cc fe ff       	call   c0100ec8 <__panic>$/;"	l
c01142bb	obj/kernel.asm	/^c01142bb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01142be	obj/kernel.asm	/^c01142be:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01142c1	obj/kernel.asm	/^c01142c1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01142c4	obj/kernel.asm	/^c01142c4:	8b 00                	mov    (%eax),%eax$/;"	l
c01142c6	obj/kernel.asm	/^c01142c6:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01142c9	obj/kernel.asm	/^c01142c9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01142d0	obj/kernel.asm	/^c01142d0:	c7 45 d8 00 10 00 00 	movl   $0x1000,-0x28(%ebp)$/;"	l
c01142d7	obj/kernel.asm	/^c01142d7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01142da	obj/kernel.asm	/^c01142da:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01142dd	obj/kernel.asm	/^c01142dd:	01 d0                	add    %edx,%eax$/;"	l
c01142df	obj/kernel.asm	/^c01142df:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01142e2	obj/kernel.asm	/^c01142e2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01142e7	obj/kernel.asm	/^c01142e7:	f7 75 d8             	divl   -0x28(%ebp)$/;"	l
c01142ea	obj/kernel.asm	/^c01142ea:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01142ed	obj/kernel.asm	/^c01142ed:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01142f0	obj/kernel.asm	/^c01142f0:	8b 10                	mov    (%eax),%edx$/;"	l
c01142f2	obj/kernel.asm	/^c01142f2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01142f5	obj/kernel.asm	/^c01142f5:	39 c2                	cmp    %eax,%edx$/;"	l
c01142f7	obj/kernel.asm	/^c01142f7:	75 39                	jne    c0114332 <sfs_truncfile+0x117>$/;"	l
c01142f9	obj/kernel.asm	/^c01142f9:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01142fc	obj/kernel.asm	/^c01142fc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01142ff	obj/kernel.asm	/^c01142ff:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0114302	obj/kernel.asm	/^c0114302:	74 24                	je     c0114328 <sfs_truncfile+0x10d>$/;"	l
c0114304	obj/kernel.asm	/^c0114304:	c7 44 24 0c 62 99 11 	movl   $0xc0119962,0xc(%esp)$/;"	l
c011430b	obj/kernel.asm	/^c011430b:	c0 $/;"	l
c011430c	obj/kernel.asm	/^c011430c:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c0114313	obj/kernel.asm	/^c0114313:	c0 $/;"	l
c0114314	obj/kernel.asm	/^c0114314:	c7 44 24 04 a7 03 00 	movl   $0x3a7,0x4(%esp)$/;"	l
c011431b	obj/kernel.asm	/^c011431b:	00 $/;"	l
c011431c	obj/kernel.asm	/^c011431c:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c0114323	obj/kernel.asm	/^c0114323:	e8 a0 cb fe ff       	call   c0100ec8 <__panic>$/;"	l
c0114328	obj/kernel.asm	/^c0114328:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011432d	obj/kernel.asm	/^c011432d:	e9 dd 00 00 00       	jmp    c011440f <sfs_truncfile+0x1f4>$/;"	l
c0114332	obj/kernel.asm	/^c0114332:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114335	obj/kernel.asm	/^c0114335:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114338	obj/kernel.asm	/^c0114338:	e8 09 df ff ff       	call   c0112246 <lock_sin>$/;"	l
c011433d	obj/kernel.asm	/^c011433d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0114340	obj/kernel.asm	/^c0114340:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0114343	obj/kernel.asm	/^c0114343:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114346	obj/kernel.asm	/^c0114346:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114349	obj/kernel.asm	/^c0114349:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c011434c	obj/kernel.asm	/^c011434c:	73 3f                	jae    c011438d <sfs_truncfile+0x172>$/;"	l
c011434e	obj/kernel.asm	/^c011434e:	eb 33                	jmp    c0114383 <sfs_truncfile+0x168>$/;"	l
c0114350	obj/kernel.asm	/^c0114350:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0114357	obj/kernel.asm	/^c0114357:	00 $/;"	l
c0114358	obj/kernel.asm	/^c0114358:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011435b	obj/kernel.asm	/^c011435b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011435f	obj/kernel.asm	/^c011435f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114362	obj/kernel.asm	/^c0114362:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114366	obj/kernel.asm	/^c0114366:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114369	obj/kernel.asm	/^c0114369:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011436c	obj/kernel.asm	/^c011436c:	e8 ca e9 ff ff       	call   c0112d3b <sfs_bmap_load_nolock>$/;"	l
c0114371	obj/kernel.asm	/^c0114371:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114374	obj/kernel.asm	/^c0114374:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114378	obj/kernel.asm	/^c0114378:	74 05                	je     c011437f <sfs_truncfile+0x164>$/;"	l
c011437a	obj/kernel.asm	/^c011437a:	e9 82 00 00 00       	jmp    c0114401 <sfs_truncfile+0x1e6>$/;"	l
c011437f	obj/kernel.asm	/^c011437f:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0114383	obj/kernel.asm	/^c0114383:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114386	obj/kernel.asm	/^c0114386:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0114389	obj/kernel.asm	/^c0114389:	75 c5                	jne    c0114350 <sfs_truncfile+0x135>$/;"	l
c011438b	obj/kernel.asm	/^c011438b:	eb 33                	jmp    c01143c0 <sfs_truncfile+0x1a5>$/;"	l
c011438d	obj/kernel.asm	/^c011438d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0114390	obj/kernel.asm	/^c0114390:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0114393	obj/kernel.asm	/^c0114393:	73 2b                	jae    c01143c0 <sfs_truncfile+0x1a5>$/;"	l
c0114395	obj/kernel.asm	/^c0114395:	eb 21                	jmp    c01143b8 <sfs_truncfile+0x19d>$/;"	l
c0114397	obj/kernel.asm	/^c0114397:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011439a	obj/kernel.asm	/^c011439a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011439e	obj/kernel.asm	/^c011439e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01143a1	obj/kernel.asm	/^c01143a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01143a4	obj/kernel.asm	/^c01143a4:	e8 7a ea ff ff       	call   c0112e23 <sfs_bmap_truncate_nolock>$/;"	l
c01143a9	obj/kernel.asm	/^c01143a9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01143ac	obj/kernel.asm	/^c01143ac:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01143b0	obj/kernel.asm	/^c01143b0:	74 02                	je     c01143b4 <sfs_truncfile+0x199>$/;"	l
c01143b2	obj/kernel.asm	/^c01143b2:	eb 4d                	jmp    c0114401 <sfs_truncfile+0x1e6>$/;"	l
c01143b4	obj/kernel.asm	/^c01143b4:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c01143b8	obj/kernel.asm	/^c01143b8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01143bb	obj/kernel.asm	/^c01143bb:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01143be	obj/kernel.asm	/^c01143be:	75 d7                	jne    c0114397 <sfs_truncfile+0x17c>$/;"	l
c01143c0	obj/kernel.asm	/^c01143c0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01143c3	obj/kernel.asm	/^c01143c3:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01143c6	obj/kernel.asm	/^c01143c6:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c01143c9	obj/kernel.asm	/^c01143c9:	74 24                	je     c01143ef <sfs_truncfile+0x1d4>$/;"	l
c01143cb	obj/kernel.asm	/^c01143cb:	c7 44 24 0c 77 99 11 	movl   $0xc0119977,0xc(%esp)$/;"	l
c01143d2	obj/kernel.asm	/^c01143d2:	c0 $/;"	l
c01143d3	obj/kernel.asm	/^c01143d3:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c01143da	obj/kernel.asm	/^c01143da:	c0 $/;"	l
c01143db	obj/kernel.asm	/^c01143db:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
c01143e2	obj/kernel.asm	/^c01143e2:	00 $/;"	l
c01143e3	obj/kernel.asm	/^c01143e3:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c01143ea	obj/kernel.asm	/^c01143ea:	e8 d9 ca fe ff       	call   c0100ec8 <__panic>$/;"	l
c01143ef	obj/kernel.asm	/^c01143ef:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01143f2	obj/kernel.asm	/^c01143f2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01143f5	obj/kernel.asm	/^c01143f5:	89 10                	mov    %edx,(%eax)$/;"	l
c01143f7	obj/kernel.asm	/^c01143f7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01143fa	obj/kernel.asm	/^c01143fa:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0114401	obj/kernel.asm	/^c0114401:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114404	obj/kernel.asm	/^c0114404:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114407	obj/kernel.asm	/^c0114407:	e8 50 de ff ff       	call   c011225c <unlock_sin>$/;"	l
c011440c	obj/kernel.asm	/^c011440c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011440f	obj/kernel.asm	/^c011440f:	c9                   	leave  $/;"	l
c0114410	obj/kernel.asm	/^c0114410:	c3                   	ret    $/;"	l
c0114411	obj/kernel.asm	/^c0114411 <sfs_lookup>:$/;"	l
c0114411	obj/kernel.asm	/^c0114411:	55                   	push   %ebp$/;"	l
c0114412	obj/kernel.asm	/^c0114412:	89 e5                	mov    %esp,%ebp$/;"	l
c0114414	obj/kernel.asm	/^c0114414:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0114417	obj/kernel.asm	/^c0114417:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011441a	obj/kernel.asm	/^c011441a:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011441d	obj/kernel.asm	/^c011441d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114420	obj/kernel.asm	/^c0114420:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114424	obj/kernel.asm	/^c0114424:	74 0a                	je     c0114430 <sfs_lookup+0x1f>$/;"	l
c0114426	obj/kernel.asm	/^c0114426:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114429	obj/kernel.asm	/^c0114429:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c011442c	obj/kernel.asm	/^c011442c:	85 c0                	test   %eax,%eax$/;"	l
c011442e	obj/kernel.asm	/^c011442e:	74 24                	je     c0114454 <sfs_lookup+0x43>$/;"	l
c0114430	obj/kernel.asm	/^c0114430:	c7 44 24 0c 34 98 11 	movl   $0xc0119834,0xc(%esp)$/;"	l
c0114437	obj/kernel.asm	/^c0114437:	c0 $/;"	l
c0114438	obj/kernel.asm	/^c0114438:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c011443f	obj/kernel.asm	/^c011443f:	c0 $/;"	l
c0114440	obj/kernel.asm	/^c0114440:	c7 44 24 04 d0 03 00 	movl   $0x3d0,0x4(%esp)$/;"	l
c0114447	obj/kernel.asm	/^c0114447:	00 $/;"	l
c0114448	obj/kernel.asm	/^c0114448:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c011444f	obj/kernel.asm	/^c011444f:	e8 74 ca fe ff       	call   c0100ec8 <__panic>$/;"	l
c0114454	obj/kernel.asm	/^c0114454:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114457	obj/kernel.asm	/^c0114457:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011445a	obj/kernel.asm	/^c011445a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011445d	obj/kernel.asm	/^c011445d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0114460	obj/kernel.asm	/^c0114460:	84 c0                	test   %al,%al$/;"	l
c0114462	obj/kernel.asm	/^c0114462:	74 0a                	je     c011446e <sfs_lookup+0x5d>$/;"	l
c0114464	obj/kernel.asm	/^c0114464:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114467	obj/kernel.asm	/^c0114467:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011446a	obj/kernel.asm	/^c011446a:	3c 2f                	cmp    $0x2f,%al$/;"	l
c011446c	obj/kernel.asm	/^c011446c:	75 24                	jne    c0114492 <sfs_lookup+0x81>$/;"	l
c011446e	obj/kernel.asm	/^c011446e:	c7 44 24 0c 8c 99 11 	movl   $0xc011998c,0xc(%esp)$/;"	l
c0114475	obj/kernel.asm	/^c0114475:	c0 $/;"	l
c0114476	obj/kernel.asm	/^c0114476:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c011447d	obj/kernel.asm	/^c011447d:	c0 $/;"	l
c011447e	obj/kernel.asm	/^c011447e:	c7 44 24 04 d1 03 00 	movl   $0x3d1,0x4(%esp)$/;"	l
c0114485	obj/kernel.asm	/^c0114485:	00 $/;"	l
c0114486	obj/kernel.asm	/^c0114486:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c011448d	obj/kernel.asm	/^c011448d:	e8 36 ca fe ff       	call   c0100ec8 <__panic>$/;"	l
c0114492	obj/kernel.asm	/^c0114492:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114495	obj/kernel.asm	/^c0114495:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114498	obj/kernel.asm	/^c0114498:	e8 73 ac ff ff       	call   c010f110 <inode_ref_inc>$/;"	l
c011449d	obj/kernel.asm	/^c011449d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01144a0	obj/kernel.asm	/^c01144a0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01144a3	obj/kernel.asm	/^c01144a3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01144a7	obj/kernel.asm	/^c01144a7:	74 0d                	je     c01144b6 <sfs_lookup+0xa5>$/;"	l
c01144a9	obj/kernel.asm	/^c01144a9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01144ac	obj/kernel.asm	/^c01144ac:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01144af	obj/kernel.asm	/^c01144af:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01144b4	obj/kernel.asm	/^c01144b4:	74 24                	je     c01144da <sfs_lookup+0xc9>$/;"	l
c01144b6	obj/kernel.asm	/^c01144b6:	c7 44 24 0c 30 96 11 	movl   $0xc0119630,0xc(%esp)$/;"	l
c01144bd	obj/kernel.asm	/^c01144bd:	c0 $/;"	l
c01144be	obj/kernel.asm	/^c01144be:	c7 44 24 08 df 95 11 	movl   $0xc01195df,0x8(%esp)$/;"	l
c01144c5	obj/kernel.asm	/^c01144c5:	c0 $/;"	l
c01144c6	obj/kernel.asm	/^c01144c6:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
c01144cd	obj/kernel.asm	/^c01144cd:	00 $/;"	l
c01144ce	obj/kernel.asm	/^c01144ce:	c7 04 24 77 95 11 c0 	movl   $0xc0119577,(%esp)$/;"	l
c01144d5	obj/kernel.asm	/^c01144d5:	e8 ee c9 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01144da	obj/kernel.asm	/^c01144da:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01144dd	obj/kernel.asm	/^c01144dd:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01144e0	obj/kernel.asm	/^c01144e0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01144e3	obj/kernel.asm	/^c01144e3:	8b 00                	mov    (%eax),%eax$/;"	l
c01144e5	obj/kernel.asm	/^c01144e5:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c01144e9	obj/kernel.asm	/^c01144e9:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c01144ed	obj/kernel.asm	/^c01144ed:	74 12                	je     c0114501 <sfs_lookup+0xf0>$/;"	l
c01144ef	obj/kernel.asm	/^c01144ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01144f2	obj/kernel.asm	/^c01144f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01144f5	obj/kernel.asm	/^c01144f5:	e8 30 ac ff ff       	call   c010f12a <inode_ref_dec>$/;"	l
c01144fa	obj/kernel.asm	/^c01144fa:	b8 ee ff ff ff       	mov    $0xffffffee,%eax$/;"	l
c01144ff	obj/kernel.asm	/^c01144ff:	eb 4e                	jmp    c011454f <sfs_lookup+0x13e>$/;"	l
c0114501	obj/kernel.asm	/^c0114501:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0114508	obj/kernel.asm	/^c0114508:	00 $/;"	l
c0114509	obj/kernel.asm	/^c0114509:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c011450c	obj/kernel.asm	/^c011450c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114510	obj/kernel.asm	/^c0114510:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114513	obj/kernel.asm	/^c0114513:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114517	obj/kernel.asm	/^c0114517:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011451a	obj/kernel.asm	/^c011451a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011451e	obj/kernel.asm	/^c011451e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114521	obj/kernel.asm	/^c0114521:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114524	obj/kernel.asm	/^c0114524:	e8 18 ec ff ff       	call   c0113141 <sfs_lookup_once>$/;"	l
c0114529	obj/kernel.asm	/^c0114529:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011452c	obj/kernel.asm	/^c011452c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011452f	obj/kernel.asm	/^c011452f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114532	obj/kernel.asm	/^c0114532:	e8 f3 ab ff ff       	call   c010f12a <inode_ref_dec>$/;"	l
c0114537	obj/kernel.asm	/^c0114537:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c011453b	obj/kernel.asm	/^c011453b:	74 05                	je     c0114542 <sfs_lookup+0x131>$/;"	l
c011453d	obj/kernel.asm	/^c011453d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114540	obj/kernel.asm	/^c0114540:	eb 0d                	jmp    c011454f <sfs_lookup+0x13e>$/;"	l
c0114542	obj/kernel.asm	/^c0114542:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0114545	obj/kernel.asm	/^c0114545:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114548	obj/kernel.asm	/^c0114548:	89 10                	mov    %edx,(%eax)$/;"	l
c011454a	obj/kernel.asm	/^c011454a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011454f	obj/kernel.asm	/^c011454f:	c9                   	leave  $/;"	l
c0114550	obj/kernel.asm	/^c0114550:	c3                   	ret    $/;"	l
c0114551	obj/kernel.asm	/^c0114551 <sfs_rwblock_nolock>:$/;"	l
c0114551	obj/kernel.asm	/^c0114551:	55                   	push   %ebp$/;"	l
c0114552	obj/kernel.asm	/^c0114552:	89 e5                	mov    %esp,%ebp$/;"	l
c0114554	obj/kernel.asm	/^c0114554:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0114557	obj/kernel.asm	/^c0114557:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c011455b	obj/kernel.asm	/^c011455b:	75 06                	jne    c0114563 <sfs_rwblock_nolock+0x12>$/;"	l
c011455d	obj/kernel.asm	/^c011455d:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0114561	obj/kernel.asm	/^c0114561:	75 0b                	jne    c011456e <sfs_rwblock_nolock+0x1d>$/;"	l
c0114563	obj/kernel.asm	/^c0114563:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114566	obj/kernel.asm	/^c0114566:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0114569	obj/kernel.asm	/^c0114569:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c011456c	obj/kernel.asm	/^c011456c:	77 24                	ja     c0114592 <sfs_rwblock_nolock+0x41>$/;"	l
c011456e	obj/kernel.asm	/^c011456e:	c7 44 24 0c ac 99 11 	movl   $0xc01199ac,0xc(%esp)$/;"	l
c0114575	obj/kernel.asm	/^c0114575:	c0 $/;"	l
c0114576	obj/kernel.asm	/^c0114576:	c7 44 24 08 e0 99 11 	movl   $0xc01199e0,0x8(%esp)$/;"	l
c011457d	obj/kernel.asm	/^c011457d:	c0 $/;"	l
c011457e	obj/kernel.asm	/^c011457e:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)$/;"	l
c0114585	obj/kernel.asm	/^c0114585:	00 $/;"	l
c0114586	obj/kernel.asm	/^c0114586:	c7 04 24 f5 99 11 c0 	movl   $0xc01199f5,(%esp)$/;"	l
c011458d	obj/kernel.asm	/^c011458d:	e8 36 c9 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0114592	obj/kernel.asm	/^c0114592:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114595	obj/kernel.asm	/^c0114595:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0114598	obj/kernel.asm	/^c0114598:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011459c	obj/kernel.asm	/^c011459c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c01145a3	obj/kernel.asm	/^c01145a3:	00 $/;"	l
c01145a4	obj/kernel.asm	/^c01145a4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01145a7	obj/kernel.asm	/^c01145a7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01145ab	obj/kernel.asm	/^c01145ab:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c01145ae	obj/kernel.asm	/^c01145ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01145b1	obj/kernel.asm	/^c01145b1:	e8 90 6d ff ff       	call   c010b346 <iobuf_init>$/;"	l
c01145b6	obj/kernel.asm	/^c01145b6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01145b9	obj/kernel.asm	/^c01145b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01145bc	obj/kernel.asm	/^c01145bc:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01145bf	obj/kernel.asm	/^c01145bf:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01145c2	obj/kernel.asm	/^c01145c2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01145c5	obj/kernel.asm	/^c01145c5:	8b 52 2c             	mov    0x2c(%edx),%edx$/;"	l
c01145c8	obj/kernel.asm	/^c01145c8:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
c01145cb	obj/kernel.asm	/^c01145cb:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c01145cf	obj/kernel.asm	/^c01145cf:	8b 4d f4             	mov    -0xc(%ebp),%ecx$/;"	l
c01145d2	obj/kernel.asm	/^c01145d2:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c01145d6	obj/kernel.asm	/^c01145d6:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01145d9	obj/kernel.asm	/^c01145d9:	ff d0                	call   *%eax$/;"	l
c01145db	obj/kernel.asm	/^c01145db:	c9                   	leave  $/;"	l
c01145dc	obj/kernel.asm	/^c01145dc:	c3                   	ret    $/;"	l
c01145dd	obj/kernel.asm	/^c01145dd <sfs_rwblock>:$/;"	l
c01145dd	obj/kernel.asm	/^c01145dd:	55                   	push   %ebp$/;"	l
c01145de	obj/kernel.asm	/^c01145de:	89 e5                	mov    %esp,%ebp$/;"	l
c01145e0	obj/kernel.asm	/^c01145e0:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01145e3	obj/kernel.asm	/^c01145e3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01145ea	obj/kernel.asm	/^c01145ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01145ed	obj/kernel.asm	/^c01145ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01145f0	obj/kernel.asm	/^c01145f0:	e8 df 03 00 00       	call   c01149d4 <lock_sfs_io>$/;"	l
c01145f5	obj/kernel.asm	/^c01145f5:	eb 42                	jmp    c0114639 <sfs_rwblock+0x5c>$/;"	l
c01145f7	obj/kernel.asm	/^c01145f7:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c01145fe	obj/kernel.asm	/^c01145fe:	00 $/;"	l
c01145ff	obj/kernel.asm	/^c01145ff:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0114602	obj/kernel.asm	/^c0114602:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114606	obj/kernel.asm	/^c0114606:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114609	obj/kernel.asm	/^c0114609:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011460d	obj/kernel.asm	/^c011460d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114610	obj/kernel.asm	/^c0114610:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114614	obj/kernel.asm	/^c0114614:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114617	obj/kernel.asm	/^c0114617:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011461a	obj/kernel.asm	/^c011461a:	e8 32 ff ff ff       	call   c0114551 <sfs_rwblock_nolock>$/;"	l
c011461f	obj/kernel.asm	/^c011461f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114622	obj/kernel.asm	/^c0114622:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114626	obj/kernel.asm	/^c0114626:	74 02                	je     c011462a <sfs_rwblock+0x4d>$/;"	l
c0114628	obj/kernel.asm	/^c0114628:	eb 15                	jmp    c011463f <sfs_rwblock+0x62>$/;"	l
c011462a	obj/kernel.asm	/^c011462a:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c011462e	obj/kernel.asm	/^c011462e:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0114632	obj/kernel.asm	/^c0114632:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0114639	obj/kernel.asm	/^c0114639:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c011463d	obj/kernel.asm	/^c011463d:	75 b8                	jne    c01145f7 <sfs_rwblock+0x1a>$/;"	l
c011463f	obj/kernel.asm	/^c011463f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114642	obj/kernel.asm	/^c0114642:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114645	obj/kernel.asm	/^c0114645:	e8 b6 03 00 00       	call   c0114a00 <unlock_sfs_io>$/;"	l
c011464a	obj/kernel.asm	/^c011464a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011464d	obj/kernel.asm	/^c011464d:	c9                   	leave  $/;"	l
c011464e	obj/kernel.asm	/^c011464e:	c3                   	ret    $/;"	l
c011464f	obj/kernel.asm	/^c011464f <sfs_rblock>:$/;"	l
c011464f	obj/kernel.asm	/^c011464f:	55                   	push   %ebp$/;"	l
c0114650	obj/kernel.asm	/^c0114650:	89 e5                	mov    %esp,%ebp$/;"	l
c0114652	obj/kernel.asm	/^c0114652:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0114655	obj/kernel.asm	/^c0114655:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c011465c	obj/kernel.asm	/^c011465c:	00 $/;"	l
c011465d	obj/kernel.asm	/^c011465d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114660	obj/kernel.asm	/^c0114660:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114664	obj/kernel.asm	/^c0114664:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114667	obj/kernel.asm	/^c0114667:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011466b	obj/kernel.asm	/^c011466b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011466e	obj/kernel.asm	/^c011466e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114672	obj/kernel.asm	/^c0114672:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114675	obj/kernel.asm	/^c0114675:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114678	obj/kernel.asm	/^c0114678:	e8 60 ff ff ff       	call   c01145dd <sfs_rwblock>$/;"	l
c011467d	obj/kernel.asm	/^c011467d:	c9                   	leave  $/;"	l
c011467e	obj/kernel.asm	/^c011467e:	c3                   	ret    $/;"	l
c011467f	obj/kernel.asm	/^c011467f <sfs_wblock>:$/;"	l
c011467f	obj/kernel.asm	/^c011467f:	55                   	push   %ebp$/;"	l
c0114680	obj/kernel.asm	/^c0114680:	89 e5                	mov    %esp,%ebp$/;"	l
c0114682	obj/kernel.asm	/^c0114682:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0114685	obj/kernel.asm	/^c0114685:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c011468c	obj/kernel.asm	/^c011468c:	00 $/;"	l
c011468d	obj/kernel.asm	/^c011468d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114690	obj/kernel.asm	/^c0114690:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114694	obj/kernel.asm	/^c0114694:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114697	obj/kernel.asm	/^c0114697:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011469b	obj/kernel.asm	/^c011469b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011469e	obj/kernel.asm	/^c011469e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01146a2	obj/kernel.asm	/^c01146a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01146a5	obj/kernel.asm	/^c01146a5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01146a8	obj/kernel.asm	/^c01146a8:	e8 30 ff ff ff       	call   c01145dd <sfs_rwblock>$/;"	l
c01146ad	obj/kernel.asm	/^c01146ad:	c9                   	leave  $/;"	l
c01146ae	obj/kernel.asm	/^c01146ae:	c3                   	ret    $/;"	l
c01146af	obj/kernel.asm	/^c01146af <sfs_rbuf>:$/;"	l
c01146af	obj/kernel.asm	/^c01146af:	55                   	push   %ebp$/;"	l
c01146b0	obj/kernel.asm	/^c01146b0:	89 e5                	mov    %esp,%ebp$/;"	l
c01146b2	obj/kernel.asm	/^c01146b2:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01146b5	obj/kernel.asm	/^c01146b5:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c01146b9	obj/kernel.asm	/^c01146b9:	78 18                	js     c01146d3 <sfs_rbuf+0x24>$/;"	l
c01146bb	obj/kernel.asm	/^c01146bb:	81 7d 18 ff 0f 00 00 	cmpl   $0xfff,0x18(%ebp)$/;"	l
c01146c2	obj/kernel.asm	/^c01146c2:	7f 0f                	jg     c01146d3 <sfs_rbuf+0x24>$/;"	l
c01146c4	obj/kernel.asm	/^c01146c4:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c01146c7	obj/kernel.asm	/^c01146c7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01146ca	obj/kernel.asm	/^c01146ca:	01 d0                	add    %edx,%eax$/;"	l
c01146cc	obj/kernel.asm	/^c01146cc:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c01146d1	obj/kernel.asm	/^c01146d1:	76 24                	jbe    c01146f7 <sfs_rbuf+0x48>$/;"	l
c01146d3	obj/kernel.asm	/^c01146d3:	c7 44 24 0c 0c 9a 11 	movl   $0xc0119a0c,0xc(%esp)$/;"	l
c01146da	obj/kernel.asm	/^c01146da:	c0 $/;"	l
c01146db	obj/kernel.asm	/^c01146db:	c7 44 24 08 e0 99 11 	movl   $0xc01199e0,0x8(%esp)$/;"	l
c01146e2	obj/kernel.asm	/^c01146e2:	c0 $/;"	l
c01146e3	obj/kernel.asm	/^c01146e3:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
c01146ea	obj/kernel.asm	/^c01146ea:	00 $/;"	l
c01146eb	obj/kernel.asm	/^c01146eb:	c7 04 24 f5 99 11 c0 	movl   $0xc01199f5,(%esp)$/;"	l
c01146f2	obj/kernel.asm	/^c01146f2:	e8 d1 c7 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01146f7	obj/kernel.asm	/^c01146f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01146fa	obj/kernel.asm	/^c01146fa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01146fd	obj/kernel.asm	/^c01146fd:	e8 d2 02 00 00       	call   c01149d4 <lock_sfs_io>$/;"	l
c0114702	obj/kernel.asm	/^c0114702:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114705	obj/kernel.asm	/^c0114705:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0114708	obj/kernel.asm	/^c0114708:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c011470f	obj/kernel.asm	/^c011470f:	00 $/;"	l
c0114710	obj/kernel.asm	/^c0114710:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0114717	obj/kernel.asm	/^c0114717:	00 $/;"	l
c0114718	obj/kernel.asm	/^c0114718:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c011471b	obj/kernel.asm	/^c011471b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c011471f	obj/kernel.asm	/^c011471f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114723	obj/kernel.asm	/^c0114723:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114726	obj/kernel.asm	/^c0114726:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114729	obj/kernel.asm	/^c0114729:	e8 23 fe ff ff       	call   c0114551 <sfs_rwblock_nolock>$/;"	l
c011472e	obj/kernel.asm	/^c011472e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114731	obj/kernel.asm	/^c0114731:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114735	obj/kernel.asm	/^c0114735:	75 21                	jne    c0114758 <sfs_rbuf+0xa9>$/;"	l
c0114737	obj/kernel.asm	/^c0114737:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011473a	obj/kernel.asm	/^c011473a:	8b 50 38             	mov    0x38(%eax),%edx$/;"	l
c011473d	obj/kernel.asm	/^c011473d:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0114740	obj/kernel.asm	/^c0114740:	01 c2                	add    %eax,%edx$/;"	l
c0114742	obj/kernel.asm	/^c0114742:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114745	obj/kernel.asm	/^c0114745:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114749	obj/kernel.asm	/^c0114749:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011474d	obj/kernel.asm	/^c011474d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114750	obj/kernel.asm	/^c0114750:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114753	obj/kernel.asm	/^c0114753:	e8 fa 0e 00 00       	call   c0115652 <memcpy>$/;"	l
c0114758	obj/kernel.asm	/^c0114758:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011475b	obj/kernel.asm	/^c011475b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011475e	obj/kernel.asm	/^c011475e:	e8 9d 02 00 00       	call   c0114a00 <unlock_sfs_io>$/;"	l
c0114763	obj/kernel.asm	/^c0114763:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114766	obj/kernel.asm	/^c0114766:	c9                   	leave  $/;"	l
c0114767	obj/kernel.asm	/^c0114767:	c3                   	ret    $/;"	l
c0114768	obj/kernel.asm	/^c0114768 <sfs_wbuf>:$/;"	l
c0114768	obj/kernel.asm	/^c0114768:	55                   	push   %ebp$/;"	l
c0114769	obj/kernel.asm	/^c0114769:	89 e5                	mov    %esp,%ebp$/;"	l
c011476b	obj/kernel.asm	/^c011476b:	83 ec 38             	sub    $0x38,%esp$/;"	l
c011476e	obj/kernel.asm	/^c011476e:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0114772	obj/kernel.asm	/^c0114772:	78 18                	js     c011478c <sfs_wbuf+0x24>$/;"	l
c0114774	obj/kernel.asm	/^c0114774:	81 7d 18 ff 0f 00 00 	cmpl   $0xfff,0x18(%ebp)$/;"	l
c011477b	obj/kernel.asm	/^c011477b:	7f 0f                	jg     c011478c <sfs_wbuf+0x24>$/;"	l
c011477d	obj/kernel.asm	/^c011477d:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c0114780	obj/kernel.asm	/^c0114780:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114783	obj/kernel.asm	/^c0114783:	01 d0                	add    %edx,%eax$/;"	l
c0114785	obj/kernel.asm	/^c0114785:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c011478a	obj/kernel.asm	/^c011478a:	76 24                	jbe    c01147b0 <sfs_wbuf+0x48>$/;"	l
c011478c	obj/kernel.asm	/^c011478c:	c7 44 24 0c 0c 9a 11 	movl   $0xc0119a0c,0xc(%esp)$/;"	l
c0114793	obj/kernel.asm	/^c0114793:	c0 $/;"	l
c0114794	obj/kernel.asm	/^c0114794:	c7 44 24 08 e0 99 11 	movl   $0xc01199e0,0x8(%esp)$/;"	l
c011479b	obj/kernel.asm	/^c011479b:	c0 $/;"	l
c011479c	obj/kernel.asm	/^c011479c:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)$/;"	l
c01147a3	obj/kernel.asm	/^c01147a3:	00 $/;"	l
c01147a4	obj/kernel.asm	/^c01147a4:	c7 04 24 f5 99 11 c0 	movl   $0xc01199f5,(%esp)$/;"	l
c01147ab	obj/kernel.asm	/^c01147ab:	e8 18 c7 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01147b0	obj/kernel.asm	/^c01147b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01147b3	obj/kernel.asm	/^c01147b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01147b6	obj/kernel.asm	/^c01147b6:	e8 19 02 00 00       	call   c01149d4 <lock_sfs_io>$/;"	l
c01147bb	obj/kernel.asm	/^c01147bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01147be	obj/kernel.asm	/^c01147be:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01147c1	obj/kernel.asm	/^c01147c1:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c01147c8	obj/kernel.asm	/^c01147c8:	00 $/;"	l
c01147c9	obj/kernel.asm	/^c01147c9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01147d0	obj/kernel.asm	/^c01147d0:	00 $/;"	l
c01147d1	obj/kernel.asm	/^c01147d1:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c01147d4	obj/kernel.asm	/^c01147d4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01147d8	obj/kernel.asm	/^c01147d8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01147dc	obj/kernel.asm	/^c01147dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01147df	obj/kernel.asm	/^c01147df:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01147e2	obj/kernel.asm	/^c01147e2:	e8 6a fd ff ff       	call   c0114551 <sfs_rwblock_nolock>$/;"	l
c01147e7	obj/kernel.asm	/^c01147e7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01147ea	obj/kernel.asm	/^c01147ea:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01147ee	obj/kernel.asm	/^c01147ee:	75 50                	jne    c0114840 <sfs_wbuf+0xd8>$/;"	l
c01147f0	obj/kernel.asm	/^c01147f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01147f3	obj/kernel.asm	/^c01147f3:	8b 50 38             	mov    0x38(%eax),%edx$/;"	l
c01147f6	obj/kernel.asm	/^c01147f6:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01147f9	obj/kernel.asm	/^c01147f9:	01 c2                	add    %eax,%edx$/;"	l
c01147fb	obj/kernel.asm	/^c01147fb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01147fe	obj/kernel.asm	/^c01147fe:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114802	obj/kernel.asm	/^c0114802:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114805	obj/kernel.asm	/^c0114805:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114809	obj/kernel.asm	/^c0114809:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011480c	obj/kernel.asm	/^c011480c:	e8 41 0e 00 00       	call   c0115652 <memcpy>$/;"	l
c0114811	obj/kernel.asm	/^c0114811:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114814	obj/kernel.asm	/^c0114814:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0114817	obj/kernel.asm	/^c0114817:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c011481e	obj/kernel.asm	/^c011481e:	00 $/;"	l
c011481f	obj/kernel.asm	/^c011481f:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0114826	obj/kernel.asm	/^c0114826:	00 $/;"	l
c0114827	obj/kernel.asm	/^c0114827:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c011482a	obj/kernel.asm	/^c011482a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c011482e	obj/kernel.asm	/^c011482e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114832	obj/kernel.asm	/^c0114832:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114835	obj/kernel.asm	/^c0114835:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114838	obj/kernel.asm	/^c0114838:	e8 14 fd ff ff       	call   c0114551 <sfs_rwblock_nolock>$/;"	l
c011483d	obj/kernel.asm	/^c011483d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114840	obj/kernel.asm	/^c0114840:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114843	obj/kernel.asm	/^c0114843:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114846	obj/kernel.asm	/^c0114846:	e8 b5 01 00 00       	call   c0114a00 <unlock_sfs_io>$/;"	l
c011484b	obj/kernel.asm	/^c011484b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011484e	obj/kernel.asm	/^c011484e:	c9                   	leave  $/;"	l
c011484f	obj/kernel.asm	/^c011484f:	c3                   	ret    $/;"	l
c0114850	obj/kernel.asm	/^c0114850 <sfs_sync_super>:$/;"	l
c0114850	obj/kernel.asm	/^c0114850:	55                   	push   %ebp$/;"	l
c0114851	obj/kernel.asm	/^c0114851:	89 e5                	mov    %esp,%ebp$/;"	l
c0114853	obj/kernel.asm	/^c0114853:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0114856	obj/kernel.asm	/^c0114856:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114859	obj/kernel.asm	/^c0114859:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011485c	obj/kernel.asm	/^c011485c:	e8 73 01 00 00       	call   c01149d4 <lock_sfs_io>$/;"	l
c0114861	obj/kernel.asm	/^c0114861:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114864	obj/kernel.asm	/^c0114864:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0114867	obj/kernel.asm	/^c0114867:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c011486e	obj/kernel.asm	/^c011486e:	00 $/;"	l
c011486f	obj/kernel.asm	/^c011486f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0114876	obj/kernel.asm	/^c0114876:	00 $/;"	l
c0114877	obj/kernel.asm	/^c0114877:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011487a	obj/kernel.asm	/^c011487a:	e8 f1 0c 00 00       	call   c0115570 <memset>$/;"	l
c011487f	obj/kernel.asm	/^c011487f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114882	obj/kernel.asm	/^c0114882:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114885	obj/kernel.asm	/^c0114885:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0114888	obj/kernel.asm	/^c0114888:	c7 44 24 08 2c 00 00 	movl   $0x2c,0x8(%esp)$/;"	l
c011488f	obj/kernel.asm	/^c011488f:	00 $/;"	l
c0114890	obj/kernel.asm	/^c0114890:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0114894	obj/kernel.asm	/^c0114894:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114897	obj/kernel.asm	/^c0114897:	e8 b6 0d 00 00       	call   c0115652 <memcpy>$/;"	l
c011489c	obj/kernel.asm	/^c011489c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011489f	obj/kernel.asm	/^c011489f:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01148a2	obj/kernel.asm	/^c01148a2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c01148a9	obj/kernel.asm	/^c01148a9:	00 $/;"	l
c01148aa	obj/kernel.asm	/^c01148aa:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c01148b1	obj/kernel.asm	/^c01148b1:	00 $/;"	l
c01148b2	obj/kernel.asm	/^c01148b2:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01148b9	obj/kernel.asm	/^c01148b9:	00 $/;"	l
c01148ba	obj/kernel.asm	/^c01148ba:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01148be	obj/kernel.asm	/^c01148be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01148c1	obj/kernel.asm	/^c01148c1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01148c4	obj/kernel.asm	/^c01148c4:	e8 88 fc ff ff       	call   c0114551 <sfs_rwblock_nolock>$/;"	l
c01148c9	obj/kernel.asm	/^c01148c9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01148cc	obj/kernel.asm	/^c01148cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01148cf	obj/kernel.asm	/^c01148cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01148d2	obj/kernel.asm	/^c01148d2:	e8 29 01 00 00       	call   c0114a00 <unlock_sfs_io>$/;"	l
c01148d7	obj/kernel.asm	/^c01148d7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01148da	obj/kernel.asm	/^c01148da:	c9                   	leave  $/;"	l
c01148db	obj/kernel.asm	/^c01148db:	c3                   	ret    $/;"	l
c01148dc	obj/kernel.asm	/^c01148dc <sfs_sync_freemap>:$/;"	l
c01148dc	obj/kernel.asm	/^c01148dc:	55                   	push   %ebp$/;"	l
c01148dd	obj/kernel.asm	/^c01148dd:	89 e5                	mov    %esp,%ebp$/;"	l
c01148df	obj/kernel.asm	/^c01148df:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01148e2	obj/kernel.asm	/^c01148e2:	c7 45 f4 00 80 00 00 	movl   $0x8000,-0xc(%ebp)$/;"	l
c01148e9	obj/kernel.asm	/^c01148e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01148ec	obj/kernel.asm	/^c01148ec:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01148ef	obj/kernel.asm	/^c01148ef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01148f2	obj/kernel.asm	/^c01148f2:	01 d0                	add    %edx,%eax$/;"	l
c01148f4	obj/kernel.asm	/^c01148f4:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01148f7	obj/kernel.asm	/^c01148f7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01148fc	obj/kernel.asm	/^c01148fc:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
c01148ff	obj/kernel.asm	/^c01148ff:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114902	obj/kernel.asm	/^c0114902:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114905	obj/kernel.asm	/^c0114905:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0114908	obj/kernel.asm	/^c0114908:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c011490f	obj/kernel.asm	/^c011490f:	00 $/;"	l
c0114910	obj/kernel.asm	/^c0114910:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114913	obj/kernel.asm	/^c0114913:	e8 fd cf ff ff       	call   c0111915 <bitmap_getdata>$/;"	l
c0114918	obj/kernel.asm	/^c0114918:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c011491b	obj/kernel.asm	/^c011491b:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c011491f	obj/kernel.asm	/^c011491f:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)$/;"	l
c0114926	obj/kernel.asm	/^c0114926:	00 $/;"	l
c0114927	obj/kernel.asm	/^c0114927:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011492b	obj/kernel.asm	/^c011492b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011492e	obj/kernel.asm	/^c011492e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114931	obj/kernel.asm	/^c0114931:	e8 49 fd ff ff       	call   c011467f <sfs_wblock>$/;"	l
c0114936	obj/kernel.asm	/^c0114936:	c9                   	leave  $/;"	l
c0114937	obj/kernel.asm	/^c0114937:	c3                   	ret    $/;"	l
c0114938	obj/kernel.asm	/^c0114938 <sfs_clear_block>:$/;"	l
c0114938	obj/kernel.asm	/^c0114938:	55                   	push   %ebp$/;"	l
c0114939	obj/kernel.asm	/^c0114939:	89 e5                	mov    %esp,%ebp$/;"	l
c011493b	obj/kernel.asm	/^c011493b:	83 ec 38             	sub    $0x38,%esp$/;"	l
c011493e	obj/kernel.asm	/^c011493e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114941	obj/kernel.asm	/^c0114941:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114944	obj/kernel.asm	/^c0114944:	e8 8b 00 00 00       	call   c01149d4 <lock_sfs_io>$/;"	l
c0114949	obj/kernel.asm	/^c0114949:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011494c	obj/kernel.asm	/^c011494c:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011494f	obj/kernel.asm	/^c011494f:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0114956	obj/kernel.asm	/^c0114956:	00 $/;"	l
c0114957	obj/kernel.asm	/^c0114957:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c011495e	obj/kernel.asm	/^c011495e:	00 $/;"	l
c011495f	obj/kernel.asm	/^c011495f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114962	obj/kernel.asm	/^c0114962:	e8 09 0c 00 00       	call   c0115570 <memset>$/;"	l
c0114967	obj/kernel.asm	/^c0114967:	eb 3f                	jmp    c01149a8 <sfs_clear_block+0x70>$/;"	l
c0114969	obj/kernel.asm	/^c0114969:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011496c	obj/kernel.asm	/^c011496c:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011496f	obj/kernel.asm	/^c011496f:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c0114976	obj/kernel.asm	/^c0114976:	00 $/;"	l
c0114977	obj/kernel.asm	/^c0114977:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c011497e	obj/kernel.asm	/^c011497e:	00 $/;"	l
c011497f	obj/kernel.asm	/^c011497f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0114982	obj/kernel.asm	/^c0114982:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0114986	obj/kernel.asm	/^c0114986:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011498a	obj/kernel.asm	/^c011498a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011498d	obj/kernel.asm	/^c011498d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114990	obj/kernel.asm	/^c0114990:	e8 bc fb ff ff       	call   c0114551 <sfs_rwblock_nolock>$/;"	l
c0114995	obj/kernel.asm	/^c0114995:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114998	obj/kernel.asm	/^c0114998:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011499c	obj/kernel.asm	/^c011499c:	74 02                	je     c01149a0 <sfs_clear_block+0x68>$/;"	l
c011499e	obj/kernel.asm	/^c011499e:	eb 0e                	jmp    c01149ae <sfs_clear_block+0x76>$/;"	l
c01149a0	obj/kernel.asm	/^c01149a0:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c01149a4	obj/kernel.asm	/^c01149a4:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c01149a8	obj/kernel.asm	/^c01149a8:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01149ac	obj/kernel.asm	/^c01149ac:	75 bb                	jne    c0114969 <sfs_clear_block+0x31>$/;"	l
c01149ae	obj/kernel.asm	/^c01149ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01149b1	obj/kernel.asm	/^c01149b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01149b4	obj/kernel.asm	/^c01149b4:	e8 47 00 00 00       	call   c0114a00 <unlock_sfs_io>$/;"	l
c01149b9	obj/kernel.asm	/^c01149b9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01149bc	obj/kernel.asm	/^c01149bc:	c9                   	leave  $/;"	l
c01149bd	obj/kernel.asm	/^c01149bd:	c3                   	ret    $/;"	l
c01149be	obj/kernel.asm	/^c01149be <lock_sfs_fs>:$/;"	l
c01149be	obj/kernel.asm	/^c01149be:	55                   	push   %ebp$/;"	l
c01149bf	obj/kernel.asm	/^c01149bf:	89 e5                	mov    %esp,%ebp$/;"	l
c01149c1	obj/kernel.asm	/^c01149c1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01149c4	obj/kernel.asm	/^c01149c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01149c7	obj/kernel.asm	/^c01149c7:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c01149ca	obj/kernel.asm	/^c01149ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01149cd	obj/kernel.asm	/^c01149cd:	e8 2d 53 ff ff       	call   c0109cff <down>$/;"	l
c01149d2	obj/kernel.asm	/^c01149d2:	c9                   	leave  $/;"	l
c01149d3	obj/kernel.asm	/^c01149d3:	c3                   	ret    $/;"	l
c01149d4	obj/kernel.asm	/^c01149d4 <lock_sfs_io>:$/;"	l
c01149d4	obj/kernel.asm	/^c01149d4:	55                   	push   %ebp$/;"	l
c01149d5	obj/kernel.asm	/^c01149d5:	89 e5                	mov    %esp,%ebp$/;"	l
c01149d7	obj/kernel.asm	/^c01149d7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01149da	obj/kernel.asm	/^c01149da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01149dd	obj/kernel.asm	/^c01149dd:	83 c0 48             	add    $0x48,%eax$/;"	l
c01149e0	obj/kernel.asm	/^c01149e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01149e3	obj/kernel.asm	/^c01149e3:	e8 17 53 ff ff       	call   c0109cff <down>$/;"	l
c01149e8	obj/kernel.asm	/^c01149e8:	c9                   	leave  $/;"	l
c01149e9	obj/kernel.asm	/^c01149e9:	c3                   	ret    $/;"	l
c01149ea	obj/kernel.asm	/^c01149ea <unlock_sfs_fs>:$/;"	l
c01149ea	obj/kernel.asm	/^c01149ea:	55                   	push   %ebp$/;"	l
c01149eb	obj/kernel.asm	/^c01149eb:	89 e5                	mov    %esp,%ebp$/;"	l
c01149ed	obj/kernel.asm	/^c01149ed:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01149f0	obj/kernel.asm	/^c01149f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01149f3	obj/kernel.asm	/^c01149f3:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c01149f6	obj/kernel.asm	/^c01149f6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01149f9	obj/kernel.asm	/^c01149f9:	e8 e6 52 ff ff       	call   c0109ce4 <up>$/;"	l
c01149fe	obj/kernel.asm	/^c01149fe:	c9                   	leave  $/;"	l
c01149ff	obj/kernel.asm	/^c01149ff:	c3                   	ret    $/;"	l
c0114a00	obj/kernel.asm	/^c0114a00 <unlock_sfs_io>:$/;"	l
c0114a00	obj/kernel.asm	/^c0114a00:	55                   	push   %ebp$/;"	l
c0114a01	obj/kernel.asm	/^c0114a01:	89 e5                	mov    %esp,%ebp$/;"	l
c0114a03	obj/kernel.asm	/^c0114a03:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0114a06	obj/kernel.asm	/^c0114a06:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114a09	obj/kernel.asm	/^c0114a09:	83 c0 48             	add    $0x48,%eax$/;"	l
c0114a0c	obj/kernel.asm	/^c0114a0c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114a0f	obj/kernel.asm	/^c0114a0f:	e8 d0 52 ff ff       	call   c0109ce4 <up>$/;"	l
c0114a14	obj/kernel.asm	/^c0114a14:	c9                   	leave  $/;"	l
c0114a15	obj/kernel.asm	/^c0114a15:	c3                   	ret    $/;"	l
c0114a16	obj/kernel.asm	/^c0114a16 <hash32>:$/;"	l
c0114a16	obj/kernel.asm	/^c0114a16:	55                   	push   %ebp$/;"	l
c0114a17	obj/kernel.asm	/^c0114a17:	89 e5                	mov    %esp,%ebp$/;"	l
c0114a19	obj/kernel.asm	/^c0114a19:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0114a1c	obj/kernel.asm	/^c0114a1c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114a1f	obj/kernel.asm	/^c0114a1f:	69 c0 01 00 37 9e    	imul   $0x9e370001,%eax,%eax$/;"	l
c0114a25	obj/kernel.asm	/^c0114a25:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0114a28	obj/kernel.asm	/^c0114a28:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
c0114a2d	obj/kernel.asm	/^c0114a2d:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c0114a30	obj/kernel.asm	/^c0114a30:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0114a33	obj/kernel.asm	/^c0114a33:	89 c1                	mov    %eax,%ecx$/;"	l
c0114a35	obj/kernel.asm	/^c0114a35:	d3 ea                	shr    %cl,%edx$/;"	d
c0114a37	obj/kernel.asm	/^c0114a37:	89 d0                	mov    %edx,%eax$/;"	l
c0114a39	obj/kernel.asm	/^c0114a39:	c9                   	leave  $/;"	l
c0114a3a	obj/kernel.asm	/^c0114a3a:	c3                   	ret    $/;"	l
c0114a3b	obj/kernel.asm	/^c0114a3b <printnum>:$/;"	l
c0114a3b	obj/kernel.asm	/^c0114a3b:	55                   	push   %ebp$/;"	l
c0114a3c	obj/kernel.asm	/^c0114a3c:	89 e5                	mov    %esp,%ebp$/;"	l
c0114a3e	obj/kernel.asm	/^c0114a3e:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0114a41	obj/kernel.asm	/^c0114a41:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114a44	obj/kernel.asm	/^c0114a44:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0114a47	obj/kernel.asm	/^c0114a47:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0114a4a	obj/kernel.asm	/^c0114a4a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0114a4d	obj/kernel.asm	/^c0114a4d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0114a50	obj/kernel.asm	/^c0114a50:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0114a53	obj/kernel.asm	/^c0114a53:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114a56	obj/kernel.asm	/^c0114a56:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0114a59	obj/kernel.asm	/^c0114a59:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0114a5c	obj/kernel.asm	/^c0114a5c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0114a5f	obj/kernel.asm	/^c0114a5f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114a62	obj/kernel.asm	/^c0114a62:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0114a65	obj/kernel.asm	/^c0114a65:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0114a68	obj/kernel.asm	/^c0114a68:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c0114a6b	obj/kernel.asm	/^c0114a6b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114a6e	obj/kernel.asm	/^c0114a6e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114a71	obj/kernel.asm	/^c0114a71:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0114a75	obj/kernel.asm	/^c0114a75:	74 1c                	je     c0114a93 <printnum+0x58>$/;"	l
c0114a77	obj/kernel.asm	/^c0114a77:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114a7a	obj/kernel.asm	/^c0114a7a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0114a7f	obj/kernel.asm	/^c0114a7f:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c0114a82	obj/kernel.asm	/^c0114a82:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0114a85	obj/kernel.asm	/^c0114a85:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114a88	obj/kernel.asm	/^c0114a88:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0114a8d	obj/kernel.asm	/^c0114a8d:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c0114a90	obj/kernel.asm	/^c0114a90:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114a93	obj/kernel.asm	/^c0114a93:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114a96	obj/kernel.asm	/^c0114a96:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0114a99	obj/kernel.asm	/^c0114a99:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c0114a9c	obj/kernel.asm	/^c0114a9c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0114a9f	obj/kernel.asm	/^c0114a9f:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c0114aa2	obj/kernel.asm	/^c0114aa2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114aa5	obj/kernel.asm	/^c0114aa5:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0114aa8	obj/kernel.asm	/^c0114aa8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114aab	obj/kernel.asm	/^c0114aab:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0114aae	obj/kernel.asm	/^c0114aae:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0114ab1	obj/kernel.asm	/^c0114ab1:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0114ab4	obj/kernel.asm	/^c0114ab4:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0114ab7	obj/kernel.asm	/^c0114ab7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0114abc	obj/kernel.asm	/^c0114abc:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0114abf	obj/kernel.asm	/^c0114abf:	77 64                	ja     c0114b25 <printnum+0xea>$/;"	l
c0114ac1	obj/kernel.asm	/^c0114ac1:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0114ac4	obj/kernel.asm	/^c0114ac4:	72 05                	jb     c0114acb <printnum+0x90>$/;"	l
c0114ac6	obj/kernel.asm	/^c0114ac6:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c0114ac9	obj/kernel.asm	/^c0114ac9:	77 5a                	ja     c0114b25 <printnum+0xea>$/;"	l
c0114acb	obj/kernel.asm	/^c0114acb:	8b 45 20             	mov    0x20(%ebp),%eax$/;"	l
c0114ace	obj/kernel.asm	/^c0114ace:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0114ad1	obj/kernel.asm	/^c0114ad1:	8b 45 24             	mov    0x24(%ebp),%eax$/;"	l
c0114ad4	obj/kernel.asm	/^c0114ad4:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
c0114ad8	obj/kernel.asm	/^c0114ad8:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
c0114adc	obj/kernel.asm	/^c0114adc:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0114adf	obj/kernel.asm	/^c0114adf:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0114ae3	obj/kernel.asm	/^c0114ae3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114ae6	obj/kernel.asm	/^c0114ae6:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0114ae9	obj/kernel.asm	/^c0114ae9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114aed	obj/kernel.asm	/^c0114aed:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0114af1	obj/kernel.asm	/^c0114af1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114af4	obj/kernel.asm	/^c0114af4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114af8	obj/kernel.asm	/^c0114af8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114afb	obj/kernel.asm	/^c0114afb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114aff	obj/kernel.asm	/^c0114aff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114b02	obj/kernel.asm	/^c0114b02:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114b05	obj/kernel.asm	/^c0114b05:	e8 31 ff ff ff       	call   c0114a3b <printnum>$/;"	l
c0114b0a	obj/kernel.asm	/^c0114b0a:	eb 23                	jmp    c0114b2f <printnum+0xf4>$/;"	l
c0114b0c	obj/kernel.asm	/^c0114b0c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114b0f	obj/kernel.asm	/^c0114b0f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114b13	obj/kernel.asm	/^c0114b13:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114b16	obj/kernel.asm	/^c0114b16:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114b1a	obj/kernel.asm	/^c0114b1a:	8b 45 24             	mov    0x24(%ebp),%eax$/;"	l
c0114b1d	obj/kernel.asm	/^c0114b1d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114b20	obj/kernel.asm	/^c0114b20:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114b23	obj/kernel.asm	/^c0114b23:	ff d0                	call   *%eax$/;"	l
c0114b25	obj/kernel.asm	/^c0114b25:	83 6d 20 01          	subl   $0x1,0x20(%ebp)$/;"	l
c0114b29	obj/kernel.asm	/^c0114b29:	83 7d 20 00          	cmpl   $0x0,0x20(%ebp)$/;"	l
c0114b2d	obj/kernel.asm	/^c0114b2d:	7f dd                	jg     c0114b0c <printnum+0xd1>$/;"	l
c0114b2f	obj/kernel.asm	/^c0114b2f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0114b32	obj/kernel.asm	/^c0114b32:	05 64 9c 11 c0       	add    $0xc0119c64,%eax$/;"	l
c0114b37	obj/kernel.asm	/^c0114b37:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0114b3a	obj/kernel.asm	/^c0114b3a:	0f be c0             	movsbl %al,%eax$/;"	l
c0114b3d	obj/kernel.asm	/^c0114b3d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0114b40	obj/kernel.asm	/^c0114b40:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0114b44	obj/kernel.asm	/^c0114b44:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0114b47	obj/kernel.asm	/^c0114b47:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0114b4b	obj/kernel.asm	/^c0114b4b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114b4e	obj/kernel.asm	/^c0114b4e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114b51	obj/kernel.asm	/^c0114b51:	ff d0                	call   *%eax$/;"	l
c0114b53	obj/kernel.asm	/^c0114b53:	c9                   	leave  $/;"	l
c0114b54	obj/kernel.asm	/^c0114b54:	c3                   	ret    $/;"	l
c0114b55	obj/kernel.asm	/^c0114b55 <getuint>:$/;"	l
c0114b55	obj/kernel.asm	/^c0114b55:	55                   	push   %ebp$/;"	l
c0114b56	obj/kernel.asm	/^c0114b56:	89 e5                	mov    %esp,%ebp$/;"	l
c0114b58	obj/kernel.asm	/^c0114b58:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c0114b5c	obj/kernel.asm	/^c0114b5c:	7e 14                	jle    c0114b72 <getuint+0x1d>$/;"	l
c0114b5e	obj/kernel.asm	/^c0114b5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114b61	obj/kernel.asm	/^c0114b61:	8b 00                	mov    (%eax),%eax$/;"	l
c0114b63	obj/kernel.asm	/^c0114b63:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c0114b66	obj/kernel.asm	/^c0114b66:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114b69	obj/kernel.asm	/^c0114b69:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0114b6b	obj/kernel.asm	/^c0114b6b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0114b6e	obj/kernel.asm	/^c0114b6e:	8b 00                	mov    (%eax),%eax$/;"	l
c0114b70	obj/kernel.asm	/^c0114b70:	eb 30                	jmp    c0114ba2 <getuint+0x4d>$/;"	l
c0114b72	obj/kernel.asm	/^c0114b72:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0114b76	obj/kernel.asm	/^c0114b76:	74 16                	je     c0114b8e <getuint+0x39>$/;"	l
c0114b78	obj/kernel.asm	/^c0114b78:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114b7b	obj/kernel.asm	/^c0114b7b:	8b 00                	mov    (%eax),%eax$/;"	l
c0114b7d	obj/kernel.asm	/^c0114b7d:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0114b80	obj/kernel.asm	/^c0114b80:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114b83	obj/kernel.asm	/^c0114b83:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0114b85	obj/kernel.asm	/^c0114b85:	8b 00                	mov    (%eax),%eax$/;"	l
c0114b87	obj/kernel.asm	/^c0114b87:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0114b8c	obj/kernel.asm	/^c0114b8c:	eb 14                	jmp    c0114ba2 <getuint+0x4d>$/;"	l
c0114b8e	obj/kernel.asm	/^c0114b8e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114b91	obj/kernel.asm	/^c0114b91:	8b 00                	mov    (%eax),%eax$/;"	l
c0114b93	obj/kernel.asm	/^c0114b93:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0114b96	obj/kernel.asm	/^c0114b96:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114b99	obj/kernel.asm	/^c0114b99:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0114b9b	obj/kernel.asm	/^c0114b9b:	8b 00                	mov    (%eax),%eax$/;"	l
c0114b9d	obj/kernel.asm	/^c0114b9d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0114ba2	obj/kernel.asm	/^c0114ba2:	5d                   	pop    %ebp$/;"	l
c0114ba3	obj/kernel.asm	/^c0114ba3:	c3                   	ret    $/;"	l
c0114ba4	obj/kernel.asm	/^c0114ba4 <getint>:$/;"	l
c0114ba4	obj/kernel.asm	/^c0114ba4:	55                   	push   %ebp$/;"	l
c0114ba5	obj/kernel.asm	/^c0114ba5:	89 e5                	mov    %esp,%ebp$/;"	l
c0114ba7	obj/kernel.asm	/^c0114ba7:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c0114bab	obj/kernel.asm	/^c0114bab:	7e 14                	jle    c0114bc1 <getint+0x1d>$/;"	l
c0114bad	obj/kernel.asm	/^c0114bad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114bb0	obj/kernel.asm	/^c0114bb0:	8b 00                	mov    (%eax),%eax$/;"	l
c0114bb2	obj/kernel.asm	/^c0114bb2:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c0114bb5	obj/kernel.asm	/^c0114bb5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114bb8	obj/kernel.asm	/^c0114bb8:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0114bba	obj/kernel.asm	/^c0114bba:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0114bbd	obj/kernel.asm	/^c0114bbd:	8b 00                	mov    (%eax),%eax$/;"	l
c0114bbf	obj/kernel.asm	/^c0114bbf:	eb 28                	jmp    c0114be9 <getint+0x45>$/;"	l
c0114bc1	obj/kernel.asm	/^c0114bc1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0114bc5	obj/kernel.asm	/^c0114bc5:	74 12                	je     c0114bd9 <getint+0x35>$/;"	l
c0114bc7	obj/kernel.asm	/^c0114bc7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114bca	obj/kernel.asm	/^c0114bca:	8b 00                	mov    (%eax),%eax$/;"	l
c0114bcc	obj/kernel.asm	/^c0114bcc:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0114bcf	obj/kernel.asm	/^c0114bcf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114bd2	obj/kernel.asm	/^c0114bd2:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0114bd4	obj/kernel.asm	/^c0114bd4:	8b 00                	mov    (%eax),%eax$/;"	l
c0114bd6	obj/kernel.asm	/^c0114bd6:	99                   	cltd   $/;"	l
c0114bd7	obj/kernel.asm	/^c0114bd7:	eb 10                	jmp    c0114be9 <getint+0x45>$/;"	l
c0114bd9	obj/kernel.asm	/^c0114bd9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114bdc	obj/kernel.asm	/^c0114bdc:	8b 00                	mov    (%eax),%eax$/;"	l
c0114bde	obj/kernel.asm	/^c0114bde:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0114be1	obj/kernel.asm	/^c0114be1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114be4	obj/kernel.asm	/^c0114be4:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0114be6	obj/kernel.asm	/^c0114be6:	8b 00                	mov    (%eax),%eax$/;"	l
c0114be8	obj/kernel.asm	/^c0114be8:	99                   	cltd   $/;"	l
c0114be9	obj/kernel.asm	/^c0114be9:	5d                   	pop    %ebp$/;"	l
c0114bea	obj/kernel.asm	/^c0114bea:	c3                   	ret    $/;"	l
c0114beb	obj/kernel.asm	/^c0114beb <printfmt>:$/;"	l
c0114beb	obj/kernel.asm	/^c0114beb:	55                   	push   %ebp$/;"	l
c0114bec	obj/kernel.asm	/^c0114bec:	89 e5                	mov    %esp,%ebp$/;"	l
c0114bee	obj/kernel.asm	/^c0114bee:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0114bf1	obj/kernel.asm	/^c0114bf1:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0114bf4	obj/kernel.asm	/^c0114bf4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114bf7	obj/kernel.asm	/^c0114bf7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114bfa	obj/kernel.asm	/^c0114bfa:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0114bfe	obj/kernel.asm	/^c0114bfe:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114c01	obj/kernel.asm	/^c0114c01:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114c05	obj/kernel.asm	/^c0114c05:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114c08	obj/kernel.asm	/^c0114c08:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114c0c	obj/kernel.asm	/^c0114c0c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114c0f	obj/kernel.asm	/^c0114c0f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114c13	obj/kernel.asm	/^c0114c13:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114c16	obj/kernel.asm	/^c0114c16:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114c19	obj/kernel.asm	/^c0114c19:	e8 02 00 00 00       	call   c0114c20 <vprintfmt>$/;"	l
c0114c1e	obj/kernel.asm	/^c0114c1e:	c9                   	leave  $/;"	l
c0114c1f	obj/kernel.asm	/^c0114c1f:	c3                   	ret    $/;"	l
c0114c20	obj/kernel.asm	/^c0114c20 <vprintfmt>:$/;"	l
c0114c20	obj/kernel.asm	/^c0114c20:	55                   	push   %ebp$/;"	l
c0114c21	obj/kernel.asm	/^c0114c21:	89 e5                	mov    %esp,%ebp$/;"	l
c0114c23	obj/kernel.asm	/^c0114c23:	56                   	push   %esi$/;"	l
c0114c24	obj/kernel.asm	/^c0114c24:	53                   	push   %ebx$/;"	l
c0114c25	obj/kernel.asm	/^c0114c25:	83 ec 40             	sub    $0x40,%esp$/;"	l
c0114c28	obj/kernel.asm	/^c0114c28:	eb 1f                	jmp    c0114c49 <vprintfmt+0x29>$/;"	l
c0114c2a	obj/kernel.asm	/^c0114c2a:	85 db                	test   %ebx,%ebx$/;"	l
c0114c2c	obj/kernel.asm	/^c0114c2c:	75 05                	jne    c0114c33 <vprintfmt+0x13>$/;"	l
c0114c2e	obj/kernel.asm	/^c0114c2e:	e9 33 04 00 00       	jmp    c0115066 <vprintfmt+0x446>$/;"	l
c0114c33	obj/kernel.asm	/^c0114c33:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114c36	obj/kernel.asm	/^c0114c36:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114c3a	obj/kernel.asm	/^c0114c3a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114c3d	obj/kernel.asm	/^c0114c3d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114c41	obj/kernel.asm	/^c0114c41:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c0114c44	obj/kernel.asm	/^c0114c44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114c47	obj/kernel.asm	/^c0114c47:	ff d0                	call   *%eax$/;"	l
c0114c49	obj/kernel.asm	/^c0114c49:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114c4c	obj/kernel.asm	/^c0114c4c:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0114c4f	obj/kernel.asm	/^c0114c4f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c0114c52	obj/kernel.asm	/^c0114c52:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0114c55	obj/kernel.asm	/^c0114c55:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c0114c58	obj/kernel.asm	/^c0114c58:	83 fb 25             	cmp    $0x25,%ebx$/;"	l
c0114c5b	obj/kernel.asm	/^c0114c5b:	75 cd                	jne    c0114c2a <vprintfmt+0xa>$/;"	l
c0114c5d	obj/kernel.asm	/^c0114c5d:	c6 45 db 20          	movb   $0x20,-0x25(%ebp)$/;"	l
c0114c61	obj/kernel.asm	/^c0114c61:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c0114c68	obj/kernel.asm	/^c0114c68:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114c6b	obj/kernel.asm	/^c0114c6b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114c6e	obj/kernel.asm	/^c0114c6e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0114c75	obj/kernel.asm	/^c0114c75:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0114c78	obj/kernel.asm	/^c0114c78:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0114c7b	obj/kernel.asm	/^c0114c7b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114c7e	obj/kernel.asm	/^c0114c7e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0114c81	obj/kernel.asm	/^c0114c81:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c0114c84	obj/kernel.asm	/^c0114c84:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0114c87	obj/kernel.asm	/^c0114c87:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c0114c8a	obj/kernel.asm	/^c0114c8a:	8d 43 dd             	lea    -0x23(%ebx),%eax$/;"	l
c0114c8d	obj/kernel.asm	/^c0114c8d:	83 f8 55             	cmp    $0x55,%eax$/;"	l
c0114c90	obj/kernel.asm	/^c0114c90:	0f 87 98 03 00 00    	ja     c011502e <vprintfmt+0x40e>$/;"	l
c0114c96	obj/kernel.asm	/^c0114c96:	8b 04 85 88 9c 11 c0 	mov    -0x3fee6378(,%eax,4),%eax$/;"	l
c0114c9d	obj/kernel.asm	/^c0114c9d:	ff e0                	jmp    *%eax$/;"	l
c0114c9f	obj/kernel.asm	/^c0114c9f:	c6 45 db 2d          	movb   $0x2d,-0x25(%ebp)$/;"	l
c0114ca3	obj/kernel.asm	/^c0114ca3:	eb d6                	jmp    c0114c7b <vprintfmt+0x5b>$/;"	l
c0114ca5	obj/kernel.asm	/^c0114ca5:	c6 45 db 30          	movb   $0x30,-0x25(%ebp)$/;"	l
c0114ca9	obj/kernel.asm	/^c0114ca9:	eb d0                	jmp    c0114c7b <vprintfmt+0x5b>$/;"	l
c0114cab	obj/kernel.asm	/^c0114cab:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0114cb2	obj/kernel.asm	/^c0114cb2:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0114cb5	obj/kernel.asm	/^c0114cb5:	89 d0                	mov    %edx,%eax$/;"	l
c0114cb7	obj/kernel.asm	/^c0114cb7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0114cba	obj/kernel.asm	/^c0114cba:	01 d0                	add    %edx,%eax$/;"	l
c0114cbc	obj/kernel.asm	/^c0114cbc:	01 c0                	add    %eax,%eax$/;"	l
c0114cbe	obj/kernel.asm	/^c0114cbe:	01 d8                	add    %ebx,%eax$/;"	l
c0114cc0	obj/kernel.asm	/^c0114cc0:	83 e8 30             	sub    $0x30,%eax$/;"	l
c0114cc3	obj/kernel.asm	/^c0114cc3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0114cc6	obj/kernel.asm	/^c0114cc6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114cc9	obj/kernel.asm	/^c0114cc9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0114ccc	obj/kernel.asm	/^c0114ccc:	0f be d8             	movsbl %al,%ebx$/;"	l
c0114ccf	obj/kernel.asm	/^c0114ccf:	83 fb 2f             	cmp    $0x2f,%ebx$/;"	l
c0114cd2	obj/kernel.asm	/^c0114cd2:	7e 0b                	jle    c0114cdf <vprintfmt+0xbf>$/;"	l
c0114cd4	obj/kernel.asm	/^c0114cd4:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
c0114cd7	obj/kernel.asm	/^c0114cd7:	7f 06                	jg     c0114cdf <vprintfmt+0xbf>$/;"	l
c0114cd9	obj/kernel.asm	/^c0114cd9:	83 45 14 01          	addl   $0x1,0x14(%ebp)$/;"	l
c0114cdd	obj/kernel.asm	/^c0114cdd:	eb d3                	jmp    c0114cb2 <vprintfmt+0x92>$/;"	l
c0114cdf	obj/kernel.asm	/^c0114cdf:	eb 33                	jmp    c0114d14 <vprintfmt+0xf4>$/;"	l
c0114ce1	obj/kernel.asm	/^c0114ce1:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0114ce4	obj/kernel.asm	/^c0114ce4:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0114ce7	obj/kernel.asm	/^c0114ce7:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0114cea	obj/kernel.asm	/^c0114cea:	8b 00                	mov    (%eax),%eax$/;"	l
c0114cec	obj/kernel.asm	/^c0114cec:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0114cef	obj/kernel.asm	/^c0114cef:	eb 23                	jmp    c0114d14 <vprintfmt+0xf4>$/;"	l
c0114cf1	obj/kernel.asm	/^c0114cf1:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0114cf5	obj/kernel.asm	/^c0114cf5:	79 0c                	jns    c0114d03 <vprintfmt+0xe3>$/;"	l
c0114cf7	obj/kernel.asm	/^c0114cf7:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0114cfe	obj/kernel.asm	/^c0114cfe:	e9 78 ff ff ff       	jmp    c0114c7b <vprintfmt+0x5b>$/;"	l
c0114d03	obj/kernel.asm	/^c0114d03:	e9 73 ff ff ff       	jmp    c0114c7b <vprintfmt+0x5b>$/;"	l
c0114d08	obj/kernel.asm	/^c0114d08:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
c0114d0f	obj/kernel.asm	/^c0114d0f:	e9 67 ff ff ff       	jmp    c0114c7b <vprintfmt+0x5b>$/;"	l
c0114d14	obj/kernel.asm	/^c0114d14:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0114d18	obj/kernel.asm	/^c0114d18:	79 12                	jns    c0114d2c <vprintfmt+0x10c>$/;"	l
c0114d1a	obj/kernel.asm	/^c0114d1a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114d1d	obj/kernel.asm	/^c0114d1d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114d20	obj/kernel.asm	/^c0114d20:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c0114d27	obj/kernel.asm	/^c0114d27:	e9 4f ff ff ff       	jmp    c0114c7b <vprintfmt+0x5b>$/;"	l
c0114d2c	obj/kernel.asm	/^c0114d2c:	e9 4a ff ff ff       	jmp    c0114c7b <vprintfmt+0x5b>$/;"	l
c0114d31	obj/kernel.asm	/^c0114d31:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c0114d35	obj/kernel.asm	/^c0114d35:	e9 41 ff ff ff       	jmp    c0114c7b <vprintfmt+0x5b>$/;"	l
c0114d3a	obj/kernel.asm	/^c0114d3a:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0114d3d	obj/kernel.asm	/^c0114d3d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0114d40	obj/kernel.asm	/^c0114d40:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0114d43	obj/kernel.asm	/^c0114d43:	8b 00                	mov    (%eax),%eax$/;"	l
c0114d45	obj/kernel.asm	/^c0114d45:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0114d48	obj/kernel.asm	/^c0114d48:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0114d4c	obj/kernel.asm	/^c0114d4c:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0114d4f	obj/kernel.asm	/^c0114d4f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0114d53	obj/kernel.asm	/^c0114d53:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114d56	obj/kernel.asm	/^c0114d56:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114d59	obj/kernel.asm	/^c0114d59:	ff d0                	call   *%eax$/;"	l
c0114d5b	obj/kernel.asm	/^c0114d5b:	e9 00 03 00 00       	jmp    c0115060 <vprintfmt+0x440>$/;"	l
c0114d60	obj/kernel.asm	/^c0114d60:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0114d63	obj/kernel.asm	/^c0114d63:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0114d66	obj/kernel.asm	/^c0114d66:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0114d69	obj/kernel.asm	/^c0114d69:	8b 18                	mov    (%eax),%ebx$/;"	l
c0114d6b	obj/kernel.asm	/^c0114d6b:	85 db                	test   %ebx,%ebx$/;"	l
c0114d6d	obj/kernel.asm	/^c0114d6d:	79 02                	jns    c0114d71 <vprintfmt+0x151>$/;"	l
c0114d6f	obj/kernel.asm	/^c0114d6f:	f7 db                	neg    %ebx$/;"	l
c0114d71	obj/kernel.asm	/^c0114d71:	83 fb 18             	cmp    $0x18,%ebx$/;"	l
c0114d74	obj/kernel.asm	/^c0114d74:	7f 0b                	jg     c0114d81 <vprintfmt+0x161>$/;"	l
c0114d76	obj/kernel.asm	/^c0114d76:	8b 34 9d 00 9c 11 c0 	mov    -0x3fee6400(,%ebx,4),%esi$/;"	l
c0114d7d	obj/kernel.asm	/^c0114d7d:	85 f6                	test   %esi,%esi$/;"	l
c0114d7f	obj/kernel.asm	/^c0114d7f:	75 2a                	jne    c0114dab <vprintfmt+0x18b>$/;"	l
c0114d81	obj/kernel.asm	/^c0114d81:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
c0114d85	obj/kernel.asm	/^c0114d85:	c7 44 24 0c 75 9c 11 	movl   $0xc0119c75,0xc(%esp)$/;"	l
c0114d8c	obj/kernel.asm	/^c0114d8c:	c0 $/;"	l
c0114d8d	obj/kernel.asm	/^c0114d8d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114d90	obj/kernel.asm	/^c0114d90:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114d94	obj/kernel.asm	/^c0114d94:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114d97	obj/kernel.asm	/^c0114d97:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114d9b	obj/kernel.asm	/^c0114d9b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114d9e	obj/kernel.asm	/^c0114d9e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114da1	obj/kernel.asm	/^c0114da1:	e8 45 fe ff ff       	call   c0114beb <printfmt>$/;"	l
c0114da6	obj/kernel.asm	/^c0114da6:	e9 b5 02 00 00       	jmp    c0115060 <vprintfmt+0x440>$/;"	l
c0114dab	obj/kernel.asm	/^c0114dab:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c0114daf	obj/kernel.asm	/^c0114daf:	c7 44 24 0c 7e 9c 11 	movl   $0xc0119c7e,0xc(%esp)$/;"	l
c0114db6	obj/kernel.asm	/^c0114db6:	c0 $/;"	l
c0114db7	obj/kernel.asm	/^c0114db7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114dba	obj/kernel.asm	/^c0114dba:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114dbe	obj/kernel.asm	/^c0114dbe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114dc1	obj/kernel.asm	/^c0114dc1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114dc5	obj/kernel.asm	/^c0114dc5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114dc8	obj/kernel.asm	/^c0114dc8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114dcb	obj/kernel.asm	/^c0114dcb:	e8 1b fe ff ff       	call   c0114beb <printfmt>$/;"	l
c0114dd0	obj/kernel.asm	/^c0114dd0:	e9 8b 02 00 00       	jmp    c0115060 <vprintfmt+0x440>$/;"	l
c0114dd5	obj/kernel.asm	/^c0114dd5:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0114dd8	obj/kernel.asm	/^c0114dd8:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0114ddb	obj/kernel.asm	/^c0114ddb:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0114dde	obj/kernel.asm	/^c0114dde:	8b 30                	mov    (%eax),%esi$/;"	l
c0114de0	obj/kernel.asm	/^c0114de0:	85 f6                	test   %esi,%esi$/;"	l
c0114de2	obj/kernel.asm	/^c0114de2:	75 05                	jne    c0114de9 <vprintfmt+0x1c9>$/;"	l
c0114de4	obj/kernel.asm	/^c0114de4:	be 81 9c 11 c0       	mov    $0xc0119c81,%esi$/;"	l
c0114de9	obj/kernel.asm	/^c0114de9:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0114ded	obj/kernel.asm	/^c0114ded:	7e 45                	jle    c0114e34 <vprintfmt+0x214>$/;"	l
c0114def	obj/kernel.asm	/^c0114def:	80 7d db 2d          	cmpb   $0x2d,-0x25(%ebp)$/;"	l
c0114df3	obj/kernel.asm	/^c0114df3:	74 3f                	je     c0114e34 <vprintfmt+0x214>$/;"	l
c0114df5	obj/kernel.asm	/^c0114df5:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
c0114df8	obj/kernel.asm	/^c0114df8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114dfb	obj/kernel.asm	/^c0114dfb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114dff	obj/kernel.asm	/^c0114dff:	89 34 24             	mov    %esi,(%esp)$/;"	l
c0114e02	obj/kernel.asm	/^c0114e02:	e8 3b 04 00 00       	call   c0115242 <strnlen>$/;"	l
c0114e07	obj/kernel.asm	/^c0114e07:	29 c3                	sub    %eax,%ebx$/;"	l
c0114e09	obj/kernel.asm	/^c0114e09:	89 d8                	mov    %ebx,%eax$/;"	l
c0114e0b	obj/kernel.asm	/^c0114e0b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114e0e	obj/kernel.asm	/^c0114e0e:	eb 1e                	jmp    c0114e2e <vprintfmt+0x20e>$/;"	l
c0114e10	obj/kernel.asm	/^c0114e10:	0f be 45 db          	movsbl -0x25(%ebp),%eax$/;"	l
c0114e14	obj/kernel.asm	/^c0114e14:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0114e17	obj/kernel.asm	/^c0114e17:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0114e1b	obj/kernel.asm	/^c0114e1b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0114e1e	obj/kernel.asm	/^c0114e1e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0114e22	obj/kernel.asm	/^c0114e22:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114e25	obj/kernel.asm	/^c0114e25:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114e28	obj/kernel.asm	/^c0114e28:	ff d0                	call   *%eax$/;"	l
c0114e2a	obj/kernel.asm	/^c0114e2a:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c0114e2e	obj/kernel.asm	/^c0114e2e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0114e32	obj/kernel.asm	/^c0114e32:	7f dc                	jg     c0114e10 <vprintfmt+0x1f0>$/;"	l
c0114e34	obj/kernel.asm	/^c0114e34:	eb 46                	jmp    c0114e7c <vprintfmt+0x25c>$/;"	l
c0114e36	obj/kernel.asm	/^c0114e36:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0114e3a	obj/kernel.asm	/^c0114e3a:	74 26                	je     c0114e62 <vprintfmt+0x242>$/;"	l
c0114e3c	obj/kernel.asm	/^c0114e3c:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
c0114e3f	obj/kernel.asm	/^c0114e3f:	7e 05                	jle    c0114e46 <vprintfmt+0x226>$/;"	l
c0114e41	obj/kernel.asm	/^c0114e41:	83 fb 7e             	cmp    $0x7e,%ebx$/;"	l
c0114e44	obj/kernel.asm	/^c0114e44:	7e 1c                	jle    c0114e62 <vprintfmt+0x242>$/;"	l
c0114e46	obj/kernel.asm	/^c0114e46:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114e49	obj/kernel.asm	/^c0114e49:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114e4d	obj/kernel.asm	/^c0114e4d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114e50	obj/kernel.asm	/^c0114e50:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114e54	obj/kernel.asm	/^c0114e54:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
c0114e5b	obj/kernel.asm	/^c0114e5b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114e5e	obj/kernel.asm	/^c0114e5e:	ff d0                	call   *%eax$/;"	l
c0114e60	obj/kernel.asm	/^c0114e60:	eb 16                	jmp    c0114e78 <vprintfmt+0x258>$/;"	l
c0114e62	obj/kernel.asm	/^c0114e62:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114e65	obj/kernel.asm	/^c0114e65:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114e69	obj/kernel.asm	/^c0114e69:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114e6c	obj/kernel.asm	/^c0114e6c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114e70	obj/kernel.asm	/^c0114e70:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c0114e73	obj/kernel.asm	/^c0114e73:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114e76	obj/kernel.asm	/^c0114e76:	ff d0                	call   *%eax$/;"	l
c0114e78	obj/kernel.asm	/^c0114e78:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c0114e7c	obj/kernel.asm	/^c0114e7c:	89 f0                	mov    %esi,%eax$/;"	l
c0114e7e	obj/kernel.asm	/^c0114e7e:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
c0114e81	obj/kernel.asm	/^c0114e81:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0114e84	obj/kernel.asm	/^c0114e84:	0f be d8             	movsbl %al,%ebx$/;"	l
c0114e87	obj/kernel.asm	/^c0114e87:	85 db                	test   %ebx,%ebx$/;"	l
c0114e89	obj/kernel.asm	/^c0114e89:	74 10                	je     c0114e9b <vprintfmt+0x27b>$/;"	l
c0114e8b	obj/kernel.asm	/^c0114e8b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0114e8f	obj/kernel.asm	/^c0114e8f:	78 a5                	js     c0114e36 <vprintfmt+0x216>$/;"	l
c0114e91	obj/kernel.asm	/^c0114e91:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
c0114e95	obj/kernel.asm	/^c0114e95:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0114e99	obj/kernel.asm	/^c0114e99:	79 9b                	jns    c0114e36 <vprintfmt+0x216>$/;"	l
c0114e9b	obj/kernel.asm	/^c0114e9b:	eb 1e                	jmp    c0114ebb <vprintfmt+0x29b>$/;"	l
c0114e9d	obj/kernel.asm	/^c0114e9d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114ea0	obj/kernel.asm	/^c0114ea0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114ea4	obj/kernel.asm	/^c0114ea4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114ea7	obj/kernel.asm	/^c0114ea7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114eab	obj/kernel.asm	/^c0114eab:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c0114eb2	obj/kernel.asm	/^c0114eb2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114eb5	obj/kernel.asm	/^c0114eb5:	ff d0                	call   *%eax$/;"	l
c0114eb7	obj/kernel.asm	/^c0114eb7:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c0114ebb	obj/kernel.asm	/^c0114ebb:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0114ebf	obj/kernel.asm	/^c0114ebf:	7f dc                	jg     c0114e9d <vprintfmt+0x27d>$/;"	l
c0114ec1	obj/kernel.asm	/^c0114ec1:	e9 9a 01 00 00       	jmp    c0115060 <vprintfmt+0x440>$/;"	l
c0114ec6	obj/kernel.asm	/^c0114ec6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114ec9	obj/kernel.asm	/^c0114ec9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114ecd	obj/kernel.asm	/^c0114ecd:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0114ed0	obj/kernel.asm	/^c0114ed0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114ed3	obj/kernel.asm	/^c0114ed3:	e8 cc fc ff ff       	call   c0114ba4 <getint>$/;"	l
c0114ed8	obj/kernel.asm	/^c0114ed8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114edb	obj/kernel.asm	/^c0114edb:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0114ede	obj/kernel.asm	/^c0114ede:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114ee1	obj/kernel.asm	/^c0114ee1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0114ee4	obj/kernel.asm	/^c0114ee4:	85 d2                	test   %edx,%edx$/;"	l
c0114ee6	obj/kernel.asm	/^c0114ee6:	79 2d                	jns    c0114f15 <vprintfmt+0x2f5>$/;"	l
c0114ee8	obj/kernel.asm	/^c0114ee8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114eeb	obj/kernel.asm	/^c0114eeb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114eef	obj/kernel.asm	/^c0114eef:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114ef2	obj/kernel.asm	/^c0114ef2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114ef6	obj/kernel.asm	/^c0114ef6:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
c0114efd	obj/kernel.asm	/^c0114efd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114f00	obj/kernel.asm	/^c0114f00:	ff d0                	call   *%eax$/;"	l
c0114f02	obj/kernel.asm	/^c0114f02:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114f05	obj/kernel.asm	/^c0114f05:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0114f08	obj/kernel.asm	/^c0114f08:	f7 d8                	neg    %eax$/;"	l
c0114f0a	obj/kernel.asm	/^c0114f0a:	83 d2 00             	adc    $0x0,%edx$/;"	l
c0114f0d	obj/kernel.asm	/^c0114f0d:	f7 da                	neg    %edx$/;"	l
c0114f0f	obj/kernel.asm	/^c0114f0f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114f12	obj/kernel.asm	/^c0114f12:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0114f15	obj/kernel.asm	/^c0114f15:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c0114f1c	obj/kernel.asm	/^c0114f1c:	e9 b6 00 00 00       	jmp    c0114fd7 <vprintfmt+0x3b7>$/;"	l
c0114f21	obj/kernel.asm	/^c0114f21:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114f24	obj/kernel.asm	/^c0114f24:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114f28	obj/kernel.asm	/^c0114f28:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0114f2b	obj/kernel.asm	/^c0114f2b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114f2e	obj/kernel.asm	/^c0114f2e:	e8 22 fc ff ff       	call   c0114b55 <getuint>$/;"	l
c0114f33	obj/kernel.asm	/^c0114f33:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114f36	obj/kernel.asm	/^c0114f36:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0114f39	obj/kernel.asm	/^c0114f39:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c0114f40	obj/kernel.asm	/^c0114f40:	e9 92 00 00 00       	jmp    c0114fd7 <vprintfmt+0x3b7>$/;"	l
c0114f45	obj/kernel.asm	/^c0114f45:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114f48	obj/kernel.asm	/^c0114f48:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114f4c	obj/kernel.asm	/^c0114f4c:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0114f4f	obj/kernel.asm	/^c0114f4f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114f52	obj/kernel.asm	/^c0114f52:	e8 fe fb ff ff       	call   c0114b55 <getuint>$/;"	l
c0114f57	obj/kernel.asm	/^c0114f57:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114f5a	obj/kernel.asm	/^c0114f5a:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0114f5d	obj/kernel.asm	/^c0114f5d:	c7 45 ec 08 00 00 00 	movl   $0x8,-0x14(%ebp)$/;"	l
c0114f64	obj/kernel.asm	/^c0114f64:	eb 71                	jmp    c0114fd7 <vprintfmt+0x3b7>$/;"	l
c0114f66	obj/kernel.asm	/^c0114f66:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114f69	obj/kernel.asm	/^c0114f69:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114f6d	obj/kernel.asm	/^c0114f6d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114f70	obj/kernel.asm	/^c0114f70:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114f74	obj/kernel.asm	/^c0114f74:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
c0114f7b	obj/kernel.asm	/^c0114f7b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114f7e	obj/kernel.asm	/^c0114f7e:	ff d0                	call   *%eax$/;"	l
c0114f80	obj/kernel.asm	/^c0114f80:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114f83	obj/kernel.asm	/^c0114f83:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114f87	obj/kernel.asm	/^c0114f87:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114f8a	obj/kernel.asm	/^c0114f8a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114f8e	obj/kernel.asm	/^c0114f8e:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
c0114f95	obj/kernel.asm	/^c0114f95:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114f98	obj/kernel.asm	/^c0114f98:	ff d0                	call   *%eax$/;"	l
c0114f9a	obj/kernel.asm	/^c0114f9a:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0114f9d	obj/kernel.asm	/^c0114f9d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0114fa0	obj/kernel.asm	/^c0114fa0:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0114fa3	obj/kernel.asm	/^c0114fa3:	8b 00                	mov    (%eax),%eax$/;"	l
c0114fa5	obj/kernel.asm	/^c0114fa5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114fa8	obj/kernel.asm	/^c0114fa8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0114faf	obj/kernel.asm	/^c0114faf:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c0114fb6	obj/kernel.asm	/^c0114fb6:	eb 1f                	jmp    c0114fd7 <vprintfmt+0x3b7>$/;"	l
c0114fb8	obj/kernel.asm	/^c0114fb8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114fbb	obj/kernel.asm	/^c0114fbb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114fbf	obj/kernel.asm	/^c0114fbf:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0114fc2	obj/kernel.asm	/^c0114fc2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114fc5	obj/kernel.asm	/^c0114fc5:	e8 8b fb ff ff       	call   c0114b55 <getuint>$/;"	l
c0114fca	obj/kernel.asm	/^c0114fca:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114fcd	obj/kernel.asm	/^c0114fcd:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0114fd0	obj/kernel.asm	/^c0114fd0:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c0114fd7	obj/kernel.asm	/^c0114fd7:	0f be 55 db          	movsbl -0x25(%ebp),%edx$/;"	l
c0114fdb	obj/kernel.asm	/^c0114fdb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114fde	obj/kernel.asm	/^c0114fde:	89 54 24 1c          	mov    %edx,0x1c(%esp)$/;"	l
c0114fe2	obj/kernel.asm	/^c0114fe2:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0114fe5	obj/kernel.asm	/^c0114fe5:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
c0114fe9	obj/kernel.asm	/^c0114fe9:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0114fed	obj/kernel.asm	/^c0114fed:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114ff0	obj/kernel.asm	/^c0114ff0:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0114ff3	obj/kernel.asm	/^c0114ff3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114ff7	obj/kernel.asm	/^c0114ff7:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0114ffb	obj/kernel.asm	/^c0114ffb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114ffe	obj/kernel.asm	/^c0114ffe:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0115002	obj/kernel.asm	/^c0115002:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115005	obj/kernel.asm	/^c0115005:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115009	obj/kernel.asm	/^c0115009:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011500c	obj/kernel.asm	/^c011500c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011500f	obj/kernel.asm	/^c011500f:	e8 27 fa ff ff       	call   c0114a3b <printnum>$/;"	l
c0115014	obj/kernel.asm	/^c0115014:	eb 4a                	jmp    c0115060 <vprintfmt+0x440>$/;"	l
c0115016	obj/kernel.asm	/^c0115016:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115019	obj/kernel.asm	/^c0115019:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011501d	obj/kernel.asm	/^c011501d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0115020	obj/kernel.asm	/^c0115020:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115024	obj/kernel.asm	/^c0115024:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c0115027	obj/kernel.asm	/^c0115027:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011502a	obj/kernel.asm	/^c011502a:	ff d0                	call   *%eax$/;"	l
c011502c	obj/kernel.asm	/^c011502c:	eb 32                	jmp    c0115060 <vprintfmt+0x440>$/;"	l
c011502e	obj/kernel.asm	/^c011502e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115031	obj/kernel.asm	/^c0115031:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0115035	obj/kernel.asm	/^c0115035:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0115038	obj/kernel.asm	/^c0115038:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011503c	obj/kernel.asm	/^c011503c:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
c0115043	obj/kernel.asm	/^c0115043:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115046	obj/kernel.asm	/^c0115046:	ff d0                	call   *%eax$/;"	l
c0115048	obj/kernel.asm	/^c0115048:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c011504c	obj/kernel.asm	/^c011504c:	eb 04                	jmp    c0115052 <vprintfmt+0x432>$/;"	l
c011504e	obj/kernel.asm	/^c011504e:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0115052	obj/kernel.asm	/^c0115052:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0115055	obj/kernel.asm	/^c0115055:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0115058	obj/kernel.asm	/^c0115058:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011505b	obj/kernel.asm	/^c011505b:	3c 25                	cmp    $0x25,%al$/;"	l
c011505d	obj/kernel.asm	/^c011505d:	75 ef                	jne    c011504e <vprintfmt+0x42e>$/;"	l
c011505f	obj/kernel.asm	/^c011505f:	90                   	nop$/;"	l
c0115060	obj/kernel.asm	/^c0115060:	90                   	nop$/;"	l
c0115061	obj/kernel.asm	/^c0115061:	e9 e3 fb ff ff       	jmp    c0114c49 <vprintfmt+0x29>$/;"	l
c0115066	obj/kernel.asm	/^c0115066:	83 c4 40             	add    $0x40,%esp$/;"	l
c0115069	obj/kernel.asm	/^c0115069:	5b                   	pop    %ebx$/;"	l
c011506a	obj/kernel.asm	/^c011506a:	5e                   	pop    %esi$/;"	l
c011506b	obj/kernel.asm	/^c011506b:	5d                   	pop    %ebp$/;"	l
c011506c	obj/kernel.asm	/^c011506c:	c3                   	ret    $/;"	l
c011506d	obj/kernel.asm	/^c011506d <sprintputch>:$/;"	l
c011506d	obj/kernel.asm	/^c011506d:	55                   	push   %ebp$/;"	l
c011506e	obj/kernel.asm	/^c011506e:	89 e5                	mov    %esp,%ebp$/;"	l
c0115070	obj/kernel.asm	/^c0115070:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115073	obj/kernel.asm	/^c0115073:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0115076	obj/kernel.asm	/^c0115076:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0115079	obj/kernel.asm	/^c0115079:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011507c	obj/kernel.asm	/^c011507c:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c011507f	obj/kernel.asm	/^c011507f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115082	obj/kernel.asm	/^c0115082:	8b 10                	mov    (%eax),%edx$/;"	l
c0115084	obj/kernel.asm	/^c0115084:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115087	obj/kernel.asm	/^c0115087:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011508a	obj/kernel.asm	/^c011508a:	39 c2                	cmp    %eax,%edx$/;"	l
c011508c	obj/kernel.asm	/^c011508c:	73 12                	jae    c01150a0 <sprintputch+0x33>$/;"	l
c011508e	obj/kernel.asm	/^c011508e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115091	obj/kernel.asm	/^c0115091:	8b 00                	mov    (%eax),%eax$/;"	l
c0115093	obj/kernel.asm	/^c0115093:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0115096	obj/kernel.asm	/^c0115096:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0115099	obj/kernel.asm	/^c0115099:	89 0a                	mov    %ecx,(%edx)$/;"	l
c011509b	obj/kernel.asm	/^c011509b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011509e	obj/kernel.asm	/^c011509e:	88 10                	mov    %dl,(%eax)$/;"	l
c01150a0	obj/kernel.asm	/^c01150a0:	5d                   	pop    %ebp$/;"	l
c01150a1	obj/kernel.asm	/^c01150a1:	c3                   	ret    $/;"	l
c01150a2	obj/kernel.asm	/^c01150a2 <snprintf>:$/;"	l
c01150a2	obj/kernel.asm	/^c01150a2:	55                   	push   %ebp$/;"	l
c01150a3	obj/kernel.asm	/^c01150a3:	89 e5                	mov    %esp,%ebp$/;"	l
c01150a5	obj/kernel.asm	/^c01150a5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01150a8	obj/kernel.asm	/^c01150a8:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c01150ab	obj/kernel.asm	/^c01150ab:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01150ae	obj/kernel.asm	/^c01150ae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01150b1	obj/kernel.asm	/^c01150b1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01150b5	obj/kernel.asm	/^c01150b5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01150b8	obj/kernel.asm	/^c01150b8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01150bc	obj/kernel.asm	/^c01150bc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01150bf	obj/kernel.asm	/^c01150bf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01150c3	obj/kernel.asm	/^c01150c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01150c6	obj/kernel.asm	/^c01150c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01150c9	obj/kernel.asm	/^c01150c9:	e8 08 00 00 00       	call   c01150d6 <vsnprintf>$/;"	l
c01150ce	obj/kernel.asm	/^c01150ce:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01150d1	obj/kernel.asm	/^c01150d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01150d4	obj/kernel.asm	/^c01150d4:	c9                   	leave  $/;"	l
c01150d5	obj/kernel.asm	/^c01150d5:	c3                   	ret    $/;"	l
c01150d6	obj/kernel.asm	/^c01150d6 <vsnprintf>:$/;"	l
c01150d6	obj/kernel.asm	/^c01150d6:	55                   	push   %ebp$/;"	l
c01150d7	obj/kernel.asm	/^c01150d7:	89 e5                	mov    %esp,%ebp$/;"	l
c01150d9	obj/kernel.asm	/^c01150d9:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01150dc	obj/kernel.asm	/^c01150dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01150df	obj/kernel.asm	/^c01150df:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01150e2	obj/kernel.asm	/^c01150e2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01150e5	obj/kernel.asm	/^c01150e5:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01150e8	obj/kernel.asm	/^c01150e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01150eb	obj/kernel.asm	/^c01150eb:	01 d0                	add    %edx,%eax$/;"	l
c01150ed	obj/kernel.asm	/^c01150ed:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01150f0	obj/kernel.asm	/^c01150f0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01150f7	obj/kernel.asm	/^c01150f7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01150fb	obj/kernel.asm	/^c01150fb:	74 0a                	je     c0115107 <vsnprintf+0x31>$/;"	l
c01150fd	obj/kernel.asm	/^c01150fd:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0115100	obj/kernel.asm	/^c0115100:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0115103	obj/kernel.asm	/^c0115103:	39 c2                	cmp    %eax,%edx$/;"	l
c0115105	obj/kernel.asm	/^c0115105:	76 07                	jbe    c011510e <vsnprintf+0x38>$/;"	l
c0115107	obj/kernel.asm	/^c0115107:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c011510c	obj/kernel.asm	/^c011510c:	eb 32                	jmp    c0115140 <vsnprintf+0x6a>$/;"	l
c011510e	obj/kernel.asm	/^c011510e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0115111	obj/kernel.asm	/^c0115111:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0115115	obj/kernel.asm	/^c0115115:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0115118	obj/kernel.asm	/^c0115118:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011511c	obj/kernel.asm	/^c011511c:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c011511f	obj/kernel.asm	/^c011511f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0115123	obj/kernel.asm	/^c0115123:	c7 44 24 04 d9 6a ff 	movl   $0xffff6ad9,0x4(%esp)$/;"	l
c011512a	obj/kernel.asm	/^c011512a:	ff $/;"	l
c011512b	obj/kernel.asm	/^c011512b:	c7 04 24 6d 50 11 c0 	movl   $0xc011506d,(%esp)$/;"	l
c0115132	obj/kernel.asm	/^c0115132:	e8 e9 fa ff ff       	call   c0114c20 <vprintfmt>$/;"	l
c0115137	obj/kernel.asm	/^c0115137:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011513a	obj/kernel.asm	/^c011513a:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c011513d	obj/kernel.asm	/^c011513d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115140	obj/kernel.asm	/^c0115140:	c9                   	leave  $/;"	l
c0115141	obj/kernel.asm	/^c0115141:	c3                   	ret    $/;"	l
c0115142	obj/kernel.asm	/^c0115142 <rand>:$/;"	l
c0115142	obj/kernel.asm	/^c0115142:	55                   	push   %ebp$/;"	l
c0115143	obj/kernel.asm	/^c0115143:	89 e5                	mov    %esp,%ebp$/;"	l
c0115145	obj/kernel.asm	/^c0115145:	57                   	push   %edi$/;"	l
c0115146	obj/kernel.asm	/^c0115146:	56                   	push   %esi$/;"	l
c0115147	obj/kernel.asm	/^c0115147:	53                   	push   %ebx$/;"	l
c0115148	obj/kernel.asm	/^c0115148:	83 ec 24             	sub    $0x24,%esp$/;"	l
c011514b	obj/kernel.asm	/^c011514b:	a1 c8 fe 14 c0       	mov    0xc014fec8,%eax$/;"	l
c0115150	obj/kernel.asm	/^c0115150:	8b 15 cc fe 14 c0    	mov    0xc014fecc,%edx$/;"	l
c0115156	obj/kernel.asm	/^c0115156:	69 fa 6d e6 ec de    	imul   $0xdeece66d,%edx,%edi$/;"	l
c011515c	obj/kernel.asm	/^c011515c:	6b f0 05             	imul   $0x5,%eax,%esi$/;"	l
c011515f	obj/kernel.asm	/^c011515f:	01 f7                	add    %esi,%edi$/;"	l
c0115161	obj/kernel.asm	/^c0115161:	be 6d e6 ec de       	mov    $0xdeece66d,%esi$/;"	l
c0115166	obj/kernel.asm	/^c0115166:	f7 e6                	mul    %esi$/;"	l
c0115168	obj/kernel.asm	/^c0115168:	8d 34 17             	lea    (%edi,%edx,1),%esi$/;"	l
c011516b	obj/kernel.asm	/^c011516b:	89 f2                	mov    %esi,%edx$/;"	l
c011516d	obj/kernel.asm	/^c011516d:	83 c0 0b             	add    $0xb,%eax$/;"	l
c0115170	obj/kernel.asm	/^c0115170:	83 d2 00             	adc    $0x0,%edx$/;"	l
c0115173	obj/kernel.asm	/^c0115173:	89 c7                	mov    %eax,%edi$/;"	l
c0115175	obj/kernel.asm	/^c0115175:	83 e7 ff             	and    $0xffffffff,%edi$/;"	l
c0115178	obj/kernel.asm	/^c0115178:	89 f9                	mov    %edi,%ecx$/;"	l
c011517a	obj/kernel.asm	/^c011517a:	0f b7 da             	movzwl %dx,%ebx$/;"	l
c011517d	obj/kernel.asm	/^c011517d:	89 0d c8 fe 14 c0    	mov    %ecx,0xc014fec8$/;"	l
c0115183	obj/kernel.asm	/^c0115183:	89 1d cc fe 14 c0    	mov    %ebx,0xc014fecc$/;"	l
c0115189	obj/kernel.asm	/^c0115189:	a1 c8 fe 14 c0       	mov    0xc014fec8,%eax$/;"	l
c011518e	obj/kernel.asm	/^c011518e:	8b 15 cc fe 14 c0    	mov    0xc014fecc,%edx$/;"	l
c0115194	obj/kernel.asm	/^c0115194:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0115198	obj/kernel.asm	/^c0115198:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c011519b	obj/kernel.asm	/^c011519b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c011519e	obj/kernel.asm	/^c011519e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01151a1	obj/kernel.asm	/^c01151a1:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%ebp)$/;"	l
c01151a8	obj/kernel.asm	/^c01151a8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01151ab	obj/kernel.asm	/^c01151ab:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01151ae	obj/kernel.asm	/^c01151ae:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01151b1	obj/kernel.asm	/^c01151b1:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c01151b4	obj/kernel.asm	/^c01151b4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01151b7	obj/kernel.asm	/^c01151b7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01151ba	obj/kernel.asm	/^c01151ba:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01151be	obj/kernel.asm	/^c01151be:	74 1c                	je     c01151dc <rand+0x9a>$/;"	l
c01151c0	obj/kernel.asm	/^c01151c0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01151c3	obj/kernel.asm	/^c01151c3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01151c8	obj/kernel.asm	/^c01151c8:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c01151cb	obj/kernel.asm	/^c01151cb:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c01151ce	obj/kernel.asm	/^c01151ce:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01151d1	obj/kernel.asm	/^c01151d1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01151d6	obj/kernel.asm	/^c01151d6:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c01151d9	obj/kernel.asm	/^c01151d9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01151dc	obj/kernel.asm	/^c01151dc:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01151df	obj/kernel.asm	/^c01151df:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01151e2	obj/kernel.asm	/^c01151e2:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c01151e5	obj/kernel.asm	/^c01151e5:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01151e8	obj/kernel.asm	/^c01151e8:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01151eb	obj/kernel.asm	/^c01151eb:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01151ee	obj/kernel.asm	/^c01151ee:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01151f1	obj/kernel.asm	/^c01151f1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01151f4	obj/kernel.asm	/^c01151f4:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01151f7	obj/kernel.asm	/^c01151f7:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01151fa	obj/kernel.asm	/^c01151fa:	83 c4 24             	add    $0x24,%esp$/;"	l
c01151fd	obj/kernel.asm	/^c01151fd:	5b                   	pop    %ebx$/;"	l
c01151fe	obj/kernel.asm	/^c01151fe:	5e                   	pop    %esi$/;"	l
c01151ff	obj/kernel.asm	/^c01151ff:	5f                   	pop    %edi$/;"	l
c0115200	obj/kernel.asm	/^c0115200:	5d                   	pop    %ebp$/;"	l
c0115201	obj/kernel.asm	/^c0115201:	c3                   	ret    $/;"	l
c0115202	obj/kernel.asm	/^c0115202 <srand>:$/;"	l
c0115202	obj/kernel.asm	/^c0115202:	55                   	push   %ebp$/;"	l
c0115203	obj/kernel.asm	/^c0115203:	89 e5                	mov    %esp,%ebp$/;"	l
c0115205	obj/kernel.asm	/^c0115205:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115208	obj/kernel.asm	/^c0115208:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c011520d	obj/kernel.asm	/^c011520d:	a3 c8 fe 14 c0       	mov    %eax,0xc014fec8$/;"	l
c0115212	obj/kernel.asm	/^c0115212:	89 15 cc fe 14 c0    	mov    %edx,0xc014fecc$/;"	l
c0115218	obj/kernel.asm	/^c0115218:	5d                   	pop    %ebp$/;"	l
c0115219	obj/kernel.asm	/^c0115219:	c3                   	ret    $/;"	l
c011521a	obj/kernel.asm	/^c011521a <strlen>:$/;"	l
c011521a	obj/kernel.asm	/^c011521a:	55                   	push   %ebp$/;"	l
c011521b	obj/kernel.asm	/^c011521b:	89 e5                	mov    %esp,%ebp$/;"	l
c011521d	obj/kernel.asm	/^c011521d:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0115220	obj/kernel.asm	/^c0115220:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0115227	obj/kernel.asm	/^c0115227:	eb 04                	jmp    c011522d <strlen+0x13>$/;"	l
c0115229	obj/kernel.asm	/^c0115229:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c011522d	obj/kernel.asm	/^c011522d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115230	obj/kernel.asm	/^c0115230:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0115233	obj/kernel.asm	/^c0115233:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0115236	obj/kernel.asm	/^c0115236:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115239	obj/kernel.asm	/^c0115239:	84 c0                	test   %al,%al$/;"	l
c011523b	obj/kernel.asm	/^c011523b:	75 ec                	jne    c0115229 <strlen+0xf>$/;"	l
c011523d	obj/kernel.asm	/^c011523d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0115240	obj/kernel.asm	/^c0115240:	c9                   	leave  $/;"	l
c0115241	obj/kernel.asm	/^c0115241:	c3                   	ret    $/;"	l
c0115242	obj/kernel.asm	/^c0115242 <strnlen>:$/;"	l
c0115242	obj/kernel.asm	/^c0115242:	55                   	push   %ebp$/;"	l
c0115243	obj/kernel.asm	/^c0115243:	89 e5                	mov    %esp,%ebp$/;"	l
c0115245	obj/kernel.asm	/^c0115245:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0115248	obj/kernel.asm	/^c0115248:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c011524f	obj/kernel.asm	/^c011524f:	eb 04                	jmp    c0115255 <strnlen+0x13>$/;"	l
c0115251	obj/kernel.asm	/^c0115251:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0115255	obj/kernel.asm	/^c0115255:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0115258	obj/kernel.asm	/^c0115258:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c011525b	obj/kernel.asm	/^c011525b:	73 10                	jae    c011526d <strnlen+0x2b>$/;"	l
c011525d	obj/kernel.asm	/^c011525d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115260	obj/kernel.asm	/^c0115260:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0115263	obj/kernel.asm	/^c0115263:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0115266	obj/kernel.asm	/^c0115266:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115269	obj/kernel.asm	/^c0115269:	84 c0                	test   %al,%al$/;"	l
c011526b	obj/kernel.asm	/^c011526b:	75 e4                	jne    c0115251 <strnlen+0xf>$/;"	l
c011526d	obj/kernel.asm	/^c011526d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0115270	obj/kernel.asm	/^c0115270:	c9                   	leave  $/;"	l
c0115271	obj/kernel.asm	/^c0115271:	c3                   	ret    $/;"	l
c0115272	obj/kernel.asm	/^c0115272 <strcat>:$/;"	l
c0115272	obj/kernel.asm	/^c0115272:	55                   	push   %ebp$/;"	l
c0115273	obj/kernel.asm	/^c0115273:	89 e5                	mov    %esp,%ebp$/;"	l
c0115275	obj/kernel.asm	/^c0115275:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0115278	obj/kernel.asm	/^c0115278:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011527b	obj/kernel.asm	/^c011527b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011527e	obj/kernel.asm	/^c011527e:	e8 97 ff ff ff       	call   c011521a <strlen>$/;"	l
c0115283	obj/kernel.asm	/^c0115283:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0115286	obj/kernel.asm	/^c0115286:	01 c2                	add    %eax,%edx$/;"	l
c0115288	obj/kernel.asm	/^c0115288:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011528b	obj/kernel.asm	/^c011528b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011528f	obj/kernel.asm	/^c011528f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0115292	obj/kernel.asm	/^c0115292:	e8 02 00 00 00       	call   c0115299 <strcpy>$/;"	l
c0115297	obj/kernel.asm	/^c0115297:	c9                   	leave  $/;"	l
c0115298	obj/kernel.asm	/^c0115298:	c3                   	ret    $/;"	l
c0115299	obj/kernel.asm	/^c0115299 <strcpy>:$/;"	l
c0115299	obj/kernel.asm	/^c0115299:	55                   	push   %ebp$/;"	l
c011529a	obj/kernel.asm	/^c011529a:	89 e5                	mov    %esp,%ebp$/;"	l
c011529c	obj/kernel.asm	/^c011529c:	57                   	push   %edi$/;"	l
c011529d	obj/kernel.asm	/^c011529d:	56                   	push   %esi$/;"	l
c011529e	obj/kernel.asm	/^c011529e:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01152a1	obj/kernel.asm	/^c01152a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01152a4	obj/kernel.asm	/^c01152a4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01152a7	obj/kernel.asm	/^c01152a7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01152aa	obj/kernel.asm	/^c01152aa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01152ad	obj/kernel.asm	/^c01152ad:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01152b0	obj/kernel.asm	/^c01152b0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01152b3	obj/kernel.asm	/^c01152b3:	89 d1                	mov    %edx,%ecx$/;"	l
c01152b5	obj/kernel.asm	/^c01152b5:	89 c2                	mov    %eax,%edx$/;"	l
c01152b7	obj/kernel.asm	/^c01152b7:	89 ce                	mov    %ecx,%esi$/;"	l
c01152b9	obj/kernel.asm	/^c01152b9:	89 d7                	mov    %edx,%edi$/;"	l
c01152bb	obj/kernel.asm	/^c01152bb:	ac                   	lods   %ds:(%esi),%al$/;"	l
c01152bc	obj/kernel.asm	/^c01152bc:	aa                   	stos   %al,%es:(%edi)$/;"	l
c01152bd	obj/kernel.asm	/^c01152bd:	84 c0                	test   %al,%al$/;"	l
c01152bf	obj/kernel.asm	/^c01152bf:	75 fa                	jne    c01152bb <strcpy+0x22>$/;"	l
c01152c1	obj/kernel.asm	/^c01152c1:	89 fa                	mov    %edi,%edx$/;"	l
c01152c3	obj/kernel.asm	/^c01152c3:	89 f1                	mov    %esi,%ecx$/;"	l
c01152c5	obj/kernel.asm	/^c01152c5:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c01152c8	obj/kernel.asm	/^c01152c8:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c01152cb	obj/kernel.asm	/^c01152cb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01152ce	obj/kernel.asm	/^c01152ce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01152d1	obj/kernel.asm	/^c01152d1:	83 c4 20             	add    $0x20,%esp$/;"	l
c01152d4	obj/kernel.asm	/^c01152d4:	5e                   	pop    %esi$/;"	l
c01152d5	obj/kernel.asm	/^c01152d5:	5f                   	pop    %edi$/;"	l
c01152d6	obj/kernel.asm	/^c01152d6:	5d                   	pop    %ebp$/;"	l
c01152d7	obj/kernel.asm	/^c01152d7:	c3                   	ret    $/;"	l
c01152d8	obj/kernel.asm	/^c01152d8 <strncpy>:$/;"	l
c01152d8	obj/kernel.asm	/^c01152d8:	55                   	push   %ebp$/;"	l
c01152d9	obj/kernel.asm	/^c01152d9:	89 e5                	mov    %esp,%ebp$/;"	l
c01152db	obj/kernel.asm	/^c01152db:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01152de	obj/kernel.asm	/^c01152de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01152e1	obj/kernel.asm	/^c01152e1:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01152e4	obj/kernel.asm	/^c01152e4:	eb 21                	jmp    c0115307 <strncpy+0x2f>$/;"	l
c01152e6	obj/kernel.asm	/^c01152e6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01152e9	obj/kernel.asm	/^c01152e9:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c01152ec	obj/kernel.asm	/^c01152ec:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01152ef	obj/kernel.asm	/^c01152ef:	88 10                	mov    %dl,(%eax)$/;"	l
c01152f1	obj/kernel.asm	/^c01152f1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01152f4	obj/kernel.asm	/^c01152f4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01152f7	obj/kernel.asm	/^c01152f7:	84 c0                	test   %al,%al$/;"	l
c01152f9	obj/kernel.asm	/^c01152f9:	74 04                	je     c01152ff <strncpy+0x27>$/;"	l
c01152fb	obj/kernel.asm	/^c01152fb:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c01152ff	obj/kernel.asm	/^c01152ff:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0115303	obj/kernel.asm	/^c0115303:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0115307	obj/kernel.asm	/^c0115307:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c011530b	obj/kernel.asm	/^c011530b:	75 d9                	jne    c01152e6 <strncpy+0xe>$/;"	l
c011530d	obj/kernel.asm	/^c011530d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115310	obj/kernel.asm	/^c0115310:	c9                   	leave  $/;"	l
c0115311	obj/kernel.asm	/^c0115311:	c3                   	ret    $/;"	l
c0115312	obj/kernel.asm	/^c0115312 <strcmp>:$/;"	l
c0115312	obj/kernel.asm	/^c0115312:	55                   	push   %ebp$/;"	l
c0115313	obj/kernel.asm	/^c0115313:	89 e5                	mov    %esp,%ebp$/;"	l
c0115315	obj/kernel.asm	/^c0115315:	57                   	push   %edi$/;"	l
c0115316	obj/kernel.asm	/^c0115316:	56                   	push   %esi$/;"	l
c0115317	obj/kernel.asm	/^c0115317:	83 ec 20             	sub    $0x20,%esp$/;"	l
c011531a	obj/kernel.asm	/^c011531a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011531d	obj/kernel.asm	/^c011531d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0115320	obj/kernel.asm	/^c0115320:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115323	obj/kernel.asm	/^c0115323:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0115326	obj/kernel.asm	/^c0115326:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0115329	obj/kernel.asm	/^c0115329:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011532c	obj/kernel.asm	/^c011532c:	89 d1                	mov    %edx,%ecx$/;"	l
c011532e	obj/kernel.asm	/^c011532e:	89 c2                	mov    %eax,%edx$/;"	l
c0115330	obj/kernel.asm	/^c0115330:	89 ce                	mov    %ecx,%esi$/;"	l
c0115332	obj/kernel.asm	/^c0115332:	89 d7                	mov    %edx,%edi$/;"	l
c0115334	obj/kernel.asm	/^c0115334:	ac                   	lods   %ds:(%esi),%al$/;"	l
c0115335	obj/kernel.asm	/^c0115335:	ae                   	scas   %es:(%edi),%al$/;"	l
c0115336	obj/kernel.asm	/^c0115336:	75 08                	jne    c0115340 <strcmp+0x2e>$/;"	l
c0115338	obj/kernel.asm	/^c0115338:	84 c0                	test   %al,%al$/;"	l
c011533a	obj/kernel.asm	/^c011533a:	75 f8                	jne    c0115334 <strcmp+0x22>$/;"	l
c011533c	obj/kernel.asm	/^c011533c:	31 c0                	xor    %eax,%eax$/;"	l
c011533e	obj/kernel.asm	/^c011533e:	eb 04                	jmp    c0115344 <strcmp+0x32>$/;"	l
c0115340	obj/kernel.asm	/^c0115340:	19 c0                	sbb    %eax,%eax$/;"	l
c0115342	obj/kernel.asm	/^c0115342:	0c 01                	or     $0x1,%al$/;"	l
c0115344	obj/kernel.asm	/^c0115344:	89 fa                	mov    %edi,%edx$/;"	l
c0115346	obj/kernel.asm	/^c0115346:	89 f1                	mov    %esi,%ecx$/;"	l
c0115348	obj/kernel.asm	/^c0115348:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011534b	obj/kernel.asm	/^c011534b:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c011534e	obj/kernel.asm	/^c011534e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0115351	obj/kernel.asm	/^c0115351:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0115354	obj/kernel.asm	/^c0115354:	83 c4 20             	add    $0x20,%esp$/;"	l
c0115357	obj/kernel.asm	/^c0115357:	5e                   	pop    %esi$/;"	l
c0115358	obj/kernel.asm	/^c0115358:	5f                   	pop    %edi$/;"	l
c0115359	obj/kernel.asm	/^c0115359:	5d                   	pop    %ebp$/;"	l
c011535a	obj/kernel.asm	/^c011535a:	c3                   	ret    $/;"	l
c011535b	obj/kernel.asm	/^c011535b <strncmp>:$/;"	l
c011535b	obj/kernel.asm	/^c011535b:	55                   	push   %ebp$/;"	l
c011535c	obj/kernel.asm	/^c011535c:	89 e5                	mov    %esp,%ebp$/;"	l
c011535e	obj/kernel.asm	/^c011535e:	eb 0c                	jmp    c011536c <strncmp+0x11>$/;"	l
c0115360	obj/kernel.asm	/^c0115360:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0115364	obj/kernel.asm	/^c0115364:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0115368	obj/kernel.asm	/^c0115368:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c011536c	obj/kernel.asm	/^c011536c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0115370	obj/kernel.asm	/^c0115370:	74 1a                	je     c011538c <strncmp+0x31>$/;"	l
c0115372	obj/kernel.asm	/^c0115372:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115375	obj/kernel.asm	/^c0115375:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115378	obj/kernel.asm	/^c0115378:	84 c0                	test   %al,%al$/;"	l
c011537a	obj/kernel.asm	/^c011537a:	74 10                	je     c011538c <strncmp+0x31>$/;"	l
c011537c	obj/kernel.asm	/^c011537c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011537f	obj/kernel.asm	/^c011537f:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c0115382	obj/kernel.asm	/^c0115382:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115385	obj/kernel.asm	/^c0115385:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115388	obj/kernel.asm	/^c0115388:	38 c2                	cmp    %al,%dl$/;"	l
c011538a	obj/kernel.asm	/^c011538a:	74 d4                	je     c0115360 <strncmp+0x5>$/;"	l
c011538c	obj/kernel.asm	/^c011538c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0115390	obj/kernel.asm	/^c0115390:	74 18                	je     c01153aa <strncmp+0x4f>$/;"	l
c0115392	obj/kernel.asm	/^c0115392:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115395	obj/kernel.asm	/^c0115395:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115398	obj/kernel.asm	/^c0115398:	0f b6 d0             	movzbl %al,%edx$/;"	l
c011539b	obj/kernel.asm	/^c011539b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011539e	obj/kernel.asm	/^c011539e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01153a1	obj/kernel.asm	/^c01153a1:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01153a4	obj/kernel.asm	/^c01153a4:	29 c2                	sub    %eax,%edx$/;"	l
c01153a6	obj/kernel.asm	/^c01153a6:	89 d0                	mov    %edx,%eax$/;"	l
c01153a8	obj/kernel.asm	/^c01153a8:	eb 05                	jmp    c01153af <strncmp+0x54>$/;"	l
c01153aa	obj/kernel.asm	/^c01153aa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01153af	obj/kernel.asm	/^c01153af:	5d                   	pop    %ebp$/;"	l
c01153b0	obj/kernel.asm	/^c01153b0:	c3                   	ret    $/;"	l
c01153b1	obj/kernel.asm	/^c01153b1 <strchr>:$/;"	l
c01153b1	obj/kernel.asm	/^c01153b1:	55                   	push   %ebp$/;"	l
c01153b2	obj/kernel.asm	/^c01153b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01153b4	obj/kernel.asm	/^c01153b4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01153b7	obj/kernel.asm	/^c01153b7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01153ba	obj/kernel.asm	/^c01153ba:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c01153bd	obj/kernel.asm	/^c01153bd:	eb 14                	jmp    c01153d3 <strchr+0x22>$/;"	l
c01153bf	obj/kernel.asm	/^c01153bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01153c2	obj/kernel.asm	/^c01153c2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01153c5	obj/kernel.asm	/^c01153c5:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c01153c8	obj/kernel.asm	/^c01153c8:	75 05                	jne    c01153cf <strchr+0x1e>$/;"	l
c01153ca	obj/kernel.asm	/^c01153ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01153cd	obj/kernel.asm	/^c01153cd:	eb 13                	jmp    c01153e2 <strchr+0x31>$/;"	l
c01153cf	obj/kernel.asm	/^c01153cf:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c01153d3	obj/kernel.asm	/^c01153d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01153d6	obj/kernel.asm	/^c01153d6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01153d9	obj/kernel.asm	/^c01153d9:	84 c0                	test   %al,%al$/;"	l
c01153db	obj/kernel.asm	/^c01153db:	75 e2                	jne    c01153bf <strchr+0xe>$/;"	l
c01153dd	obj/kernel.asm	/^c01153dd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01153e2	obj/kernel.asm	/^c01153e2:	c9                   	leave  $/;"	l
c01153e3	obj/kernel.asm	/^c01153e3:	c3                   	ret    $/;"	l
c01153e4	obj/kernel.asm	/^c01153e4 <strfind>:$/;"	l
c01153e4	obj/kernel.asm	/^c01153e4:	55                   	push   %ebp$/;"	l
c01153e5	obj/kernel.asm	/^c01153e5:	89 e5                	mov    %esp,%ebp$/;"	l
c01153e7	obj/kernel.asm	/^c01153e7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01153ea	obj/kernel.asm	/^c01153ea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01153ed	obj/kernel.asm	/^c01153ed:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c01153f0	obj/kernel.asm	/^c01153f0:	eb 11                	jmp    c0115403 <strfind+0x1f>$/;"	l
c01153f2	obj/kernel.asm	/^c01153f2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01153f5	obj/kernel.asm	/^c01153f5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01153f8	obj/kernel.asm	/^c01153f8:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c01153fb	obj/kernel.asm	/^c01153fb:	75 02                	jne    c01153ff <strfind+0x1b>$/;"	l
c01153fd	obj/kernel.asm	/^c01153fd:	eb 0e                	jmp    c011540d <strfind+0x29>$/;"	l
c01153ff	obj/kernel.asm	/^c01153ff:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0115403	obj/kernel.asm	/^c0115403:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115406	obj/kernel.asm	/^c0115406:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115409	obj/kernel.asm	/^c0115409:	84 c0                	test   %al,%al$/;"	l
c011540b	obj/kernel.asm	/^c011540b:	75 e5                	jne    c01153f2 <strfind+0xe>$/;"	l
c011540d	obj/kernel.asm	/^c011540d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115410	obj/kernel.asm	/^c0115410:	c9                   	leave  $/;"	l
c0115411	obj/kernel.asm	/^c0115411:	c3                   	ret    $/;"	l
c0115412	obj/kernel.asm	/^c0115412 <strtol>:$/;"	l
c0115412	obj/kernel.asm	/^c0115412:	55                   	push   %ebp$/;"	l
c0115413	obj/kernel.asm	/^c0115413:	89 e5                	mov    %esp,%ebp$/;"	l
c0115415	obj/kernel.asm	/^c0115415:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0115418	obj/kernel.asm	/^c0115418:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c011541f	obj/kernel.asm	/^c011541f:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c0115426	obj/kernel.asm	/^c0115426:	eb 04                	jmp    c011542c <strtol+0x1a>$/;"	l
c0115428	obj/kernel.asm	/^c0115428:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c011542c	obj/kernel.asm	/^c011542c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011542f	obj/kernel.asm	/^c011542f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115432	obj/kernel.asm	/^c0115432:	3c 20                	cmp    $0x20,%al$/;"	l
c0115434	obj/kernel.asm	/^c0115434:	74 f2                	je     c0115428 <strtol+0x16>$/;"	l
c0115436	obj/kernel.asm	/^c0115436:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115439	obj/kernel.asm	/^c0115439:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011543c	obj/kernel.asm	/^c011543c:	3c 09                	cmp    $0x9,%al$/;"	l
c011543e	obj/kernel.asm	/^c011543e:	74 e8                	je     c0115428 <strtol+0x16>$/;"	l
c0115440	obj/kernel.asm	/^c0115440:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115443	obj/kernel.asm	/^c0115443:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115446	obj/kernel.asm	/^c0115446:	3c 2b                	cmp    $0x2b,%al$/;"	l
c0115448	obj/kernel.asm	/^c0115448:	75 06                	jne    c0115450 <strtol+0x3e>$/;"	l
c011544a	obj/kernel.asm	/^c011544a:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c011544e	obj/kernel.asm	/^c011544e:	eb 15                	jmp    c0115465 <strtol+0x53>$/;"	l
c0115450	obj/kernel.asm	/^c0115450:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115453	obj/kernel.asm	/^c0115453:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115456	obj/kernel.asm	/^c0115456:	3c 2d                	cmp    $0x2d,%al$/;"	l
c0115458	obj/kernel.asm	/^c0115458:	75 0b                	jne    c0115465 <strtol+0x53>$/;"	l
c011545a	obj/kernel.asm	/^c011545a:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c011545e	obj/kernel.asm	/^c011545e:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
c0115465	obj/kernel.asm	/^c0115465:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0115469	obj/kernel.asm	/^c0115469:	74 06                	je     c0115471 <strtol+0x5f>$/;"	l
c011546b	obj/kernel.asm	/^c011546b:	83 7d 10 10          	cmpl   $0x10,0x10(%ebp)$/;"	l
c011546f	obj/kernel.asm	/^c011546f:	75 24                	jne    c0115495 <strtol+0x83>$/;"	l
c0115471	obj/kernel.asm	/^c0115471:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115474	obj/kernel.asm	/^c0115474:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115477	obj/kernel.asm	/^c0115477:	3c 30                	cmp    $0x30,%al$/;"	l
c0115479	obj/kernel.asm	/^c0115479:	75 1a                	jne    c0115495 <strtol+0x83>$/;"	l
c011547b	obj/kernel.asm	/^c011547b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011547e	obj/kernel.asm	/^c011547e:	83 c0 01             	add    $0x1,%eax$/;"	l
c0115481	obj/kernel.asm	/^c0115481:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115484	obj/kernel.asm	/^c0115484:	3c 78                	cmp    $0x78,%al$/;"	l
c0115486	obj/kernel.asm	/^c0115486:	75 0d                	jne    c0115495 <strtol+0x83>$/;"	l
c0115488	obj/kernel.asm	/^c0115488:	83 45 08 02          	addl   $0x2,0x8(%ebp)$/;"	l
c011548c	obj/kernel.asm	/^c011548c:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)$/;"	l
c0115493	obj/kernel.asm	/^c0115493:	eb 2a                	jmp    c01154bf <strtol+0xad>$/;"	l
c0115495	obj/kernel.asm	/^c0115495:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0115499	obj/kernel.asm	/^c0115499:	75 17                	jne    c01154b2 <strtol+0xa0>$/;"	l
c011549b	obj/kernel.asm	/^c011549b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011549e	obj/kernel.asm	/^c011549e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01154a1	obj/kernel.asm	/^c01154a1:	3c 30                	cmp    $0x30,%al$/;"	l
c01154a3	obj/kernel.asm	/^c01154a3:	75 0d                	jne    c01154b2 <strtol+0xa0>$/;"	l
c01154a5	obj/kernel.asm	/^c01154a5:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c01154a9	obj/kernel.asm	/^c01154a9:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)$/;"	l
c01154b0	obj/kernel.asm	/^c01154b0:	eb 0d                	jmp    c01154bf <strtol+0xad>$/;"	l
c01154b2	obj/kernel.asm	/^c01154b2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01154b6	obj/kernel.asm	/^c01154b6:	75 07                	jne    c01154bf <strtol+0xad>$/;"	l
c01154b8	obj/kernel.asm	/^c01154b8:	c7 45 10 0a 00 00 00 	movl   $0xa,0x10(%ebp)$/;"	l
c01154bf	obj/kernel.asm	/^c01154bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01154c2	obj/kernel.asm	/^c01154c2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01154c5	obj/kernel.asm	/^c01154c5:	3c 2f                	cmp    $0x2f,%al$/;"	l
c01154c7	obj/kernel.asm	/^c01154c7:	7e 1b                	jle    c01154e4 <strtol+0xd2>$/;"	l
c01154c9	obj/kernel.asm	/^c01154c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01154cc	obj/kernel.asm	/^c01154cc:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01154cf	obj/kernel.asm	/^c01154cf:	3c 39                	cmp    $0x39,%al$/;"	l
c01154d1	obj/kernel.asm	/^c01154d1:	7f 11                	jg     c01154e4 <strtol+0xd2>$/;"	l
c01154d3	obj/kernel.asm	/^c01154d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01154d6	obj/kernel.asm	/^c01154d6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01154d9	obj/kernel.asm	/^c01154d9:	0f be c0             	movsbl %al,%eax$/;"	l
c01154dc	obj/kernel.asm	/^c01154dc:	83 e8 30             	sub    $0x30,%eax$/;"	l
c01154df	obj/kernel.asm	/^c01154df:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01154e2	obj/kernel.asm	/^c01154e2:	eb 48                	jmp    c011552c <strtol+0x11a>$/;"	l
c01154e4	obj/kernel.asm	/^c01154e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01154e7	obj/kernel.asm	/^c01154e7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01154ea	obj/kernel.asm	/^c01154ea:	3c 60                	cmp    $0x60,%al$/;"	l
c01154ec	obj/kernel.asm	/^c01154ec:	7e 1b                	jle    c0115509 <strtol+0xf7>$/;"	l
c01154ee	obj/kernel.asm	/^c01154ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01154f1	obj/kernel.asm	/^c01154f1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01154f4	obj/kernel.asm	/^c01154f4:	3c 7a                	cmp    $0x7a,%al$/;"	l
c01154f6	obj/kernel.asm	/^c01154f6:	7f 11                	jg     c0115509 <strtol+0xf7>$/;"	l
c01154f8	obj/kernel.asm	/^c01154f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01154fb	obj/kernel.asm	/^c01154fb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01154fe	obj/kernel.asm	/^c01154fe:	0f be c0             	movsbl %al,%eax$/;"	l
c0115501	obj/kernel.asm	/^c0115501:	83 e8 57             	sub    $0x57,%eax$/;"	l
c0115504	obj/kernel.asm	/^c0115504:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0115507	obj/kernel.asm	/^c0115507:	eb 23                	jmp    c011552c <strtol+0x11a>$/;"	l
c0115509	obj/kernel.asm	/^c0115509:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011550c	obj/kernel.asm	/^c011550c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011550f	obj/kernel.asm	/^c011550f:	3c 40                	cmp    $0x40,%al$/;"	l
c0115511	obj/kernel.asm	/^c0115511:	7e 3d                	jle    c0115550 <strtol+0x13e>$/;"	l
c0115513	obj/kernel.asm	/^c0115513:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115516	obj/kernel.asm	/^c0115516:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115519	obj/kernel.asm	/^c0115519:	3c 5a                	cmp    $0x5a,%al$/;"	l
c011551b	obj/kernel.asm	/^c011551b:	7f 33                	jg     c0115550 <strtol+0x13e>$/;"	l
c011551d	obj/kernel.asm	/^c011551d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115520	obj/kernel.asm	/^c0115520:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115523	obj/kernel.asm	/^c0115523:	0f be c0             	movsbl %al,%eax$/;"	l
c0115526	obj/kernel.asm	/^c0115526:	83 e8 37             	sub    $0x37,%eax$/;"	l
c0115529	obj/kernel.asm	/^c0115529:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011552c	obj/kernel.asm	/^c011552c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011552f	obj/kernel.asm	/^c011552f:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0115532	obj/kernel.asm	/^c0115532:	7c 02                	jl     c0115536 <strtol+0x124>$/;"	l
c0115534	obj/kernel.asm	/^c0115534:	eb 1a                	jmp    c0115550 <strtol+0x13e>$/;"	l
c0115536	obj/kernel.asm	/^c0115536:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c011553a	obj/kernel.asm	/^c011553a:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c011553d	obj/kernel.asm	/^c011553d:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
c0115541	obj/kernel.asm	/^c0115541:	89 c2                	mov    %eax,%edx$/;"	l
c0115543	obj/kernel.asm	/^c0115543:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115546	obj/kernel.asm	/^c0115546:	01 d0                	add    %edx,%eax$/;"	l
c0115548	obj/kernel.asm	/^c0115548:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c011554b	obj/kernel.asm	/^c011554b:	e9 6f ff ff ff       	jmp    c01154bf <strtol+0xad>$/;"	l
c0115550	obj/kernel.asm	/^c0115550:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0115554	obj/kernel.asm	/^c0115554:	74 08                	je     c011555e <strtol+0x14c>$/;"	l
c0115556	obj/kernel.asm	/^c0115556:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115559	obj/kernel.asm	/^c0115559:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011555c	obj/kernel.asm	/^c011555c:	89 10                	mov    %edx,(%eax)$/;"	l
c011555e	obj/kernel.asm	/^c011555e:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0115562	obj/kernel.asm	/^c0115562:	74 07                	je     c011556b <strtol+0x159>$/;"	l
c0115564	obj/kernel.asm	/^c0115564:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0115567	obj/kernel.asm	/^c0115567:	f7 d8                	neg    %eax$/;"	l
c0115569	obj/kernel.asm	/^c0115569:	eb 03                	jmp    c011556e <strtol+0x15c>$/;"	l
c011556b	obj/kernel.asm	/^c011556b:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c011556e	obj/kernel.asm	/^c011556e:	c9                   	leave  $/;"	l
c011556f	obj/kernel.asm	/^c011556f:	c3                   	ret    $/;"	l
c0115570	obj/kernel.asm	/^c0115570 <memset>:$/;"	l
c0115570	obj/kernel.asm	/^c0115570:	55                   	push   %ebp$/;"	l
c0115571	obj/kernel.asm	/^c0115571:	89 e5                	mov    %esp,%ebp$/;"	l
c0115573	obj/kernel.asm	/^c0115573:	57                   	push   %edi$/;"	l
c0115574	obj/kernel.asm	/^c0115574:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0115577	obj/kernel.asm	/^c0115577:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011557a	obj/kernel.asm	/^c011557a:	88 45 d8             	mov    %al,-0x28(%ebp)$/;"	l
c011557d	obj/kernel.asm	/^c011557d:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
c0115581	obj/kernel.asm	/^c0115581:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0115584	obj/kernel.asm	/^c0115584:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c0115587	obj/kernel.asm	/^c0115587:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c011558a	obj/kernel.asm	/^c011558a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011558d	obj/kernel.asm	/^c011558d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0115590	obj/kernel.asm	/^c0115590:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c0115593	obj/kernel.asm	/^c0115593:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax$/;"	l
c0115597	obj/kernel.asm	/^c0115597:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c011559a	obj/kernel.asm	/^c011559a:	89 d7                	mov    %edx,%edi$/;"	l
c011559c	obj/kernel.asm	/^c011559c:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
c011559e	obj/kernel.asm	/^c011559e:	89 fa                	mov    %edi,%edx$/;"	l
c01155a0	obj/kernel.asm	/^c01155a0:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c01155a3	obj/kernel.asm	/^c01155a3:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c01155a6	obj/kernel.asm	/^c01155a6:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01155a9	obj/kernel.asm	/^c01155a9:	83 c4 24             	add    $0x24,%esp$/;"	l
c01155ac	obj/kernel.asm	/^c01155ac:	5f                   	pop    %edi$/;"	l
c01155ad	obj/kernel.asm	/^c01155ad:	5d                   	pop    %ebp$/;"	l
c01155ae	obj/kernel.asm	/^c01155ae:	c3                   	ret    $/;"	l
c01155af	obj/kernel.asm	/^c01155af <memmove>:$/;"	l
c01155af	obj/kernel.asm	/^c01155af:	55                   	push   %ebp$/;"	l
c01155b0	obj/kernel.asm	/^c01155b0:	89 e5                	mov    %esp,%ebp$/;"	l
c01155b2	obj/kernel.asm	/^c01155b2:	57                   	push   %edi$/;"	l
c01155b3	obj/kernel.asm	/^c01155b3:	56                   	push   %esi$/;"	l
c01155b4	obj/kernel.asm	/^c01155b4:	53                   	push   %ebx$/;"	l
c01155b5	obj/kernel.asm	/^c01155b5:	83 ec 30             	sub    $0x30,%esp$/;"	l
c01155b8	obj/kernel.asm	/^c01155b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01155bb	obj/kernel.asm	/^c01155bb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01155be	obj/kernel.asm	/^c01155be:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01155c1	obj/kernel.asm	/^c01155c1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01155c4	obj/kernel.asm	/^c01155c4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01155c7	obj/kernel.asm	/^c01155c7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01155ca	obj/kernel.asm	/^c01155ca:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01155cd	obj/kernel.asm	/^c01155cd:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01155d0	obj/kernel.asm	/^c01155d0:	73 42                	jae    c0115614 <memmove+0x65>$/;"	l
c01155d2	obj/kernel.asm	/^c01155d2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01155d5	obj/kernel.asm	/^c01155d5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01155d8	obj/kernel.asm	/^c01155d8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01155db	obj/kernel.asm	/^c01155db:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01155de	obj/kernel.asm	/^c01155de:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01155e1	obj/kernel.asm	/^c01155e1:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01155e4	obj/kernel.asm	/^c01155e4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01155e7	obj/kernel.asm	/^c01155e7:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c01155ea	obj/kernel.asm	/^c01155ea:	89 c1                	mov    %eax,%ecx$/;"	l
c01155ec	obj/kernel.asm	/^c01155ec:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01155ef	obj/kernel.asm	/^c01155ef:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01155f2	obj/kernel.asm	/^c01155f2:	89 d7                	mov    %edx,%edi$/;"	l
c01155f4	obj/kernel.asm	/^c01155f4:	89 c6                	mov    %eax,%esi$/;"	l
c01155f6	obj/kernel.asm	/^c01155f6:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c01155f8	obj/kernel.asm	/^c01155f8:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c01155fb	obj/kernel.asm	/^c01155fb:	83 e1 03             	and    $0x3,%ecx$/;"	l
c01155fe	obj/kernel.asm	/^c01155fe:	74 02                	je     c0115602 <memmove+0x53>$/;"	l
c0115600	obj/kernel.asm	/^c0115600:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c0115602	obj/kernel.asm	/^c0115602:	89 f0                	mov    %esi,%eax$/;"	l
c0115604	obj/kernel.asm	/^c0115604:	89 fa                	mov    %edi,%edx$/;"	l
c0115606	obj/kernel.asm	/^c0115606:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
c0115609	obj/kernel.asm	/^c0115609:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c011560c	obj/kernel.asm	/^c011560c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c011560f	obj/kernel.asm	/^c011560f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0115612	obj/kernel.asm	/^c0115612:	eb 36                	jmp    c011564a <memmove+0x9b>$/;"	l
c0115614	obj/kernel.asm	/^c0115614:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0115617	obj/kernel.asm	/^c0115617:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c011561a	obj/kernel.asm	/^c011561a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011561d	obj/kernel.asm	/^c011561d:	01 c2                	add    %eax,%edx$/;"	l
c011561f	obj/kernel.asm	/^c011561f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0115622	obj/kernel.asm	/^c0115622:	8d 48 ff             	lea    -0x1(%eax),%ecx$/;"	l
c0115625	obj/kernel.asm	/^c0115625:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0115628	obj/kernel.asm	/^c0115628:	8d 1c 01             	lea    (%ecx,%eax,1),%ebx$/;"	l
c011562b	obj/kernel.asm	/^c011562b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011562e	obj/kernel.asm	/^c011562e:	89 c1                	mov    %eax,%ecx$/;"	l
c0115630	obj/kernel.asm	/^c0115630:	89 d8                	mov    %ebx,%eax$/;"	l
c0115632	obj/kernel.asm	/^c0115632:	89 d6                	mov    %edx,%esi$/;"	l
c0115634	obj/kernel.asm	/^c0115634:	89 c7                	mov    %eax,%edi$/;"	l
c0115636	obj/kernel.asm	/^c0115636:	fd                   	std    $/;"	l
c0115637	obj/kernel.asm	/^c0115637:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c0115639	obj/kernel.asm	/^c0115639:	fc                   	cld    $/;"	l
c011563a	obj/kernel.asm	/^c011563a:	89 f8                	mov    %edi,%eax$/;"	l
c011563c	obj/kernel.asm	/^c011563c:	89 f2                	mov    %esi,%edx$/;"	l
c011563e	obj/kernel.asm	/^c011563e:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
c0115641	obj/kernel.asm	/^c0115641:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c0115644	obj/kernel.asm	/^c0115644:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0115647	obj/kernel.asm	/^c0115647:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011564a	obj/kernel.asm	/^c011564a:	83 c4 30             	add    $0x30,%esp$/;"	l
c011564d	obj/kernel.asm	/^c011564d:	5b                   	pop    %ebx$/;"	l
c011564e	obj/kernel.asm	/^c011564e:	5e                   	pop    %esi$/;"	l
c011564f	obj/kernel.asm	/^c011564f:	5f                   	pop    %edi$/;"	l
c0115650	obj/kernel.asm	/^c0115650:	5d                   	pop    %ebp$/;"	l
c0115651	obj/kernel.asm	/^c0115651:	c3                   	ret    $/;"	l
c0115652	obj/kernel.asm	/^c0115652 <memcpy>:$/;"	l
c0115652	obj/kernel.asm	/^c0115652:	55                   	push   %ebp$/;"	l
c0115653	obj/kernel.asm	/^c0115653:	89 e5                	mov    %esp,%ebp$/;"	l
c0115655	obj/kernel.asm	/^c0115655:	57                   	push   %edi$/;"	l
c0115656	obj/kernel.asm	/^c0115656:	56                   	push   %esi$/;"	l
c0115657	obj/kernel.asm	/^c0115657:	83 ec 20             	sub    $0x20,%esp$/;"	l
c011565a	obj/kernel.asm	/^c011565a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011565d	obj/kernel.asm	/^c011565d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0115660	obj/kernel.asm	/^c0115660:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115663	obj/kernel.asm	/^c0115663:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0115666	obj/kernel.asm	/^c0115666:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0115669	obj/kernel.asm	/^c0115669:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011566c	obj/kernel.asm	/^c011566c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011566f	obj/kernel.asm	/^c011566f:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c0115672	obj/kernel.asm	/^c0115672:	89 c1                	mov    %eax,%ecx$/;"	l
c0115674	obj/kernel.asm	/^c0115674:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0115677	obj/kernel.asm	/^c0115677:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011567a	obj/kernel.asm	/^c011567a:	89 d7                	mov    %edx,%edi$/;"	l
c011567c	obj/kernel.asm	/^c011567c:	89 c6                	mov    %eax,%esi$/;"	l
c011567e	obj/kernel.asm	/^c011567e:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c0115680	obj/kernel.asm	/^c0115680:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c0115683	obj/kernel.asm	/^c0115683:	83 e1 03             	and    $0x3,%ecx$/;"	l
c0115686	obj/kernel.asm	/^c0115686:	74 02                	je     c011568a <memcpy+0x38>$/;"	l
c0115688	obj/kernel.asm	/^c0115688:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c011568a	obj/kernel.asm	/^c011568a:	89 f0                	mov    %esi,%eax$/;"	l
c011568c	obj/kernel.asm	/^c011568c:	89 fa                	mov    %edi,%edx$/;"	l
c011568e	obj/kernel.asm	/^c011568e:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c0115691	obj/kernel.asm	/^c0115691:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0115694	obj/kernel.asm	/^c0115694:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0115697	obj/kernel.asm	/^c0115697:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011569a	obj/kernel.asm	/^c011569a:	83 c4 20             	add    $0x20,%esp$/;"	l
c011569d	obj/kernel.asm	/^c011569d:	5e                   	pop    %esi$/;"	l
c011569e	obj/kernel.asm	/^c011569e:	5f                   	pop    %edi$/;"	l
c011569f	obj/kernel.asm	/^c011569f:	5d                   	pop    %ebp$/;"	l
c01156a0	obj/kernel.asm	/^c01156a0:	c3                   	ret    $/;"	l
c01156a1	obj/kernel.asm	/^c01156a1 <memcmp>:$/;"	l
c01156a1	obj/kernel.asm	/^c01156a1:	55                   	push   %ebp$/;"	l
c01156a2	obj/kernel.asm	/^c01156a2:	89 e5                	mov    %esp,%ebp$/;"	l
c01156a4	obj/kernel.asm	/^c01156a4:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01156a7	obj/kernel.asm	/^c01156a7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01156aa	obj/kernel.asm	/^c01156aa:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01156ad	obj/kernel.asm	/^c01156ad:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01156b0	obj/kernel.asm	/^c01156b0:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01156b3	obj/kernel.asm	/^c01156b3:	eb 30                	jmp    c01156e5 <memcmp+0x44>$/;"	l
c01156b5	obj/kernel.asm	/^c01156b5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01156b8	obj/kernel.asm	/^c01156b8:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c01156bb	obj/kernel.asm	/^c01156bb:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01156be	obj/kernel.asm	/^c01156be:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01156c1	obj/kernel.asm	/^c01156c1:	38 c2                	cmp    %al,%dl$/;"	l
c01156c3	obj/kernel.asm	/^c01156c3:	74 18                	je     c01156dd <memcmp+0x3c>$/;"	l
c01156c5	obj/kernel.asm	/^c01156c5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01156c8	obj/kernel.asm	/^c01156c8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01156cb	obj/kernel.asm	/^c01156cb:	0f b6 d0             	movzbl %al,%edx$/;"	l
c01156ce	obj/kernel.asm	/^c01156ce:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01156d1	obj/kernel.asm	/^c01156d1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01156d4	obj/kernel.asm	/^c01156d4:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01156d7	obj/kernel.asm	/^c01156d7:	29 c2                	sub    %eax,%edx$/;"	l
c01156d9	obj/kernel.asm	/^c01156d9:	89 d0                	mov    %edx,%eax$/;"	l
c01156db	obj/kernel.asm	/^c01156db:	eb 1a                	jmp    c01156f7 <memcmp+0x56>$/;"	l
c01156dd	obj/kernel.asm	/^c01156dd:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01156e1	obj/kernel.asm	/^c01156e1:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c01156e5	obj/kernel.asm	/^c01156e5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01156e8	obj/kernel.asm	/^c01156e8:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01156eb	obj/kernel.asm	/^c01156eb:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c01156ee	obj/kernel.asm	/^c01156ee:	85 c0                	test   %eax,%eax$/;"	l
c01156f0	obj/kernel.asm	/^c01156f0:	75 c3                	jne    c01156b5 <memcmp+0x14>$/;"	l
c01156f2	obj/kernel.asm	/^c01156f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01156f7	obj/kernel.asm	/^c01156f7:	c9                   	leave  $/;"	l
c01156f8	obj/kernel.asm	/^c01156f8:	c3                   	ret    $/;"	l
cache	tools/mksfs.c	/^    void *cache;$/;"	m	struct:cache_block	file:
cache_block	tools/mksfs.c	/^struct cache_block {$/;"	s	file:
cache_inode	tools/mksfs.c	/^struct cache_inode {$/;"	s	file:
can_write	obj/kernel.asm	/^        can_write = 1;$/;"	d
cc_compile	tools/function.mk	/^cc_compile = $(eval $(call do_cc_compile,$(1),$(2),$(3),$(4)))$/;"	m
cc_template	tools/function.mk	/^define cc_template$/;"	m
cga_init	kern/driver/console.c	/^cga_init(void) {$/;"	f	file:
cga_putc	kern/driver/console.c	/^cga_putc(int c) {$/;"	f	file:
cgtype	Makefile	/^cgtype = $(patsubst %.$(2),%.$(3),$(1))$/;"	m
ch	obj/kernel.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/badarg.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/exit.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/forktest.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/matrix.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/pgdir.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/priority.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/sleep.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/sleepkill.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/waitkill.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^                ch = *fmt;$/;"	d
change_bit	libs/atomic.h	/^change_bit(int nr, volatile void *addr) {$/;"	f
change_bootfs	kern/fs/vfs/vfs.c	/^change_bootfs(struct inode *node) {$/;"	f	file:
channels	kern/driver/ide.c	/^} channels[2] = {$/;"	v	typeref:struct:__anon2	file:
char	obj/kernel.asm	/^char *$/;"	l
char	obj/user/badarg.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/exit.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/forktest.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/matrix.asm	/^char *$/;"	l
char	obj/user/pgdir.asm	/^char *$/;"	l
char	obj/user/priority.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char shcwd[BUFSIZE];$/;"	l
char	obj/user/sleep.asm	/^char *$/;"	l
char	obj/user/sleepkill.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/waitkill.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/driver/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	kern/mm/pmm.h	/^    void (*check)(void);                              \/\/ check the correctness of XXX_pmm_manager $/;"	m	struct:pmm_manager
check_alloc_page	kern/mm/pmm.c	/^check_alloc_page(void) {$/;"	f	file:
check_boot_pgdir	kern/mm/pmm.c	/^check_boot_pgdir(void) {$/;"	f	file:
check_content_access	kern/mm/swap.c	/^check_content_access(void)$/;"	f	file:
check_content_set	kern/mm/swap.c	/^check_content_set(void)$/;"	f	file:
check_devname_conflict	kern/fs/vfs/vfsdev.c	/^check_devname_conflict(const char *devname) {$/;"	f	file:
check_fs_type	kern/fs/vfs/vfs.h	/^#define check_fs_type(/;"	d
check_inode_type	kern/fs/vfs/inode.h	/^#define check_inode_type(/;"	d
check_mm_struct	kern/mm/vmm.c	/^struct mm_struct *check_mm_struct;$/;"	v	typeref:struct:mm_struct
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = mm;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = mm_create();$/;"	d
check_pgdir	kern/mm/pmm.c	/^check_pgdir(void) {$/;"	f	file:
check_pgfault	kern/mm/vmm.c	/^check_pgfault(void) {$/;"	f	file:
check_ptep	kern/mm/swap.c	/^pte_t * check_ptep[CHECK_VALID_PHY_PAGE_NUM];$/;"	v
check_regexps	tools/grade.sh	/^check_regexps() {$/;"	f
check_result	tools/grade.sh	/^check_result() {$/;"	f
check_rp	kern/mm/swap.c	/^struct Page * check_rp[CHECK_VALID_PHY_PAGE_NUM];$/;"	v	typeref:struct:Page
check_slab	kern/mm/kmalloc.c	/^void check_slab(void) {$/;"	f
check_swap	kern/mm/swap.c	/^check_swap(void)$/;"	f	file:
check_swap	kern/mm/swap.h	/^     int (*check_swap)(void);     $/;"	m	struct:swap_manager
check_swap_addr	kern/mm/swap.c	/^unsigned int check_swap_addr[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
check_sync	kern/sync/check_sync.c	/^void check_sync(void){$/;"	f
check_vma_overlap	kern/mm/vmm.c	/^check_vma_overlap(struct vma_struct *prev, struct vma_struct *next) {$/;"	f	file:
check_vma_struct	kern/mm/vmm.c	/^check_vma_struct(void) {$/;"	f	file:
check_vmm	kern/mm/vmm.c	/^check_vmm(void) {$/;"	f	file:
clear_bit	libs/atomic.h	/^clear_bit(int nr, volatile void *addr) {$/;"	f
cli	libs/x86.h	/^cli(void) {$/;"	f
clock_init	kern/driver/clock.c	/^clock_init(void) {$/;"	f
close	user/libs/file.c	/^close(int fd) {$/;"	f
close_sfs	tools/mksfs.c	/^close_sfs(struct sfs_fs *sfs) {$/;"	f
closedir	user/libs/dir.c	/^closedir(DIR *dirp) {$/;"	f
cnt	libs/printfmt.c	/^    int cnt;            \/\/ the number of characters that have been placed in this buffer$/;"	m	struct:sprintbuf	file:
cnt	obj/kernel.asm	/^    cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/badarg.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/exit.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/forktest.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/matrix.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/pgdir.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/priority.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/sleep.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/sleepkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/waitkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
command	kern/debug/kmonitor.c	/^struct command {$/;"	s	file:
commands	kern/debug/kmonitor.c	/^static struct command commands[] = {$/;"	v	typeref:struct:command	file:
compare_f	libs/skew_heap.h	/^typedef int(*compare_f)(void *a, void *b);$/;"	t
cond_signal	kern/sync/monitor.c	/^cond_signal (condvar_t *cvp) {$/;"	f
cond_signal	obj/kernel.asm	/^cond_signal (condvar_t *cvp) {$/;"	l
cond_wait	kern/sync/monitor.c	/^cond_wait (condvar_t *cvp) {$/;"	f
cond_wait	obj/kernel.asm	/^cond_wait (condvar_t *cvp) {$/;"	l
condvar	kern/sync/monitor.h	/^typedef struct condvar{$/;"	s
condvar_t	kern/sync/monitor.h	/^} condvar_t;$/;"	t	typeref:struct:condvar
cons	kern/driver/console.c	/^} cons;$/;"	v	typeref:struct:__anon1	file:
cons_getc	kern/driver/console.c	/^cons_getc(void) {$/;"	f
cons_init	kern/driver/console.c	/^cons_init(void) {$/;"	f
cons_intr	kern/driver/console.c	/^cons_intr(int (*proc)(void)) {$/;"	f	file:
cons_putc	kern/driver/console.c	/^cons_putc(int c) {$/;"	f
const	obj/kernel.asm	/^        const struct userstabdata *usd = (struct userstabdata *)USTAB;$/;"	t
const	obj/kernel.asm	/^    const struct stab *stabs, *stab_end;$/;"	t
const	obj/kernel.asm	/^const char *$/;"	l
const	obj/user/forktest.asm	/^const int max_child = 32;$/;"	l
const	obj/user/matrix.asm	/^const int total = 21;$/;"	l
cont	boot/bootasm.S	/^cont:$/;"	l
cont	obj/bootblock.asm	/^cont:$/;"	l
context	kern/process/proc.h	/^    struct context context;                     \/\/ Switch here to run process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::context
context	kern/process/proc.h	/^struct context {$/;"	s
copy_from_user	kern/mm/vmm.c	/^copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable) {$/;"	f
copy_fs	kern/process/proc.c	/^copy_fs(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_kargv	kern/process/proc.c	/^copy_kargv(struct mm_struct *mm, int argc, char **kargv, const char **argv) {$/;"	f	file:
copy_mm	kern/process/proc.c	/^copy_mm(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_path	kern/fs/sysfile.c	/^copy_path(char **to, const char *from) {$/;"	f	file:
copy_range	kern/mm/pmm.c	/^copy_range(pde_t *to, pde_t *from, uintptr_t start, uintptr_t end, bool share) {$/;"	f
copy_string	kern/mm/vmm.c	/^copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn) {$/;"	f
copy_thread	kern/process/proc.c	/^copy_thread(struct proc_struct *proc, uintptr_t esp, struct trapframe *tf) {$/;"	f	file:
copy_to_user	kern/mm/vmm.c	/^copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len) {$/;"	f
count	kern/sync/monitor.h	/^    int count;              \/\/ the number of waiters on condvar$/;"	m	struct:condvar
cp	obj/kernel.asm	/^        cp = (uint16_t*)(MONO_BUF + KERNBASE);$/;"	d
cprintf	kern/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cprintf	user/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
cpu_idle	kern/process/proc.c	/^cpu_idle(void) {$/;"	f
cputch	kern/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputch	user/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputchar	kern/libs/stdio.c	/^cputchar(int c) {$/;"	f
cputs	kern/libs/stdio.c	/^cputs(const char *str) {$/;"	f
cputs	user/libs/stdio.c	/^cputs(const char *str) {$/;"	f
cr3	kern/process/proc.h	/^    uintptr_t cr3;                              \/\/ CR3 register: the base addr of Page Directroy Table(PDT)$/;"	m	struct:proc_struct
create_img	tools/mksfs.c	/^create_img(struct sfs_fs *sfs, const char *home) {$/;"	f
create_sfs	tools/mksfs.c	/^create_sfs(int imgfd) {$/;"	f
create_target	tools/function.mk	/^create_target = $(eval $(call do_create_target,$(1),$(2),$(3),$(4),$(5)))$/;"	m
create_target_cc	Makefile	/^create_target_cc = $(call create_target,$(1),$(2),$(3),$(CC),$(CFLAGS))$/;"	m
create_target_host	Makefile	/^create_target_host = $(call create_target,$(1),$(2),$(3),$(HOSTCC),$(HOSTCFLAGS))$/;"	m
crt_buf	kern/driver/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kernel.asm	/^    crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/driver/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kernel.asm	/^    crt_pos = pos;$/;"	d
ctlmap	kern/driver/console.c	/^static uint8_t ctlmap[256] = {$/;"	v	file:
ctrl	kern/driver/ide.c	/^    unsigned short ctrl;        \/\/ Control Base$/;"	m	struct:__anon2	file:
cur	obj/kernel.asm	/^				cur = aligned;$/;"	d
cur	obj/kernel.asm	/^			cur = (slob_t *)__slob_get_free_page(gfp);$/;"	d
cur	obj/kernel.asm	/^			cur = slobfree;$/;"	d
current	kern/process/proc.c	/^struct proc_struct *current = NULL;$/;"	v	typeref:struct:proc_struct
current	obj/kernel.asm	/^            current = proc;$/;"	d
current	obj/kernel.asm	/^    current = idleproc;$/;"	d
cv	kern/sync/monitor.h	/^    condvar_t *cv;          \/\/ the condvars in monitor$/;"	m	struct:monitor
d_blocks	kern/fs/devs/dev.h	/^    size_t d_blocks;$/;"	m	struct:device
d_blocksize	kern/fs/devs/dev.h	/^    size_t d_blocksize;$/;"	m	struct:device
d_close	kern/fs/devs/dev.h	/^    int (*d_close)(struct device *dev);$/;"	m	struct:device
d_io	kern/fs/devs/dev.h	/^    int (*d_io)(struct device *dev, struct iobuf *iob, bool write);$/;"	m	struct:device
d_ioctl	kern/fs/devs/dev.h	/^    int (*d_ioctl)(struct device *dev, int op, void *data);$/;"	m	struct:device
d_open	kern/fs/devs/dev.h	/^    int (*d_open)(struct device *dev, uint32_t open_flags);$/;"	m	struct:device
data	obj/kernel.asm	/^        data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kernel.asm	/^    data = inb(KBDATAP);$/;"	d
db_indirect	tools/mksfs.c	/^        uint32_t db_indirect;$/;"	m	struct:cache_inode::inode	file:
debuginfo_eip	kern/debug/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct eipdebuginfo *info) {$/;"	f
default	obj/kernel.asm	/^        default:$/;"	l
default	obj/kernel.asm	/^    default: ret = -E_INVAL;$/;"	l
default	obj/kernel.asm	/^    default:$/;"	l
default	obj/user/badarg.asm	/^        default:$/;"	l
default	obj/user/badsegment.asm	/^        default:$/;"	l
default	obj/user/divzero.asm	/^        default:$/;"	l
default	obj/user/exit.asm	/^        default:$/;"	l
default	obj/user/faultread.asm	/^        default:$/;"	l
default	obj/user/faultreadkernel.asm	/^        default:$/;"	l
default	obj/user/forktest.asm	/^        default:$/;"	l
default	obj/user/forktree.asm	/^        default:$/;"	l
default	obj/user/hello.asm	/^        default:$/;"	l
default	obj/user/ls.asm	/^        default:$/;"	l
default	obj/user/ls.asm	/^    default:  type = 5; break;$/;"	l
default	obj/user/matrix.asm	/^        default:$/;"	l
default	obj/user/pgdir.asm	/^        default:$/;"	l
default	obj/user/priority.asm	/^        default:$/;"	l
default	obj/user/sh.asm	/^        default:$/;"	l
default	obj/user/sleep.asm	/^        default:$/;"	l
default	obj/user/sleepkill.asm	/^        default:$/;"	l
default	obj/user/softint.asm	/^        default:$/;"	l
default	obj/user/spin.asm	/^        default:$/;"	l
default	obj/user/testbss.asm	/^        default:$/;"	l
default	obj/user/waitkill.asm	/^        default:$/;"	l
default	obj/user/yield.asm	/^        default:$/;"	l
default_alloc_pages	kern/mm/default_pmm.c	/^default_alloc_pages(size_t n) {$/;"	f	file:
default_check	kern/mm/default_pmm.c	/^default_check(void) {$/;"	f	file:
default_check	tools/grade.sh	/^default_check() {$/;"	f
default_free_pages	kern/mm/default_pmm.c	/^default_free_pages(struct Page *base, size_t n) {$/;"	f	file:
default_init	kern/mm/default_pmm.c	/^default_init(void) {$/;"	f	file:
default_init_memmap	kern/mm/default_pmm.c	/^default_init_memmap(struct Page *base, size_t n) {$/;"	f	file:
default_nr_free_pages	kern/mm/default_pmm.c	/^default_nr_free_pages(void) {$/;"	f	file:
default_pmm_manager	kern/mm/default_pmm.c	/^const struct pmm_manager default_pmm_manager = {$/;"	v	typeref:struct:pmm_manager
default_sched_class	kern/schedule/default_sched.c	/^struct sched_class default_sched_class = {$/;"	v	typeref:struct:sched_class
del_timer	kern/schedule/sched.c	/^del_timer(timer_t *timer) {$/;"	f
delay	kern/driver/console.c	/^delay(void) {$/;"	f	file:
delta	obj/kernel.asm	/^			delta = aligned - cur;$/;"	d
dequeue	kern/schedule/sched.h	/^    void (*dequeue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
desc	kern/debug/kmonitor.c	/^    const char *desc;$/;"	m	struct:command	file:
dev	kern/fs/sfs/sfs.h	/^    struct device *dev;                             \/* device mounted on *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::device
dev_close	kern/fs/devs/dev.c	/^dev_close(struct inode *node) {$/;"	f	file:
dev_create_inode	kern/fs/devs/dev.c	/^dev_create_inode(void) {$/;"	f
dev_fstat	kern/fs/devs/dev.c	/^dev_fstat(struct inode *node, struct stat *stat) {$/;"	f	file:
dev_gettype	kern/fs/devs/dev.c	/^dev_gettype(struct inode *node, uint32_t *type_store) {$/;"	f	file:
dev_init	kern/fs/devs/dev.c	/^dev_init(void) {$/;"	f
dev_init_disk0	kern/fs/devs/dev_disk0.c	/^dev_init_disk0(void) {$/;"	f
dev_init_stdin	kern/fs/devs/dev_stdin.c	/^dev_init_stdin(void) {$/;"	f
dev_init_stdout	kern/fs/devs/dev_stdout.c	/^dev_init_stdout(void) {$/;"	f
dev_ioctl	kern/fs/devs/dev.c	/^dev_ioctl(struct inode *node, int op, void *data) {$/;"	f	file:
dev_lookup	kern/fs/devs/dev.c	/^dev_lookup(struct inode *node, char *path, struct inode **node_store) {$/;"	f	file:
dev_node_ops	kern/fs/devs/dev.c	/^static const struct inode_ops dev_node_ops = {$/;"	v	typeref:struct:inode_ops	file:
dev_open	kern/fs/devs/dev.c	/^dev_open(struct inode *node, uint32_t open_flags) {$/;"	f	file:
dev_read	kern/fs/devs/dev.c	/^dev_read(struct inode *node, struct iobuf *iob) {$/;"	f	file:
dev_stdin_read	kern/fs/devs/dev_stdin.c	/^dev_stdin_read(char *buf, size_t len) {$/;"	f	file:
dev_stdin_write	kern/fs/devs/dev_stdin.c	/^dev_stdin_write(char c) {$/;"	f
dev_tryseek	kern/fs/devs/dev.c	/^dev_tryseek(struct inode *node, off_t pos) {$/;"	f	file:
dev_write	kern/fs/devs/dev.c	/^dev_write(struct inode *node, struct iobuf *iob) {$/;"	f	file:
device	kern/fs/devs/dev.h	/^struct device {$/;"	s
devname	kern/fs/vfs/vfsdev.c	/^    const char *devname;$/;"	m	struct:__anon8	file:
devnode	kern/fs/vfs/vfsdev.c	/^    struct inode *devnode;$/;"	m	struct:__anon8	typeref:struct:__anon8::inode	file:
did_init	kern/driver/picirq.c	/^static bool did_init = 0;$/;"	v	file:
did_init	obj/kernel.asm	/^    did_init = 1;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'a' + 10;$/;"	d
din	kern/fs/sfs/sfs.h	/^    struct sfs_disk_inode *din;                     \/* on-disk inode *\/$/;"	m	struct:sfs_inode	typeref:struct:sfs_inode::sfs_disk_inode
dir	user/libs/dir.c	/^DIR dir, *dirp=&dir;$/;"	v
direct	kern/fs/sfs/sfs.h	/^    uint32_t direct[SFS_NDIRECT];                   \/* direct blocks *\/$/;"	m	struct:sfs_disk_inode
direct	tools/mksfs.c	/^        uint32_t direct[SFS_NDIRECT];$/;"	m	struct:cache_inode::inode	file:
dirent	libs/dirent.h	/^struct dirent {$/;"	s
dirent	user/libs/dir.h	/^    struct dirent dirent;$/;"	m	struct:__anon16	typeref:struct:__anon16::dirent
dirp	user/libs/dir.c	/^DIR dir, *dirp=&dir;$/;"	v
dirty	kern/fs/sfs/sfs.h	/^    bool dirty;                                     \/* true if inode modified *\/$/;"	m	struct:sfs_inode
disk0_buffer	kern/fs/devs/dev_disk0.c	/^static char *disk0_buffer;$/;"	v	file:
disk0_close	kern/fs/devs/dev_disk0.c	/^disk0_close(struct device *dev) {$/;"	f	file:
disk0_device_init	kern/fs/devs/dev_disk0.c	/^disk0_device_init(struct device *dev) {$/;"	f	file:
disk0_io	kern/fs/devs/dev_disk0.c	/^disk0_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
disk0_ioctl	kern/fs/devs/dev_disk0.c	/^disk0_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
disk0_open	kern/fs/devs/dev_disk0.c	/^disk0_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
disk0_read_blks_nolock	kern/fs/devs/dev_disk0.c	/^disk0_read_blks_nolock(uint32_t blkno, uint32_t nblks) {$/;"	f	file:
disk0_sem	kern/fs/devs/dev_disk0.c	/^static semaphore_t disk0_sem;$/;"	v	file:
disk0_write_blks_nolock	kern/fs/devs/dev_disk0.c	/^disk0_write_blks_nolock(uint32_t blkno, uint32_t nblks) {$/;"	f	file:
do_add_files_to_packet	tools/function.mk	/^define do_add_files_to_packet$/;"	m
do_add_objs_to_packet	tools/function.mk	/^define do_add_objs_to_packet$/;"	m
do_cc_compile	tools/function.mk	/^define do_cc_compile$/;"	m
do_create_target	tools/function.mk	/^define do_create_target$/;"	m
do_div	libs/x86.h	/^#define do_div(/;"	d
do_execve	kern/process/proc.c	/^do_execve(const char *name, int argc, const char **argv) {$/;"	f
do_exit	kern/process/proc.c	/^do_exit(int error_code) {$/;"	f
do_finish_all	tools/function.mk	/^define do_finish_all$/;"	m
do_fork	kern/process/proc.c	/^do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf) {$/;"	f
do_kill	kern/process/proc.c	/^do_kill(int pid) {$/;"	f
do_pgfault	kern/mm/vmm.c	/^do_pgfault(struct mm_struct *mm, uint32_t error_code, uintptr_t addr) {$/;"	f
do_sleep	kern/process/proc.c	/^do_sleep(unsigned int time) {$/;"	f
do_wait	kern/process/proc.c	/^do_wait(int pid, int *code_store) {$/;"	f
do_yield	kern/process/proc.c	/^do_yield(void) {$/;"	f
do_yield	user/waitkill.c	/^do_yield(void) {$/;"	f
dop_close	kern/fs/devs/dev.h	/^#define dop_close(/;"	d
dop_io	kern/fs/devs/dev.h	/^#define dop_io(/;"	d
dop_ioctl	kern/fs/devs/dev.h	/^#define dop_ioctl(/;"	d
dop_open	kern/fs/devs/dev.h	/^#define dop_open(/;"	d
down	kern/sync/sem.c	/^down(semaphore_t *sem) {$/;"	f
dup2	user/libs/file.c	/^dup2(int fd1, int fd2) {$/;"	f
dup_fs	kern/fs/fs.c	/^dup_fs(struct files_struct *to, struct files_struct *from) {$/;"	f
dup_mmap	kern/mm/vmm.c	/^dup_mmap(struct mm_struct *to, struct mm_struct *from) {$/;"	f
e820map	kern/mm/memlayout.h	/^struct e820map {$/;"	s
e_ehsize	libs/elf.h	/^    uint16_t e_ehsize;    \/\/ size of this elf header$/;"	m	struct:elfhdr
e_elf	libs/elf.h	/^    uint8_t e_elf[12];$/;"	m	struct:elfhdr
e_entry	libs/elf.h	/^    uint32_t e_entry;     \/\/ entry point if executable$/;"	m	struct:elfhdr
e_flags	libs/elf.h	/^    uint32_t e_flags;     \/\/ architecture-specific flags, usually 0$/;"	m	struct:elfhdr
e_machine	libs/elf.h	/^    uint16_t e_machine;   \/\/ 3=x86, 4=68K, etc.$/;"	m	struct:elfhdr
e_magic	libs/elf.h	/^    uint32_t e_magic;     \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
e_phentsize	libs/elf.h	/^    uint16_t e_phentsize; \/\/ size of an entry in program header$/;"	m	struct:elfhdr
e_phnum	libs/elf.h	/^    uint16_t e_phnum;     \/\/ number of entries in program header or 0$/;"	m	struct:elfhdr
e_phoff	libs/elf.h	/^    uint32_t e_phoff;     \/\/ file position of program header or 0$/;"	m	struct:elfhdr
e_shentsize	libs/elf.h	/^    uint16_t e_shentsize; \/\/ size of an entry in section header$/;"	m	struct:elfhdr
e_shnum	libs/elf.h	/^    uint16_t e_shnum;     \/\/ number of entries in section header or 0$/;"	m	struct:elfhdr
e_shoff	libs/elf.h	/^    uint32_t e_shoff;     \/\/ file position of section header or 0$/;"	m	struct:elfhdr
e_shstrndx	libs/elf.h	/^    uint16_t e_shstrndx;  \/\/ section number that contains section name strings$/;"	m	struct:elfhdr
e_type	libs/elf.h	/^    uint16_t e_type;      \/\/ 1=relocatable, 2=executable, 3=shared object, 4=core image$/;"	m	struct:elfhdr
e_version	libs/elf.h	/^    uint32_t e_version;   \/\/ file version, always 1$/;"	m	struct:elfhdr
ebp	kern/process/proc.h	/^    uint32_t ebp;$/;"	m	struct:context
ebp	obj/kernel.asm	/^        ebp = ((uint32_t *)ebp)[0];$/;"	d
ebuf	libs/printfmt.c	/^    char *ebuf;         \/\/ points the end of the buffer$/;"	m	struct:sprintbuf	file:
ebx	kern/process/proc.h	/^    uint32_t ebx;$/;"	m	struct:context
ecx	kern/process/proc.h	/^    uint32_t ecx;$/;"	m	struct:context
edi	kern/process/proc.h	/^    uint32_t edi;$/;"	m	struct:context
edx	kern/process/proc.h	/^    uint32_t edx;$/;"	m	struct:context
eip	kern/process/proc.h	/^    uint32_t eip;$/;"	m	struct:context
eip	obj/kernel.asm	/^        eip = ((uint32_t *)ebp)[1];$/;"	d
eip_file	kern/debug/kdebug.c	/^    const char *eip_file;                   \/\/ source code filename for eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_addr	kern/debug/kdebug.c	/^    uintptr_t eip_fn_addr;                  \/\/ start address of function$/;"	m	struct:eipdebuginfo	file:
eip_fn_name	kern/debug/kdebug.c	/^    const char *eip_fn_name;                \/\/ name of function containing eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_namelen	kern/debug/kdebug.c	/^    int eip_fn_namelen;                     \/\/ length of function's name$/;"	m	struct:eipdebuginfo	file:
eip_fn_narg	kern/debug/kdebug.c	/^    int eip_fn_narg;                        \/\/ number of function arguments$/;"	m	struct:eipdebuginfo	file:
eip_line	kern/debug/kdebug.c	/^    int eip_line;                           \/\/ source code line number for eip$/;"	m	struct:eipdebuginfo	file:
eipdebuginfo	kern/debug/kdebug.c	/^struct eipdebuginfo {$/;"	s	file:
elfhdr	libs/elf.h	/^struct elfhdr {$/;"	s
enable_paging	kern/mm/pmm.c	/^enable_paging(void) {$/;"	f	file:
end	obj/kernel.asm	/^                end = KMEMSIZE;$/;"	d
end	obj/kernel.asm	/^                end = ROUNDDOWN(end, PGSIZE);$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_filesz;$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_memsz;$/;"	d
endpos	obj/kernel.asm	/^            endpos = din->size;$/;"	d
endpos	obj/kernel.asm	/^        endpos = SFS_MAX_FILE_SIZE;$/;"	d
enqueue	kern/schedule/sched.h	/^    void (*enqueue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
ent	obj/kernel.asm	/^        ent = din->indirect;$/;"	d
eph	obj/bootblock.asm	/^    eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kernel.asm	/^                err = -err;$/;"	d
err	obj/kernel.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/badarg.asm	/^                err = -err;$/;"	d
err	obj/user/badarg.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^                err = -err;$/;"	d
err	obj/user/badsegment.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^                err = -err;$/;"	d
err	obj/user/divzero.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/exit.asm	/^                err = -err;$/;"	d
err	obj/user/exit.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^                err = -err;$/;"	d
err	obj/user/faultread.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^                err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/forktest.asm	/^                err = -err;$/;"	d
err	obj/user/forktest.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^                err = -err;$/;"	d
err	obj/user/forktree.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^                err = -err;$/;"	d
err	obj/user/hello.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^                err = -err;$/;"	d
err	obj/user/ls.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/matrix.asm	/^                err = -err;$/;"	d
err	obj/user/matrix.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/pgdir.asm	/^                err = -err;$/;"	d
err	obj/user/pgdir.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/priority.asm	/^                err = -err;$/;"	d
err	obj/user/priority.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^                err = -err;$/;"	d
err	obj/user/sh.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/sleep.asm	/^                err = -err;$/;"	d
err	obj/user/sleep.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/sleepkill.asm	/^                err = -err;$/;"	d
err	obj/user/sleepkill.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^                err = -err;$/;"	d
err	obj/user/softint.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^                err = -err;$/;"	d
err	obj/user/spin.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^                err = -err;$/;"	d
err	obj/user/testbss.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/waitkill.asm	/^                err = -err;$/;"	d
err	obj/user/waitkill.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^                err = -err;$/;"	d
err	obj/user/yield.asm	/^            err = va_arg(ap, int);$/;"	d
error_string	libs/printfmt.c	/^static const char * const error_string[MAXERROR + 1] = {$/;"	v	file:
esi	kern/process/proc.h	/^    uint32_t esi;$/;"	m	struct:context
esp	kern/process/proc.h	/^    uint32_t esp;$/;"	m	struct:context
exec	user/libs/ulib.h	/^#define exec(/;"	d
execve_exit	obj/kernel.asm	/^execve_exit:$/;"	l
exit	user/libs/ulib.c	/^exit(int error_code) {$/;"	f
exit_code	kern/process/proc.h	/^    int exit_code;                              \/\/ exit code (be sent to parent proc)$/;"	m	struct:proc_struct
exit_mmap	kern/mm/vmm.c	/^exit_mmap(struct mm_struct *mm) {$/;"	f
exit_range	kern/mm/pmm.c	/^exit_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
expires	kern/schedule/sched.h	/^    unsigned int expires;$/;"	m	struct:__anon11
extern	obj/kernel.asm	/^         extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^     extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^    extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern size_t npage;$/;"	l
extern	obj/kernel.asm	/^extern struct Page *pages;$/;"	t
extern	obj/kernel.asm	/^extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern void vfs_devlist_init(void);$/;"	l
fail	tools/grade.sh	/^fail() {$/;"	f
failed	obj/kernel.asm	/^failed:$/;"	l
failed	obj/user/badarg.asm	/^failed:$/;"	l
failed	obj/user/badsegment.asm	/^failed:$/;"	l
failed	obj/user/divzero.asm	/^failed:$/;"	l
failed	obj/user/exit.asm	/^failed:$/;"	l
failed	obj/user/faultread.asm	/^failed:$/;"	l
failed	obj/user/faultreadkernel.asm	/^failed:$/;"	l
failed	obj/user/forktest.asm	/^failed:$/;"	l
failed	obj/user/forktree.asm	/^failed:$/;"	l
failed	obj/user/hello.asm	/^failed:$/;"	l
failed	obj/user/ls.asm	/^failed:$/;"	l
failed	obj/user/matrix.asm	/^failed:$/;"	l
failed	obj/user/pgdir.asm	/^failed:$/;"	l
failed	obj/user/priority.asm	/^failed:$/;"	l
failed	obj/user/sh.asm	/^failed:$/;"	l
failed	obj/user/sleep.asm	/^failed:$/;"	l
failed	obj/user/sleepkill.asm	/^failed:$/;"	l
failed	obj/user/softint.asm	/^failed:$/;"	l
failed	obj/user/spin.asm	/^failed:$/;"	l
failed	obj/user/testbss.asm	/^failed:$/;"	l
failed	obj/user/waitkill.asm	/^failed:$/;"	l
failed	obj/user/yield.asm	/^failed:$/;"	l
failed_cleanup	obj/kernel.asm	/^failed_cleanup:$/;"	l
failed_cleanup_din	obj/kernel.asm	/^failed_cleanup_din:$/;"	l
failed_cleanup_freemap	obj/kernel.asm	/^failed_cleanup_freemap:$/;"	l
failed_cleanup_fs	obj/kernel.asm	/^failed_cleanup_fs:$/;"	l
failed_cleanup_hash_list	obj/kernel.asm	/^failed_cleanup_hash_list:$/;"	l
failed_cleanup_name	obj/kernel.asm	/^failed_cleanup_name:$/;"	l
failed_cleanup_sfs_buffer	obj/kernel.asm	/^failed_cleanup_sfs_buffer:$/;"	l
failed_cleanup_vdev	obj/kernel.asm	/^failed_cleanup_vdev:$/;"	l
failed_nomem	obj/kernel.asm	/^failed_nomem:$/;"	l
failed_unlock	obj/kernel.asm	/^failed_unlock:$/;"	l
fd	kern/fs/file.h	/^    int fd;$/;"	m	struct:file
fd	user/libs/dir.h	/^    int fd;$/;"	m	struct:__anon16
fd1	obj/user/sh.asm	/^        fd1 = ret, ret = dup2(fd1, fd2);$/;"	d
fd2file	kern/fs/file.c	/^fd2file(int fd, struct file **file_store) {$/;"	f	file:
fd_array	kern/fs/fs.h	/^    struct file *fd_array;  \/\/ opened files array$/;"	m	struct:files_struct	typeref:struct:files_struct::file
fd_array_acquire	kern/fs/file.c	/^fd_array_acquire(struct file *file) {$/;"	f	file:
fd_array_alloc	kern/fs/file.c	/^fd_array_alloc(int fd, struct file **file_store) {$/;"	f	file:
fd_array_close	kern/fs/file.c	/^fd_array_close(struct file *file) {$/;"	f
fd_array_dup	kern/fs/file.c	/^fd_array_dup(struct file *to, struct file *from) {$/;"	f
fd_array_free	kern/fs/file.c	/^fd_array_free(struct file *file) {$/;"	f	file:
fd_array_init	kern/fs/file.c	/^fd_array_init(struct file *fd_array) {$/;"	f
fd_array_open	kern/fs/file.c	/^fd_array_open(struct file *file) {$/;"	f
fd_array_release	kern/fs/file.c	/^fd_array_release(struct file *file) {$/;"	f	file:
file	kern/fs/file.h	/^struct file {$/;"	s
file_close	kern/fs/file.c	/^file_close(int fd) {$/;"	f
file_dup	kern/fs/file.c	/^file_dup(int fd1, int fd2) {$/;"	f
file_fstat	kern/fs/file.c	/^file_fstat(int fd, struct stat *stat) {$/;"	f
file_fsync	kern/fs/file.c	/^file_fsync(int fd) {$/;"	f
file_getdirentry	kern/fs/file.c	/^file_getdirentry(int fd, struct dirent *direntp) {$/;"	f
file_open	kern/fs/file.c	/^file_open(char *path, uint32_t open_flags) {$/;"	f
file_read	kern/fs/file.c	/^file_read(int fd, void *base, size_t len, size_t *copied_store) {$/;"	f
file_seek	kern/fs/file.c	/^file_seek(int fd, off_t pos, int whence) {$/;"	f
file_testfd	kern/fs/file.c	/^file_testfd(int fd, bool readable, bool writable) {$/;"	f
file_write	kern/fs/file.c	/^file_write(int fd, void *base, size_t len, size_t *copied_store) {$/;"	f
filename	Makefile	/^filename = $(basename $(notdir $(1)))$/;"	m
files_closeall	kern/fs/fs.c	/^files_closeall(struct files_struct *filesp) {$/;"	f
files_count	kern/fs/fs.h	/^    int files_count;        \/\/ the number of opened files$/;"	m	struct:files_struct
files_count	kern/fs/fs.h	/^files_count(struct files_struct *filesp) {$/;"	f
files_count_dec	kern/fs/fs.h	/^files_count_dec(struct files_struct *filesp) {$/;"	f
files_count_inc	kern/fs/fs.h	/^files_count_inc(struct files_struct *filesp) {$/;"	f
files_create	kern/fs/fs.c	/^files_create(void) {$/;"	f
files_destroy	kern/fs/fs.c	/^files_destroy(struct files_struct *filesp) {$/;"	f
files_sem	kern/fs/fs.h	/^    semaphore_t files_sem;  \/\/ lock protect sem$/;"	m	struct:files_struct
files_struct	kern/fs/fs.h	/^struct files_struct {$/;"	s
filesp	kern/process/proc.h	/^    struct files_struct *filesp;                \/\/ the file related info(pwd, files_count, files_array, fs_semaphore) of process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::files_struct
filesp	obj/kernel.asm	/^        filesp = old_filesp;$/;"	d
find_mount	kern/fs/vfs/vfsdev.c	/^find_mount(const char *devname, vfs_dev_t **vdev_store) {$/;"	f	file:
find_order	kern/mm/kmalloc.c	/^static int find_order(int size)$/;"	f	file:
find_proc	kern/process/proc.c	/^find_proc(int pid) {$/;"	f
find_vma	kern/mm/vmm.c	/^find_vma(struct mm_struct *mm, uintptr_t addr) {$/;"	f
finish_all	tools/function.mk	/^finish_all = $(eval $(call do_finish_all))$/;"	m
finish_probe	boot/bootasm.S	/^finish_probe:$/;"	l
flags	kern/mm/memlayout.h	/^    uint32_t flags;                 \/\/ array of flags that describe the status of the page frame$/;"	m	struct:Page
flags	kern/process/proc.h	/^    uint32_t flags;                             \/\/ Process flag$/;"	m	struct:proc_struct
flush_cache_block	tools/mksfs.c	/^flush_cache_block(struct sfs_fs *sfs, struct cache_block *cb) {$/;"	f	file:
flush_cache_inode	tools/mksfs.c	/^flush_cache_inode(struct sfs_fs *sfs, struct cache_inode *ci) {$/;"	f	file:
fopen_count	kern/fs/file.h	/^fopen_count(struct file *file) {$/;"	f
fopen_count_dec	kern/fs/file.h	/^fopen_count_dec(struct file *file) {$/;"	f
fopen_count_inc	kern/fs/file.h	/^fopen_count_inc(struct file *file) {$/;"	f
fork	user/libs/ulib.c	/^fork(void) {$/;"	f
fork_lock	user/libs/ulib.c	/^static lock_t fork_lock = INIT_LOCK;$/;"	v	file:
fork_out	obj/kernel.asm	/^fork_out:$/;"	l
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch) {$/;"	f
forkret	kern/process/proc.c	/^forkret(void) {$/;"	f	file:
forkrets	kern/trap/trapentry.S	/^forkrets:$/;"	l
forkrets	obj/kernel.asm	/^forkrets:$/;"	l
forktree	user/forktree.c	/^forktree(const char *cur) {$/;"	f
found	obj/kernel.asm	/^                        found = 1;$/;"	d
found	obj/kernel.asm	/^                        found = fsop_get_root(vdev->fs);$/;"	d
found	obj/kernel.asm	/^                        found = vdev->devnode;$/;"	d
found	obj/kernel.asm	/^found:$/;"	l
fprintf	user/libs/stdio.c	/^fprintf(int fd, const char *fmt, ...) {$/;"	f
fputch	user/libs/stdio.c	/^fputch(char c, int *cnt, int fd) {$/;"	f	file:
free_area	kern/mm/default_pmm.c	/^free_area_t free_area;$/;"	v
free_area_t	kern/mm/memlayout.h	/^} free_area_t;$/;"	t	typeref:struct:__anon10
free_list	kern/mm/default_pmm.c	/^#define free_list /;"	d	file:
free_list	kern/mm/memlayout.h	/^    list_entry_t free_list;         \/\/ the list header$/;"	m	struct:__anon10
free_list	kern/mm/swap.c	/^#define free_list /;"	d	file:
free_list	obj/kernel.asm	/^     free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^    free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^#define free_list (free_area.free_list)$/;"	d
free_page	kern/mm/pmm.h	/^#define free_page(/;"	d
free_pages	kern/mm/pmm.c	/^free_pages(struct Page *base, size_t n) {$/;"	f
free_pages	kern/mm/pmm.h	/^    void (*free_pages)(struct Page *base, size_t n);  \/\/ free >=n pages with "base" addr of Page descriptor structures(memlayout.h)$/;"	m	struct:pmm_manager
freemap	kern/fs/sfs/sfs.h	/^    struct bitmap *freemap;                         \/* blocks in use are mared 0 *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::bitmap
fs	kern/fs/vfs/vfs.h	/^struct fs {$/;"	s
fs	kern/fs/vfs/vfsdev.c	/^    struct fs *fs;$/;"	m	struct:__anon8	typeref:struct:__anon8::fs	file:
fs_cleanup	kern/fs/fs.c	/^fs_cleanup(void) {$/;"	f
fs_cleanup	kern/fs/vfs/vfs.h	/^    void (*fs_cleanup)(struct fs *fs);             \/\/ Cleanup of filesystem.???$/;"	m	struct:fs
fs_get_root	kern/fs/vfs/vfs.h	/^    struct inode *(*fs_get_root)(struct fs *fs);   \/\/ Return root inode of filesystem.$/;"	m	struct:fs	typeref:struct:fs::fs_get_root
fs_info	kern/fs/vfs/vfs.h	/^    } fs_info;                                     \/\/ filesystem-specific data $/;"	m	struct:fs	typeref:union:fs::__anon6
fs_init	kern/fs/fs.c	/^fs_init(void) {$/;"	f
fs_sem	kern/fs/sfs/sfs.h	/^    semaphore_t fs_sem;                             \/* semaphore for fs *\/$/;"	m	struct:sfs_fs
fs_sync	kern/fs/vfs/vfs.h	/^    int (*fs_sync)(struct fs *fs);                 \/\/ Flush all dirty buffers to disk $/;"	m	struct:fs
fs_type	kern/fs/vfs/vfs.h	/^    } fs_type;                                     \/\/ filesystem type $/;"	m	struct:fs	typeref:enum:fs::__anon7
fs_type_sfs_info	kern/fs/vfs/vfs.h	/^        fs_type_sfs_info,$/;"	e	enum:fs::__anon7
fs_unmount	kern/fs/vfs/vfs.h	/^    int (*fs_unmount)(struct fs *fs);              \/\/ Attempt unmount of filesystem.$/;"	m	struct:fs
fscopy	Makefile	/^define fscopy$/;"	m
fsop_cleanup	kern/fs/vfs/vfs.h	/^#define fsop_cleanup(/;"	d
fsop_get_root	kern/fs/vfs/vfs.h	/^#define fsop_get_root(/;"	d
fsop_info	kern/fs/vfs/vfs.h	/^#define fsop_info(/;"	d
fsop_sync	kern/fs/vfs/vfs.h	/^#define fsop_sync(/;"	d
fsop_unmount	kern/fs/vfs/vfs.h	/^#define fsop_unmount(/;"	d
fstat	user/libs/file.c	/^fstat(int fd, struct stat *stat) {$/;"	f
fsync	user/libs/file.c	/^fsync(int fd) {$/;"	f
func	kern/debug/kmonitor.c	/^    int(*func)(int argc, char **argv, struct trapframe *tf);$/;"	m	struct:command	file:
gatedesc	kern/mm/mmu.h	/^struct gatedesc {$/;"	s
gd_args	kern/mm/mmu.h	/^    unsigned gd_args : 5;           \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
gd_dpl	kern/mm/mmu.h	/^    unsigned gd_dpl : 2;            \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
gd_off_15_0	kern/mm/mmu.h	/^    unsigned gd_off_15_0 : 16;      \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
gd_off_31_16	kern/mm/mmu.h	/^    unsigned gd_off_31_16 : 16;     \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
gd_p	kern/mm/mmu.h	/^    unsigned gd_p : 1;              \/\/ Present$/;"	m	struct:gatedesc
gd_rsv1	kern/mm/mmu.h	/^    unsigned gd_rsv1 : 3;           \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
gd_s	kern/mm/mmu.h	/^    unsigned gd_s : 1;              \/\/ must be 0 (system)$/;"	m	struct:gatedesc
gd_ss	kern/mm/mmu.h	/^    unsigned gd_ss : 16;            \/\/ segment selector$/;"	m	struct:gatedesc
gd_type	kern/mm/mmu.h	/^    unsigned gd_type : 4;           \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:gatedesc
gdt	boot/bootasm.S	/^gdt:$/;"	l
gdt	kern/mm/pmm.c	/^static struct segdesc gdt[] = {$/;"	v	typeref:struct:segdesc	file:
gdt_init	kern/mm/pmm.c	/^gdt_init(void) {$/;"	f	file:
gdt_pd	kern/mm/pmm.c	/^static struct pseudodesc gdt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
gdtdesc	boot/bootasm.S	/^gdtdesc:$/;"	l
get_cwd_nolock	kern/fs/vfs/vfspath.c	/^get_cwd_nolock(void) {$/;"	f	file:
get_device	kern/fs/vfs/vfslookup.c	/^get_device(char *path, char **subpath, struct inode **node_store) {$/;"	f	file:
get_fd_array	kern/fs/file.c	/^get_fd_array(void) {$/;"	f	file:
get_page	kern/mm/pmm.c	/^get_page(pde_t *pgdir, uintptr_t la, pte_t **ptep_store) {$/;"	f
get_pgtable_items	kern/mm/pmm.c	/^get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t *table, size_t *left_store, size_t *right_store) {$/;"	f	file:
get_pid	kern/process/proc.c	/^get_pid(void) {$/;"	f	file:
get_proc_name	kern/process/proc.c	/^get_proc_name(struct proc_struct *proc) {$/;"	f
get_pte	kern/mm/pmm.c	/^get_pte(pde_t *pgdir, uintptr_t la, bool create) {$/;"	f
get_time	tools/grade.sh	/^get_time() {$/;"	f
getchar	kern/libs/stdio.c	/^getchar(void) {$/;"	f
getcwd	user/libs/dir.c	/^getcwd(char *buffer, size_t len) {$/;"	f
getint	libs/printfmt.c	/^getint(va_list *ap, int lflag) {$/;"	f	file:
getmode	user/ls.c	/^getmode(uint32_t st_mode) {$/;"	f	file:
getpid	user/libs/ulib.c	/^getpid(void) {$/;"	f
getstat	user/ls.c	/^getstat(const char *name, struct stat *stat) {$/;"	f	file:
gettime_msec	user/libs/ulib.c	/^gettime_msec(void) {$/;"	f
gettoken	user/sh.c	/^gettoken(char **p1, char **p2) {$/;"	f
getuint	libs/printfmt.c	/^getuint(va_list *ap, int lflag) {$/;"	f	file:
gfp_t	kern/mm/kmalloc.c	/^typedef unsigned int gfp_t;$/;"	t	file:
good_files_struct	obj/kernel.asm	/^good_files_struct:$/;"	l
good_mm	obj/kernel.asm	/^good_mm:$/;"	l
grade_backtrace	kern/init/init.c	/^grade_backtrace(void) {$/;"	f
grade_backtrace0	kern/init/init.c	/^grade_backtrace0(int arg0, int arg1, int arg2) {$/;"	f
grade_backtrace1	kern/init/init.c	/^grade_backtrace1(int arg0, int arg1) {$/;"	f
grade_backtrace2	kern/init/init.c	/^grade_backtrace2(int arg0, int arg1, int arg2, int arg3) {$/;"	f
hash32	libs/hash.c	/^hash32(uint32_t val, unsigned int bits) {$/;"	f
hash32	tools/mksfs.c	/^hash32(uint32_t val) {$/;"	f	file:
hash64	tools/mksfs.c	/^hash64(uint64_t val) {$/;"	f	file:
hash_link	kern/fs/sfs/sfs.h	/^    list_entry_t hash_link;                         \/* entry for hash linked-list in sfs_fs *\/$/;"	m	struct:sfs_inode
hash_link	kern/process/proc.h	/^    list_entry_t hash_link;                     \/\/ Process hash list$/;"	m	struct:proc_struct
hash_list	kern/fs/sfs/sfs.h	/^    list_entry_t *hash_list;                        \/* inode hash linked-list *\/$/;"	m	struct:sfs_fs
hash_list	kern/process/proc.c	/^static list_entry_t hash_list[HASH_LIST_SIZE];$/;"	v	file:
hash_next	tools/mksfs.c	/^    struct cache_block *hash_next;$/;"	m	struct:cache_block	typeref:struct:cache_block::cache_block	file:
hash_next	tools/mksfs.c	/^    struct cache_inode *hash_next;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::cache_inode	file:
hash_proc	kern/process/proc.c	/^hash_proc(struct proc_struct *proc) {$/;"	f	file:
haskid	obj/kernel.asm	/^            haskid = 1;$/;"	d
haskid	obj/kernel.asm	/^    haskid = 0;$/;"	d
ide_device	kern/driver/ide.c	/^static struct ide_device {$/;"	s	file:
ide_device_size	kern/driver/ide.c	/^ide_device_size(unsigned short ideno) {$/;"	f
ide_device_valid	kern/driver/ide.c	/^ide_device_valid(unsigned short ideno) {$/;"	f
ide_devices	kern/driver/ide.c	/^} ide_devices[MAX_IDE];$/;"	v	typeref:struct:ide_device	file:
ide_init	kern/driver/ide.c	/^ide_init(void) {$/;"	f
ide_read_secs	kern/driver/ide.c	/^ide_read_secs(unsigned short ideno, uint32_t secno, void *dst, size_t nsecs) {$/;"	f
ide_wait_ready	kern/driver/ide.c	/^ide_wait_ready(unsigned short iobase, bool check_error) {$/;"	f	file:
ide_write_secs	kern/driver/ide.c	/^ide_write_secs(unsigned short ideno, uint32_t secno, const void *src, size_t nsecs) {$/;"	f
idleproc	kern/process/proc.c	/^struct proc_struct *idleproc = NULL;$/;"	v	typeref:struct:proc_struct
idt	kern/trap/trap.c	/^static struct gatedesc idt[256] = {{0}};$/;"	v	typeref:struct:gatedesc	file:
idt_init	kern/trap/trap.c	/^idt_init(void) {$/;"	f
idt_pd	kern/trap/trap.c	/^static struct pseudodesc idt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
imgfd	tools/mksfs.c	/^    int imgfd;$/;"	m	struct:sfs_fs	file:
in_fs	kern/fs/vfs/inode.h	/^    struct fs *in_fs;$/;"	m	struct:inode	typeref:struct:inode::fs
in_info	kern/fs/vfs/inode.h	/^    } in_info;$/;"	m	struct:inode	typeref:union:inode::__anon4
in_ops	kern/fs/vfs/inode.h	/^    const struct inode_ops *in_ops;$/;"	m	struct:inode	typeref:struct:inode::inode_ops
in_swap_tick_event	kern/trap/trap.c	/^static volatile int in_swap_tick_event = 0;$/;"	v	file:
in_type	kern/fs/vfs/inode.h	/^    } in_type;$/;"	m	struct:inode	typeref:enum:inode::__anon5
inb	libs/x86.h	/^inb(uint16_t port) {$/;"	f
indirect	kern/fs/sfs/sfs.h	/^    uint32_t indirect;                              \/* indirect blocks *\/$/;"	m	struct:sfs_disk_inode
indirect	tools/mksfs.c	/^        uint32_t indirect;$/;"	m	struct:cache_inode::inode	file:
info	kern/fs/sfs/sfs.h	/^    char info[SFS_MAX_INFO_LEN + 1];                \/* infomation for sfs  *\/$/;"	m	struct:sfs_super
info	tools/mksfs.c	/^        char info[SFS_MAX_INFO_LEN + 1];$/;"	m	struct:sfs_fs::__anon15	file:
info2fs	kern/fs/vfs/vfs.h	/^#define info2fs(/;"	d
info2node	kern/fs/vfs/inode.h	/^#define info2node(/;"	d
init	kern/mm/pmm.h	/^    void (*init)(void);                               \/\/ initialize internal description&management data structure$/;"	m	struct:pmm_manager
init	kern/mm/swap.h	/^     int (*init)            (void);$/;"	m	struct:swap_manager
init	kern/schedule/sched.h	/^    void (*init)(struct run_queue *rq);$/;"	m	struct:sched_class
init_device	kern/fs/devs/dev.c	/^#define init_device(/;"	d	file:
init_main	kern/process/proc.c	/^init_main(void *arg) {$/;"	f	file:
init_memmap	kern/mm/pmm.c	/^init_memmap(struct Page *base, size_t n) {$/;"	f	file:
init_memmap	kern/mm/pmm.h	/^    void (*init_memmap)(struct Page *base, size_t n); \/\/ setup description&management data structcure according to$/;"	m	struct:pmm_manager
init_mm	kern/mm/swap.h	/^     int (*init_mm)         (struct mm_struct *mm);$/;"	m	struct:swap_manager
init_pmm_manager	kern/mm/pmm.c	/^init_pmm_manager(void) {$/;"	f	file:
initfd	user/libs/umain.c	/^initfd(int fd2, const char *path, uint32_t open_flags) {$/;"	f	file:
initproc	kern/process/proc.c	/^struct proc_struct *initproc = NULL;$/;"	v	typeref:struct:proc_struct
initproc	obj/kernel.asm	/^    initproc = find_proc(pid);$/;"	d
inline	obj/kernel.asm	/^inline void $/;"	l
ino	kern/fs/sfs/sfs.h	/^    uint32_t ino;                                   \/* inode number *\/$/;"	m	struct:sfs_disk_entry
ino	kern/fs/sfs/sfs.h	/^    uint32_t ino;                                   \/* inode number *\/$/;"	m	struct:sfs_inode
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:cache_block	file:
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:cache_inode	file:
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:sfs_entry	file:
inode	kern/fs/vfs/inode.h	/^struct inode {$/;"	s
inode	tools/mksfs.c	/^    struct inode {$/;"	s	struct:cache_inode	file:
inode	tools/mksfs.c	/^    } inode;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::inode	file:
inode_check	kern/fs/vfs/inode.c	/^inode_check(struct inode *node, const char *opstr) {$/;"	f
inode_init	kern/fs/vfs/inode.c	/^inode_init(struct inode *node, const struct inode_ops *ops, struct fs *fs) {$/;"	f
inode_kill	kern/fs/vfs/inode.c	/^inode_kill(struct inode *node) {$/;"	f
inode_link	kern/fs/sfs/sfs.h	/^    list_entry_t inode_link;                        \/* entry for linked-list in sfs_fs *\/$/;"	m	struct:sfs_inode
inode_list	kern/fs/sfs/sfs.h	/^    list_entry_t inode_list;                        \/* inode linked-list *\/$/;"	m	struct:sfs_fs
inode_open_count	kern/fs/vfs/inode.h	/^inode_open_count(struct inode *node) {$/;"	f
inode_open_dec	kern/fs/vfs/inode.c	/^inode_open_dec(struct inode *node) {$/;"	f
inode_open_inc	kern/fs/vfs/inode.c	/^inode_open_inc(struct inode *node) {$/;"	f
inode_ops	kern/fs/vfs/inode.h	/^struct inode_ops {$/;"	s
inode_ref_count	kern/fs/vfs/inode.h	/^inode_ref_count(struct inode *node) {$/;"	f
inode_ref_dec	kern/fs/vfs/inode.c	/^inode_ref_dec(struct inode *node) {$/;"	f
inode_ref_inc	kern/fs/vfs/inode.c	/^inode_ref_inc(struct inode *node) {$/;"	f
inode_type_device_info	kern/fs/vfs/inode.h	/^        inode_type_device_info = 0x1234,$/;"	e	enum:inode::__anon5
inode_type_sfs_inode_info	kern/fs/vfs/inode.h	/^        inode_type_sfs_inode_info,$/;"	e	enum:inode::__anon5
inodes	tools/mksfs.c	/^    struct cache_inode *inodes[HASH_LIST_SIZE];$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_inode	file:
insert_vma_struct	kern/mm/vmm.c	/^insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma) {$/;"	f
inside	obj/kernel.asm	/^    inside:$/;"	l
insl	libs/x86.h	/^insl(uint32_t port, void *addr, int cnt) {$/;"	f
int	obj/kernel.asm	/^int dup_files(struct files_struct *to, struct files_struct *from);$/;"	l
int	obj/kernel.asm	/^int file_dup(int fd1, int fd2);$/;"	l
int	obj/kernel.asm	/^int file_mkfifo(const char *name, uint32_t open_flags);$/;"	l
int	obj/kernel.asm	/^int file_pipe(int fd[]);$/;"	l
int	obj/kernel.asm	/^int kern_init(void) __attribute__((noreturn));$/;"	l
int	obj/kernel.asm	/^int philosopher_using_condvar(void * arg) { \/* arg is the No. of philosopher 0~N-1*\/$/;"	l
int	obj/kernel.asm	/^int philosopher_using_semaphore(void * arg) \/* i：哲学家号码，从0到N-1 *\/$/;"	l
int	obj/kernel.asm	/^int state_condvar[N];                            \/\/ the philosopher's state: EATING, HUNGARY, THINKING  $/;"	l
int	obj/kernel.asm	/^int$/;"	l
int	obj/user/badarg.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/badarg.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/exit.asm	/^int magic = -0x10384;$/;"	l
int	obj/user/exit.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/exit.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/forktest.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/forktest.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/matrix.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/matrix.asm	/^int$/;"	l
int	obj/user/pgdir.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/pgdir.asm	/^int$/;"	l
int	obj/user/priority.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/priority.asm	/^int pids[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int status[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/sleep.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sleep.asm	/^int$/;"	l
int	obj/user/sleepkill.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sleepkill.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/waitkill.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/waitkill.asm	/^int parent, pid1, pid2;$/;"	l
int	obj/user/waitkill.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	libs/defs.h	/^typedef short int16_t;$/;"	t
int32_t	libs/defs.h	/^typedef int int32_t;$/;"	t
int64_t	libs/defs.h	/^typedef long long int64_t;$/;"	t
int8_t	libs/defs.h	/^typedef char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^        interactive = 0;$/;"	d
intptr_t	libs/defs.h	/^typedef int32_t intptr_t;$/;"	t
intr_disable	kern/driver/intr.c	/^intr_disable(void) {$/;"	f
intr_enable	kern/driver/intr.c	/^intr_enable(void) {$/;"	f
invlpg	libs/x86.h	/^invlpg(void *addr) {$/;"	f
inw	libs/x86.h	/^inw(uint16_t port) {$/;"	f
io_base	kern/fs/iobuf.h	/^    void *io_base;     \/\/ the base addr of buffer (used for Rd\/Wr)$/;"	m	struct:iobuf
io_len	kern/fs/iobuf.h	/^    size_t io_len;     \/\/ the length of buffer  (used for Rd\/Wr)$/;"	m	struct:iobuf
io_offset	kern/fs/iobuf.h	/^    off_t io_offset;   \/\/ current Rd\/Wr position in buffer, will have been incremented by the amount transferred$/;"	m	struct:iobuf
io_resid	kern/fs/iobuf.h	/^    size_t io_resid;   \/\/ current resident length need to Rd\/Wr, will have been decremented by the amount transferred.$/;"	m	struct:iobuf
io_sem	kern/fs/sfs/sfs.h	/^    semaphore_t io_sem;                             \/* semaphore for io *\/$/;"	m	struct:sfs_fs
iobase	obj/kernel.asm	/^        iobase = IO_BASE(ideno);$/;"	d
iobuf	kern/fs/iobuf.h	/^struct iobuf {$/;"	s
iobuf_init	kern/fs/iobuf.c	/^iobuf_init(struct iobuf *iob, void *base, size_t len, off_t offset) {$/;"	f
iobuf_move	kern/fs/iobuf.c	/^iobuf_move(struct iobuf *iob, void *data, size_t len, bool m2b, size_t *copiedp) {$/;"	f
iobuf_move_zeros	kern/fs/iobuf.c	/^iobuf_move_zeros(struct iobuf *iob, size_t len, size_t *copiedp) {$/;"	f
iobuf_skip	kern/fs/iobuf.c	/^iobuf_skip(struct iobuf *iob, size_t n) {$/;"	f
iobuf_used	kern/fs/iobuf.h	/^#define iobuf_used(/;"	d
irq_mask	kern/driver/picirq.c	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	v	file:
irq_mask	obj/kernel.asm	/^    irq_mask = mask;$/;"	d
is_kernel_panic	kern/debug/panic.c	/^is_kernel_panic(void) {$/;"	f
is_panic	kern/debug/panic.c	/^static bool is_panic = 0;$/;"	v	file:
is_panic	obj/kernel.asm	/^    is_panic = 1;$/;"	d
j	obj/user/priority.asm	/^          j = !j;$/;"	d
kallocated	kern/mm/kmalloc.c	/^kallocated(void) {$/;"	f
kbd_init	kern/driver/console.c	/^kbd_init(void) {$/;"	f	file:
kbd_intr	kern/driver/console.c	/^kbd_intr(void) {$/;"	f	file:
kbd_proc_data	kern/driver/console.c	/^kbd_proc_data(void) {$/;"	f	file:
kern_entry	kern/init/entry.S	/^kern_entry:$/;"	l
kern_entry	obj/kernel.asm	/^kern_entry:$/;"	l
kern_init	kern/init/init.c	/^kern_init(void) {$/;"	f
kernel	Makefile	/^kernel = $(call totarget,kernel)$/;"	m
kernel_execve	kern/process/proc.c	/^kernel_execve(const char *name, const char **argv) {$/;"	f	file:
kernel_thread	kern/process/proc.c	/^kernel_thread(int (*fn)(void *), void *arg, uint32_t clone_flags) {$/;"	f
kernel_thread_entry	kern/process/entry.S	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
kernel_thread_entry	obj/kernel.asm	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
kfree	kern/mm/kmalloc.c	/^void kfree(void *block)$/;"	f
kill	user/libs/ulib.c	/^kill(int pid) {$/;"	f
kmalloc	kern/mm/kmalloc.c	/^kmalloc(size_t size)$/;"	f
kmalloc_init	kern/mm/kmalloc.c	/^kmalloc_init(void) {$/;"	f
kmonitor	kern/debug/kmonitor.c	/^kmonitor(struct trapframe *tf) {$/;"	f
ksize	kern/mm/kmalloc.c	/^unsigned int ksize(const void *block)$/;"	f
kstack	kern/process/proc.h	/^    uintptr_t kstack;                           \/\/ Process kernel stack$/;"	m	struct:proc_struct
kva2page	kern/mm/pmm.h	/^kva2page(void *kva) {$/;"	f
l	obj/kernel.asm	/^            l = m;$/;"	d
l	obj/kernel.asm	/^            l = true_m + 1;$/;"	d
l	obj/kernel.asm	/^          l = skew_heap_merge(a, b->right, comp);$/;"	d
l	obj/kernel.asm	/^          l = skew_heap_merge(a->right, b, comp);$/;"	d
l	obj/kernel.asm	/^        l = *region_right;$/;"	d
l1	tools/mksfs.c	/^    struct cache_block *l1, *l2;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::cache_block	file:
l2	tools/mksfs.c	/^    struct cache_block *l1, *l2;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::	file:
la	obj/kernel.asm	/^    la = ROUNDDOWN(la, PGSIZE);$/;"	d
lab1_print_cur_status	kern/init/init.c	/^lab1_print_cur_status(void) {$/;"	f	file:
lab1_switch_test	kern/init/init.c	/^lab1_switch_test(void) {$/;"	f	file:
lab1_switch_to_kernel	kern/init/init.c	/^lab1_switch_to_kernel(void) {$/;"	f	file:
lab1_switch_to_user	kern/init/init.c	/^lab1_switch_to_user(void) {$/;"	f	file:
lab6_priority	kern/process/proc.h	/^    uint32_t lab6_priority;                     \/\/ FOR LAB6 ONLY: the priority of process, set by lab6_set_priority(uint32_t)$/;"	m	struct:proc_struct
lab6_run_pool	kern/process/proc.h	/^    skew_heap_entry_t lab6_run_pool;            \/\/ FOR LAB6 ONLY: the entry in the run pool$/;"	m	struct:proc_struct
lab6_run_pool	kern/schedule/sched.h	/^    skew_heap_entry_t *lab6_run_pool;$/;"	m	struct:run_queue
lab6_set_priority	kern/process/proc.c	/^lab6_set_priority(uint32_t priority)$/;"	f
lab6_set_priority	user/libs/ulib.c	/^lab6_set_priority(uint32_t priority)$/;"	f
lab6_stride	kern/process/proc.h	/^    uint32_t lab6_stride;                       \/\/ FOR LAB6 ONLY: the current stride of the process$/;"	m	struct:proc_struct
last_pid	obj/kernel.asm	/^                        last_pid = 1;$/;"	d
last_pid	obj/kernel.asm	/^        last_pid = 1;$/;"	d
lcr0	libs/x86.h	/^lcr0(uintptr_t cr0) {$/;"	f
lcr3	libs/x86.h	/^lcr3(uintptr_t cr3) {$/;"	f
le	obj/kernel.asm	/^                le = list_next(le);$/;"	d
le	obj/kernel.asm	/^            le = list_next(le);$/;"	d
le	obj/kernel.asm	/^          le = len;$/;"	d
le	obj/kernel.asm	/^          le = list_next(le);$/;"	d
le	obj/kernel.asm	/^        le = list;$/;"	d
le	obj/kernel.asm	/^        le = list_next(le);$/;"	d
le	obj/kernel.asm	/^        le = list_prev(le);$/;"	d
le	obj/kernel.asm	/^     le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = list_prev(&(base->page_link));$/;"	d
le2page	kern/mm/memlayout.h	/^#define le2page(/;"	d
le2proc	kern/process/proc.h	/^#define le2proc(/;"	d
le2sin	kern/fs/sfs/sfs.h	/^#define le2sin(/;"	d
le2timer	kern/schedule/sched.h	/^#define le2timer(/;"	d
le2timer	obj/kernel.asm	/^#define le2timer(le, member)            \\$/;"	d
le2vdev	kern/fs/vfs/vfsdev.c	/^#define le2vdev(/;"	d	file:
le2vma	kern/mm/vmm.h	/^#define le2vma(/;"	d
le2wait	kern/sync/wait.h	/^#define le2wait(/;"	d
le_next	obj/kernel.asm	/^    le_next = list_next(le_prev);$/;"	d
le_prev	obj/kernel.asm	/^            le_prev = le;$/;"	d
left	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
len	obj/kernel.asm	/^          len = list_next(le);$/;"	d
lflag	obj/kernel.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/badarg.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/exit.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/forktest.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/matrix.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/pgdir.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/priority.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/sleep.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/sleepkill.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/waitkill.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^        lflag = altflag = 0;$/;"	d
lgdt	kern/mm/pmm.c	/^lgdt(struct pseudodesc *pd) {$/;"	f	file:
lidt	libs/x86.h	/^lidt(struct pseudodesc *pd) {$/;"	f
list_add	libs/list.h	/^list_add(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_after	libs/list.h	/^list_add_after(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_before	libs/list.h	/^list_add_before(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_del	libs/list.h	/^list_del(list_entry_t *listelm) {$/;"	f
list_del_init	libs/list.h	/^list_del_init(list_entry_t *listelm) {$/;"	f
list_empty	libs/list.h	/^list_empty(list_entry_t *list) {$/;"	f
list_entry	libs/list.h	/^struct list_entry {$/;"	s
list_entry_t	libs/list.h	/^typedef struct list_entry list_entry_t;$/;"	t	typeref:struct:list_entry
list_init	libs/list.h	/^list_init(list_entry_t *elm) {$/;"	f
list_link	kern/mm/vmm.h	/^    list_entry_t list_link;  \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:vma_struct
list_link	kern/process/proc.h	/^    list_entry_t list_link;                     \/\/ Process link list$/;"	m	struct:proc_struct
list_next	libs/list.h	/^list_next(list_entry_t *listelm) {$/;"	f
list_prev	libs/list.h	/^list_prev(list_entry_t *listelm) {$/;"	f
listf	tools/function.mk	/^listf = $(filter $(if $(2),$(addprefix %.,$(2)),%),\\$/;"	m
listf_cc	Makefile	/^listf_cc = $(call listf,$(1),$(CTYPE))$/;"	m
lline	obj/kernel.asm	/^        lline = lfile;$/;"	d
lline	obj/kernel.asm	/^        lline = lfun;$/;"	d
load_esp0	kern/mm/pmm.c	/^load_esp0(uintptr_t esp0) {$/;"	f
load_icode	kern/process/proc.c	/^load_icode(int fd, int argc, char **kargv) {$/;"	f	file:
load_icode_read	kern/process/proc.c	/^load_icode_read(int fd, void *buf, size_t len, off_t offset) {$/;"	f	file:
local_intr_restore	kern/sync/sync.h	/^#define local_intr_restore(/;"	d
local_intr_save	kern/sync/sync.h	/^#define local_intr_save(/;"	d
lock	user/libs/lock.h	/^lock(lock_t *l) {$/;"	f
lock_bootfs	kern/fs/vfs/vfs.c	/^lock_bootfs(void) {$/;"	f	file:
lock_cfs	kern/fs/vfs/vfspath.c	/^lock_cfs(void) {$/;"	f	file:
lock_disk0	kern/fs/devs/dev_disk0.c	/^lock_disk0(void) {$/;"	f	file:
lock_files	kern/fs/fs.c	/^lock_files(struct files_struct *filesp) {$/;"	f
lock_fork	user/libs/ulib.c	/^lock_fork(void) {$/;"	f
lock_init	user/libs/lock.h	/^lock_init(lock_t *l) {$/;"	f
lock_mm	kern/mm/vmm.h	/^lock_mm(struct mm_struct *mm) {$/;"	f
lock_sfs_fs	kern/fs/sfs/sfs_lock.c	/^lock_sfs_fs(struct sfs_fs *sfs) {$/;"	f
lock_sfs_io	kern/fs/sfs/sfs_lock.c	/^lock_sfs_io(struct sfs_fs *sfs) {$/;"	f
lock_sin	kern/fs/sfs/sfs_inode.c	/^lock_sin(struct sfs_inode *sin) {$/;"	f	file:
lock_t	user/libs/lock.h	/^typedef volatile bool lock_t;$/;"	t
lock_vdev_list	kern/fs/vfs/vfsdev.c	/^lock_vdev_list(void) {$/;"	f	file:
locked_by	kern/mm/vmm.h	/^    int locked_by;                 \/\/ the lock owner process's pid$/;"	m	struct:mm_struct
long	obj/kernel.asm	/^long SYSTEM_READ_TIMER( void ){$/;"	l
long	obj/kernel.asm	/^long$/;"	l
long	obj/user/badarg.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/exit.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/forktest.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/matrix.asm	/^long$/;"	l
long	obj/user/pgdir.asm	/^long$/;"	l
long	obj/user/priority.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/sleep.asm	/^long$/;"	l
long	obj/user/sleepkill.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/waitkill.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lookup_sfs_nolock	kern/fs/sfs/sfs_inode.c	/^lookup_sfs_nolock(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
loop	user/waitkill.c	/^loop(void) {$/;"	f
lpt_putc	kern/driver/console.c	/^lpt_putc(int c) {$/;"	f	file:
lpt_putc_sub	kern/driver/console.c	/^lpt_putc_sub(int c) {$/;"	f	file:
ls	user/ls.c	/^ls(const char *path) {$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path) {$/;"	f
lsstat	user/ls.c	/^lsstat(struct stat *stat, const char *filename) {$/;"	f
ltr	libs/x86.h	/^ltr(uint16_t sel) {$/;"	f
m	obj/kernel.asm	/^		m = slob_alloc(size + SLOB_UNIT, gfp, 0);$/;"	d
magic	kern/fs/sfs/sfs.h	/^    uint32_t magic;                                 \/* magic number, should be SFS_MAGIC *\/$/;"	m	struct:sfs_super
magic	tools/mksfs.c	/^        uint32_t magic;$/;"	m	struct:sfs_fs::__anon15	file:
magic	user/exit.c	/^int magic = -0x10384;$/;"	v
main	tools/mksfs.c	/^main(int argc, char **argv) {$/;"	f
main	tools/sign.c	/^main(int argc, char *argv[]) {$/;"	f
main	tools/vector.c	/^main(void) {$/;"	f
main	user/badarg.c	/^main(void) {$/;"	f
main	user/badsegment.c	/^main(void) {$/;"	f
main	user/divzero.c	/^main(void) {$/;"	f
main	user/exit.c	/^main(void) {$/;"	f
main	user/faultread.c	/^main(void) {$/;"	f
main	user/faultreadkernel.c	/^main(void) {$/;"	f
main	user/forktest.c	/^main(void) {$/;"	f
main	user/forktree.c	/^main(void) {$/;"	f
main	user/hello.c	/^main(void) {$/;"	f
main	user/ls.c	/^main(int argc, char **argv) {$/;"	f
main	user/matrix.c	/^main(void) {$/;"	f
main	user/pgdir.c	/^main(void) {$/;"	f
main	user/priority.c	/^main(void) {$/;"	f
main	user/sh.c	/^main(int argc, char **argv) {$/;"	f
main	user/sleep.c	/^main(void) {$/;"	f
main	user/sleepkill.c	/^main(void) {$/;"	f
main	user/softint.c	/^main(void) {$/;"	f
main	user/spin.c	/^main(void) {$/;"	f
main	user/testbss.c	/^main(void) {$/;"	f
main	user/waitkill.c	/^main(void) {$/;"	f
main	user/yield.c	/^main(void) {$/;"	f
make_print	tools/grade.sh	/^make_print() {$/;"	f
map	kern/fs/sfs/bitmap.c	/^    WORD_TYPE *map;$/;"	m	struct:bitmap	file:
map	kern/mm/memlayout.h	/^    } __attribute__((packed)) map[E820MAX];$/;"	m	struct:e820map	typeref:struct:e820map::__anon9
map_count	kern/mm/vmm.h	/^    int map_count;                 \/\/ the count of these vma$/;"	m	struct:mm_struct
map_swappable	kern/mm/swap.h	/^     int (*map_swappable)   (struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in);$/;"	m	struct:swap_manager
mata	user/matrix.c	/^static int mata[MATSIZE][MATSIZE];$/;"	v	file:
matb	user/matrix.c	/^static int matb[MATSIZE][MATSIZE];$/;"	v	file:
matc	user/matrix.c	/^static int matc[MATSIZE][MATSIZE];$/;"	v	file:
match	Makefile	/^match = $(shell echo $(2) | $(AWK) '{for(i=1;i<=NF;i++){if(match("$(1)","^"$$(i)"$$")){exit 1;}}}'; echo $$?)$/;"	m
max_child	user/forktest.c	/^const int max_child = 32;$/;"	v
max_swap_offset	kern/mm/swap.c	/^size_t max_swap_offset;$/;"	v
max_swap_offset	obj/kernel.asm	/^    max_swap_offset = ide_device_size(SWAP_DEV_NO) \/ (PGSIZE \/ SECTSIZE);$/;"	d
max_time_slice	kern/schedule/sched.h	/^    int max_time_slice;$/;"	m	struct:run_queue
maxpa	obj/kernel.asm	/^                maxpa = end;$/;"	d
maxpa	obj/kernel.asm	/^        maxpa = KMEMSIZE;$/;"	d
memcmp	libs/string.c	/^memcmp(const void *v1, const void *v2, size_t n) {$/;"	f
memcpy	libs/string.c	/^memcpy(void *dst, const void *src, size_t n) {$/;"	f
memmove	libs/string.c	/^memmove(void *dst, const void *src, size_t n) {$/;"	f
memset	libs/string.c	/^memset(void *s, char c, size_t n) {$/;"	f
mm	kern/process/proc.h	/^    struct mm_struct *mm;                       \/\/ Process's memory management field$/;"	m	struct:proc_struct	typeref:struct:proc_struct::mm_struct
mm	obj/kernel.asm	/^        mm = check_mm_struct;$/;"	d
mm	obj/kernel.asm	/^        mm = current->mm;$/;"	d
mm	obj/kernel.asm	/^        mm = oldmm;$/;"	d
mm_count	kern/mm/vmm.h	/^    int mm_count;                  \/\/ the number ofprocess which shared the mm$/;"	m	struct:mm_struct
mm_count	kern/mm/vmm.h	/^mm_count(struct mm_struct *mm) {$/;"	f
mm_count_dec	kern/mm/vmm.h	/^mm_count_dec(struct mm_struct *mm) {$/;"	f
mm_count_inc	kern/mm/vmm.h	/^mm_count_inc(struct mm_struct *mm) {$/;"	f
mm_create	kern/mm/vmm.c	/^mm_create(void) {$/;"	f
mm_destroy	kern/mm/vmm.c	/^mm_destroy(struct mm_struct *mm) {$/;"	f
mm_map	kern/mm/vmm.c	/^mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,$/;"	f
mm_sem	kern/mm/vmm.h	/^    semaphore_t mm_sem;            \/\/ mutex for using dup_mmap fun to duplicat the mm $/;"	m	struct:mm_struct
mm_struct	kern/mm/vmm.h	/^struct mm_struct {$/;"	s
mmap_cache	kern/mm/vmm.h	/^    struct vma_struct *mmap_cache; \/\/ current accessed vma, used for speed purpose$/;"	m	struct:mm_struct	typeref:struct:mm_struct::vma_struct
mmap_list	kern/mm/vmm.h	/^    list_entry_t mmap_list;        \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:mm_struct
model	kern/driver/ide.c	/^    unsigned char model[41];    \/\/ Model in String$/;"	m	struct:ide_device	file:
mon_backtrace	kern/debug/kmonitor.c	/^mon_backtrace(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_help	kern/debug/kmonitor.c	/^mon_help(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_kerninfo	kern/debug/kmonitor.c	/^mon_kerninfo(int argc, char **argv, struct trapframe *tf) {$/;"	f
monitor	kern/sync/monitor.h	/^typedef struct monitor{$/;"	s
monitor_init	kern/sync/monitor.c	/^monitor_init (monitor_t * mtp, size_t num_cv) {$/;"	f
monitor_init	obj/kernel.asm	/^monitor_init (monitor_t * mtp, size_t num_cv) {$/;"	l
monitor_t	kern/sync/monitor.h	/^typedef struct monitor monitor_t;$/;"	t	typeref:struct:monitor
monitor_t	kern/sync/monitor.h	/^} monitor_t;$/;"	t	typeref:struct:monitor
monitor_t	obj/kernel.asm	/^monitor_t mt, *mtp=&mt;                                    \/\/ mp is mutex semaphore for monitor's procedures$/;"	l
mountable	kern/fs/vfs/vfsdev.c	/^    bool mountable;$/;"	m	struct:__anon8	file:
mt	kern/sync/check_sync.c	/^monitor_t mt, *mtp=&mt;                                    \/\/ mp is mutex semaphore for monitor's procedures$/;"	v
mtp	kern/sync/check_sync.c	/^monitor_t mt, *mtp=&mt;                                    \/\/ mp is mutex semaphore for monitor's procedures$/;"	v
mutex	kern/sync/check_sync.c	/^semaphore_t mutex; \/* 临界区互斥 *\/$/;"	v
mutex	kern/sync/monitor.h	/^    semaphore_t mutex;      \/\/ the mutex lock for going into the routines in monitor, should be initialized to 1$/;"	m	struct:monitor
mutex_sem	kern/fs/sfs/sfs.h	/^    semaphore_t mutex_sem;                          \/* semaphore for link\/unlink and rename *\/$/;"	m	struct:sfs_fs
n_desc	kern/debug/stab.h	/^    uint16_t n_desc;        \/\/ description field$/;"	m	struct:stab
n_other	kern/debug/stab.h	/^    uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:stab
n_strx	kern/debug/stab.h	/^    uint32_t n_strx;        \/\/ index into string table of name$/;"	m	struct:stab
n_type	kern/debug/stab.h	/^    uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:stab
n_value	kern/debug/stab.h	/^    uintptr_t n_value;      \/\/ value of symbol$/;"	m	struct:stab
name	kern/debug/kmonitor.c	/^    const char *name;$/;"	m	struct:command	file:
name	kern/fs/sfs/sfs.h	/^    char name[SFS_MAX_FNAME_LEN + 1];               \/* file name *\/$/;"	m	struct:sfs_disk_entry
name	kern/mm/pmm.h	/^    const char *name;                                 \/\/ XXX_pmm_manager's name$/;"	m	struct:pmm_manager
name	kern/mm/swap.h	/^     const char *name;$/;"	m	struct:swap_manager
name	kern/process/proc.h	/^    char name[PROC_NAME_LEN + 1];               \/\/ Process name$/;"	m	struct:proc_struct
name	kern/schedule/sched.h	/^    const char *name;$/;"	m	struct:sched_class
name	libs/dirent.h	/^    char name[FS_MAX_FNAME_LEN + 1];$/;"	m	struct:dirent
name	tools/mksfs.c	/^    char name[SFS_MAX_FNAME_LEN + 1];$/;"	m	struct:sfs_entry	file:
nbits	kern/fs/sfs/bitmap.c	/^    uint32_t nbits;$/;"	m	struct:bitmap	file:
nblks	obj/kernel.asm	/^            nblks = alen \/ DISK0_BLKSIZE;$/;"	d
nblks	obj/kernel.asm	/^            nblks = copied \/ DISK0_BLKSIZE;$/;"	d
nblks	obj/kernel.asm	/^    nblks = din->blocks;$/;"	d
nblks	tools/mksfs.c	/^    uint32_t nblks;$/;"	m	struct:cache_inode	file:
need_resched	kern/process/proc.h	/^    volatile bool need_resched;                 \/\/ bool value: need to be rescheduled to release CPU?$/;"	m	struct:proc_struct
nexec	user/libs/ulib.h	/^#define nexec(/;"	d
next	kern/mm/kmalloc.c	/^	struct bigblock *next;$/;"	m	struct:bigblock	typeref:struct:bigblock::bigblock	file:
next	kern/mm/kmalloc.c	/^	struct slob_block *next;$/;"	m	struct:slob_block	typeref:struct:slob_block::slob_block	file:
next	kern/sync/monitor.h	/^    semaphore_t next;       \/\/ the next semaphore is used to down the signaling proc itself, and the other OR wakeuped waiting proc should wake up the sleeped signaling proc.$/;"	m	struct:monitor
next	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::
next	libs/rand.c	/^static unsigned long long next = 1;$/;"	v	file:
next	obj/kernel.asm	/^            next = idleproc;$/;"	d
next	obj/kernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/kernel.asm	/^    next = seed;$/;"	d
next	obj/user/badarg.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badarg.asm	/^    next = seed;$/;"	d
next	obj/user/badsegment.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badsegment.asm	/^    next = seed;$/;"	d
next	obj/user/divzero.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/divzero.asm	/^    next = seed;$/;"	d
next	obj/user/exit.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/exit.asm	/^    next = seed;$/;"	d
next	obj/user/faultread.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultread.asm	/^    next = seed;$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = seed;$/;"	d
next	obj/user/forktest.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktest.asm	/^    next = seed;$/;"	d
next	obj/user/forktree.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktree.asm	/^    next = seed;$/;"	d
next	obj/user/hello.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/hello.asm	/^    next = seed;$/;"	d
next	obj/user/ls.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/ls.asm	/^    next = seed;$/;"	d
next	obj/user/matrix.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/matrix.asm	/^    next = seed;$/;"	d
next	obj/user/pgdir.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/pgdir.asm	/^    next = seed;$/;"	d
next	obj/user/priority.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/priority.asm	/^    next = seed;$/;"	d
next	obj/user/sh.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sh.asm	/^    next = seed;$/;"	d
next	obj/user/sleep.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sleep.asm	/^    next = seed;$/;"	d
next	obj/user/sleepkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sleepkill.asm	/^    next = seed;$/;"	d
next	obj/user/softint.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/softint.asm	/^    next = seed;$/;"	d
next	obj/user/spin.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/spin.asm	/^    next = seed;$/;"	d
next	obj/user/testbss.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/testbss.asm	/^    next = seed;$/;"	d
next	obj/user/waitkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/waitkill.asm	/^    next = seed;$/;"	d
next	obj/user/yield.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/yield.asm	/^    next = seed;$/;"	d
next	tools/mksfs.c	/^        struct subpath *next, *prev;$/;"	m	struct:sfs_fs::subpath	typeref:struct:sfs_fs::subpath::subpath	file:
next_count	kern/sync/monitor.h	/^    int next_count;         \/\/ the number of of sleeped signaling proc$/;"	m	struct:monitor
next_ino	tools/mksfs.c	/^    uint32_t ninos, next_ino;$/;"	m	struct:sfs_fs	file:
next_safe	obj/kernel.asm	/^                    next_safe = MAX_PID;$/;"	d
next_safe	obj/kernel.asm	/^                next_safe = proc->pid;$/;"	d
next_safe	obj/kernel.asm	/^        next_safe = MAX_PID;$/;"	d
ninos	tools/mksfs.c	/^    uint32_t ninos, next_ino;$/;"	m	struct:sfs_fs	file:
nlinks	kern/fs/sfs/sfs.h	/^    uint16_t nlinks;                                \/* # of hard links to this file *\/$/;"	m	struct:sfs_disk_inode
nlinks	tools/mksfs.c	/^        uint16_t nlinks;$/;"	m	struct:cache_inode::inode	file:
node	kern/fs/file.h	/^    struct inode *node;$/;"	m	struct:file	typeref:struct:file::inode
node	obj/kernel.asm	/^            node = info2node(sin, sfs_inode);$/;"	d
node	obj/kernel.asm	/^        node = parent, sin = vop_info(node, sfs_inode);$/;"	d
normalmap	kern/driver/console.c	/^static uint8_t normalmap[256] = {$/;"	v	file:
npage	kern/mm/pmm.c	/^size_t npage = 0;$/;"	v
npage	obj/kernel.asm	/^    npage = maxpa \/ PGSIZE;$/;"	d
nr_free	kern/mm/default_pmm.c	/^#define nr_free /;"	d	file:
nr_free	kern/mm/memlayout.h	/^    unsigned int nr_free;           \/\/ # of free pages in this free list$/;"	m	struct:__anon10
nr_free	kern/mm/swap.c	/^#define nr_free /;"	d	file:
nr_free	obj/kernel.asm	/^     nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^     nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^#define nr_free (free_area.nr_free)$/;"	d
nr_free_pages	kern/mm/pmm.c	/^nr_free_pages(void) {$/;"	f
nr_free_pages	kern/mm/pmm.h	/^    size_t (*nr_free_pages)(void);                    \/\/ return the number of free pages $/;"	m	struct:pmm_manager
nr_map	kern/mm/memlayout.h	/^    int nr_map;$/;"	m	struct:e820map
nr_process	kern/process/proc.c	/^static int nr_process = 0;$/;"	v	file:
num	obj/kernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/kernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/kernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/kernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badarg.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badarg.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badsegment.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badsegment.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/divzero.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/divzero.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/exit.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/exit.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultread.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultread.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktest.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktest.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktree.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktree.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/hello.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/hello.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/ls.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/ls.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/matrix.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/matrix.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/matrix.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/matrix.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/pgdir.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/pgdir.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/priority.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/priority.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/priority.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/priority.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sh.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sh.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/sleep.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sleep.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sleep.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sleep.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/sleepkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sleepkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sleepkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sleepkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/softint.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/softint.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/spin.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/spin.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/testbss.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/testbss.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/waitkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/waitkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/yield.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/yield.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/kernel.asm	/^        number:$/;"	l
number	obj/user/badarg.asm	/^        number:$/;"	l
number	obj/user/badsegment.asm	/^        number:$/;"	l
number	obj/user/divzero.asm	/^        number:$/;"	l
number	obj/user/exit.asm	/^        number:$/;"	l
number	obj/user/faultread.asm	/^        number:$/;"	l
number	obj/user/faultreadkernel.asm	/^        number:$/;"	l
number	obj/user/forktest.asm	/^        number:$/;"	l
number	obj/user/forktree.asm	/^        number:$/;"	l
number	obj/user/hello.asm	/^        number:$/;"	l
number	obj/user/ls.asm	/^        number:$/;"	l
number	obj/user/matrix.asm	/^        number:$/;"	l
number	obj/user/pgdir.asm	/^        number:$/;"	l
number	obj/user/priority.asm	/^        number:$/;"	l
number	obj/user/sh.asm	/^        number:$/;"	l
number	obj/user/sleep.asm	/^        number:$/;"	l
number	obj/user/sleepkill.asm	/^        number:$/;"	l
number	obj/user/softint.asm	/^        number:$/;"	l
number	obj/user/spin.asm	/^        number:$/;"	l
number	obj/user/testbss.asm	/^        number:$/;"	l
number	obj/user/waitkill.asm	/^        number:$/;"	l
number	obj/user/yield.asm	/^        number:$/;"	l
nvma	obj/kernel.asm	/^        nvma = vma_create(vma->vm_start, vma->vm_end, vma->vm_flags);$/;"	d
nwords	kern/fs/sfs/bitmap.c	/^    uint32_t nwords;$/;"	m	struct:bitmap	file:
objfile	Makefile	/^objfile = $(call toobj,$(1))$/;"	m
off	obj/kernel.asm	/^            off = start + PGSIZE - la, size = PGSIZE - off;$/;"	d
off	obj/kernel.asm	/^            off = start - la, size = PGSIZE - off, la += PGSIZE;$/;"	d
off_t	libs/defs.h	/^typedef intptr_t off_t;$/;"	t
offset	libs/dirent.h	/^    off_t offset;$/;"	m	struct:dirent
offsetof	libs/defs.h	/^#define offsetof(/;"	d
old	obj/kernel.asm	/^        old = bootfs_node, bootfs_node = node;$/;"	d
open	user/libs/file.c	/^open(const char *path, uint32_t open_flags) {$/;"	f
open_bug	tools/mksfs.c	/^#define open_bug(/;"	d	file:
open_count	kern/fs/file.h	/^    int open_count;$/;"	m	struct:file
open_count	kern/fs/vfs/inode.h	/^    int open_count;$/;"	m	struct:inode
open_count	obj/kernel.asm	/^    open_count = node->open_count;$/;"	d
open_dir	tools/mksfs.c	/^open_dir(struct sfs_fs *sfs, struct cache_inode *current, struct cache_inode *parent) {$/;"	f
open_file	tools/mksfs.c	/^open_file(struct sfs_fs *sfs, struct cache_inode *file, const char *filename, int fd) {$/;"	f
open_img	tools/mksfs.c	/^open_img(const char *imgname) {$/;"	f
open_link	tools/mksfs.c	/^open_link(struct sfs_fs *sfs, struct cache_inode *file, const char *filename) {$/;"	f
opendir	user/libs/dir.c	/^opendir(const char *path) {$/;"	f
optr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
order	kern/mm/kmalloc.c	/^	int order;$/;"	m	struct:bigblock	file:
out	obj/kernel.asm	/^out:$/;"	l
out_unlock	obj/kernel.asm	/^out_unlock:$/;"	l
outb	libs/x86.h	/^outb(uint16_t port, uint8_t data) {$/;"	f
outfile	Makefile	/^outfile = $(call cgtype,$(call toobj,$(1)),o,out)$/;"	m
outsl	libs/x86.h	/^outsl(uint32_t port, const void *addr, int cnt) {$/;"	f
outw	libs/x86.h	/^outw(uint16_t port, uint16_t data) {$/;"	f
owner	kern/sync/monitor.h	/^    monitor_t * owner;      \/\/ the owner(monitor) of this condvar$/;"	m	struct:condvar
p	obj/kernel.asm	/^                p = "(null)";$/;"	d
p	obj/kernel.asm	/^               p = q;$/;"	d
p	obj/kernel.asm	/^        p = le2page(le,page_link);$/;"	d
p	obj/kernel.asm	/^      p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = alloc_page();$/;"	d
p	obj/kernel.asm	/^    p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = le2page(le,page_link) ;$/;"	d
p	obj/user/badarg.asm	/^                p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^                p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^                p = "(null)";$/;"	d
p	obj/user/exit.asm	/^                p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^                p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^                p = "(null)";$/;"	d
p	obj/user/forktest.asm	/^                p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^                p = "(null)";$/;"	d
p	obj/user/hello.asm	/^                p = "(null)";$/;"	d
p	obj/user/ls.asm	/^                p = "(null)";$/;"	d
p	obj/user/matrix.asm	/^                p = "(null)";$/;"	d
p	obj/user/pgdir.asm	/^                p = "(null)";$/;"	d
p	obj/user/priority.asm	/^                p = "(null)";$/;"	d
p	obj/user/sh.asm	/^                p = "(null)";$/;"	d
p	obj/user/sleep.asm	/^                p = "(null)";$/;"	d
p	obj/user/sleepkill.asm	/^                p = "(null)";$/;"	d
p	obj/user/softint.asm	/^                p = "(null)";$/;"	d
p	obj/user/spin.asm	/^                p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^                p = "(null)";$/;"	d
p	obj/user/waitkill.asm	/^                p = "(null)";$/;"	d
p	obj/user/yield.asm	/^                p = "(null)";$/;"	d
p0	obj/kernel.asm	/^    p0 = p1 = p2 = NULL;$/;"	d
p1	obj/kernel.asm	/^    p1 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = p0 + 1;$/;"	d
p_align	libs/elf.h	/^    uint32_t p_align;  \/\/ required alignment, invariably hardware page size$/;"	m	struct:proghdr
p_filesz	libs/elf.h	/^    uint32_t p_filesz; \/\/ size of segment in file$/;"	m	struct:proghdr
p_flags	libs/elf.h	/^    uint32_t p_flags;  \/\/ read\/write\/execute bits$/;"	m	struct:proghdr
p_memsz	libs/elf.h	/^    uint32_t p_memsz;  \/\/ size of segment in memory (bigger if contains bss）$/;"	m	struct:proghdr
p_offset	libs/elf.h	/^    uint32_t p_offset; \/\/ file offset of segment$/;"	m	struct:proghdr
p_pa	libs/elf.h	/^    uint32_t p_pa;     \/\/ physical address, not used$/;"	m	struct:proghdr
p_rpos	kern/fs/devs/dev_stdin.c	/^static off_t p_rpos, p_wpos;$/;"	v	file:
p_rpos	obj/kernel.asm	/^    p_rpos = p_wpos = 0;$/;"	d
p_type	libs/elf.h	/^    uint32_t p_type;   \/\/ loadable code or data, dynamic linking info,etc.$/;"	m	struct:proghdr
p_va	libs/elf.h	/^    uint32_t p_va;     \/\/ virtual address to map segment$/;"	m	struct:proghdr
p_wpos	kern/fs/devs/dev_stdin.c	/^static off_t p_rpos, p_wpos;$/;"	v	file:
pa	obj/kernel.asm	/^    pa = ROUNDDOWN(pa, PGSIZE);$/;"	d
pa2page	kern/mm/pmm.h	/^pa2page(uintptr_t pa) {$/;"	f
packetname	tools/function.mk	/^packetname = $(if $(1),$(addprefix $(OBJPREFIX),$(1)),$(OBJPREFIX))$/;"	m
padc	obj/kernel.asm	/^            padc = '-';$/;"	d
padc	obj/kernel.asm	/^            padc = '0';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '-';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '0';$/;"	d
padc	obj/user/exit.asm	/^            padc = '-';$/;"	d
padc	obj/user/exit.asm	/^            padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '0';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '0';$/;"	d
padc	obj/user/hello.asm	/^            padc = '-';$/;"	d
padc	obj/user/hello.asm	/^            padc = '0';$/;"	d
padc	obj/user/ls.asm	/^            padc = '-';$/;"	d
padc	obj/user/ls.asm	/^            padc = '0';$/;"	d
padc	obj/user/matrix.asm	/^            padc = '-';$/;"	d
padc	obj/user/matrix.asm	/^            padc = '0';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '-';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '0';$/;"	d
padc	obj/user/priority.asm	/^            padc = '-';$/;"	d
padc	obj/user/priority.asm	/^            padc = '0';$/;"	d
padc	obj/user/sh.asm	/^            padc = '-';$/;"	d
padc	obj/user/sh.asm	/^            padc = '0';$/;"	d
padc	obj/user/sleep.asm	/^            padc = '-';$/;"	d
padc	obj/user/sleep.asm	/^            padc = '0';$/;"	d
padc	obj/user/sleepkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/sleepkill.asm	/^            padc = '0';$/;"	d
padc	obj/user/softint.asm	/^            padc = '-';$/;"	d
padc	obj/user/softint.asm	/^            padc = '0';$/;"	d
padc	obj/user/spin.asm	/^            padc = '-';$/;"	d
padc	obj/user/spin.asm	/^            padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '0';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '0';$/;"	d
padc	obj/user/yield.asm	/^            padc = '-';$/;"	d
padc	obj/user/yield.asm	/^            padc = '0';$/;"	d
page	obj/kernel.asm	/^              page = pmm_manager->alloc_pages(n);$/;"	d
page2kva	kern/mm/pmm.h	/^page2kva(struct Page *page) {$/;"	f
page2pa	kern/mm/pmm.h	/^page2pa(struct Page *page) {$/;"	f
page2ppn	kern/mm/pmm.h	/^page2ppn(struct Page *page) {$/;"	f
page_init	kern/mm/pmm.c	/^page_init(void) {$/;"	f	file:
page_insert	kern/mm/pmm.c	/^page_insert(pde_t *pgdir, struct Page *page, uintptr_t la, uint32_t perm) {$/;"	f
page_link	kern/mm/memlayout.h	/^    list_entry_t page_link;         \/\/ free list link$/;"	m	struct:Page
page_ref	kern/mm/pmm.h	/^page_ref(struct Page *page) {$/;"	f
page_ref_dec	kern/mm/pmm.h	/^page_ref_dec(struct Page *page) {$/;"	f
page_ref_inc	kern/mm/pmm.h	/^page_ref_inc(struct Page *page) {$/;"	f
page_remove	kern/mm/pmm.c	/^page_remove(pde_t *pgdir, uintptr_t la) {$/;"	f
page_remove_pte	kern/mm/pmm.c	/^page_remove_pte(pde_t *pgdir, uintptr_t la, pte_t *ptep) {$/;"	f	file:
pages	kern/mm/kmalloc.c	/^	void *pages;$/;"	m	struct:bigblock	file:
pages	kern/mm/pmm.c	/^struct Page *pages;$/;"	v	typeref:struct:Page
pages	obj/kernel.asm	/^    pages = (struct Page *)ROUNDUP((void *)end, PGSIZE);$/;"	d
panic	kern/debug/assert.h	/^#define panic(/;"	d
panic	user/libs/ulib.h	/^#define panic(/;"	d
panic_dead	obj/kernel.asm	/^panic_dead:$/;"	l
parent	kern/process/proc.h	/^    struct proc_struct *parent;                 \/\/ the parent process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
parent	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::skew_heap_entry
parent	obj/user/waitkill.asm	/^    parent = getpid();$/;"	d
parent	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
parse	kern/debug/kmonitor.c	/^parse(char *buf, char **argv) {$/;"	f	file:
part	obj/kernel.asm	/^            part = maxn;$/;"	d
part	obj/kernel.asm	/^        part = PGSIZE;$/;"	d
pass	tools/grade.sh	/^pass() {$/;"	f
path	obj/kernel.asm	/^    path = argv[0];$/;"	d
pd_base	libs/x86.h	/^    uintptr_t pd_base;      \/\/ Base address$/;"	m	struct:pseudodesc
pd_lim	libs/x86.h	/^    uint16_t pd_lim;        \/\/ Limit$/;"	m	struct:pseudodesc
pde2page	kern/mm/pmm.h	/^pde2page(pde_t pde) {$/;"	f
pde_t	kern/mm/memlayout.h	/^typedef uintptr_t pde_t;$/;"	t
perm2str	kern/mm/pmm.c	/^perm2str(int perm) {$/;"	f	file:
pgdir	kern/mm/vmm.h	/^    pde_t *pgdir;                  \/\/ the PDT of these vma$/;"	m	struct:mm_struct
pgdir_alloc_page	kern/mm/pmm.c	/^pgdir_alloc_page(pde_t *pgdir, uintptr_t la, uint32_t perm) {$/;"	f
pgfault_handler	kern/trap/trap.c	/^pgfault_handler(struct trapframe *tf) {$/;"	f	file:
pgfault_num	kern/mm/vmm.c	/^volatile unsigned int pgfault_num=0;$/;"	v
ph	obj/bootblock.asm	/^    ph = (struct proghdr *)((uintptr_t)ELFHDR + ELFHDR->e_phoff);$/;"	d
phi_put_forks_condvar	kern/sync/check_sync.c	/^void phi_put_forks_condvar(int i) {$/;"	f
phi_put_forks_sema	kern/sync/check_sync.c	/^void phi_put_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
phi_take_forks_condvar	kern/sync/check_sync.c	/^void phi_take_forks_condvar(int i) {$/;"	f
phi_take_forks_sema	kern/sync/check_sync.c	/^void phi_take_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
phi_test_condvar	kern/sync/check_sync.c	/^void phi_test_condvar (i) { $/;"	f
phi_test_sema	kern/sync/check_sync.c	/^void phi_test_sema(i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
philosopher_proc_condvar	kern/sync/check_sync.c	/^struct proc_struct *philosopher_proc_condvar[N]; \/\/ N philosopher$/;"	v	typeref:struct:proc_struct
philosopher_proc_sema	kern/sync/check_sync.c	/^struct proc_struct *philosopher_proc_sema[N];$/;"	v	typeref:struct:proc_struct
philosopher_using_condvar	kern/sync/check_sync.c	/^int philosopher_using_condvar(void * arg) { \/* arg is the No. of philosopher 0~N-1*\/$/;"	f
philosopher_using_semaphore	kern/sync/check_sync.c	/^int philosopher_using_semaphore(void * arg) \/* i：哲学家号码，从0到N-1 *\/$/;"	f
pic_enable	kern/driver/picirq.c	/^pic_enable(unsigned int irq) {$/;"	f
pic_init	kern/driver/picirq.c	/^pic_init(void) {$/;"	f
pic_setmask	kern/driver/picirq.c	/^pic_setmask(uint16_t mask) {$/;"	f	file:
pick_next	kern/schedule/sched.h	/^    struct proc_struct *(*pick_next)(struct run_queue *rq);$/;"	m	struct:sched_class	typeref:struct:sched_class::pick_next
pid	kern/process/proc.h	/^    int pid;                                    \/\/ Process ID$/;"	m	struct:proc_struct
pid	obj/user/spin.asm	/^    pid = fork();$/;"	d
pid1	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid2	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid_hashfn	kern/process/proc.c	/^#define pid_hashfn(/;"	d	file:
pids	user/priority.c	/^int pids[TOTAL];$/;"	v
pmm_init	kern/mm/pmm.c	/^pmm_init(void) {$/;"	f
pmm_manager	kern/mm/pmm.c	/^const struct pmm_manager *pmm_manager;$/;"	v	typeref:struct:pmm_manager
pmm_manager	kern/mm/pmm.h	/^struct pmm_manager {$/;"	s
pmm_manager	obj/kernel.asm	/^    pmm_manager = &default_pmm_manager;$/;"	d
pos	kern/fs/file.h	/^    off_t pos;$/;"	m	struct:file
pos	obj/kernel.asm	/^    pos = inb(addr_6845 + 1) << 8;$/;"	d
ppn_t	libs/defs.h	/^typedef size_t ppn_t;$/;"	t
pra_list_head	kern/mm/swap_fifo.c	/^list_entry_t pra_list_head;$/;"	v
pra_page_link	kern/mm/memlayout.h	/^    list_entry_t pra_page_link;     \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
pra_vaddr	kern/mm/memlayout.h	/^    uintptr_t pra_vaddr;            \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
precision	obj/kernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kernel.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/badarg.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badarg.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/exit.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/exit.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktest.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktest.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/matrix.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/matrix.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/pgdir.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pgdir.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/priority.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/priority.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/sleep.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sleep.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/sleepkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sleepkill.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/waitkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/waitkill.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^            precision = va_arg(ap, int);$/;"	d
prev	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::list_entry
prev	obj/kernel.asm	/^				prev = cur;$/;"	d
prev	obj/kernel.asm	/^	prev = slobfree;$/;"	d
prev	tools/mksfs.c	/^        struct subpath *next, *prev;$/;"	m	struct:sfs_fs::subpath	typeref:struct:sfs_fs::subpath::	file:
print_debuginfo	kern/debug/kdebug.c	/^print_debuginfo(uintptr_t eip) {$/;"	f
print_kerninfo	kern/debug/kdebug.c	/^print_kerninfo(void) {$/;"	f
print_pgdir	kern/mm/pmm.c	/^print_pgdir(void) {$/;"	f
print_pgdir	user/libs/ulib.c	/^print_pgdir(void) {$/;"	f
print_pgfault	kern/trap/trap.c	/^print_pgfault(struct trapframe *tf) {$/;"	f	file:
print_regs	kern/trap/trap.c	/^print_regs(struct pushregs *regs) {$/;"	f
print_stackframe	kern/debug/kdebug.c	/^print_stackframe(void) {$/;"	f
print_stat	user/libs/file.c	/^print_stat(const char *name, int fd, struct stat *stat) {$/;"	f
print_ticks	kern/trap/trap.c	/^static void print_ticks() {$/;"	f	file:
print_trapframe	kern/trap/trap.c	/^print_trapframe(struct trapframe *tf) {$/;"	f
printf	obj/user/ls.asm	/^#define printf(...)                     fprintf(1, __VA_ARGS__)$/;"	d
printf	user/ls.c	/^#define printf(/;"	d	file:
printf	user/sh.c	/^#define printf(/;"	d	file:
printfmt	libs/printfmt.c	/^printfmt(void (*putch)(int, void*, int), int fd, void *putdat, const char *fmt, ...) {$/;"	f
printnum	libs/printfmt.c	/^printnum(void (*putch)(int, void*, int), int fd, void *putdat,$/;"	f	file:
probe_memory	boot/bootasm.S	/^probe_memory:$/;"	l
probe_memory	obj/bootblock.asm	/^probe_memory:$/;"	l
proc	kern/schedule/sched.h	/^    struct proc_struct *proc;$/;"	m	struct:__anon11	typeref:struct:__anon11::proc_struct
proc	kern/sync/wait.h	/^    struct proc_struct *proc;$/;"	m	struct:__anon14	typeref:struct:__anon14::proc_struct
proc	obj/kernel.asm	/^            proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^            proc = le2proc(le, list_link);$/;"	d
proc	obj/kernel.asm	/^        proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^        proc = current->parent;$/;"	d
proc	obj/kernel.asm	/^        proc = find_proc(pid);$/;"	d
proc_init	kern/process/proc.c	/^proc_init(void) {$/;"	f
proc_list	kern/process/proc.c	/^list_entry_t proc_list;$/;"	v
proc_num	kern/schedule/sched.h	/^    unsigned int proc_num;$/;"	m	struct:run_queue
proc_run	kern/process/proc.c	/^proc_run(struct proc_struct *proc) {$/;"	f
proc_state	kern/process/proc.h	/^enum proc_state {$/;"	g
proc_stride_comp_f	kern/schedule/default_sched.c	/^proc_stride_comp_f(void *a, void *b)$/;"	f	file:
proc_struct	kern/process/proc.h	/^struct proc_struct {$/;"	s
proc_tick	kern/schedule/sched.h	/^    void (*proc_tick)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
process_precision	obj/kernel.asm	/^        process_precision:$/;"	l
process_precision	obj/user/badarg.asm	/^        process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^        process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^        process_precision:$/;"	l
process_precision	obj/user/exit.asm	/^        process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^        process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^        process_precision:$/;"	l
process_precision	obj/user/forktest.asm	/^        process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^        process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^        process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^        process_precision:$/;"	l
process_precision	obj/user/matrix.asm	/^        process_precision:$/;"	l
process_precision	obj/user/pgdir.asm	/^        process_precision:$/;"	l
process_precision	obj/user/priority.asm	/^        process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^        process_precision:$/;"	l
process_precision	obj/user/sleep.asm	/^        process_precision:$/;"	l
process_precision	obj/user/sleepkill.asm	/^        process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^        process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^        process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^        process_precision:$/;"	l
process_precision	obj/user/waitkill.asm	/^        process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^        process_precision:$/;"	l
proghdr	libs/elf.h	/^struct proghdr {$/;"	s
property	kern/mm/memlayout.h	/^    unsigned int property;          \/\/ used in buddy system, stores the order (the X in 2^X) of the continuous memory block$/;"	m	struct:Page
protcseg	boot/bootasm.S	/^protcseg:$/;"	l
protcseg	obj/bootblock.asm	/^protcseg:$/;"	l
pseudodesc	libs/x86.h	/^struct pseudodesc {$/;"	s
pte2page	kern/mm/pmm.h	/^pte2page(pte_t pte) {$/;"	f
pte_t	kern/mm/memlayout.h	/^typedef uintptr_t pte_t;$/;"	t
pte_t	obj/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kernel.asm	/^    ptep = &((pte_t *)KADDR(PDE_ADDR(boot_pgdir[0])))[1];$/;"	d
ptr	obj/kernel.asm	/^    ptr = memmove(iob->io_base + 1, ptr, alen);$/;"	d
pushregs	kern/trap/trap.h	/^struct pushregs {$/;"	s
put_fs	kern/process/proc.c	/^put_fs(struct proc_struct *proc) {$/;"	f	file:
put_kargv	kern/process/proc.c	/^put_kargv(int argc, char **kargv) {$/;"	f	file:
put_kstack	kern/process/proc.c	/^put_kstack(struct proc_struct *proc) {$/;"	f	file:
put_pgdir	kern/process/proc.c	/^put_pgdir(struct mm_struct *mm) {$/;"	f	file:
putc	user/sh.c	/^#define putc(/;"	d	file:
pwd	kern/fs/fs.h	/^    struct inode *pwd;      \/\/ inode of present working directory$/;"	m	struct:files_struct	typeref:struct:files_struct::inode
quick_check	tools/grade.sh	/^quick_check() {$/;"	f
quick_run	tools/grade.sh	/^quick_run() {$/;"	f
r	obj/kernel.asm	/^            r = m - 1;$/;"	d
r	obj/kernel.asm	/^          r = a->left;$/;"	d
r	obj/kernel.asm	/^          r = b->left;$/;"	d
rand	libs/rand.c	/^rand(void) {$/;"	f
rcr0	libs/x86.h	/^rcr0(void) {$/;"	f
rcr1	libs/x86.h	/^rcr1(void) {$/;"	f
rcr2	libs/x86.h	/^rcr2(void) {$/;"	f
rcr3	libs/x86.h	/^rcr3(void) {$/;"	f
read	user/libs/file.c	/^read(int fd, void *base, size_t len) {$/;"	f
read_dr	libs/x86.h	/^read_dr(unsigned regnum) {$/;"	f
read_ebp	libs/x86.h	/^read_ebp(void) {$/;"	f
read_eflags	libs/x86.h	/^read_eflags(void) {$/;"	f
read_eip	kern/debug/kdebug.c	/^read_eip(void) {$/;"	f	file:
read_packet	tools/function.mk	/^read_packet = $(foreach p,$(call packetname,$(1)),$($(p)))$/;"	m
readable	kern/fs/file.h	/^    bool readable;$/;"	m	struct:file
readable	obj/kernel.asm	/^        readable = writable = 1;$/;"	d
readdir	user/libs/dir.c	/^readdir(DIR *dirp) {$/;"	f
readline	kern/libs/readline.c	/^readline(const char *prompt) {$/;"	f
readline	user/sh.c	/^readline(const char *prompt) {$/;"	f
readsect	boot/bootmain.c	/^readsect(void *dst, uint32_t secno) {$/;"	f	file:
readseg	boot/bootmain.c	/^readseg(uintptr_t va, uint32_t count, uint32_t offset) {$/;"	f	file:
real	tools/mksfs.c	/^    ino_t real;$/;"	m	struct:cache_inode	file:
reclaim_count	kern/fs/sfs/sfs.h	/^    int reclaim_count;                              \/* kill inode if it hits zero *\/$/;"	m	struct:sfs_inode
ref	kern/mm/memlayout.h	/^    int ref;                        \/\/ page frame's reference counter$/;"	m	struct:Page
ref_count	kern/fs/vfs/inode.h	/^    int ref_count;$/;"	m	struct:inode
ref_count	obj/kernel.asm	/^    ref_count = node->ref_count;$/;"	d
reg_eax	kern/trap/trap.h	/^    uint32_t reg_eax;$/;"	m	struct:pushregs
reg_ebp	kern/trap/trap.h	/^    uint32_t reg_ebp;$/;"	m	struct:pushregs
reg_ebx	kern/trap/trap.h	/^    uint32_t reg_ebx;$/;"	m	struct:pushregs
reg_ecx	kern/trap/trap.h	/^    uint32_t reg_ecx;$/;"	m	struct:pushregs
reg_edi	kern/trap/trap.h	/^    uint32_t reg_edi;$/;"	m	struct:pushregs
reg_edx	kern/trap/trap.h	/^    uint32_t reg_edx;$/;"	m	struct:pushregs
reg_esi	kern/trap/trap.h	/^    uint32_t reg_esi;$/;"	m	struct:pushregs
reg_oesp	kern/trap/trap.h	/^    uint32_t reg_oesp;          \/* Useless *\/$/;"	m	struct:pushregs
relocated	kern/init/entry.S	/^relocated:$/;"	l
relocated	obj/kernel.asm	/^relocated:$/;"	l
remove_links	kern/process/proc.c	/^remove_links(struct proc_struct *proc) {$/;"	f	file:
reopen	user/sh.c	/^reopen(int fd2, const char *filename, uint32_t open_flags) {$/;"	f
repeat	obj/kernel.asm	/^    repeat:$/;"	l
repeat	obj/kernel.asm	/^repeat:$/;"	l
reswitch	obj/kernel.asm	/^    reswitch:$/;"	l
reswitch	obj/user/badarg.asm	/^    reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^    reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^    reswitch:$/;"	l
reswitch	obj/user/exit.asm	/^    reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^    reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^    reswitch:$/;"	l
reswitch	obj/user/forktest.asm	/^    reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^    reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^    reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^    reswitch:$/;"	l
reswitch	obj/user/matrix.asm	/^    reswitch:$/;"	l
reswitch	obj/user/pgdir.asm	/^    reswitch:$/;"	l
reswitch	obj/user/priority.asm	/^    reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^    reswitch:$/;"	l
reswitch	obj/user/sleep.asm	/^    reswitch:$/;"	l
reswitch	obj/user/sleepkill.asm	/^    reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^    reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^    reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^    reswitch:$/;"	l
reswitch	obj/user/waitkill.asm	/^    reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^    reswitch:$/;"	l
ret	obj/kernel.asm	/^                        ret = -E_NA_DEV;$/;"	d
ret	obj/kernel.asm	/^                        ret = 0, *node_store = found;$/;"	d
ret	obj/kernel.asm	/^                    ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^                ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^                ret = -E_NOTDIR;$/;"	d
ret	obj/kernel.asm	/^                ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^            ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^            ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^            ret = file_write(fd, buffer, alen, &alen);$/;"	d
ret	obj/kernel.asm	/^            ret = sfs_dirent_findino_nolock(sfs, sin, ino, entry);$/;"	d
ret	obj/kernel.asm	/^            ret = sfs_rwblock_nolock(sfs, sfs->sfs_buffer, blkno, 1, 1);$/;"	d
ret	obj/kernel.asm	/^            ret = vfs_getcwd(iob);$/;"	d
ret	obj/kernel.asm	/^            ret = vop_create(dir, name, excl, &node);$/;"	d
ret	obj/kernel.asm	/^        ret = -E_BUSY;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^        ret = dup_mmap(mm, oldmm);$/;"	d
ret	obj/kernel.asm	/^        ret = file_read(fd, buffer, alen, &alen);$/;"	d
ret	obj/kernel.asm	/^        ret = page_insert(to, npage, start, perm);$/;"	d
ret	obj/kernel.asm	/^        ret = pmm_manager->nr_free_pages();$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_io_nolock(sfs, sin, iob->io_base, iob->io_offset, &alen, write);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_load_inode(sfs, node_store, ino);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_rwblock_nolock(sfs, sfs->sfs_buffer, SFS_BLKN_SUPER, 1, 0);$/;"	d
ret	obj/kernel.asm	/^        ret = vfs_set_curdir(node);$/;"	d
ret	obj/kernel.asm	/^        ret = vop_lookup(node, path, node_store);$/;"	d
ret	obj/kernel.asm	/^    ret = -E_EXISTS;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NOENT;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^    ret = 0;$/;"	d
ret	obj/kernel.asm	/^    ret = file_open(path, open_flags);$/;"	d
ret	obj/kernel.asm	/^    ret = iobuf_move(iob, entry->name, sfs_dentry_size, 1, NULL);$/;"	d
ret	obj/kernel.asm	/^    ret = proc->pid;$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_chdir(path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_link(old_path, new_path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_lookup(path, &node);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_rename(old_path, new_path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_unlink(path);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_fstat(file->node, stat);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_fsync(file->node);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_namefile(node, iob);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_read(file->node, iob);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_write(file->node, iob);$/;"	d
ret	obj/kernel.asm	/^   ret = 0;$/;"	d
ret	obj/user/badarg.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/badsegment.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/divzero.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/exit.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/faultread.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/faultreadkernel.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/forktest.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/forktree.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/hello.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/ls.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/ls.asm	/^    ret = fstat(fd, stat);$/;"	d
ret	obj/user/matrix.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/pgdir.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/priority.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/sh.asm	/^                ret = 0;$/;"	d
ret	obj/user/sh.asm	/^            ret = runcmd(buffer);$/;"	d
ret	obj/user/sh.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/sleep.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/sleepkill.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/softint.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/spin.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/testbss.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/waitkill.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/yield.asm	/^        ret = dup2(fd1, fd2);$/;"	d
right	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
rline	obj/kernel.asm	/^        rline = rfile;$/;"	d
rline	obj/kernel.asm	/^        rline = rfun;$/;"	d
root	tools/mksfs.c	/^    struct cache_inode *root;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_inode	file:
rpos	kern/driver/console.c	/^    uint32_t rpos;$/;"	m	struct:__anon1	file:
rq	kern/process/proc.h	/^    struct run_queue *rq;                       \/\/ running queue contains Process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::run_queue
rq	kern/schedule/sched.c	/^static struct run_queue *rq;$/;"	v	typeref:struct:run_queue	file:
rq	obj/kernel.asm	/^    rq = &__rq;$/;"	d
run_link	kern/process/proc.h	/^    list_entry_t run_link;                      \/\/ the entry linked in run queue$/;"	m	struct:proc_struct
run_list	kern/schedule/sched.h	/^    list_entry_t run_list;$/;"	m	struct:run_queue
run_qemu	tools/grade.sh	/^run_qemu() {$/;"	f
run_queue	kern/schedule/sched.h	/^struct run_queue {$/;"	s
run_test	tools/grade.sh	/^run_test() {$/;"	f
run_timer_list	kern/schedule/sched.c	/^run_timer_list(void) {$/;"	f
runcmd	kern/debug/kmonitor.c	/^runcmd(char *buf, struct trapframe *tf) {$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char *cmd) {$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
runs	kern/process/proc.h	/^    int runs;                                   \/\/ the running times of Proces$/;"	m	struct:proc_struct
s	kern/sync/check_sync.c	/^semaphore_t s[N]; \/* 每个哲学家一个信号量 *\/$/;"	v
safe_fchdir	tools/mksfs.c	/^safe_fchdir(int fd) {$/;"	f
safe_fstat	tools/mksfs.c	/^safe_fstat(int fd) {$/;"	f
safe_lstat	tools/mksfs.c	/^safe_lstat(const char *name) {$/;"	f
safe_malloc	tools/mksfs.c	/^safe_malloc(size_t size) {$/;"	f
safe_stat	tools/mksfs.c	/^safe_stat(const char *filename) {$/;"	f
safe_strdup	tools/mksfs.c	/^safe_strdup(const char *str) {$/;"	f
sched_class	kern/schedule/sched.c	/^static struct sched_class *sched_class;$/;"	v	typeref:struct:sched_class	file:
sched_class	kern/schedule/sched.h	/^struct sched_class {$/;"	s
sched_class	obj/kernel.asm	/^    sched_class = &default_sched_class;$/;"	d
sched_class_dequeue	kern/schedule/sched.c	/^sched_class_dequeue(struct proc_struct *proc) {$/;"	f	file:
sched_class_enqueue	kern/schedule/sched.c	/^sched_class_enqueue(struct proc_struct *proc) {$/;"	f	file:
sched_class_pick_next	kern/schedule/sched.c	/^sched_class_pick_next(void) {$/;"	f	file:
sched_class_proc_tick	kern/schedule/sched.c	/^sched_class_proc_tick(struct proc_struct *proc) {$/;"	f	file:
sched_init	kern/schedule/sched.c	/^sched_init(void) {$/;"	f
schedule	kern/schedule/sched.c	/^schedule(void) {$/;"	f
sd_avl	kern/mm/mmu.h	/^    unsigned sd_avl : 1;            \/\/ unused (available for software use)$/;"	m	struct:segdesc
sd_base_15_0	kern/mm/mmu.h	/^    unsigned sd_base_15_0 : 16;     \/\/ low bits of segment base address$/;"	m	struct:segdesc
sd_base_23_16	kern/mm/mmu.h	/^    unsigned sd_base_23_16 : 8;     \/\/ middle bits of segment base address$/;"	m	struct:segdesc
sd_base_31_24	kern/mm/mmu.h	/^    unsigned sd_base_31_24 : 8;     \/\/ high bits of segment base address$/;"	m	struct:segdesc
sd_db	kern/mm/mmu.h	/^    unsigned sd_db : 1;             \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:segdesc
sd_dpl	kern/mm/mmu.h	/^    unsigned sd_dpl : 2;            \/\/ descriptor Privilege Level$/;"	m	struct:segdesc
sd_g	kern/mm/mmu.h	/^    unsigned sd_g : 1;              \/\/ granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
sd_lim_15_0	kern/mm/mmu.h	/^    unsigned sd_lim_15_0 : 16;      \/\/ low bits of segment limit$/;"	m	struct:segdesc
sd_lim_19_16	kern/mm/mmu.h	/^    unsigned sd_lim_19_16 : 4;      \/\/ high bits of segment limit$/;"	m	struct:segdesc
sd_p	kern/mm/mmu.h	/^    unsigned sd_p : 1;              \/\/ present$/;"	m	struct:segdesc
sd_rsv1	kern/mm/mmu.h	/^    unsigned sd_rsv1 : 1;           \/\/ reserved$/;"	m	struct:segdesc
sd_s	kern/mm/mmu.h	/^    unsigned sd_s : 1;              \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
sd_type	kern/mm/mmu.h	/^    unsigned sd_type : 4;           \/\/ segment type (see STS_ constants)$/;"	m	struct:segdesc
search_cache_block	tools/mksfs.c	/^search_cache_block(struct sfs_fs *sfs, uint32_t ino) {$/;"	f
search_cache_inode	tools/mksfs.c	/^search_cache_inode(struct sfs_fs *sfs, ino_t real) {$/;"	f
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA);$/;"	d
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA_EXT);$/;"	d
seek	user/libs/file.c	/^seek(int fd, off_t pos, int whence) {$/;"	f
segdesc	kern/mm/mmu.h	/^struct segdesc {$/;"	s
sem	kern/fs/sfs/sfs.h	/^    semaphore_t sem;                                \/* semaphore for din *\/$/;"	m	struct:sfs_inode
sem	kern/sync/monitor.h	/^    semaphore_t sem;        \/\/ the sem semaphore  is used to down the waiting proc, and the signaling proc should up the waiting proc$/;"	m	struct:condvar
sem_init	kern/sync/sem.c	/^sem_init(semaphore_t *sem, int value) {$/;"	f
semaphore_t	kern/sync/sem.h	/^} semaphore_t;$/;"	t	typeref:struct:__anon12
semaphore_t	obj/kernel.asm	/^semaphore_t s[N]; \/* 每个哲学家一个信号量 *\/$/;"	l
serial_exists	kern/driver/console.c	/^static bool serial_exists = 0;$/;"	v	file:
serial_exists	obj/kernel.asm	/^    serial_exists = (inb(COM1 + COM_LSR) != 0xFF);$/;"	d
serial_init	kern/driver/console.c	/^serial_init(void) {$/;"	f	file:
serial_intr	kern/driver/console.c	/^serial_intr(void) {$/;"	f
serial_proc_data	kern/driver/console.c	/^serial_proc_data(void) {$/;"	f	file:
serial_putc	kern/driver/console.c	/^serial_putc(int c) {$/;"	f	file:
serial_putc_sub	kern/driver/console.c	/^serial_putc_sub(int c) {$/;"	f	file:
set_bit	libs/atomic.h	/^set_bit(int nr, volatile void *addr) {$/;"	f
set_cwd_nolock	kern/fs/vfs/vfspath.c	/^set_cwd_nolock(struct inode *pwd) {$/;"	f	file:
set_links	kern/process/proc.c	/^set_links(struct proc_struct *proc) {$/;"	f	file:
set_mm_count	kern/mm/vmm.h	/^set_mm_count(struct mm_struct *mm, int val) {$/;"	f
set_page_ref	kern/mm/pmm.h	/^set_page_ref(struct Page *page, int val) {$/;"	f
set_proc_name	kern/process/proc.c	/^set_proc_name(struct proc_struct *proc, const char *name) {$/;"	f
set_pvalue	kern/fs/sfs/sfs_inode.c	/^#define set_pvalue(/;"	d	file:
set_pvalue	kern/fs/sfs/sfs_inode.c	/^#undef set_pvalue$/;"	d	file:
set_pvalue	obj/kernel.asm	/^#define set_pvalue(x, v)            do { if ((x) != NULL) { *(x) = (v); } } while (0)$/;"	d
set_unswappable	kern/mm/swap.h	/^     int (*set_unswappable) (struct mm_struct *mm, uintptr_t addr);$/;"	m	struct:swap_manager
sets	kern/driver/ide.c	/^    unsigned int sets;          \/\/ Commend Sets Supported$/;"	m	struct:ide_device	file:
setup_kstack	kern/process/proc.c	/^setup_kstack(struct proc_struct *proc) {$/;"	f	file:
setup_pgdir	kern/process/proc.c	/^setup_pgdir(struct mm_struct *mm) {$/;"	f	file:
sfs_alloc_ino	tools/mksfs.c	/^sfs_alloc_ino(struct sfs_fs *sfs) {$/;"	f	file:
sfs_block_alloc	kern/fs/sfs/sfs_inode.c	/^sfs_block_alloc(struct sfs_fs *sfs, uint32_t *ino_store) {$/;"	f	file:
sfs_block_free	kern/fs/sfs/sfs_inode.c	/^sfs_block_free(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_block_inuse	kern/fs/sfs/sfs_inode.c	/^sfs_block_inuse(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_bmap_free_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_free_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index) {$/;"	f	file:
sfs_bmap_free_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_free_sub_nolock(struct sfs_fs *sfs, uint32_t ent, uint32_t index) {$/;"	f	file:
sfs_bmap_get_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_get_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index, bool create, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_get_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_get_sub_nolock(struct sfs_fs *sfs, uint32_t *entp, uint32_t index, bool create, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_load_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_truncate_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_truncate_nolock(struct sfs_fs *sfs, struct sfs_inode *sin) {$/;"	f	file:
sfs_buf_op	obj/kernel.asm	/^        sfs_buf_op = sfs_rbuf, sfs_block_op = sfs_rblock;$/;"	d
sfs_buf_op	obj/kernel.asm	/^        sfs_buf_op = sfs_wbuf, sfs_block_op = sfs_wblock;$/;"	d
sfs_buffer	kern/fs/sfs/sfs.h	/^    void *sfs_buffer;                               \/* buffer for non-block aligned io *\/$/;"	m	struct:sfs_fs
sfs_cleanup	kern/fs/sfs/sfs_fs.c	/^sfs_cleanup(struct fs *fs) {$/;"	f	file:
sfs_clear_block	kern/fs/sfs/sfs_io.c	/^sfs_clear_block(struct sfs_fs *sfs, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_close	kern/fs/sfs/sfs_inode.c	/^sfs_close(struct inode *node) {$/;"	f	file:
sfs_create_inode	kern/fs/sfs/sfs_inode.c	/^sfs_create_inode(struct sfs_fs *sfs, struct sfs_disk_inode *din, uint32_t ino, struct inode **node_store) {$/;"	f	file:
sfs_dentry_size	kern/fs/sfs/sfs.h	/^#define sfs_dentry_size /;"	d
sfs_dirent_findino_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_findino_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t ino, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_dirent_link_nolock_check	kern/fs/sfs/sfs_inode.c	/^#define sfs_dirent_link_nolock_check(/;"	d	file:
sfs_dirent_read_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_dirent_search_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_search_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name, uint32_t *ino_store, int *slot, int *empty_slot) {$/;"	f	file:
sfs_dirent_unlink_nolock_check	kern/fs/sfs/sfs_inode.c	/^#define sfs_dirent_unlink_nolock_check(/;"	d	file:
sfs_disk_entry	kern/fs/sfs/sfs.h	/^struct sfs_disk_entry {$/;"	s
sfs_disk_inode	kern/fs/sfs/sfs.h	/^struct sfs_disk_inode {$/;"	s
sfs_do_mount	kern/fs/sfs/sfs_fs.c	/^sfs_do_mount(struct device *dev, struct fs **fs_store) {$/;"	f	file:
sfs_entry	tools/mksfs.c	/^struct sfs_entry {$/;"	s	file:
sfs_freemap_bits	kern/fs/sfs/sfs.h	/^#define sfs_freemap_bits(/;"	d
sfs_freemap_blocks	kern/fs/sfs/sfs.h	/^#define sfs_freemap_blocks(/;"	d
sfs_fs	kern/fs/sfs/sfs.h	/^struct sfs_fs {$/;"	s
sfs_fs	tools/mksfs.c	/^struct sfs_fs {$/;"	s	file:
sfs_fstat	kern/fs/sfs/sfs_inode.c	/^sfs_fstat(struct inode *node, struct stat *stat) {$/;"	f	file:
sfs_fsync	kern/fs/sfs/sfs_inode.c	/^sfs_fsync(struct inode *node) {$/;"	f	file:
sfs_get_ops	kern/fs/sfs/sfs_inode.c	/^sfs_get_ops(uint16_t type) {$/;"	f	file:
sfs_get_root	kern/fs/sfs/sfs_fs.c	/^sfs_get_root(struct fs *fs) {$/;"	f	file:
sfs_getdirentry	kern/fs/sfs/sfs_inode.c	/^sfs_getdirentry(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_getdirentry_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_getdirentry_sub_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_gettype	kern/fs/sfs/sfs_inode.c	/^sfs_gettype(struct inode *node, uint32_t *type_store) {$/;"	f	file:
sfs_hash_list	kern/fs/sfs/sfs_inode.c	/^sfs_hash_list(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_init	kern/fs/sfs/sfs.c	/^sfs_init(void) {$/;"	f
sfs_init_freemap	kern/fs/sfs/sfs_fs.c	/^sfs_init_freemap(struct device *dev, struct bitmap *freemap, uint32_t blkno, uint32_t nblks, void *blk_buffer) {$/;"	f	file:
sfs_init_read	kern/fs/sfs/sfs_fs.c	/^sfs_init_read(struct device *dev, uint32_t blkno, void *blk_buffer) {$/;"	f	file:
sfs_inode	kern/fs/sfs/sfs.h	/^struct sfs_inode {$/;"	s
sfs_io	kern/fs/sfs/sfs_inode.c	/^sfs_io(struct inode *node, struct iobuf *iob, bool write) {$/;"	f	file:
sfs_io_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf, off_t offset, size_t *alenp, bool write) {$/;"	f	file:
sfs_load_inode	kern/fs/sfs/sfs_inode.c	/^sfs_load_inode(struct sfs_fs *sfs, struct inode **node_store, uint32_t ino) {$/;"	f
sfs_lookup	kern/fs/sfs/sfs_inode.c	/^sfs_lookup(struct inode *node, char *path, struct inode **node_store) {$/;"	f	file:
sfs_lookup_once	kern/fs/sfs/sfs_inode.c	/^sfs_lookup_once(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name, struct inode **node_store, int *slot) {$/;"	f	file:
sfs_mount	kern/fs/sfs/sfs_fs.c	/^sfs_mount(const char *devname) {$/;"	f
sfs_namefile	kern/fs/sfs/sfs_inode.c	/^sfs_namefile(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_node_dirops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_dirops = {$/;"	v	typeref:struct:inode_ops	file:
sfs_node_dirops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_dirops;  \/\/ dir operations$/;"	v	typeref:struct:inode_ops	file:
sfs_node_fileops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_fileops = {$/;"	v	typeref:struct:inode_ops	file:
sfs_node_fileops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_fileops; \/\/ file operations$/;"	v	typeref:struct:inode_ops	file:
sfs_opendir	kern/fs/sfs/sfs_inode.c	/^sfs_opendir(struct inode *node, uint32_t open_flags) {$/;"	f	file:
sfs_openfile	kern/fs/sfs/sfs_inode.c	/^sfs_openfile(struct inode *node, uint32_t open_flags) {$/;"	f	file:
sfs_rblock	kern/fs/sfs/sfs_io.c	/^sfs_rblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_rbuf	kern/fs/sfs/sfs_io.c	/^sfs_rbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno, off_t offset) {$/;"	f
sfs_read	kern/fs/sfs/sfs_inode.c	/^sfs_read(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_reclaim	kern/fs/sfs/sfs_inode.c	/^sfs_reclaim(struct inode *node) {$/;"	f	file:
sfs_remove_links	kern/fs/sfs/sfs_inode.c	/^sfs_remove_links(struct sfs_inode *sin) {$/;"	f	file:
sfs_rwblock	kern/fs/sfs/sfs_io.c	/^sfs_rwblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks, bool write) {$/;"	f	file:
sfs_rwblock_nolock	kern/fs/sfs/sfs_io.c	/^sfs_rwblock_nolock(struct sfs_fs *sfs, void *buf, uint32_t blkno, bool write, bool check) {$/;"	f	file:
sfs_set_links	kern/fs/sfs/sfs_inode.c	/^sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin) {$/;"	f	file:
sfs_super	kern/fs/sfs/sfs.h	/^struct sfs_super {$/;"	s
sfs_sync	kern/fs/sfs/sfs_fs.c	/^sfs_sync(struct fs *fs) {$/;"	f	file:
sfs_sync_freemap	kern/fs/sfs/sfs_io.c	/^sfs_sync_freemap(struct sfs_fs *sfs) {$/;"	f
sfs_sync_super	kern/fs/sfs/sfs_io.c	/^sfs_sync_super(struct sfs_fs *sfs) {$/;"	f
sfs_truncfile	kern/fs/sfs/sfs_inode.c	/^sfs_truncfile(struct inode *node, off_t len) {$/;"	f	file:
sfs_tryseek	kern/fs/sfs/sfs_inode.c	/^sfs_tryseek(struct inode *node, off_t pos) {$/;"	f	file:
sfs_unmount	kern/fs/sfs/sfs_fs.c	/^sfs_unmount(struct fs *fs) {$/;"	f	file:
sfs_wblock	kern/fs/sfs/sfs_io.c	/^sfs_wblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_wbuf	kern/fs/sfs/sfs_io.c	/^sfs_wbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno, off_t offset) {$/;"	f
sfs_write	kern/fs/sfs/sfs_inode.c	/^sfs_write(struct inode *node, struct iobuf *iob) {$/;"	f	file:
shcwd	user/sh.c	/^char shcwd[BUFSIZE];$/;"	v
shiftcode	kern/driver/console.c	/^static uint8_t shiftcode[256] = {$/;"	v	file:
shiftmap	kern/driver/console.c	/^static uint8_t shiftmap[256] = {$/;"	v	file:
show_build_tag	tools/grade.sh	/^show_build_tag() {$/;"	f
show_check_tag	tools/grade.sh	/^show_check_tag() {$/;"	f
show_final	tools/grade.sh	/^show_final() {$/;"	f
show_fullpath	tools/mksfs.c	/^#define show_fullpath(/;"	d	file:
show_msg	tools/grade.sh	/^show_msg() {$/;"	f
show_part	tools/grade.sh	/^show_part() {$/;"	f
show_time	tools/grade.sh	/^show_time() {$/;"	f
sin_hashfn	kern/fs/sfs/sfs.h	/^#define sin_hashfn(/;"	d
size	kern/driver/ide.c	/^    unsigned int size;          \/\/ Size in Sectors$/;"	m	struct:ide_device	file:
size	kern/fs/sfs/sfs.h	/^    uint32_t size;                                  \/* size of the file (in bytes) *\/$/;"	m	struct:sfs_disk_inode
size	kern/mm/memlayout.h	/^        uint64_t size;$/;"	m	struct:e820map::__anon9
size	obj/kernel.asm	/^        size = (nblks != 0) ? (SFS_BLKSIZE - blkoff) : (endpos - offset);$/;"	d
size	obj/kernel.asm	/^    size = SFS_BLKSIZE;$/;"	d
size	tools/mksfs.c	/^        uint32_t size;$/;"	m	struct:cache_inode::inode	file:
size_t	libs/defs.h	/^typedef uintptr_t size_t;$/;"	t
size_t	obj/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badarg.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/exit.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/forktest.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/matrix.asm	/^size_t$/;"	l
size_t	obj/user/pgdir.asm	/^size_t$/;"	l
size_t	obj/user/priority.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/sleep.asm	/^size_t$/;"	l
size_t	obj/user/sleepkill.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/waitkill.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skew_heap_entry	libs/skew_heap.h	/^struct skew_heap_entry {$/;"	s
skew_heap_entry_t	libs/skew_heap.h	/^typedef struct skew_heap_entry skew_heap_entry_t;$/;"	t	typeref:struct:skew_heap_entry
skew_heap_init	libs/skew_heap.h	/^skew_heap_init(skew_heap_entry_t *a)$/;"	f
skew_heap_insert	libs/skew_heap.h	/^skew_heap_insert(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_merge	libs/skew_heap.h	/^skew_heap_merge(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_remove	libs/skew_heap.h	/^skew_heap_remove(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
slab_allocated	kern/mm/kmalloc.c	/^slab_allocated(void) {$/;"	f
slab_init	kern/mm/kmalloc.c	/^slab_init(void) {$/;"	f
sleep	user/libs/ulib.c	/^sleep(unsigned int time) {$/;"	f
sleepy	user/sleep.c	/^sleepy(int pid) {$/;"	f
slob_alloc	kern/mm/kmalloc.c	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	f	file:
slob_block	kern/mm/kmalloc.c	/^struct slob_block {$/;"	s	file:
slob_free	kern/mm/kmalloc.c	/^static void slob_free(void *block, int size)$/;"	f	file:
slob_t	kern/mm/kmalloc.c	/^typedef struct slob_block slob_t;$/;"	t	typeref:struct:slob_block	file:
slobfree	kern/mm/kmalloc.c	/^static slob_t *slobfree = &arena;$/;"	v	file:
slobfree	obj/kernel.asm	/^			slobfree = prev;$/;"	d
slobfree	obj/kernel.asm	/^	slobfree = cur;$/;"	d
sm	kern/mm/swap.c	/^static struct swap_manager *sm;$/;"	v	typeref:struct:swap_manager	file:
sm	obj/kernel.asm	/^     sm = &swap_manager_fifo;$/;"	d
sm_priv	kern/mm/vmm.h	/^    void *sm_priv;                 \/\/ the private data for swap manager$/;"	m	struct:mm_struct
snprintf	libs/printfmt.c	/^snprintf(char *str, size_t size, const char *fmt, ...) {$/;"	f
sp_end	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
sp_root	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
spin	boot/bootasm.S	/^spin:$/;"	l
spin	kern/init/entry.S	/^spin:$/;"	l
spin	obj/bootblock.asm	/^spin:$/;"	l
spin	obj/kernel.asm	/^spin:$/;"	l
spin_delay	user/priority.c	/^spin_delay(void)$/;"	f	file:
spin_lock_irqsave	kern/mm/kmalloc.c	/^#define spin_lock_irqsave(/;"	d	file:
spin_unlock_irqrestore	kern/mm/kmalloc.c	/^#define spin_unlock_irqrestore(/;"	d	file:
sprintbuf	libs/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	libs/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b) {$/;"	f	file:
srand	libs/rand.c	/^srand(unsigned int seed) {$/;"	f
src	obj/kernel.asm	/^            src = dst, dst = tmp;$/;"	d
st_blocks	libs/stat.h	/^    size_t st_blocks;                   \/\/ number of blocks file is using$/;"	m	struct:stat
st_mode	libs/stat.h	/^    uint32_t st_mode;                   \/\/ protection mode and file type$/;"	m	struct:stat
st_nlinks	libs/stat.h	/^    size_t st_nlinks;                   \/\/ number of hard links$/;"	m	struct:stat
st_size	libs/stat.h	/^    size_t st_size;                     \/\/ file size (bytes)$/;"	m	struct:stat
stab	kern/debug/stab.h	/^struct stab {$/;"	s
stab_binsearch	kern/debug/kdebug.c	/^stab_binsearch(const struct stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/debug/kdebug.c	/^    const struct stab *stab_end;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stab_end	obj/kernel.asm	/^        stab_end = __STAB_END__;$/;"	d
stab_end	obj/kernel.asm	/^        stab_end = usd->stab_end;$/;"	d
stabs	kern/debug/kdebug.c	/^    const struct stab *stabs;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stabs	obj/kernel.asm	/^        stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kernel.asm	/^        stabs = usd->stabs;$/;"	d
stabstr	kern/debug/kdebug.c	/^    const char *stabstr;$/;"	m	struct:userstabdata	file:
stabstr	obj/kernel.asm	/^        stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kernel.asm	/^        stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/debug/kdebug.c	/^    const char *stabstr_end;$/;"	m	struct:userstabdata	file:
stabstr_end	obj/kernel.asm	/^        stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kernel.asm	/^        stabstr_end = usd->stabstr_end;$/;"	d
stacktop	obj/kernel.asm	/^    stacktop = (uintptr_t)uargv - sizeof(int);$/;"	d
start	boot/bootasm.S	/^start:$/;"	l
start	obj/bootblock.asm	/^start:$/;"	l
start	obj/kernel.asm	/^            start = ROUNDDOWN(start + PTSIZE, PTSIZE);$/;"	d
start	obj/kernel.asm	/^            start = vma->vm_end;$/;"	d
start	obj/kernel.asm	/^    start = ROUNDDOWN(start, PTSIZE);$/;"	d
start_probe	boot/bootasm.S	/^start_probe:$/;"	l
start_probe	obj/bootblock.asm	/^start_probe:$/;"	l
stat	libs/stat.h	/^struct stat {$/;"	s
state	kern/process/proc.h	/^    enum proc_state state;                      \/\/ Process state$/;"	m	struct:proc_struct	typeref:enum:proc_struct::proc_state
state_condvar	kern/sync/check_sync.c	/^int state_condvar[N];                            \/\/ the philosopher's state: EATING, HUNGARY, THINKING  $/;"	v
state_sema	kern/sync/check_sync.c	/^int state_sema[N]; \/* 记录每个人状态的数组 *\/$/;"	v
static	obj/bootblock.asm	/^static inline uint8_t$/;"	l
static	obj/bootblock.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/bootblock.asm	/^static inline void$/;"	l
static	obj/bootblock.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static __noinline uint32_t __down(semaphore_t *sem, uint32_t wait_state) {$/;"	l
static	obj/kernel.asm	/^static __noinline uint32_t$/;"	l
static	obj/kernel.asm	/^static __noinline void __up(semaphore_t *sem, uint32_t wait_state) {$/;"	l
static	obj/kernel.asm	/^static bigblock_t *bigblocks;$/;"	l
static	obj/kernel.asm	/^static bool did_init = 0;$/;"	l
static	obj/kernel.asm	/^static bool serial_exists = 0;$/;"	l
static	obj/kernel.asm	/^static bool$/;"	l
static	obj/kernel.asm	/^static char *disk0_buffer;$/;"	l
static	obj/kernel.asm	/^static char stdin_buffer[STDIN_BUFSIZE];$/;"	l
static	obj/kernel.asm	/^static const char *$/;"	l
static	obj/kernel.asm	/^static const struct inode_ops *$/;"	l
static	obj/kernel.asm	/^static inline bool$/;"	l
static	obj/kernel.asm	/^static inline char *$/;"	l
static	obj/kernel.asm	/^static inline int$/;"	l
static	obj/kernel.asm	/^static inline list_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline ppn_t$/;"	l
static	obj/kernel.asm	/^static inline skew_heap_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline struct Page *$/;"	l
static	obj/kernel.asm	/^static inline struct proc_struct *$/;"	l
static	obj/kernel.asm	/^static inline timer_t *$/;"	l
static	obj/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kernel.asm	/^static inline uintptr_t$/;"	l
static	obj/kernel.asm	/^static inline void *$/;"	l
static	obj/kernel.asm	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	l
static	obj/kernel.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/kernel.asm	/^static inline void$/;"	l
static	obj/kernel.asm	/^static int find_order(int size)$/;"	l
static	obj/kernel.asm	/^static int$/;"	l
static	obj/kernel.asm	/^static list_entry_t *$/;"	l
static	obj/kernel.asm	/^static list_entry_t vdev_list;     \/\/ device info list in vfs layer$/;"	l
static	obj/kernel.asm	/^static long long$/;"	l
static	obj/kernel.asm	/^static off_t p_rpos, p_wpos;$/;"	l
static	obj/kernel.asm	/^static semaphore_t disk0_sem;$/;"	l
static	obj/kernel.asm	/^static semaphore_t vdev_list_sem;$/;"	l
static	obj/kernel.asm	/^static size_t$/;"	l
static	obj/kernel.asm	/^static slob_t *slobfree = &arena;$/;"	l
static	obj/kernel.asm	/^static struct Page *$/;"	t
static	obj/kernel.asm	/^static struct file *$/;"	t
static	obj/kernel.asm	/^static struct inode *$/;"	t
static	obj/kernel.asm	/^static struct proc_struct *$/;"	t
static	obj/kernel.asm	/^static struct run_queue *rq;$/;"	t
static	obj/kernel.asm	/^static struct run_queue __rq;$/;"	t
static	obj/kernel.asm	/^static struct sched_class *sched_class;$/;"	t
static	obj/kernel.asm	/^static uint16_t addr_6845;$/;"	l
static	obj/kernel.asm	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	l
static	obj/kernel.asm	/^static uint32_t$/;"	l
static	obj/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kernel.asm	/^static void *$/;"	l
static	obj/kernel.asm	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	l
static	obj/kernel.asm	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	l
static	obj/kernel.asm	/^static void check_pgfault(void);$/;"	l
static	obj/kernel.asm	/^static void check_swap(void);$/;"	l
static	obj/kernel.asm	/^static void check_vma_struct(void);$/;"	l
static	obj/kernel.asm	/^static void lab1_switch_test(void);$/;"	l
static	obj/kernel.asm	/^static void print_ticks() {$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *b, int size);$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *block, int size)$/;"	l
static	obj/kernel.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	l
static	obj/kernel.asm	/^static volatile int in_swap_tick_event = 0;$/;"	l
static	obj/kernel.asm	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	l
static	obj/user/badarg.asm	/^static char$/;"	l
static	obj/user/badarg.asm	/^static inline bool$/;"	l
static	obj/user/badarg.asm	/^static inline char *$/;"	l
static	obj/user/badarg.asm	/^static inline int$/;"	l
static	obj/user/badarg.asm	/^static inline void *$/;"	l
static	obj/user/badarg.asm	/^static inline void$/;"	l
static	obj/user/badarg.asm	/^static int$/;"	l
static	obj/user/badarg.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/badarg.asm	/^static long long$/;"	l
static	obj/user/badarg.asm	/^static unsigned long long$/;"	l
static	obj/user/badarg.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static char$/;"	l
static	obj/user/badsegment.asm	/^static inline bool$/;"	l
static	obj/user/badsegment.asm	/^static inline char *$/;"	l
static	obj/user/badsegment.asm	/^static inline int$/;"	l
static	obj/user/badsegment.asm	/^static inline void *$/;"	l
static	obj/user/badsegment.asm	/^static inline void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static char$/;"	l
static	obj/user/divzero.asm	/^static inline bool$/;"	l
static	obj/user/divzero.asm	/^static inline char *$/;"	l
static	obj/user/divzero.asm	/^static inline int$/;"	l
static	obj/user/divzero.asm	/^static inline void *$/;"	l
static	obj/user/divzero.asm	/^static inline void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/exit.asm	/^static char$/;"	l
static	obj/user/exit.asm	/^static inline bool$/;"	l
static	obj/user/exit.asm	/^static inline char *$/;"	l
static	obj/user/exit.asm	/^static inline int$/;"	l
static	obj/user/exit.asm	/^static inline void *$/;"	l
static	obj/user/exit.asm	/^static inline void$/;"	l
static	obj/user/exit.asm	/^static int$/;"	l
static	obj/user/exit.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/exit.asm	/^static long long$/;"	l
static	obj/user/exit.asm	/^static unsigned long long$/;"	l
static	obj/user/exit.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static char$/;"	l
static	obj/user/faultread.asm	/^static inline bool$/;"	l
static	obj/user/faultread.asm	/^static inline char *$/;"	l
static	obj/user/faultread.asm	/^static inline int$/;"	l
static	obj/user/faultread.asm	/^static inline void *$/;"	l
static	obj/user/faultread.asm	/^static inline void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static char$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline bool$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline char *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/forktest.asm	/^static char$/;"	l
static	obj/user/forktest.asm	/^static inline bool$/;"	l
static	obj/user/forktest.asm	/^static inline char *$/;"	l
static	obj/user/forktest.asm	/^static inline int$/;"	l
static	obj/user/forktest.asm	/^static inline void *$/;"	l
static	obj/user/forktest.asm	/^static inline void$/;"	l
static	obj/user/forktest.asm	/^static int$/;"	l
static	obj/user/forktest.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/forktest.asm	/^static long long$/;"	l
static	obj/user/forktest.asm	/^static unsigned long long$/;"	l
static	obj/user/forktest.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static char$/;"	l
static	obj/user/forktree.asm	/^static inline bool$/;"	l
static	obj/user/forktree.asm	/^static inline char *$/;"	l
static	obj/user/forktree.asm	/^static inline int$/;"	l
static	obj/user/forktree.asm	/^static inline void *$/;"	l
static	obj/user/forktree.asm	/^static inline void$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static char$/;"	l
static	obj/user/hello.asm	/^static inline bool$/;"	l
static	obj/user/hello.asm	/^static inline char *$/;"	l
static	obj/user/hello.asm	/^static inline int$/;"	l
static	obj/user/hello.asm	/^static inline void *$/;"	l
static	obj/user/hello.asm	/^static inline void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static char$/;"	l
static	obj/user/ls.asm	/^static inline bool$/;"	l
static	obj/user/ls.asm	/^static inline char *$/;"	l
static	obj/user/ls.asm	/^static inline int$/;"	l
static	obj/user/ls.asm	/^static inline void *$/;"	l
static	obj/user/ls.asm	/^static inline void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/matrix.asm	/^static char$/;"	l
static	obj/user/matrix.asm	/^static inline bool$/;"	l
static	obj/user/matrix.asm	/^static inline char *$/;"	l
static	obj/user/matrix.asm	/^static inline int$/;"	l
static	obj/user/matrix.asm	/^static inline void *$/;"	l
static	obj/user/matrix.asm	/^static inline void$/;"	l
static	obj/user/matrix.asm	/^static int mata[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matb[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matc[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int$/;"	l
static	obj/user/matrix.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/matrix.asm	/^static long long$/;"	l
static	obj/user/matrix.asm	/^static unsigned long long$/;"	l
static	obj/user/matrix.asm	/^static void$/;"	l
static	obj/user/pgdir.asm	/^static char$/;"	l
static	obj/user/pgdir.asm	/^static inline bool$/;"	l
static	obj/user/pgdir.asm	/^static inline char *$/;"	l
static	obj/user/pgdir.asm	/^static inline int$/;"	l
static	obj/user/pgdir.asm	/^static inline void *$/;"	l
static	obj/user/pgdir.asm	/^static inline void$/;"	l
static	obj/user/pgdir.asm	/^static int$/;"	l
static	obj/user/pgdir.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/pgdir.asm	/^static long long$/;"	l
static	obj/user/pgdir.asm	/^static unsigned long long$/;"	l
static	obj/user/pgdir.asm	/^static void$/;"	l
static	obj/user/priority.asm	/^static char$/;"	l
static	obj/user/priority.asm	/^static inline bool$/;"	l
static	obj/user/priority.asm	/^static inline char *$/;"	l
static	obj/user/priority.asm	/^static inline int$/;"	l
static	obj/user/priority.asm	/^static inline void *$/;"	l
static	obj/user/priority.asm	/^static inline void$/;"	l
static	obj/user/priority.asm	/^static int$/;"	l
static	obj/user/priority.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/priority.asm	/^static long long$/;"	l
static	obj/user/priority.asm	/^static unsigned long long$/;"	l
static	obj/user/priority.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static char$/;"	l
static	obj/user/sh.asm	/^static inline bool$/;"	l
static	obj/user/sh.asm	/^static inline char *$/;"	l
static	obj/user/sh.asm	/^static inline int$/;"	l
static	obj/user/sh.asm	/^static inline void *$/;"	l
static	obj/user/sh.asm	/^static inline void$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/sleep.asm	/^static char$/;"	l
static	obj/user/sleep.asm	/^static inline bool$/;"	l
static	obj/user/sleep.asm	/^static inline char *$/;"	l
static	obj/user/sleep.asm	/^static inline int$/;"	l
static	obj/user/sleep.asm	/^static inline void *$/;"	l
static	obj/user/sleep.asm	/^static inline void$/;"	l
static	obj/user/sleep.asm	/^static int$/;"	l
static	obj/user/sleep.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sleep.asm	/^static long long$/;"	l
static	obj/user/sleep.asm	/^static unsigned long long$/;"	l
static	obj/user/sleep.asm	/^static void$/;"	l
static	obj/user/sleepkill.asm	/^static char$/;"	l
static	obj/user/sleepkill.asm	/^static inline bool$/;"	l
static	obj/user/sleepkill.asm	/^static inline char *$/;"	l
static	obj/user/sleepkill.asm	/^static inline int$/;"	l
static	obj/user/sleepkill.asm	/^static inline void *$/;"	l
static	obj/user/sleepkill.asm	/^static inline void$/;"	l
static	obj/user/sleepkill.asm	/^static int$/;"	l
static	obj/user/sleepkill.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sleepkill.asm	/^static long long$/;"	l
static	obj/user/sleepkill.asm	/^static unsigned long long$/;"	l
static	obj/user/sleepkill.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static char$/;"	l
static	obj/user/softint.asm	/^static inline bool$/;"	l
static	obj/user/softint.asm	/^static inline char *$/;"	l
static	obj/user/softint.asm	/^static inline int$/;"	l
static	obj/user/softint.asm	/^static inline void *$/;"	l
static	obj/user/softint.asm	/^static inline void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static char$/;"	l
static	obj/user/spin.asm	/^static inline bool$/;"	l
static	obj/user/spin.asm	/^static inline char *$/;"	l
static	obj/user/spin.asm	/^static inline int$/;"	l
static	obj/user/spin.asm	/^static inline void *$/;"	l
static	obj/user/spin.asm	/^static inline void$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static char$/;"	l
static	obj/user/testbss.asm	/^static inline bool$/;"	l
static	obj/user/testbss.asm	/^static inline char *$/;"	l
static	obj/user/testbss.asm	/^static inline int$/;"	l
static	obj/user/testbss.asm	/^static inline void *$/;"	l
static	obj/user/testbss.asm	/^static inline void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/waitkill.asm	/^static char$/;"	l
static	obj/user/waitkill.asm	/^static inline bool$/;"	l
static	obj/user/waitkill.asm	/^static inline char *$/;"	l
static	obj/user/waitkill.asm	/^static inline int$/;"	l
static	obj/user/waitkill.asm	/^static inline void *$/;"	l
static	obj/user/waitkill.asm	/^static inline void$/;"	l
static	obj/user/waitkill.asm	/^static int$/;"	l
static	obj/user/waitkill.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/waitkill.asm	/^static long long$/;"	l
static	obj/user/waitkill.asm	/^static unsigned long long$/;"	l
static	obj/user/waitkill.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static char$/;"	l
static	obj/user/yield.asm	/^static inline bool$/;"	l
static	obj/user/yield.asm	/^static inline char *$/;"	l
static	obj/user/yield.asm	/^static inline int$/;"	l
static	obj/user/yield.asm	/^static inline void *$/;"	l
static	obj/user/yield.asm	/^static inline void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	kern/debug/assert.h	/^#define static_assert(/;"	d
static_assert	tools/mksfs.c	/^#define static_assert(/;"	d	file:
static_assert	user/libs/ulib.h	/^#define static_assert(/;"	d
static_check	tools/mksfs.c	/^static_check(void) {$/;"	f	file:
status	kern/fs/file.h	/^    } status;$/;"	m	struct:file	typeref:enum:file::__anon3
status	user/priority.c	/^int status[TOTAL];$/;"	v
stdin_buffer	kern/fs/devs/dev_stdin.c	/^static char stdin_buffer[STDIN_BUFSIZE];$/;"	v	file:
stdin_close	kern/fs/devs/dev_stdin.c	/^stdin_close(struct device *dev) {$/;"	f	file:
stdin_device_init	kern/fs/devs/dev_stdin.c	/^stdin_device_init(struct device *dev) {$/;"	f	file:
stdin_io	kern/fs/devs/dev_stdin.c	/^stdin_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
stdin_ioctl	kern/fs/devs/dev_stdin.c	/^stdin_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
stdin_open	kern/fs/devs/dev_stdin.c	/^stdin_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
stdout_close	kern/fs/devs/dev_stdout.c	/^stdout_close(struct device *dev) {$/;"	f	file:
stdout_device_init	kern/fs/devs/dev_stdout.c	/^stdout_device_init(struct device *dev) {$/;"	f	file:
stdout_io	kern/fs/devs/dev_stdout.c	/^stdout_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
stdout_ioctl	kern/fs/devs/dev_stdout.c	/^stdout_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
stdout_open	kern/fs/devs/dev_stdout.c	/^stdout_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
step	obj/user/badarg.asm	/^                step = 0;$/;"	d
step	obj/user/badsegment.asm	/^                step = 0;$/;"	d
step	obj/user/divzero.asm	/^                step = 0;$/;"	d
step	obj/user/exit.asm	/^                step = 0;$/;"	d
step	obj/user/faultread.asm	/^                step = 0;$/;"	d
step	obj/user/faultreadkernel.asm	/^                step = 0;$/;"	d
step	obj/user/forktest.asm	/^                step = 0;$/;"	d
step	obj/user/forktree.asm	/^                step = 0;$/;"	d
step	obj/user/hello.asm	/^                step = 0;$/;"	d
step	obj/user/ls.asm	/^                step = 0;$/;"	d
step	obj/user/matrix.asm	/^                step = 0;$/;"	d
step	obj/user/pgdir.asm	/^                step = 0;$/;"	d
step	obj/user/priority.asm	/^                step = 0;$/;"	d
step	obj/user/sh.asm	/^                step = 0;$/;"	d
step	obj/user/sleep.asm	/^                step = 0;$/;"	d
step	obj/user/sleepkill.asm	/^                step = 0;$/;"	d
step	obj/user/softint.asm	/^                step = 0;$/;"	d
step	obj/user/spin.asm	/^                step = 0;$/;"	d
step	obj/user/testbss.asm	/^                step = 0;$/;"	d
step	obj/user/waitkill.asm	/^                step = 0;$/;"	d
step	obj/user/yield.asm	/^                step = 0;$/;"	d
sti	libs/x86.h	/^sti(void) {$/;"	f
stradd	kern/libs/string.c	/^stradd(const char *src1, const char *src2) {$/;"	f
strcat	libs/string.c	/^strcat(char *dst, const char *src) {$/;"	f
strchr	libs/string.c	/^strchr(const char *s, char c) {$/;"	f
strcmp	libs/string.c	/^strcmp(const char *s1, const char *s2) {$/;"	f
strcpy	libs/string.c	/^strcpy(char *dst, const char *src) {$/;"	f
strdup	kern/libs/string.c	/^strdup(const char *src) {$/;"	f
strfind	libs/string.c	/^strfind(const char *s, char c) {$/;"	f
stride_dequeue	kern/schedule/default_sched.c	/^stride_dequeue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
stride_enqueue	kern/schedule/default_sched.c	/^stride_enqueue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
stride_init	kern/schedule/default_sched.c	/^stride_init(struct run_queue *rq) {$/;"	f	file:
stride_pick_next	kern/schedule/default_sched.c	/^stride_pick_next(struct run_queue *rq) {$/;"	f	file:
stride_proc_tick	kern/schedule/default_sched.c	/^stride_proc_tick(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
strlen	libs/string.c	/^strlen(const char *s) {$/;"	f
strncmp	libs/string.c	/^strncmp(const char *s1, const char *s2, size_t n) {$/;"	f
strncpy	libs/string.c	/^strncpy(char *dst, const char *src, size_t len) {$/;"	f
strnlen	libs/string.c	/^strnlen(const char *s, size_t len) {$/;"	f
strtol	libs/string.c	/^strtol(const char *s, char **endptr, int base) {$/;"	f
subname	tools/mksfs.c	/^        char *subname;$/;"	m	struct:sfs_fs::subpath	file:
subpath	tools/mksfs.c	/^    struct subpath {$/;"	s	struct:sfs_fs	file:
subpath_pop	tools/mksfs.c	/^subpath_pop(struct sfs_fs *sfs) {$/;"	f	file:
subpath_push	tools/mksfs.c	/^subpath_push(struct sfs_fs *sfs, const char *subname) {$/;"	f	file:
subpath_show	tools/mksfs.c	/^subpath_show(FILE *fout, struct sfs_fs *sfs, const char *name) {$/;"	f	file:
super	kern/fs/sfs/sfs.h	/^    struct sfs_super super;                         \/* on-disk superblock *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::sfs_super
super	tools/mksfs.c	/^    } super;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::__anon15	file:
super_dirty	kern/fs/sfs/sfs.h	/^    bool super_dirty;                               \/* true if super\/freemap modified *\/$/;"	m	struct:sfs_fs
swap_entry_t	kern/mm/memlayout.h	/^typedef pte_t swap_entry_t; \/\/the pte can also be a swap entry$/;"	t
swap_in	kern/mm/swap.c	/^swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)$/;"	f
swap_in_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_init	kern/mm/swap.c	/^swap_init(void)$/;"	f
swap_init_mm	kern/mm/swap.c	/^swap_init_mm(struct mm_struct *mm)$/;"	f
swap_init_ok	kern/mm/swap.c	/^volatile int swap_init_ok = 0;$/;"	v
swap_init_ok	obj/kernel.asm	/^          swap_init_ok = 1;$/;"	d
swap_manager	kern/mm/swap.h	/^struct swap_manager$/;"	s
swap_manager_fifo	kern/mm/swap_fifo.c	/^struct swap_manager swap_manager_fifo =$/;"	v	typeref:struct:swap_manager
swap_map_swappable	kern/mm/swap.c	/^swap_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f
swap_offset	kern/mm/swap.h	/^#define swap_offset(/;"	d
swap_out	kern/mm/swap.c	/^swap_out(struct mm_struct *mm, int n, int in_tick)$/;"	f
swap_out_num	kern/mm/swap.c	/^volatile unsigned int swap_out_num=0;$/;"	v
swap_out_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_out_victim	kern/mm/swap.h	/^     int (*swap_out_victim) (struct mm_struct *mm, struct Page **ptr_page, int in_tick);$/;"	m	struct:swap_manager
swap_page	kern/mm/swap.c	/^unsigned int swap_page[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
swap_set_unswappable	kern/mm/swap.c	/^swap_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f
swap_tick_event	kern/mm/swap.c	/^swap_tick_event(struct mm_struct *mm)$/;"	f
swapfs_init	kern/fs/swap/swapfs.c	/^swapfs_init(void) {$/;"	f
swapfs_read	kern/fs/swap/swapfs.c	/^swapfs_read(swap_entry_t entry, struct Page *page) {$/;"	f
swapfs_write	kern/fs/swap/swapfs.c	/^swapfs_write(swap_entry_t entry, struct Page *page) {$/;"	f
switch_to	kern/process/switch.S	/^switch_to:                      # switch_to(from, to)$/;"	l
switch_to	obj/kernel.asm	/^switch_to:                      # switch_to(from, to)$/;"	l
symfile	Makefile	/^symfile = $(call cgtype,$(call toobj,$(1)),o,sym)$/;"	m
sys_close	kern/syscall/syscall.c	/^sys_close(uint32_t arg[]) {$/;"	f	file:
sys_close	user/libs/syscall.c	/^sys_close(int fd) {$/;"	f
sys_dup	kern/syscall/syscall.c	/^sys_dup(uint32_t arg[]) {$/;"	f	file:
sys_dup	user/libs/syscall.c	/^sys_dup(int fd1, int fd2) {$/;"	f
sys_exec	kern/syscall/syscall.c	/^sys_exec(uint32_t arg[]) {$/;"	f	file:
sys_exec	user/libs/syscall.c	/^sys_exec(const char *name, int argc, const char **argv) {$/;"	f
sys_exit	kern/syscall/syscall.c	/^sys_exit(uint32_t arg[]) {$/;"	f	file:
sys_exit	user/libs/syscall.c	/^sys_exit(int error_code) {$/;"	f
sys_fork	kern/syscall/syscall.c	/^sys_fork(uint32_t arg[]) {$/;"	f	file:
sys_fork	user/libs/syscall.c	/^sys_fork(void) {$/;"	f
sys_fstat	kern/syscall/syscall.c	/^sys_fstat(uint32_t arg[]) {$/;"	f	file:
sys_fstat	user/libs/syscall.c	/^sys_fstat(int fd, struct stat *stat) {$/;"	f
sys_fsync	kern/syscall/syscall.c	/^sys_fsync(uint32_t arg[]) {$/;"	f	file:
sys_fsync	user/libs/syscall.c	/^sys_fsync(int fd) {$/;"	f
sys_getcwd	kern/syscall/syscall.c	/^sys_getcwd(uint32_t arg[]) {$/;"	f	file:
sys_getcwd	user/libs/syscall.c	/^sys_getcwd(char *buffer, size_t len) {$/;"	f
sys_getdirentry	kern/syscall/syscall.c	/^sys_getdirentry(uint32_t arg[]) {$/;"	f	file:
sys_getdirentry	user/libs/syscall.c	/^sys_getdirentry(int fd, struct dirent *dirent) {$/;"	f
sys_getpid	kern/syscall/syscall.c	/^sys_getpid(uint32_t arg[]) {$/;"	f	file:
sys_getpid	user/libs/syscall.c	/^sys_getpid(void) {$/;"	f
sys_gettime	kern/syscall/syscall.c	/^sys_gettime(uint32_t arg[]) {$/;"	f	file:
sys_gettime	user/libs/syscall.c	/^sys_gettime(void) {$/;"	f
sys_kill	kern/syscall/syscall.c	/^sys_kill(uint32_t arg[]) {$/;"	f	file:
sys_kill	user/libs/syscall.c	/^sys_kill(int pid) {$/;"	f
sys_lab6_set_priority	kern/syscall/syscall.c	/^sys_lab6_set_priority(uint32_t arg[])$/;"	f	file:
sys_lab6_set_priority	user/libs/syscall.c	/^sys_lab6_set_priority(uint32_t priority)$/;"	f
sys_open	kern/syscall/syscall.c	/^sys_open(uint32_t arg[]) {$/;"	f	file:
sys_open	user/libs/syscall.c	/^sys_open(const char *path, uint32_t open_flags) {$/;"	f
sys_pgdir	kern/syscall/syscall.c	/^sys_pgdir(uint32_t arg[]) {$/;"	f	file:
sys_pgdir	user/libs/syscall.c	/^sys_pgdir(void) {$/;"	f
sys_putc	kern/syscall/syscall.c	/^sys_putc(uint32_t arg[]) {$/;"	f	file:
sys_putc	user/libs/syscall.c	/^sys_putc(int c) {$/;"	f
sys_read	kern/syscall/syscall.c	/^sys_read(uint32_t arg[]) {$/;"	f	file:
sys_read	user/libs/syscall.c	/^sys_read(int fd, void *base, size_t len) {$/;"	f
sys_seek	kern/syscall/syscall.c	/^sys_seek(uint32_t arg[]) {$/;"	f	file:
sys_seek	user/libs/syscall.c	/^sys_seek(int fd, off_t pos, int whence) {$/;"	f
sys_sleep	kern/syscall/syscall.c	/^sys_sleep(uint32_t arg[]) {$/;"	f	file:
sys_sleep	user/libs/syscall.c	/^sys_sleep(unsigned int time) {$/;"	f
sys_wait	kern/syscall/syscall.c	/^sys_wait(uint32_t arg[]) {$/;"	f	file:
sys_wait	user/libs/syscall.c	/^sys_wait(int pid, int *store) {$/;"	f
sys_write	kern/syscall/syscall.c	/^sys_write(uint32_t arg[]) {$/;"	f	file:
sys_write	user/libs/syscall.c	/^sys_write(int fd, void *base, size_t len) {$/;"	f
sys_yield	kern/syscall/syscall.c	/^sys_yield(uint32_t arg[]) {$/;"	f	file:
sys_yield	user/libs/syscall.c	/^sys_yield(void) {$/;"	f
syscall	kern/syscall/syscall.c	/^syscall(void) {$/;"	f
syscall	user/libs/syscall.c	/^syscall(int num, ...) {$/;"	f	file:
syscalls	kern/syscall/syscall.c	/^static int (*syscalls[])(uint32_t arg[]) = {$/;"	v	file:
sysfile_chdir	kern/fs/sysfile.c	/^sysfile_chdir(const char *__path) {$/;"	f
sysfile_close	kern/fs/sysfile.c	/^sysfile_close(int fd) {$/;"	f
sysfile_dup	kern/fs/sysfile.c	/^sysfile_dup(int fd1, int fd2) {$/;"	f
sysfile_fstat	kern/fs/sysfile.c	/^sysfile_fstat(int fd, struct stat *__stat) {$/;"	f
sysfile_fsync	kern/fs/sysfile.c	/^sysfile_fsync(int fd) {$/;"	f
sysfile_getcwd	kern/fs/sysfile.c	/^sysfile_getcwd(char *buf, size_t len) {$/;"	f
sysfile_getdirentry	kern/fs/sysfile.c	/^sysfile_getdirentry(int fd, struct dirent *__direntp) {$/;"	f
sysfile_link	kern/fs/sysfile.c	/^sysfile_link(const char *__path1, const char *__path2) {$/;"	f
sysfile_mkfifo	kern/fs/sysfile.c	/^sysfile_mkfifo(const char *__name, uint32_t open_flags) {$/;"	f
sysfile_open	kern/fs/sysfile.c	/^sysfile_open(const char *__path, uint32_t open_flags) {$/;"	f
sysfile_pipe	kern/fs/sysfile.c	/^sysfile_pipe(int *fd_store) {$/;"	f
sysfile_read	kern/fs/sysfile.c	/^sysfile_read(int fd, void *base, size_t len) {$/;"	f
sysfile_rename	kern/fs/sysfile.c	/^sysfile_rename(const char *__path1, const char *__path2) {$/;"	f
sysfile_seek	kern/fs/sysfile.c	/^sysfile_seek(int fd, off_t pos, int whence) {$/;"	f
sysfile_unlink	kern/fs/sysfile.c	/^sysfile_unlink(const char *__path) {$/;"	f
sysfile_write	kern/fs/sysfile.c	/^sysfile_write(int fd, void *base, size_t len) {$/;"	f
taskstate	kern/mm/mmu.h	/^struct taskstate {$/;"	s
temp_ptep	obj/kernel.asm	/^     temp_ptep = get_pte(mm->pgdir, BEING_CHECK_VALID_VADDR, 1);$/;"	d
test_and_clear_bit	libs/atomic.h	/^test_and_clear_bit(int nr, volatile void *addr) {$/;"	f
test_and_set_bit	libs/atomic.h	/^test_and_set_bit(int nr, volatile void *addr) {$/;"	f
test_bit	libs/atomic.h	/^test_bit(int nr, volatile void *addr) {$/;"	f
testfd	kern/fs/file.c	/^#define testfd(/;"	d	file:
testfd	obj/kernel.asm	/^#define testfd(fd)                          ((fd) >= 0 && (fd) < FILES_STRUCT_NENTRY)$/;"	d
testfile	user/sh.c	/^testfile(const char *name) {$/;"	f
tf	kern/process/proc.h	/^    struct trapframe *tf;                       \/\/ Trap frame for current interrupt$/;"	m	struct:proc_struct	typeref:struct:proc_struct::trapframe
tf_cs	kern/trap/trap.h	/^    uint16_t tf_cs;$/;"	m	struct:trapframe
tf_ds	kern/trap/trap.h	/^    uint16_t tf_ds;$/;"	m	struct:trapframe
tf_eflags	kern/trap/trap.h	/^    uint32_t tf_eflags;$/;"	m	struct:trapframe
tf_eip	kern/trap/trap.h	/^    uintptr_t tf_eip;$/;"	m	struct:trapframe
tf_err	kern/trap/trap.h	/^    uint32_t tf_err;$/;"	m	struct:trapframe
tf_es	kern/trap/trap.h	/^    uint16_t tf_es;$/;"	m	struct:trapframe
tf_esp	kern/trap/trap.h	/^    uintptr_t tf_esp;$/;"	m	struct:trapframe
tf_fs	kern/trap/trap.h	/^    uint16_t tf_fs;$/;"	m	struct:trapframe
tf_gs	kern/trap/trap.h	/^    uint16_t tf_gs;$/;"	m	struct:trapframe
tf_padding0	kern/trap/trap.h	/^    uint16_t tf_padding0;$/;"	m	struct:trapframe
tf_padding1	kern/trap/trap.h	/^    uint16_t tf_padding1;$/;"	m	struct:trapframe
tf_padding2	kern/trap/trap.h	/^    uint16_t tf_padding2;$/;"	m	struct:trapframe
tf_padding3	kern/trap/trap.h	/^    uint16_t tf_padding3;$/;"	m	struct:trapframe
tf_padding4	kern/trap/trap.h	/^    uint16_t tf_padding4;$/;"	m	struct:trapframe
tf_padding5	kern/trap/trap.h	/^    uint16_t tf_padding5;$/;"	m	struct:trapframe
tf_regs	kern/trap/trap.h	/^    struct pushregs tf_regs;$/;"	m	struct:trapframe	typeref:struct:trapframe::pushregs
tf_ss	kern/trap/trap.h	/^    uint16_t tf_ss;$/;"	m	struct:trapframe
tf_trapno	kern/trap/trap.h	/^    uint32_t tf_trapno;$/;"	m	struct:trapframe
tick_event	kern/mm/swap.h	/^     int (*tick_event)      (struct mm_struct *mm);$/;"	m	struct:swap_manager
ticks	kern/driver/clock.c	/^volatile size_t ticks;$/;"	v
ticks	obj/kernel.asm	/^    ticks = 0;$/;"	d
time_slice	kern/process/proc.h	/^    int time_slice;                             \/\/ time slice for occupying the CPU$/;"	m	struct:proc_struct
timer	obj/kernel.asm	/^                timer = le2timer(le, timer_link);$/;"	d
timer_init	kern/schedule/sched.h	/^timer_init(timer_t *timer, struct proc_struct *proc, int expires) {$/;"	f
timer_link	kern/schedule/sched.h	/^    list_entry_t timer_link;$/;"	m	struct:__anon11
timer_list	kern/schedule/sched.c	/^static list_entry_t timer_list;$/;"	v	file:
timer_t	kern/schedule/sched.h	/^} timer_t;$/;"	t	typeref:struct:__anon11
times	obj/user/matrix.asm	/^            times = (times * times + 10) * 100;$/;"	d
tlb_invalidate	kern/mm/pmm.c	/^tlb_invalidate(pde_t *pgdir, uintptr_t la) {$/;"	f
to_struct	libs/defs.h	/^#define to_struct(/;"	d
todep	tools/function.mk	/^todep = $(patsubst %.o,%.d,$(call toobj,$(1),$(2)))$/;"	m
togglecode	kern/driver/console.c	/^static uint8_t togglecode[256] = {$/;"	v	file:
token	obj/user/sh.asm	/^        token = *s, *s ++ = '\\0';$/;"	d
toobj	tools/function.mk	/^toobj = $(addprefix $(OBJDIR)$(SLASH)$(if $(2),$(2)$(SLASH)),\\$/;"	m
total	user/matrix.c	/^const int total = 21;$/;"	v
totarget	tools/function.mk	/^totarget = $(addprefix $(BINDIR)$(SLASH),$(1))$/;"	m
transmode	user/libs/file.c	/^transmode(struct stat *stat) {$/;"	f	file:
trap	kern/trap/trap.c	/^trap(struct trapframe *tf) {$/;"	f
trap_dispatch	kern/trap/trap.c	/^trap_dispatch(struct trapframe *tf) {$/;"	f	file:
trap_in_kernel	kern/trap/trap.c	/^trap_in_kernel(struct trapframe *tf) {$/;"	f
trapframe	kern/trap/trap.h	/^struct trapframe {$/;"	s
trapname	kern/trap/trap.c	/^trapname(int trapno) {$/;"	f	file:
try_again	obj/kernel.asm	/^        try_again:$/;"	l
try_down	kern/sync/sem.c	/^try_down(semaphore_t *sem) {$/;"	f
try_lock	user/libs/lock.h	/^try_lock(lock_t *l) {$/;"	f
ts	kern/mm/pmm.c	/^static struct taskstate ts = {0};$/;"	v	typeref:struct:taskstate	file:
ts_cr3	kern/mm/mmu.h	/^    uintptr_t ts_cr3;       \/\/ page directory base$/;"	m	struct:taskstate
ts_cs	kern/mm/mmu.h	/^    uint16_t ts_cs;$/;"	m	struct:taskstate
ts_ds	kern/mm/mmu.h	/^    uint16_t ts_ds;$/;"	m	struct:taskstate
ts_eax	kern/mm/mmu.h	/^    uint32_t ts_eax;        \/\/ more saved state (registers)$/;"	m	struct:taskstate
ts_ebp	kern/mm/mmu.h	/^    uintptr_t ts_ebp;$/;"	m	struct:taskstate
ts_ebx	kern/mm/mmu.h	/^    uint32_t ts_ebx;$/;"	m	struct:taskstate
ts_ecx	kern/mm/mmu.h	/^    uint32_t ts_ecx;$/;"	m	struct:taskstate
ts_edi	kern/mm/mmu.h	/^    uint32_t ts_edi;$/;"	m	struct:taskstate
ts_edx	kern/mm/mmu.h	/^    uint32_t ts_edx;$/;"	m	struct:taskstate
ts_eflags	kern/mm/mmu.h	/^    uint32_t ts_eflags;$/;"	m	struct:taskstate
ts_eip	kern/mm/mmu.h	/^    uintptr_t ts_eip;       \/\/ saved state from last task switch$/;"	m	struct:taskstate
ts_es	kern/mm/mmu.h	/^    uint16_t ts_es;         \/\/ even more saved state (segment selectors)$/;"	m	struct:taskstate
ts_esi	kern/mm/mmu.h	/^    uint32_t ts_esi;$/;"	m	struct:taskstate
ts_esp	kern/mm/mmu.h	/^    uintptr_t ts_esp;$/;"	m	struct:taskstate
ts_esp0	kern/mm/mmu.h	/^    uintptr_t ts_esp0;      \/\/ stack pointers and segment selectors$/;"	m	struct:taskstate
ts_esp1	kern/mm/mmu.h	/^    uintptr_t ts_esp1;$/;"	m	struct:taskstate
ts_esp2	kern/mm/mmu.h	/^    uintptr_t ts_esp2;$/;"	m	struct:taskstate
ts_fs	kern/mm/mmu.h	/^    uint16_t ts_fs;$/;"	m	struct:taskstate
ts_gs	kern/mm/mmu.h	/^    uint16_t ts_gs;$/;"	m	struct:taskstate
ts_iomb	kern/mm/mmu.h	/^    uint16_t ts_iomb;       \/\/ i\/o map base address$/;"	m	struct:taskstate
ts_ldt	kern/mm/mmu.h	/^    uint16_t ts_ldt;$/;"	m	struct:taskstate
ts_link	kern/mm/mmu.h	/^    uint32_t ts_link;       \/\/ old ts selector$/;"	m	struct:taskstate
ts_padding1	kern/mm/mmu.h	/^    uint16_t ts_padding1;$/;"	m	struct:taskstate
ts_padding10	kern/mm/mmu.h	/^    uint16_t ts_padding10;$/;"	m	struct:taskstate
ts_padding2	kern/mm/mmu.h	/^    uint16_t ts_padding2;$/;"	m	struct:taskstate
ts_padding3	kern/mm/mmu.h	/^    uint16_t ts_padding3;$/;"	m	struct:taskstate
ts_padding4	kern/mm/mmu.h	/^    uint16_t ts_padding4;$/;"	m	struct:taskstate
ts_padding5	kern/mm/mmu.h	/^    uint16_t ts_padding5;$/;"	m	struct:taskstate
ts_padding6	kern/mm/mmu.h	/^    uint16_t ts_padding6;$/;"	m	struct:taskstate
ts_padding7	kern/mm/mmu.h	/^    uint16_t ts_padding7;$/;"	m	struct:taskstate
ts_padding8	kern/mm/mmu.h	/^    uint16_t ts_padding8;$/;"	m	struct:taskstate
ts_padding9	kern/mm/mmu.h	/^    uint16_t ts_padding9;$/;"	m	struct:taskstate
ts_ss	kern/mm/mmu.h	/^    uint16_t ts_ss;$/;"	m	struct:taskstate
ts_ss0	kern/mm/mmu.h	/^    uint16_t ts_ss0;        \/\/ after an increase in privilege level$/;"	m	struct:taskstate
ts_ss1	kern/mm/mmu.h	/^    uint16_t ts_ss1;$/;"	m	struct:taskstate
ts_ss2	kern/mm/mmu.h	/^    uint16_t ts_ss2;$/;"	m	struct:taskstate
ts_t	kern/mm/mmu.h	/^    uint16_t ts_t;          \/\/ trap on task switch$/;"	m	struct:taskstate
type	kern/fs/sfs/sfs.h	/^    uint16_t type;                                  \/* one of SYS_TYPE_* above *\/$/;"	m	struct:sfs_disk_inode
type	kern/mm/memlayout.h	/^        uint32_t type;$/;"	m	struct:e820map::__anon9
type	tools/mksfs.c	/^        uint16_t type;$/;"	m	struct:cache_inode::inode	file:
ubinfile	Makefile	/^ubinfile = $(call outfile,$(addprefix $(USER_PREFIX),$(call filename,$(1))))$/;"	m
uint16_t	libs/defs.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	libs/defs.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/kernel.asm	/^uint32_t$/;"	l
uint32_t	obj/user/badarg.asm	/^uint32_t$/;"	l
uint32_t	obj/user/badsegment.asm	/^uint32_t$/;"	l
uint32_t	obj/user/divzero.asm	/^uint32_t$/;"	l
uint32_t	obj/user/exit.asm	/^uint32_t$/;"	l
uint32_t	obj/user/faultread.asm	/^uint32_t$/;"	l
uint32_t	obj/user/faultreadkernel.asm	/^uint32_t$/;"	l
uint32_t	obj/user/forktest.asm	/^uint32_t$/;"	l
uint32_t	obj/user/forktree.asm	/^uint32_t$/;"	l
uint32_t	obj/user/hello.asm	/^uint32_t$/;"	l
uint32_t	obj/user/ls.asm	/^uint32_t$/;"	l
uint32_t	obj/user/matrix.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pgdir.asm	/^uint32_t$/;"	l
uint32_t	obj/user/priority.asm	/^uint32_t$/;"	l
uint32_t	obj/user/sh.asm	/^uint32_t$/;"	l
uint32_t	obj/user/sleep.asm	/^uint32_t$/;"	l
uint32_t	obj/user/sleepkill.asm	/^uint32_t$/;"	l
uint32_t	obj/user/softint.asm	/^uint32_t$/;"	l
uint32_t	obj/user/spin.asm	/^uint32_t$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t$/;"	l
uint32_t	obj/user/waitkill.asm	/^uint32_t$/;"	l
uint32_t	obj/user/yield.asm	/^uint32_t$/;"	l
uint64_t	libs/defs.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	libs/defs.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	libs/defs.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/libs/umain.c	/^umain(int argc, char *argv[]) {$/;"	f
unhash_proc	kern/process/proc.c	/^unhash_proc(struct proc_struct *proc) {$/;"	f	file:
units	kern/mm/kmalloc.c	/^	int units;$/;"	m	struct:slob_block	file:
unlock	user/libs/lock.h	/^unlock(lock_t *l) {$/;"	f
unlock_bootfs	kern/fs/vfs/vfs.c	/^unlock_bootfs(void) {$/;"	f	file:
unlock_cfs	kern/fs/vfs/vfspath.c	/^unlock_cfs(void) {$/;"	f	file:
unlock_disk0	kern/fs/devs/dev_disk0.c	/^unlock_disk0(void) {$/;"	f	file:
unlock_files	kern/fs/fs.c	/^unlock_files(struct files_struct *filesp) {$/;"	f
unlock_fork	user/libs/ulib.c	/^unlock_fork(void) {$/;"	f
unlock_mm	kern/mm/vmm.h	/^unlock_mm(struct mm_struct *mm) {$/;"	f
unlock_sfs_fs	kern/fs/sfs/sfs_lock.c	/^unlock_sfs_fs(struct sfs_fs *sfs) {$/;"	f
unlock_sfs_io	kern/fs/sfs/sfs_lock.c	/^unlock_sfs_io(struct sfs_fs *sfs) {$/;"	f
unlock_sin	kern/fs/sfs/sfs_inode.c	/^unlock_sin(struct sfs_inode *sin) {$/;"	f	file:
unlock_vdev_list	kern/fs/vfs/vfsdev.c	/^unlock_vdev_list(void) {$/;"	f	file:
unmap_range	kern/mm/pmm.c	/^unmap_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
unsigned	obj/kernel.asm	/^unsigned int ksize(const void *block)$/;"	l
unsigned	obj/user/badarg.asm	/^unsigned int$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
unsigned	obj/user/exit.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktest.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/ls.asm	/^unsigned int$/;"	l
unsigned	obj/user/matrix.asm	/^unsigned int$/;"	l
unsigned	obj/user/pgdir.asm	/^unsigned int$/;"	l
unsigned	obj/user/priority.asm	/^unsigned int$/;"	l
unsigned	obj/user/sh.asm	/^unsigned int$/;"	l
unsigned	obj/user/sleep.asm	/^unsigned int$/;"	l
unsigned	obj/user/sleepkill.asm	/^unsigned int$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
unsigned	obj/user/waitkill.asm	/^unsigned int$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
unused_blocks	kern/fs/sfs/sfs.h	/^    uint32_t unused_blocks;                         \/* # of unused blocks in fs *\/$/;"	m	struct:sfs_super
unused_blocks	tools/mksfs.c	/^        uint32_t unused_blocks;$/;"	m	struct:sfs_fs::__anon15	file:
up	kern/sync/sem.c	/^up(semaphore_t *sem) {$/;"	f
update_cache	tools/mksfs.c	/^update_cache(struct sfs_fs *sfs, struct cache_block **cbp, uint32_t *inop) {$/;"	f	file:
update_score	tools/grade.sh	/^update_score() {$/;"	f
uprog_ld	Makefile	/^define uprog_ld$/;"	m
usage	user/sh.c	/^usage(void) {$/;"	f
user_main	kern/process/proc.c	/^user_main(void *arg) {$/;"	f	file:
user_mem_check	kern/mm/vmm.c	/^user_mem_check(struct mm_struct *mm, uintptr_t addr, size_t len, bool write) {$/;"	f
userstabdata	kern/debug/kdebug.c	/^struct userstabdata {$/;"	s	file:
va_arg	libs/stdarg.h	/^#define va_arg(/;"	d
va_end	libs/stdarg.h	/^#define va_end(/;"	d
va_list	libs/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	libs/stdarg.h	/^#define va_start(/;"	d
valid	kern/driver/ide.c	/^    unsigned char valid;        \/\/ 0 or 1 (If Device Really Exists)$/;"	m	struct:ide_device	file:
value	kern/sync/sem.h	/^    int value;$/;"	m	struct:__anon12
vcprintf	kern/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vcprintf	user/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vdev_link	kern/fs/vfs/vfsdev.c	/^    list_entry_t vdev_link;$/;"	m	struct:__anon8	file:
vdev_list	kern/fs/vfs/vfsdev.c	/^static list_entry_t vdev_list;     \/\/ device info list in vfs layer$/;"	v	file:
vdev_list_sem	kern/fs/vfs/vfsdev.c	/^static semaphore_t vdev_list_sem;$/;"	v	file:
vector0	kern/trap/vectors.S	/^vector0:$/;"	l
vector0	obj/kernel.asm	/^vector0:$/;"	l
vector1	kern/trap/vectors.S	/^vector1:$/;"	l
vector1	obj/kernel.asm	/^vector1:$/;"	l
vector10	kern/trap/vectors.S	/^vector10:$/;"	l
vector10	obj/kernel.asm	/^vector10:$/;"	l
vector100	kern/trap/vectors.S	/^vector100:$/;"	l
vector100	obj/kernel.asm	/^vector100:$/;"	l
vector101	kern/trap/vectors.S	/^vector101:$/;"	l
vector101	obj/kernel.asm	/^vector101:$/;"	l
vector102	kern/trap/vectors.S	/^vector102:$/;"	l
vector102	obj/kernel.asm	/^vector102:$/;"	l
vector103	kern/trap/vectors.S	/^vector103:$/;"	l
vector103	obj/kernel.asm	/^vector103:$/;"	l
vector104	kern/trap/vectors.S	/^vector104:$/;"	l
vector104	obj/kernel.asm	/^vector104:$/;"	l
vector105	kern/trap/vectors.S	/^vector105:$/;"	l
vector105	obj/kernel.asm	/^vector105:$/;"	l
vector106	kern/trap/vectors.S	/^vector106:$/;"	l
vector106	obj/kernel.asm	/^vector106:$/;"	l
vector107	kern/trap/vectors.S	/^vector107:$/;"	l
vector107	obj/kernel.asm	/^vector107:$/;"	l
vector108	kern/trap/vectors.S	/^vector108:$/;"	l
vector108	obj/kernel.asm	/^vector108:$/;"	l
vector109	kern/trap/vectors.S	/^vector109:$/;"	l
vector109	obj/kernel.asm	/^vector109:$/;"	l
vector11	kern/trap/vectors.S	/^vector11:$/;"	l
vector11	obj/kernel.asm	/^vector11:$/;"	l
vector110	kern/trap/vectors.S	/^vector110:$/;"	l
vector110	obj/kernel.asm	/^vector110:$/;"	l
vector111	kern/trap/vectors.S	/^vector111:$/;"	l
vector111	obj/kernel.asm	/^vector111:$/;"	l
vector112	kern/trap/vectors.S	/^vector112:$/;"	l
vector112	obj/kernel.asm	/^vector112:$/;"	l
vector113	kern/trap/vectors.S	/^vector113:$/;"	l
vector113	obj/kernel.asm	/^vector113:$/;"	l
vector114	kern/trap/vectors.S	/^vector114:$/;"	l
vector114	obj/kernel.asm	/^vector114:$/;"	l
vector115	kern/trap/vectors.S	/^vector115:$/;"	l
vector115	obj/kernel.asm	/^vector115:$/;"	l
vector116	kern/trap/vectors.S	/^vector116:$/;"	l
vector116	obj/kernel.asm	/^vector116:$/;"	l
vector117	kern/trap/vectors.S	/^vector117:$/;"	l
vector117	obj/kernel.asm	/^vector117:$/;"	l
vector118	kern/trap/vectors.S	/^vector118:$/;"	l
vector118	obj/kernel.asm	/^vector118:$/;"	l
vector119	kern/trap/vectors.S	/^vector119:$/;"	l
vector119	obj/kernel.asm	/^vector119:$/;"	l
vector12	kern/trap/vectors.S	/^vector12:$/;"	l
vector12	obj/kernel.asm	/^vector12:$/;"	l
vector120	kern/trap/vectors.S	/^vector120:$/;"	l
vector120	obj/kernel.asm	/^vector120:$/;"	l
vector121	kern/trap/vectors.S	/^vector121:$/;"	l
vector121	obj/kernel.asm	/^vector121:$/;"	l
vector122	kern/trap/vectors.S	/^vector122:$/;"	l
vector122	obj/kernel.asm	/^vector122:$/;"	l
vector123	kern/trap/vectors.S	/^vector123:$/;"	l
vector123	obj/kernel.asm	/^vector123:$/;"	l
vector124	kern/trap/vectors.S	/^vector124:$/;"	l
vector124	obj/kernel.asm	/^vector124:$/;"	l
vector125	kern/trap/vectors.S	/^vector125:$/;"	l
vector125	obj/kernel.asm	/^vector125:$/;"	l
vector126	kern/trap/vectors.S	/^vector126:$/;"	l
vector126	obj/kernel.asm	/^vector126:$/;"	l
vector127	kern/trap/vectors.S	/^vector127:$/;"	l
vector127	obj/kernel.asm	/^vector127:$/;"	l
vector128	kern/trap/vectors.S	/^vector128:$/;"	l
vector128	obj/kernel.asm	/^vector128:$/;"	l
vector129	kern/trap/vectors.S	/^vector129:$/;"	l
vector129	obj/kernel.asm	/^vector129:$/;"	l
vector13	kern/trap/vectors.S	/^vector13:$/;"	l
vector13	obj/kernel.asm	/^vector13:$/;"	l
vector130	kern/trap/vectors.S	/^vector130:$/;"	l
vector130	obj/kernel.asm	/^vector130:$/;"	l
vector131	kern/trap/vectors.S	/^vector131:$/;"	l
vector131	obj/kernel.asm	/^vector131:$/;"	l
vector132	kern/trap/vectors.S	/^vector132:$/;"	l
vector132	obj/kernel.asm	/^vector132:$/;"	l
vector133	kern/trap/vectors.S	/^vector133:$/;"	l
vector133	obj/kernel.asm	/^vector133:$/;"	l
vector134	kern/trap/vectors.S	/^vector134:$/;"	l
vector134	obj/kernel.asm	/^vector134:$/;"	l
vector135	kern/trap/vectors.S	/^vector135:$/;"	l
vector135	obj/kernel.asm	/^vector135:$/;"	l
vector136	kern/trap/vectors.S	/^vector136:$/;"	l
vector136	obj/kernel.asm	/^vector136:$/;"	l
vector137	kern/trap/vectors.S	/^vector137:$/;"	l
vector137	obj/kernel.asm	/^vector137:$/;"	l
vector138	kern/trap/vectors.S	/^vector138:$/;"	l
vector138	obj/kernel.asm	/^vector138:$/;"	l
vector139	kern/trap/vectors.S	/^vector139:$/;"	l
vector139	obj/kernel.asm	/^vector139:$/;"	l
vector14	kern/trap/vectors.S	/^vector14:$/;"	l
vector14	obj/kernel.asm	/^vector14:$/;"	l
vector140	kern/trap/vectors.S	/^vector140:$/;"	l
vector140	obj/kernel.asm	/^vector140:$/;"	l
vector141	kern/trap/vectors.S	/^vector141:$/;"	l
vector141	obj/kernel.asm	/^vector141:$/;"	l
vector142	kern/trap/vectors.S	/^vector142:$/;"	l
vector142	obj/kernel.asm	/^vector142:$/;"	l
vector143	kern/trap/vectors.S	/^vector143:$/;"	l
vector143	obj/kernel.asm	/^vector143:$/;"	l
vector144	kern/trap/vectors.S	/^vector144:$/;"	l
vector144	obj/kernel.asm	/^vector144:$/;"	l
vector145	kern/trap/vectors.S	/^vector145:$/;"	l
vector145	obj/kernel.asm	/^vector145:$/;"	l
vector146	kern/trap/vectors.S	/^vector146:$/;"	l
vector146	obj/kernel.asm	/^vector146:$/;"	l
vector147	kern/trap/vectors.S	/^vector147:$/;"	l
vector147	obj/kernel.asm	/^vector147:$/;"	l
vector148	kern/trap/vectors.S	/^vector148:$/;"	l
vector148	obj/kernel.asm	/^vector148:$/;"	l
vector149	kern/trap/vectors.S	/^vector149:$/;"	l
vector149	obj/kernel.asm	/^vector149:$/;"	l
vector15	kern/trap/vectors.S	/^vector15:$/;"	l
vector15	obj/kernel.asm	/^vector15:$/;"	l
vector150	kern/trap/vectors.S	/^vector150:$/;"	l
vector150	obj/kernel.asm	/^vector150:$/;"	l
vector151	kern/trap/vectors.S	/^vector151:$/;"	l
vector151	obj/kernel.asm	/^vector151:$/;"	l
vector152	kern/trap/vectors.S	/^vector152:$/;"	l
vector152	obj/kernel.asm	/^vector152:$/;"	l
vector153	kern/trap/vectors.S	/^vector153:$/;"	l
vector153	obj/kernel.asm	/^vector153:$/;"	l
vector154	kern/trap/vectors.S	/^vector154:$/;"	l
vector154	obj/kernel.asm	/^vector154:$/;"	l
vector155	kern/trap/vectors.S	/^vector155:$/;"	l
vector155	obj/kernel.asm	/^vector155:$/;"	l
vector156	kern/trap/vectors.S	/^vector156:$/;"	l
vector156	obj/kernel.asm	/^vector156:$/;"	l
vector157	kern/trap/vectors.S	/^vector157:$/;"	l
vector157	obj/kernel.asm	/^vector157:$/;"	l
vector158	kern/trap/vectors.S	/^vector158:$/;"	l
vector158	obj/kernel.asm	/^vector158:$/;"	l
vector159	kern/trap/vectors.S	/^vector159:$/;"	l
vector159	obj/kernel.asm	/^vector159:$/;"	l
vector16	kern/trap/vectors.S	/^vector16:$/;"	l
vector16	obj/kernel.asm	/^vector16:$/;"	l
vector160	kern/trap/vectors.S	/^vector160:$/;"	l
vector160	obj/kernel.asm	/^vector160:$/;"	l
vector161	kern/trap/vectors.S	/^vector161:$/;"	l
vector161	obj/kernel.asm	/^vector161:$/;"	l
vector162	kern/trap/vectors.S	/^vector162:$/;"	l
vector162	obj/kernel.asm	/^vector162:$/;"	l
vector163	kern/trap/vectors.S	/^vector163:$/;"	l
vector163	obj/kernel.asm	/^vector163:$/;"	l
vector164	kern/trap/vectors.S	/^vector164:$/;"	l
vector164	obj/kernel.asm	/^vector164:$/;"	l
vector165	kern/trap/vectors.S	/^vector165:$/;"	l
vector165	obj/kernel.asm	/^vector165:$/;"	l
vector166	kern/trap/vectors.S	/^vector166:$/;"	l
vector166	obj/kernel.asm	/^vector166:$/;"	l
vector167	kern/trap/vectors.S	/^vector167:$/;"	l
vector167	obj/kernel.asm	/^vector167:$/;"	l
vector168	kern/trap/vectors.S	/^vector168:$/;"	l
vector168	obj/kernel.asm	/^vector168:$/;"	l
vector169	kern/trap/vectors.S	/^vector169:$/;"	l
vector169	obj/kernel.asm	/^vector169:$/;"	l
vector17	kern/trap/vectors.S	/^vector17:$/;"	l
vector17	obj/kernel.asm	/^vector17:$/;"	l
vector170	kern/trap/vectors.S	/^vector170:$/;"	l
vector170	obj/kernel.asm	/^vector170:$/;"	l
vector171	kern/trap/vectors.S	/^vector171:$/;"	l
vector171	obj/kernel.asm	/^vector171:$/;"	l
vector172	kern/trap/vectors.S	/^vector172:$/;"	l
vector172	obj/kernel.asm	/^vector172:$/;"	l
vector173	kern/trap/vectors.S	/^vector173:$/;"	l
vector173	obj/kernel.asm	/^vector173:$/;"	l
vector174	kern/trap/vectors.S	/^vector174:$/;"	l
vector174	obj/kernel.asm	/^vector174:$/;"	l
vector175	kern/trap/vectors.S	/^vector175:$/;"	l
vector175	obj/kernel.asm	/^vector175:$/;"	l
vector176	kern/trap/vectors.S	/^vector176:$/;"	l
vector176	obj/kernel.asm	/^vector176:$/;"	l
vector177	kern/trap/vectors.S	/^vector177:$/;"	l
vector177	obj/kernel.asm	/^vector177:$/;"	l
vector178	kern/trap/vectors.S	/^vector178:$/;"	l
vector178	obj/kernel.asm	/^vector178:$/;"	l
vector179	kern/trap/vectors.S	/^vector179:$/;"	l
vector179	obj/kernel.asm	/^vector179:$/;"	l
vector18	kern/trap/vectors.S	/^vector18:$/;"	l
vector18	obj/kernel.asm	/^vector18:$/;"	l
vector180	kern/trap/vectors.S	/^vector180:$/;"	l
vector180	obj/kernel.asm	/^vector180:$/;"	l
vector181	kern/trap/vectors.S	/^vector181:$/;"	l
vector181	obj/kernel.asm	/^vector181:$/;"	l
vector182	kern/trap/vectors.S	/^vector182:$/;"	l
vector182	obj/kernel.asm	/^vector182:$/;"	l
vector183	kern/trap/vectors.S	/^vector183:$/;"	l
vector183	obj/kernel.asm	/^vector183:$/;"	l
vector184	kern/trap/vectors.S	/^vector184:$/;"	l
vector184	obj/kernel.asm	/^vector184:$/;"	l
vector185	kern/trap/vectors.S	/^vector185:$/;"	l
vector185	obj/kernel.asm	/^vector185:$/;"	l
vector186	kern/trap/vectors.S	/^vector186:$/;"	l
vector186	obj/kernel.asm	/^vector186:$/;"	l
vector187	kern/trap/vectors.S	/^vector187:$/;"	l
vector187	obj/kernel.asm	/^vector187:$/;"	l
vector188	kern/trap/vectors.S	/^vector188:$/;"	l
vector188	obj/kernel.asm	/^vector188:$/;"	l
vector189	kern/trap/vectors.S	/^vector189:$/;"	l
vector189	obj/kernel.asm	/^vector189:$/;"	l
vector19	kern/trap/vectors.S	/^vector19:$/;"	l
vector19	obj/kernel.asm	/^vector19:$/;"	l
vector190	kern/trap/vectors.S	/^vector190:$/;"	l
vector190	obj/kernel.asm	/^vector190:$/;"	l
vector191	kern/trap/vectors.S	/^vector191:$/;"	l
vector191	obj/kernel.asm	/^vector191:$/;"	l
vector192	kern/trap/vectors.S	/^vector192:$/;"	l
vector192	obj/kernel.asm	/^vector192:$/;"	l
vector193	kern/trap/vectors.S	/^vector193:$/;"	l
vector193	obj/kernel.asm	/^vector193:$/;"	l
vector194	kern/trap/vectors.S	/^vector194:$/;"	l
vector194	obj/kernel.asm	/^vector194:$/;"	l
vector195	kern/trap/vectors.S	/^vector195:$/;"	l
vector195	obj/kernel.asm	/^vector195:$/;"	l
vector196	kern/trap/vectors.S	/^vector196:$/;"	l
vector196	obj/kernel.asm	/^vector196:$/;"	l
vector197	kern/trap/vectors.S	/^vector197:$/;"	l
vector197	obj/kernel.asm	/^vector197:$/;"	l
vector198	kern/trap/vectors.S	/^vector198:$/;"	l
vector198	obj/kernel.asm	/^vector198:$/;"	l
vector199	kern/trap/vectors.S	/^vector199:$/;"	l
vector199	obj/kernel.asm	/^vector199:$/;"	l
vector2	kern/trap/vectors.S	/^vector2:$/;"	l
vector2	obj/kernel.asm	/^vector2:$/;"	l
vector20	kern/trap/vectors.S	/^vector20:$/;"	l
vector20	obj/kernel.asm	/^vector20:$/;"	l
vector200	kern/trap/vectors.S	/^vector200:$/;"	l
vector200	obj/kernel.asm	/^vector200:$/;"	l
vector201	kern/trap/vectors.S	/^vector201:$/;"	l
vector201	obj/kernel.asm	/^vector201:$/;"	l
vector202	kern/trap/vectors.S	/^vector202:$/;"	l
vector202	obj/kernel.asm	/^vector202:$/;"	l
vector203	kern/trap/vectors.S	/^vector203:$/;"	l
vector203	obj/kernel.asm	/^vector203:$/;"	l
vector204	kern/trap/vectors.S	/^vector204:$/;"	l
vector204	obj/kernel.asm	/^vector204:$/;"	l
vector205	kern/trap/vectors.S	/^vector205:$/;"	l
vector205	obj/kernel.asm	/^vector205:$/;"	l
vector206	kern/trap/vectors.S	/^vector206:$/;"	l
vector206	obj/kernel.asm	/^vector206:$/;"	l
vector207	kern/trap/vectors.S	/^vector207:$/;"	l
vector207	obj/kernel.asm	/^vector207:$/;"	l
vector208	kern/trap/vectors.S	/^vector208:$/;"	l
vector208	obj/kernel.asm	/^vector208:$/;"	l
vector209	kern/trap/vectors.S	/^vector209:$/;"	l
vector209	obj/kernel.asm	/^vector209:$/;"	l
vector21	kern/trap/vectors.S	/^vector21:$/;"	l
vector21	obj/kernel.asm	/^vector21:$/;"	l
vector210	kern/trap/vectors.S	/^vector210:$/;"	l
vector210	obj/kernel.asm	/^vector210:$/;"	l
vector211	kern/trap/vectors.S	/^vector211:$/;"	l
vector211	obj/kernel.asm	/^vector211:$/;"	l
vector212	kern/trap/vectors.S	/^vector212:$/;"	l
vector212	obj/kernel.asm	/^vector212:$/;"	l
vector213	kern/trap/vectors.S	/^vector213:$/;"	l
vector213	obj/kernel.asm	/^vector213:$/;"	l
vector214	kern/trap/vectors.S	/^vector214:$/;"	l
vector214	obj/kernel.asm	/^vector214:$/;"	l
vector215	kern/trap/vectors.S	/^vector215:$/;"	l
vector215	obj/kernel.asm	/^vector215:$/;"	l
vector216	kern/trap/vectors.S	/^vector216:$/;"	l
vector216	obj/kernel.asm	/^vector216:$/;"	l
vector217	kern/trap/vectors.S	/^vector217:$/;"	l
vector217	obj/kernel.asm	/^vector217:$/;"	l
vector218	kern/trap/vectors.S	/^vector218:$/;"	l
vector218	obj/kernel.asm	/^vector218:$/;"	l
vector219	kern/trap/vectors.S	/^vector219:$/;"	l
vector219	obj/kernel.asm	/^vector219:$/;"	l
vector22	kern/trap/vectors.S	/^vector22:$/;"	l
vector22	obj/kernel.asm	/^vector22:$/;"	l
vector220	kern/trap/vectors.S	/^vector220:$/;"	l
vector220	obj/kernel.asm	/^vector220:$/;"	l
vector221	kern/trap/vectors.S	/^vector221:$/;"	l
vector221	obj/kernel.asm	/^vector221:$/;"	l
vector222	kern/trap/vectors.S	/^vector222:$/;"	l
vector222	obj/kernel.asm	/^vector222:$/;"	l
vector223	kern/trap/vectors.S	/^vector223:$/;"	l
vector223	obj/kernel.asm	/^vector223:$/;"	l
vector224	kern/trap/vectors.S	/^vector224:$/;"	l
vector224	obj/kernel.asm	/^vector224:$/;"	l
vector225	kern/trap/vectors.S	/^vector225:$/;"	l
vector225	obj/kernel.asm	/^vector225:$/;"	l
vector226	kern/trap/vectors.S	/^vector226:$/;"	l
vector226	obj/kernel.asm	/^vector226:$/;"	l
vector227	kern/trap/vectors.S	/^vector227:$/;"	l
vector227	obj/kernel.asm	/^vector227:$/;"	l
vector228	kern/trap/vectors.S	/^vector228:$/;"	l
vector228	obj/kernel.asm	/^vector228:$/;"	l
vector229	kern/trap/vectors.S	/^vector229:$/;"	l
vector229	obj/kernel.asm	/^vector229:$/;"	l
vector23	kern/trap/vectors.S	/^vector23:$/;"	l
vector23	obj/kernel.asm	/^vector23:$/;"	l
vector230	kern/trap/vectors.S	/^vector230:$/;"	l
vector230	obj/kernel.asm	/^vector230:$/;"	l
vector231	kern/trap/vectors.S	/^vector231:$/;"	l
vector231	obj/kernel.asm	/^vector231:$/;"	l
vector232	kern/trap/vectors.S	/^vector232:$/;"	l
vector232	obj/kernel.asm	/^vector232:$/;"	l
vector233	kern/trap/vectors.S	/^vector233:$/;"	l
vector233	obj/kernel.asm	/^vector233:$/;"	l
vector234	kern/trap/vectors.S	/^vector234:$/;"	l
vector234	obj/kernel.asm	/^vector234:$/;"	l
vector235	kern/trap/vectors.S	/^vector235:$/;"	l
vector235	obj/kernel.asm	/^vector235:$/;"	l
vector236	kern/trap/vectors.S	/^vector236:$/;"	l
vector236	obj/kernel.asm	/^vector236:$/;"	l
vector237	kern/trap/vectors.S	/^vector237:$/;"	l
vector237	obj/kernel.asm	/^vector237:$/;"	l
vector238	kern/trap/vectors.S	/^vector238:$/;"	l
vector238	obj/kernel.asm	/^vector238:$/;"	l
vector239	kern/trap/vectors.S	/^vector239:$/;"	l
vector239	obj/kernel.asm	/^vector239:$/;"	l
vector24	kern/trap/vectors.S	/^vector24:$/;"	l
vector24	obj/kernel.asm	/^vector24:$/;"	l
vector240	kern/trap/vectors.S	/^vector240:$/;"	l
vector240	obj/kernel.asm	/^vector240:$/;"	l
vector241	kern/trap/vectors.S	/^vector241:$/;"	l
vector241	obj/kernel.asm	/^vector241:$/;"	l
vector242	kern/trap/vectors.S	/^vector242:$/;"	l
vector242	obj/kernel.asm	/^vector242:$/;"	l
vector243	kern/trap/vectors.S	/^vector243:$/;"	l
vector243	obj/kernel.asm	/^vector243:$/;"	l
vector244	kern/trap/vectors.S	/^vector244:$/;"	l
vector244	obj/kernel.asm	/^vector244:$/;"	l
vector245	kern/trap/vectors.S	/^vector245:$/;"	l
vector245	obj/kernel.asm	/^vector245:$/;"	l
vector246	kern/trap/vectors.S	/^vector246:$/;"	l
vector246	obj/kernel.asm	/^vector246:$/;"	l
vector247	kern/trap/vectors.S	/^vector247:$/;"	l
vector247	obj/kernel.asm	/^vector247:$/;"	l
vector248	kern/trap/vectors.S	/^vector248:$/;"	l
vector248	obj/kernel.asm	/^vector248:$/;"	l
vector249	kern/trap/vectors.S	/^vector249:$/;"	l
vector249	obj/kernel.asm	/^vector249:$/;"	l
vector25	kern/trap/vectors.S	/^vector25:$/;"	l
vector25	obj/kernel.asm	/^vector25:$/;"	l
vector250	kern/trap/vectors.S	/^vector250:$/;"	l
vector250	obj/kernel.asm	/^vector250:$/;"	l
vector251	kern/trap/vectors.S	/^vector251:$/;"	l
vector251	obj/kernel.asm	/^vector251:$/;"	l
vector252	kern/trap/vectors.S	/^vector252:$/;"	l
vector252	obj/kernel.asm	/^vector252:$/;"	l
vector253	kern/trap/vectors.S	/^vector253:$/;"	l
vector253	obj/kernel.asm	/^vector253:$/;"	l
vector254	kern/trap/vectors.S	/^vector254:$/;"	l
vector254	obj/kernel.asm	/^vector254:$/;"	l
vector255	kern/trap/vectors.S	/^vector255:$/;"	l
vector255	obj/kernel.asm	/^vector255:$/;"	l
vector26	kern/trap/vectors.S	/^vector26:$/;"	l
vector26	obj/kernel.asm	/^vector26:$/;"	l
vector27	kern/trap/vectors.S	/^vector27:$/;"	l
vector27	obj/kernel.asm	/^vector27:$/;"	l
vector28	kern/trap/vectors.S	/^vector28:$/;"	l
vector28	obj/kernel.asm	/^vector28:$/;"	l
vector29	kern/trap/vectors.S	/^vector29:$/;"	l
vector29	obj/kernel.asm	/^vector29:$/;"	l
vector3	kern/trap/vectors.S	/^vector3:$/;"	l
vector3	obj/kernel.asm	/^vector3:$/;"	l
vector30	kern/trap/vectors.S	/^vector30:$/;"	l
vector30	obj/kernel.asm	/^vector30:$/;"	l
vector31	kern/trap/vectors.S	/^vector31:$/;"	l
vector31	obj/kernel.asm	/^vector31:$/;"	l
vector32	kern/trap/vectors.S	/^vector32:$/;"	l
vector32	obj/kernel.asm	/^vector32:$/;"	l
vector33	kern/trap/vectors.S	/^vector33:$/;"	l
vector33	obj/kernel.asm	/^vector33:$/;"	l
vector34	kern/trap/vectors.S	/^vector34:$/;"	l
vector34	obj/kernel.asm	/^vector34:$/;"	l
vector35	kern/trap/vectors.S	/^vector35:$/;"	l
vector35	obj/kernel.asm	/^vector35:$/;"	l
vector36	kern/trap/vectors.S	/^vector36:$/;"	l
vector36	obj/kernel.asm	/^vector36:$/;"	l
vector37	kern/trap/vectors.S	/^vector37:$/;"	l
vector37	obj/kernel.asm	/^vector37:$/;"	l
vector38	kern/trap/vectors.S	/^vector38:$/;"	l
vector38	obj/kernel.asm	/^vector38:$/;"	l
vector39	kern/trap/vectors.S	/^vector39:$/;"	l
vector39	obj/kernel.asm	/^vector39:$/;"	l
vector4	kern/trap/vectors.S	/^vector4:$/;"	l
vector4	obj/kernel.asm	/^vector4:$/;"	l
vector40	kern/trap/vectors.S	/^vector40:$/;"	l
vector40	obj/kernel.asm	/^vector40:$/;"	l
vector41	kern/trap/vectors.S	/^vector41:$/;"	l
vector41	obj/kernel.asm	/^vector41:$/;"	l
vector42	kern/trap/vectors.S	/^vector42:$/;"	l
vector42	obj/kernel.asm	/^vector42:$/;"	l
vector43	kern/trap/vectors.S	/^vector43:$/;"	l
vector43	obj/kernel.asm	/^vector43:$/;"	l
vector44	kern/trap/vectors.S	/^vector44:$/;"	l
vector44	obj/kernel.asm	/^vector44:$/;"	l
vector45	kern/trap/vectors.S	/^vector45:$/;"	l
vector45	obj/kernel.asm	/^vector45:$/;"	l
vector46	kern/trap/vectors.S	/^vector46:$/;"	l
vector46	obj/kernel.asm	/^vector46:$/;"	l
vector47	kern/trap/vectors.S	/^vector47:$/;"	l
vector47	obj/kernel.asm	/^vector47:$/;"	l
vector48	kern/trap/vectors.S	/^vector48:$/;"	l
vector48	obj/kernel.asm	/^vector48:$/;"	l
vector49	kern/trap/vectors.S	/^vector49:$/;"	l
vector49	obj/kernel.asm	/^vector49:$/;"	l
vector5	kern/trap/vectors.S	/^vector5:$/;"	l
vector5	obj/kernel.asm	/^vector5:$/;"	l
vector50	kern/trap/vectors.S	/^vector50:$/;"	l
vector50	obj/kernel.asm	/^vector50:$/;"	l
vector51	kern/trap/vectors.S	/^vector51:$/;"	l
vector51	obj/kernel.asm	/^vector51:$/;"	l
vector52	kern/trap/vectors.S	/^vector52:$/;"	l
vector52	obj/kernel.asm	/^vector52:$/;"	l
vector53	kern/trap/vectors.S	/^vector53:$/;"	l
vector53	obj/kernel.asm	/^vector53:$/;"	l
vector54	kern/trap/vectors.S	/^vector54:$/;"	l
vector54	obj/kernel.asm	/^vector54:$/;"	l
vector55	kern/trap/vectors.S	/^vector55:$/;"	l
vector55	obj/kernel.asm	/^vector55:$/;"	l
vector56	kern/trap/vectors.S	/^vector56:$/;"	l
vector56	obj/kernel.asm	/^vector56:$/;"	l
vector57	kern/trap/vectors.S	/^vector57:$/;"	l
vector57	obj/kernel.asm	/^vector57:$/;"	l
vector58	kern/trap/vectors.S	/^vector58:$/;"	l
vector58	obj/kernel.asm	/^vector58:$/;"	l
vector59	kern/trap/vectors.S	/^vector59:$/;"	l
vector59	obj/kernel.asm	/^vector59:$/;"	l
vector6	kern/trap/vectors.S	/^vector6:$/;"	l
vector6	obj/kernel.asm	/^vector6:$/;"	l
vector60	kern/trap/vectors.S	/^vector60:$/;"	l
vector60	obj/kernel.asm	/^vector60:$/;"	l
vector61	kern/trap/vectors.S	/^vector61:$/;"	l
vector61	obj/kernel.asm	/^vector61:$/;"	l
vector62	kern/trap/vectors.S	/^vector62:$/;"	l
vector62	obj/kernel.asm	/^vector62:$/;"	l
vector63	kern/trap/vectors.S	/^vector63:$/;"	l
vector63	obj/kernel.asm	/^vector63:$/;"	l
vector64	kern/trap/vectors.S	/^vector64:$/;"	l
vector64	obj/kernel.asm	/^vector64:$/;"	l
vector65	kern/trap/vectors.S	/^vector65:$/;"	l
vector65	obj/kernel.asm	/^vector65:$/;"	l
vector66	kern/trap/vectors.S	/^vector66:$/;"	l
vector66	obj/kernel.asm	/^vector66:$/;"	l
vector67	kern/trap/vectors.S	/^vector67:$/;"	l
vector67	obj/kernel.asm	/^vector67:$/;"	l
vector68	kern/trap/vectors.S	/^vector68:$/;"	l
vector68	obj/kernel.asm	/^vector68:$/;"	l
vector69	kern/trap/vectors.S	/^vector69:$/;"	l
vector69	obj/kernel.asm	/^vector69:$/;"	l
vector7	kern/trap/vectors.S	/^vector7:$/;"	l
vector7	obj/kernel.asm	/^vector7:$/;"	l
vector70	kern/trap/vectors.S	/^vector70:$/;"	l
vector70	obj/kernel.asm	/^vector70:$/;"	l
vector71	kern/trap/vectors.S	/^vector71:$/;"	l
vector71	obj/kernel.asm	/^vector71:$/;"	l
vector72	kern/trap/vectors.S	/^vector72:$/;"	l
vector72	obj/kernel.asm	/^vector72:$/;"	l
vector73	kern/trap/vectors.S	/^vector73:$/;"	l
vector73	obj/kernel.asm	/^vector73:$/;"	l
vector74	kern/trap/vectors.S	/^vector74:$/;"	l
vector74	obj/kernel.asm	/^vector74:$/;"	l
vector75	kern/trap/vectors.S	/^vector75:$/;"	l
vector75	obj/kernel.asm	/^vector75:$/;"	l
vector76	kern/trap/vectors.S	/^vector76:$/;"	l
vector76	obj/kernel.asm	/^vector76:$/;"	l
vector77	kern/trap/vectors.S	/^vector77:$/;"	l
vector77	obj/kernel.asm	/^vector77:$/;"	l
vector78	kern/trap/vectors.S	/^vector78:$/;"	l
vector78	obj/kernel.asm	/^vector78:$/;"	l
vector79	kern/trap/vectors.S	/^vector79:$/;"	l
vector79	obj/kernel.asm	/^vector79:$/;"	l
vector8	kern/trap/vectors.S	/^vector8:$/;"	l
vector8	obj/kernel.asm	/^vector8:$/;"	l
vector80	kern/trap/vectors.S	/^vector80:$/;"	l
vector80	obj/kernel.asm	/^vector80:$/;"	l
vector81	kern/trap/vectors.S	/^vector81:$/;"	l
vector81	obj/kernel.asm	/^vector81:$/;"	l
vector82	kern/trap/vectors.S	/^vector82:$/;"	l
vector82	obj/kernel.asm	/^vector82:$/;"	l
vector83	kern/trap/vectors.S	/^vector83:$/;"	l
vector83	obj/kernel.asm	/^vector83:$/;"	l
vector84	kern/trap/vectors.S	/^vector84:$/;"	l
vector84	obj/kernel.asm	/^vector84:$/;"	l
vector85	kern/trap/vectors.S	/^vector85:$/;"	l
vector85	obj/kernel.asm	/^vector85:$/;"	l
vector86	kern/trap/vectors.S	/^vector86:$/;"	l
vector86	obj/kernel.asm	/^vector86:$/;"	l
vector87	kern/trap/vectors.S	/^vector87:$/;"	l
vector87	obj/kernel.asm	/^vector87:$/;"	l
vector88	kern/trap/vectors.S	/^vector88:$/;"	l
vector88	obj/kernel.asm	/^vector88:$/;"	l
vector89	kern/trap/vectors.S	/^vector89:$/;"	l
vector89	obj/kernel.asm	/^vector89:$/;"	l
vector9	kern/trap/vectors.S	/^vector9:$/;"	l
vector9	obj/kernel.asm	/^vector9:$/;"	l
vector90	kern/trap/vectors.S	/^vector90:$/;"	l
vector90	obj/kernel.asm	/^vector90:$/;"	l
vector91	kern/trap/vectors.S	/^vector91:$/;"	l
vector91	obj/kernel.asm	/^vector91:$/;"	l
vector92	kern/trap/vectors.S	/^vector92:$/;"	l
vector92	obj/kernel.asm	/^vector92:$/;"	l
vector93	kern/trap/vectors.S	/^vector93:$/;"	l
vector93	obj/kernel.asm	/^vector93:$/;"	l
vector94	kern/trap/vectors.S	/^vector94:$/;"	l
vector94	obj/kernel.asm	/^vector94:$/;"	l
vector95	kern/trap/vectors.S	/^vector95:$/;"	l
vector95	obj/kernel.asm	/^vector95:$/;"	l
vector96	kern/trap/vectors.S	/^vector96:$/;"	l
vector96	obj/kernel.asm	/^vector96:$/;"	l
vector97	kern/trap/vectors.S	/^vector97:$/;"	l
vector97	obj/kernel.asm	/^vector97:$/;"	l
vector98	kern/trap/vectors.S	/^vector98:$/;"	l
vector98	obj/kernel.asm	/^vector98:$/;"	l
vector99	kern/trap/vectors.S	/^vector99:$/;"	l
vector99	obj/kernel.asm	/^vector99:$/;"	l
vfprintf	user/libs/stdio.c	/^vfprintf(int fd, const char *fmt, va_list ap) {$/;"	f
vfs_add_dev	kern/fs/vfs/vfsdev.c	/^vfs_add_dev(const char *devname, struct inode *devnode, bool mountable) {$/;"	f
vfs_add_fs	kern/fs/vfs/vfsdev.c	/^vfs_add_fs(const char *devname, struct fs *fs) {$/;"	f
vfs_chdir	kern/fs/vfs/vfspath.c	/^vfs_chdir(char *path) {$/;"	f
vfs_cleanup	kern/fs/vfs/vfsdev.c	/^vfs_cleanup(void) {$/;"	f
vfs_close	kern/fs/vfs/vfsfile.c	/^vfs_close(struct inode *node) {$/;"	f
vfs_dev_t	kern/fs/vfs/vfsdev.c	/^} vfs_dev_t;$/;"	t	typeref:struct:__anon8	file:
vfs_devlist_init	kern/fs/vfs/vfsdev.c	/^vfs_devlist_init(void) {$/;"	f
vfs_do_add	kern/fs/vfs/vfsdev.c	/^vfs_do_add(const char *devname, struct inode *devnode, struct fs *fs, bool mountable) {$/;"	f	file:
vfs_get_bootfs	kern/fs/vfs/vfs.c	/^vfs_get_bootfs(struct inode **node_store) {$/;"	f
vfs_get_curdir	kern/fs/vfs/vfspath.c	/^vfs_get_curdir(struct inode **dir_store) {$/;"	f
vfs_get_devname	kern/fs/vfs/vfsdev.c	/^vfs_get_devname(struct fs *fs) {$/;"	f
vfs_get_root	kern/fs/vfs/vfsdev.c	/^vfs_get_root(const char *devname, struct inode **node_store) {$/;"	f
vfs_getcwd	kern/fs/vfs/vfspath.c	/^vfs_getcwd(struct iobuf *iob) {$/;"	f
vfs_init	kern/fs/vfs/vfs.c	/^vfs_init(void) {$/;"	f
vfs_link	kern/fs/vfs/vfsfile.c	/^vfs_link(char *old_path, char *new_path) {$/;"	f
vfs_lookup	kern/fs/vfs/vfslookup.c	/^vfs_lookup(char *path, struct inode **node_store) {$/;"	f
vfs_lookup_parent	kern/fs/vfs/vfslookup.c	/^vfs_lookup_parent(char *path, struct inode **node_store, char **endp){$/;"	f
vfs_mkdir	kern/fs/vfs/vfsfile.c	/^vfs_mkdir(char *path){$/;"	f
vfs_mount	kern/fs/vfs/vfsdev.c	/^vfs_mount(const char *devname, int (*mountfunc)(struct device *dev, struct fs **fs_store)) {$/;"	f
vfs_open	kern/fs/vfs/vfsfile.c	/^vfs_open(char *path, uint32_t open_flags, struct inode **node_store) {$/;"	f
vfs_readlink	kern/fs/vfs/vfsfile.c	/^vfs_readlink(char *path, struct iobuf *iob) {$/;"	f
vfs_rename	kern/fs/vfs/vfsfile.c	/^vfs_rename(char *old_path, char *new_path) {$/;"	f
vfs_set_bootfs	kern/fs/vfs/vfs.c	/^vfs_set_bootfs(char *fsname) {$/;"	f
vfs_set_curdir	kern/fs/vfs/vfspath.c	/^vfs_set_curdir(struct inode *dir) {$/;"	f
vfs_symlink	kern/fs/vfs/vfsfile.c	/^vfs_symlink(char *old_path, char *new_path) {$/;"	f
vfs_unlink	kern/fs/vfs/vfsfile.c	/^vfs_unlink(char *path) {$/;"	f
vfs_unmount	kern/fs/vfs/vfsdev.c	/^vfs_unmount(const char *devname) {$/;"	f
vfs_unmount_all	kern/fs/vfs/vfsdev.c	/^vfs_unmount_all(void) {$/;"	f
vm_end	kern/mm/vmm.h	/^    uintptr_t vm_end;        \/\/ end addr of vma$/;"	m	struct:vma_struct
vm_flags	kern/mm/vmm.h	/^    uint32_t vm_flags;       \/\/ flags of vma$/;"	m	struct:vma_struct
vm_flags	obj/kernel.asm	/^        vm_flags = 0, perm = PTE_U;$/;"	d
vm_flags	obj/kernel.asm	/^    vm_flags = VM_READ | VM_WRITE | VM_STACK;$/;"	d
vm_mm	kern/mm/vmm.h	/^    struct mm_struct *vm_mm; \/\/ the set of vma using the same PDT $/;"	m	struct:vma_struct	typeref:struct:vma_struct::mm_struct
vm_start	kern/mm/vmm.h	/^    uintptr_t vm_start;      \/\/    start addr of vma    $/;"	m	struct:vma_struct
vma	obj/kernel.asm	/^                    vma = NULL;$/;"	d
vma	obj/kernel.asm	/^                    vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = mm->mmap_cache;$/;"	d
vma_create	kern/mm/vmm.c	/^vma_create(uintptr_t vm_start, uintptr_t vm_end, uint32_t vm_flags) {$/;"	f
vma_struct	kern/mm/vmm.h	/^struct vma_struct {$/;"	s
vmm_init	kern/mm/vmm.c	/^vmm_init(void) {$/;"	f
void	obj/bootblock.asm	/^void$/;"	l
void	obj/kernel.asm	/^void     $/;"	l
void	obj/kernel.asm	/^void $/;"	l
void	obj/kernel.asm	/^void *$/;"	l
void	obj/kernel.asm	/^void __attribute__((noinline))$/;"	l
void	obj/kernel.asm	/^void check_slab(void) {$/;"	l
void	obj/kernel.asm	/^void check_sync(void){$/;"	l
void	obj/kernel.asm	/^void files_closeall(struct files_struct *filesp);$/;"	l
void	obj/kernel.asm	/^void files_destroy(struct files_struct *filesp);$/;"	l
void	obj/kernel.asm	/^void forkrets(struct trapframe *tf);$/;"	l
void	obj/kernel.asm	/^void kfree(void *block)$/;"	l
void	obj/kernel.asm	/^void phi_put_forks_condvar(int i) {$/;"	l
void	obj/kernel.asm	/^void phi_put_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void phi_take_forks_condvar(int i) {$/;"	l
void	obj/kernel.asm	/^void phi_take_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void phi_test_condvar (i) { $/;"	l
void	obj/kernel.asm	/^void phi_test_sema(i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void switch_to(struct context *from, struct context *to);$/;"	l
void	obj/kernel.asm	/^void$/;"	l
void	obj/user/badarg.asm	/^void *$/;"	l
void	obj/user/badarg.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/exit.asm	/^void *$/;"	l
void	obj/user/exit.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/forktest.asm	/^void *$/;"	l
void	obj/user/forktest.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/matrix.asm	/^void *$/;"	l
void	obj/user/matrix.asm	/^void$/;"	l
void	obj/user/pgdir.asm	/^void *$/;"	l
void	obj/user/pgdir.asm	/^void$/;"	l
void	obj/user/priority.asm	/^void *$/;"	l
void	obj/user/priority.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/sleep.asm	/^void *$/;"	l
void	obj/user/sleep.asm	/^void$/;"	l
void	obj/user/sleepkill.asm	/^void *$/;"	l
void	obj/user/sleepkill.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/waitkill.asm	/^void *$/;"	l
void	obj/user/waitkill.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kernel.asm	/^volatile size_t ticks;$/;"	l
volatile	obj/kernel.asm	/^volatile unsigned int swap_out_num=0;$/;"	l
vop_close	kern/fs/vfs/inode.h	/^    int (*vop_close)(struct inode *node);$/;"	m	struct:inode_ops
vop_close	kern/fs/vfs/inode.h	/^#define vop_close(/;"	d
vop_create	kern/fs/vfs/inode.h	/^    int (*vop_create)(struct inode *node, const char *name, bool excl, struct inode **node_store);$/;"	m	struct:inode_ops
vop_create	kern/fs/vfs/inode.h	/^#define vop_create(/;"	d
vop_fs	kern/fs/vfs/inode.h	/^#define vop_fs(/;"	d
vop_fstat	kern/fs/vfs/inode.h	/^    int (*vop_fstat)(struct inode *node, struct stat *stat);$/;"	m	struct:inode_ops
vop_fstat	kern/fs/vfs/inode.h	/^#define vop_fstat(/;"	d
vop_fsync	kern/fs/vfs/inode.h	/^    int (*vop_fsync)(struct inode *node);$/;"	m	struct:inode_ops
vop_fsync	kern/fs/vfs/inode.h	/^#define vop_fsync(/;"	d
vop_getdirentry	kern/fs/vfs/inode.h	/^    int (*vop_getdirentry)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_getdirentry	kern/fs/vfs/inode.h	/^#define vop_getdirentry(/;"	d
vop_gettype	kern/fs/vfs/inode.h	/^    int (*vop_gettype)(struct inode *node, uint32_t *type_store);$/;"	m	struct:inode_ops
vop_gettype	kern/fs/vfs/inode.h	/^#define vop_gettype(/;"	d
vop_info	kern/fs/vfs/inode.h	/^#define vop_info(/;"	d
vop_init	kern/fs/vfs/inode.h	/^#define vop_init(/;"	d
vop_ioctl	kern/fs/vfs/inode.h	/^    int (*vop_ioctl)(struct inode *node, int op, void *data);$/;"	m	struct:inode_ops
vop_ioctl	kern/fs/vfs/inode.h	/^#define vop_ioctl(/;"	d
vop_kill	kern/fs/vfs/inode.h	/^#define vop_kill(/;"	d
vop_lookup	kern/fs/vfs/inode.h	/^    int (*vop_lookup)(struct inode *node, char *path, struct inode **node_store);$/;"	m	struct:inode_ops
vop_lookup	kern/fs/vfs/inode.h	/^#define vop_lookup(/;"	d
vop_magic	kern/fs/vfs/inode.h	/^    unsigned long vop_magic;$/;"	m	struct:inode_ops
vop_namefile	kern/fs/vfs/inode.h	/^    int (*vop_namefile)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_namefile	kern/fs/vfs/inode.h	/^#define vop_namefile(/;"	d
vop_open	kern/fs/vfs/inode.h	/^    int (*vop_open)(struct inode *node, uint32_t open_flags);$/;"	m	struct:inode_ops
vop_open	kern/fs/vfs/inode.h	/^#define vop_open(/;"	d
vop_open_dec	kern/fs/vfs/inode.h	/^#define vop_open_dec(/;"	d
vop_open_dec	obj/kernel.asm	/^#define vop_open_dec(node)                                          inode_open_dec(node)$/;"	d
vop_open_inc	kern/fs/vfs/inode.h	/^#define vop_open_inc(/;"	d
vop_open_inc	obj/kernel.asm	/^#define vop_open_inc(node)                                          inode_open_inc(node)$/;"	d
vop_read	kern/fs/vfs/inode.h	/^    int (*vop_read)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_read	kern/fs/vfs/inode.h	/^#define vop_read(/;"	d
vop_reclaim	kern/fs/vfs/inode.h	/^    int (*vop_reclaim)(struct inode *node);$/;"	m	struct:inode_ops
vop_reclaim	kern/fs/vfs/inode.h	/^#define vop_reclaim(/;"	d
vop_ref_dec	kern/fs/vfs/inode.h	/^#define vop_ref_dec(/;"	d
vop_ref_inc	kern/fs/vfs/inode.h	/^#define vop_ref_inc(/;"	d
vop_truncate	kern/fs/vfs/inode.h	/^    int (*vop_truncate)(struct inode *node, off_t len);$/;"	m	struct:inode_ops
vop_truncate	kern/fs/vfs/inode.h	/^#define vop_truncate(/;"	d
vop_tryseek	kern/fs/vfs/inode.h	/^    int (*vop_tryseek)(struct inode *node, off_t pos);$/;"	m	struct:inode_ops
vop_tryseek	kern/fs/vfs/inode.h	/^#define vop_tryseek(/;"	d
vop_write	kern/fs/vfs/inode.h	/^    int (*vop_write)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_write	kern/fs/vfs/inode.h	/^#define vop_write(/;"	d
vpd	kern/mm/pmm.c	/^pde_t * const vpd = (pde_t *)PGADDR(PDX(VPT), PDX(VPT), 0);$/;"	v
vprintfmt	libs/printfmt.c	/^vprintfmt(void (*putch)(int, void*, int), int fd, void *putdat, const char *fmt, va_list ap) {$/;"	f
vpt	kern/mm/pmm.c	/^pte_t * const vpt = (pte_t *)VPT;$/;"	v
vsnprintf	libs/printfmt.c	/^vsnprintf(char *str, size_t size, const char *fmt, va_list ap) {$/;"	f
wait	user/libs/ulib.c	/^wait(void) {$/;"	f
wait_current_del	kern/sync/wait.h	/^#define wait_current_del(/;"	d
wait_current_set	kern/sync/wait.c	/^wait_current_set(wait_queue_t *queue, wait_t *wait, uint32_t wait_state) {$/;"	f
wait_head	kern/sync/wait.h	/^    list_entry_t wait_head;$/;"	m	struct:__anon13
wait_in_queue	kern/sync/wait.c	/^wait_in_queue(wait_t *wait) {$/;"	f
wait_init	kern/sync/wait.c	/^wait_init(wait_t *wait, struct proc_struct *proc) {$/;"	f
wait_link	kern/sync/wait.h	/^    list_entry_t wait_link;$/;"	m	struct:__anon14
wait_queue	kern/fs/devs/dev_stdin.c	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	v	file:
wait_queue	kern/sync/sem.h	/^    wait_queue_t wait_queue;$/;"	m	struct:__anon12
wait_queue	kern/sync/wait.h	/^    wait_queue_t *wait_queue;$/;"	m	struct:__anon14
wait_queue_add	kern/sync/wait.c	/^wait_queue_add(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_del	kern/sync/wait.c	/^wait_queue_del(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_empty	kern/sync/wait.c	/^wait_queue_empty(wait_queue_t *queue) {$/;"	f
wait_queue_first	kern/sync/wait.c	/^wait_queue_first(wait_queue_t *queue) {$/;"	f
wait_queue_init	kern/sync/wait.c	/^wait_queue_init(wait_queue_t *queue) {$/;"	f
wait_queue_last	kern/sync/wait.c	/^wait_queue_last(wait_queue_t *queue) {$/;"	f
wait_queue_next	kern/sync/wait.c	/^wait_queue_next(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_prev	kern/sync/wait.c	/^wait_queue_prev(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_t	kern/sync/wait.h	/^} wait_queue_t;$/;"	t	typeref:struct:__anon13
wait_state	kern/process/proc.h	/^    uint32_t wait_state;                        \/\/ waiting state$/;"	m	struct:proc_struct
wait_t	kern/sync/wait.h	/^} wait_t;$/;"	t	typeref:struct:__anon14
wait_t	obj/kernel.asm	/^wait_t *$/;"	l
waitdisk	boot/bootmain.c	/^waitdisk(void) {$/;"	f	file:
waitpid	user/libs/ulib.c	/^waitpid(int pid, int *store) {$/;"	f
wakeup_first	kern/sync/wait.c	/^wakeup_first(wait_queue_t *queue, uint32_t wakeup_flags, bool del) {$/;"	f
wakeup_flags	kern/sync/wait.h	/^    uint32_t wakeup_flags;$/;"	m	struct:__anon14
wakeup_proc	kern/schedule/sched.c	/^wakeup_proc(struct proc_struct *proc) {$/;"	f
wakeup_queue	kern/sync/wait.c	/^wakeup_queue(wait_queue_t *queue, uint32_t wakeup_flags, bool del) {$/;"	f
wakeup_wait	kern/sync/wait.c	/^wakeup_wait(wait_queue_t *queue, wait_t *wait, uint32_t wakeup_flags, bool del) {$/;"	f
warn	kern/debug/assert.h	/^#define warn(/;"	d
warn	tools/mksfs.c	/^#define warn(/;"	d	file:
warn	user/libs/ulib.h	/^#define warn(/;"	d
width	obj/kernel.asm	/^                width = 0;$/;"	d
width	obj/kernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/kernel.asm	/^        width = precision = -1;$/;"	d
width	obj/user/badarg.asm	/^                width = 0;$/;"	d
width	obj/user/badarg.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badarg.asm	/^        width = precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^                width = 0;$/;"	d
width	obj/user/badsegment.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^        width = precision = -1;$/;"	d
width	obj/user/divzero.asm	/^                width = 0;$/;"	d
width	obj/user/divzero.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^        width = precision = -1;$/;"	d
width	obj/user/exit.asm	/^                width = 0;$/;"	d
width	obj/user/exit.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/exit.asm	/^        width = precision = -1;$/;"	d
width	obj/user/faultread.asm	/^                width = 0;$/;"	d
width	obj/user/faultread.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^        width = precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^        width = precision = -1;$/;"	d
width	obj/user/forktest.asm	/^                width = 0;$/;"	d
width	obj/user/forktest.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktest.asm	/^        width = precision = -1;$/;"	d
width	obj/user/forktree.asm	/^                width = 0;$/;"	d
width	obj/user/forktree.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^        width = precision = -1;$/;"	d
width	obj/user/hello.asm	/^                width = 0;$/;"	d
width	obj/user/hello.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^        width = precision = -1;$/;"	d
width	obj/user/ls.asm	/^                width = 0;$/;"	d
width	obj/user/ls.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^        width = precision = -1;$/;"	d
width	obj/user/matrix.asm	/^                width = 0;$/;"	d
width	obj/user/matrix.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/matrix.asm	/^        width = precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^                width = 0;$/;"	d
width	obj/user/pgdir.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^        width = precision = -1;$/;"	d
width	obj/user/priority.asm	/^                width = 0;$/;"	d
width	obj/user/priority.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/priority.asm	/^        width = precision = -1;$/;"	d
width	obj/user/sh.asm	/^                width = 0;$/;"	d
width	obj/user/sh.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^        width = precision = -1;$/;"	d
width	obj/user/sleep.asm	/^                width = 0;$/;"	d
width	obj/user/sleep.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sleep.asm	/^        width = precision = -1;$/;"	d
width	obj/user/sleepkill.asm	/^                width = 0;$/;"	d
width	obj/user/sleepkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sleepkill.asm	/^        width = precision = -1;$/;"	d
width	obj/user/softint.asm	/^                width = 0;$/;"	d
width	obj/user/softint.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^        width = precision = -1;$/;"	d
width	obj/user/spin.asm	/^                width = 0;$/;"	d
width	obj/user/spin.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^        width = precision = -1;$/;"	d
width	obj/user/testbss.asm	/^                width = 0;$/;"	d
width	obj/user/testbss.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^        width = precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^                width = 0;$/;"	d
width	obj/user/waitkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^        width = precision = -1;$/;"	d
width	obj/user/yield.asm	/^                width = 0;$/;"	d
width	obj/user/yield.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^        width = precision = -1;$/;"	d
work	user/matrix.c	/^work(unsigned int times) {$/;"	f
work	user/waitkill.c	/^work(void) {$/;"	f
wpos	kern/driver/console.c	/^    uint32_t wpos;$/;"	m	struct:__anon1	file:
writable	kern/fs/file.h	/^    bool writable;$/;"	m	struct:file
write	user/libs/file.c	/^write(int fd, void *base, size_t len) {$/;"	f
write_block	tools/mksfs.c	/^write_block(struct sfs_fs *sfs, void *data, size_t len, uint32_t ino) {$/;"	f	file:
write_dr	libs/x86.h	/^write_dr(unsigned regnum, uint32_t value) {$/;"	f
write_eflags	libs/x86.h	/^write_eflags(uint32_t eflags) {$/;"	f
yield	user/libs/ulib.c	/^yield(void) {$/;"	f
yptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
zero	user/divzero.c	/^int zero;$/;"	v
zone_num	kern/mm/memlayout.h	/^    int zone_num;                   \/\/ used in buddy system, the No. of zone which the page belongs to$/;"	m	struct:Page
